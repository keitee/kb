*kt_sruk_prjs*		tw=100

Last change:
14/10/2013 

|kt_sruk_prjs_mheg_000| 	TODO and questions
|kt_sruk_prjs_mheg_001| 	mheg srcs
|kt_sruk_prjs_mheg_002| 	mheg spec: text render
|kt_sruk_prjs_mheg_003| 	stream player
|kt_sruk_prjs_mheg_004| 	wreports
|kt_sruk_prjs_mheg_005| 	mhv

|kt_sruk_prjs_tizen_001| 	Tizen spec {tizen-architecture}

|kt_sruk_prjs_tizen_002| 	Tizen::Media
|kt_sruk_prjs_tizen_003| 	Tizen::Graphics
|kt_sruk_prjs_tizen_004| 	Tizen::App
|kt_sruk_prjs_tizen_005| 	Tizen TV
|kt_sruk_prjs_tizen_006| 	Tizen SDK
|kt_sruk_prjs_tizen_007| 	Tizen build process
|kt_sruk_prjs_tizen_008| 	Tizen dev env {install-rpm} {update-tizen}
|kt_sruk_prjs_tizen_009| 	Tizen dev rpm build
|kt_sruk_prjs_tizen_010| 	Tizen dev git create
|kt_sruk_prjs_tizen_019| 	Tizen EFL
|kt_sruk_prjs_tizen_020| 	Tizen contacts


|kt_sruk_process_001| 	PA(proposal approval)
|kt_sruk_process_002| 	EA(proposal approval)

|kt_sruk_env_001| 		servers


# ============================================================================
#{

==============================================================================
*kt_sruk_prjs_mheg_000* TODO and questions

{where-mheg-sit}

not clear about where MHEG is going to sit on Tizen. is it going to be a app or component in mw such
as tizen core layer?

| ------------------------------------ |
|  web app        | native app         |     mheg engine
| ------------------------------------ |
|  web framework  | native framework   |     tvservices (graphics, player etc)
| ------------------------------------ |
|               core ( graphics, ui )  |     core apis for tvservices
| ------------------------------------ |
|              Linux Kernel            |
| ------------------------------------ |

{{Q}}
Or, should be on the core and use EFL such as naviframe? C based? If so, does it support z-order?
does navifram support only full screen?

TDC2013-Creating_Tizen_Native_Apps_with_the_Native_UI_and_Graphics_Framework.pdf

So question is whether on core layer or on tizen native layer?

{{updates}}
Update from a call with KH. MHEG will use tvservices but have to use EFL for graphics. That means
MHEG should use both core(C) and native framework(C++).


{tvservice}

IService                      # seems to have SI APIs? sm6872.lim@samsung.com, Lim, sangmook
IServiceNavigation class      # dooh.lee@samsung.com Lee,Doohee
TVServiceAPI class

{{Q}}
where?

0719_TV_Service_Interface_2nd_Release_v09.xls
defines APIs that seems classes. Kyungchul Nam (susuk)

So, HQ is developing tv service in native framework and also core components in core?

{do-we-need-to-know-elf}

TIZEN_application__programming_guide.docx

In this doc, app use ELF directly to draw UI.


{supported-codec}

http://kms.sec.samsung.net/club/club.menu.bbs.read.screen?page_num=1&p_club_id=4968&p_menu_id=15&p_group_id=0&search_field=search_all&search_query=codec&search_category=&message_id=1008096

occam.bae@samsung.com Gunyoung Bae

said that Tizen TV codec has not been decided yet and this doc is the spec of Fox-MP chip which is
prorting to Tizen.

Codec_checklist_v1_0_(Fox_MFD-DSP).xlsx


{out-of-memory-policy}

Re: app life cycle

According to {out-of-memory-policy}, there is a chance that the system to terminate apps one by one
until enough memory is available. Do we need to make sure that mheg is the last or is not affected
by this?

{{Q}}
build-and-run-demo: Is it possible to see a demo of running and building Tizen during a trip?
Network setup to download rpm and run it? or run it over nfs?

{{Q}}
Debugging and GDB? Serial debug mesg? Log component? Just use printf and not use gdb even if
possible. There is DLog component but not used because integration of coponents has just started and
no policy as to logging. Update from biz trip on 10/09/2013.

{{Q}}
gbs. local repo in a local build server? faster? repo setting vs. image release?


==============================================================================
*kt_sruk_prjs_mheg_000* mheg porting layer

MH5MWSS : MW Portring Layer(Sub System)l

==============================================================================
*kt_sruk_prjs_mheg_001* mheg srcs

# intro and basics
#
http://www.impala.org/what-mheg/mheg-interaction-channel
http://www.dtg.org.uk/industry/mheg.html


{graphics}

D:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\mh5eng\Src

{{entry-to-graphic}}
D:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\mh5eng\Src\ <mh5_graphics_c>

mahProcessEvents:
   case eMhegMsgExpose:
      MH5_DrawDirtyRects();

void MH5_DrawDirtyRects(void)
   if(MH_ExposeEventHandler(&tx_event) == true)

MH_ExposeEventHandler
	case MH_RECTANGLE:
	BitmapWndProc # D:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\mh5eng\Src\mh5w_bitmap.c

	case MH_RECTANGLE:
	RectangleWndProc # D:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\mh5eng\Src\mh5w_rectangle.c

		MH5W_RectangleOnPaint
			MH5W_DrawQuickRectangle
				
				# from here, it is shadow [mh5gpi]
				mhgpiDrawRect # D:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\mh5gpi\Src\<mheg_graphics_cpp>
					SCGCEx *ggdc = ((MHEGContext*)dc)->gc;
					ggdc->DrawRect

					class SCGC: public SCBaseGC # D:\sruk\mheg2013\BP_GFX\BP_ShadowMW\4.0\Inc\SCGC.h
						bool     DrawRect(long x, long y, long width, long height);

{TODO}
TODO: mheg_graphics.cpp should move to Yangran since it init and other apis to graphics.

{shadow}
ShadowSS	: Porting layer, SubSystem
CSP 		: Core SW Platform

d:\sruk\mheg2013\BP_GFX\BP_ShadowSS\4.0\Doc\ShadowSS_Porting_Guide.doc
NO SOURCE

{tulip}
/mheg2013/BP_MW/BP_TulipAPI/Inc

stubbed

mh5a_application.c

int MH5A_UnlockScreen(GenericObjectReference_t * pData)
int MH5EA_UnlockScreen(ObjectEntry * pEntry)

{porting}

note: check cmakefile to find out sources to carry on

mh5eng, mh5dec : should move all
mah, mhv : should move all c files but not cpp files
pfm : should carefully move but not all


d:\sruk\mheg2013\Bp\BP_AppDVB\MHEG\Src\external\edge\include\edgetype.h
	mh5w_gpi.h use

mh5trp.h
	made it null

{mh5eng}

mh5i_residentprogram_db.cpp: error not to find this header. which one?

$ find . -name OSAbstraction.h
./AP_WP/AP_BrowserApp/DAE/Sim/CSP/OSAL/INC/OSAbstraction.h
./AP_WP/AP_BrowserApp/DAE/Sim/CSP/Inc/OSAbstraction.h
./AP_WP/AP_InfoLink/SmartTip/Src/MServiceAgent/NamedEntityExt/KCC/Src/OSAbstraction/OSAbstraction.h
./BP_CSP/BP_CSP_Public/CSP-4.0/Inc/OSAbstraction.h
./AP_MM/AP_PVRApplication/Engine/CIManager/CIPlus/Test/Build/Win/Stubs/CSP/OSAbstraction.h
./AP_MM/AP_SWU/SWUpgrade_Refactored/UnitTests/CommonStubs/OSAbstraction/OSAbstraction.h
./AP_MM/AP_SWU/SWUpgrade_Refactored/Tools/SWUBuilder/Build/Linux/stubs/OSAbstraction.h
./AP_MM/AP_RoseMW/MediaMgr/Debug/Subtitle/CSP/INC/OSAbstraction.h
./AP_CNC/AP_DLNA/Build_Windows/CSP/inc/OSAbstraction.h

{mhv}


<mhv-interface>

// not used
mhvTerminate(void);

For session, start from name from engine and convert it to full path. From the pull path, get driver
index.

--205:-780:MHVSes:I:mhv_ses.c:347:_mhvSessionFileOpen open //T39/scene1.mheg
--205:-780:MHVSes:I:mhv_ses.c:909:_resolve resolved //T39/scene1.mheg(DSM://T39/scene1.mheg) 0
--205:-780:MHVSes:I:mhv_ses.c:919:_resolve session for driver (driver call) 0, stack

// only useb by engine
mhvSessionLaunch(const char *applicationName,
mhvSessionSpawn(const char *applicationName,

// only mhv::hybrid  
mhvSessionOpenSub(const char *applicationName,
+ Src/mhv/Src/HybridFileSystem.cpp:1288: pfmerr_t rc =  mhvSessionOpenSub(newName.c_str(), _HybridAppRetreivedCb, (const void 

// for eng, app
mhvSessionQuit(const char *applicationName,

// not used
mhvSessionGetCurrentInfo(char *vol_name, char *path);

// for eng, hybrid, 
mhvSessionResolveName(const char *in, char *out, int maxLen, int *calculated);

// for eng.
mhvSessionCancel(void);
mhvSessionPop(void);

// for app.
mhvSessionConvert(void);

// not used
mhvMediaDefService(void);


<media-begin> use m_mhvMedia

// for mah, eng about subtitle
mhvSessionSetRTGrahics(bool on_off);
// mhvmedia.cpp
// for mhv::mep and str
mhvMediaCurService(void);
// for eng
mhvMediaLock(void);
mhvMediaUnlock(void);
mhvMediaContinuance(void);
mhvMediaDisinheritVideo(void);
mhvMediaDisinheritAudio(void);
mhvWindowSetWidescreenAlignment(EMhvWidescreenAlignmentMode alignment);
mhvWindowSetAspectRatio(EMhvAspectRatio r)
mhvWindowMapCoordinates(int x, int y, int *ox, int *oy);
// mah
mhvMediaPictureLock(void);
mhvMediaPictureUnlock(void);
mhvMediaOnMuteKeyPress(void);
mhvMediaOnAudPmtChange(uint32_t ui_pmt_data);
mhvMediaOnVidPmtChange(uint32_t ui_pmt_data);
mhvMediaOnAudLangChange(void);
mhvMediaOnAfdChange(long afd);
mhvMediaPrefChange(void);
// app
mhvSetFullResetFlag( bool reset_flag );
// app mah
mhvMediaResetInternalState(bool on_reboot);
mhvMediaInitInternalState(uint16_t def_onid, uint16_t def_tsid, uint16_t def_sid);
// eng
mhvResetInOutVideoWindows(void);


<iframe-begin>
// use CMHVMdia and MWs; should be seperated from media.
mhvIFrameCreate(HMhvIFrame* hiframe, EMhvIFramePlane plane);
mhvIFrameSetData(HMhvIFrame hiframe, void *ipData, uint32_t iLength);
mhvIFrameSetDimensions(HMhvIFrame hiframe, int x, int y,
mhvIFrameDestroy(HMhvIFrame hiframe);
// app
mhvWasIFrameDisplayed( void );
mhvResetIFrameDisplayFlag( void );
// eng
mhvIFrameIsMPEG2(void *ipData, uint32_t iLength);
mhvIFrameIsH264(void *ipData, uint32_t iLength);
// eng, hybrid

<broadcast-stream-begain>
class CMHVBroadcastStream : public CMHVMediaPlayer

mhvStreamOpen(const char *streamName, int cachePriority,
// eng  
mhvStreamFileOpen(const char *fileName, int cachePriority,
mhvStreamIPOpen(const char *name, int cachePriority,
mhvStreamIPPlaying(void);
mhvStreamClose(HMhvStream h);
mhvStreamPlay(HMhvStream h,
mhvStreamStop(HMhvStream h);
mhvStreamPause(HMhvStream h);
mhvStreamResume(HMhvStream h);
// not used
mhvStreamRestart(HMhvStream h);
// eng
mhvStreamSetAudio(HMhvStream h, int32_t tag);
mhvStreamSetVideo(HMhvStream h, int32_t tag);
mhvStreamSetWindow(HMhvStream hn, int x, int y,
mhvStreamSetVolume(HMhvStream h, int percent);
mhvStreamSetPosition(HMhvStream h, int position, bool doPrebuffer);
mhvStreamGetPosition(HMhvStream h, int* position);
mhvStreamGetMaxPosition(HMhvStream h, int* position);
mhvStreamSetEndPosition(HMhvStream h, int position);
mhvStreamSetTrigger(HMhvStream h, int nId, int * pValue,
mhvStreamEventSubscribe(HMhvStream h, const char *name, HMhvEvent *oh, int evId, int version);
mhvStreamEventGetVersion(HMhvEvent h, int* evId, int *version);
mhvStreamCancelEvent(HMhvEvent h);
// not used
mhvStreamSetSid(HMhvStream h, int32_t sid);
// not used
mhvStreamGetSid(HMhvStream h, int32_t* sid);

<file-stream-begin>
use CMHVFileStream: CMHVMediaPlayer m_mhvPlayer: CMHVMedia

// play audio clip. 
mhvFilePlay(HMhvStream h,

// eng. this func returns hash define value
EMhvAspectRatio mhvSystemGetAspectRatio(void);



// eng
mhvSetHybridFile(uint8_t *pathNameBuf, int pathNameSize, uint8_t *mappingBuf , int mappingSize);

// [network]
//  http, eng, app, 
mhvNetworkCheckICConnectionStatus(void);
// eng
mhvNetworkSetCookie(const char* identity, const char* value, unsigned long expiry, bool secure);
mhvNetworkGetCookie(const char* identity, size_t value_buf_len,
// mah
mhvNetworkPostData(const char* pUrlStr,

// mhv::str  
void mhvGetMHVLock(void);
void mhvReleaseMHVLock(void);

<driver-begin>
// for eng
mhvFileCheck(const char *fileName, FMhvFileCheckCb cbFn, const void *cbArg, EMhvFileType fileType);

// for http, mah::ic, eng, mhv::ipstr:
mhvFileOpen(const char *fileName, int cachePriority,

// not used
mhvFilePrefetch(const char *fileName);
mhvFileGetName(HMhvFile obj, void *pcName, uint32_t *unLength);

// http, mah, eng
mhvFileClose(HMhvFile file);

// eng
mhvFileSetCachePriority(HMhvFile file, int cp);

// http, eng, mah
mhvFileLock(HMhvFile obj, void **opData, uint32_t *oiLength);
mhvFileUnlock(HMhvFile obj);


<-->
mhv_drv.c needs:

./BP_AppConf/2012/ECHO_DVBISDB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2012/ECHOB_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2012/ECHO_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/Prevent_2013/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/NVT569_DVBISDB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/FOXP_DVB/Config/MHEG/Inc/MhegConfig.h 
./BP_AppConf/2013/NVT569_DVB_LFD/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/FOXB_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/NVT569_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/FOXP_DVBISDB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/X12_DVBISDB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/X13_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/2013/X12_DVB/Config/MHEG/Inc/MhegConfig.h
./BP_AppConf/Prevent/Config/MHEG/Inc/MhegConfig.h

select:
./BP_AppConf/2013/FOXP_DVB/Config/MHEG/Inc/MhegConfig.h -> mheg-proto/include


Seems can use existing thread and q code on Tizen. From profile/tv/platform/framework/input/si-service 
note: this is changed to use boost.

$ find . -name PCThread.cpp
./AP_WP/AP_BrowserApp/DAE/Sim/CSP/OSAL/SRC/PCThread.cpp # based on pthread
./AP_WP/AP_BrowserApp/DAE/Sim/CSP/Src/PCThread.cpp      # the same as above

{*}
./AP_MM/AP_SWU/SWUpgrade_Refactored/UnitTests/CommonStubs/OSAbstraction/PCThread.cpp # different. disregard

./AP_WP/AP_BrowserApp/DAE/Sim/CSP/OSAL/INC/PCThread.h
./AP_WP/AP_BrowserApp/DAE/Sim/CSP/Inc/PCThread.h

{*} ./BP_CSP/BP_CSP_Public/CSP-4.0/Inc/PCThread.h
//! Create the instance
bool Create(const char *threadName, unsigned long stackSize = CONFIG_STACK_SIZE);

./AP_MM/AP_PVRApplication/Engine/CIManager/CIPlus/Test/Build/Win/Stubs/CSP/PCThread.h
./AP_MM/AP_SWU/SWUpgrade_Refactored/UnitTests/CommonStubs/OSAbstraction/PCThread.h
./AP_MM/AP_SWU/SWUpgrade_Refactored/Tools/SWUBuilder/Build/Linux/stubs/PCThread.h
./AP_MM/AP_RoseMW/MediaMgr/Debug/Subtitle/CSP/INC/PCThread.h
./AP_CNC/AP_DLNA/Build_Windows/CSP/inc/PCThread.h


{mah} MHEG Application Handler IF

///////////////////////////////////////////////////////////////////////////////
// caller	: [NONE]
// if 		: true
mahSetEnginePause(void);
mahSetEngineResume(void);
bool mahIsApplicationRunning(void)
mahTerminate(void)
mahSetPictureLock(void)
mahSetPictureUnlock(void)


{pfm} {pfmosa.h}

class CPFMThreadRunner
    : public PCThread

class CSIEngineBase : public PCTask

// [free-and-alloc]
Src/mah/Src/mah_boot.c|583| pfmFree(m_NB_Info);
Src/mah/Src/mah_boot.c|620| cbArg = (SMahCbArg *)pfmMalloc(sizeof(SMahCbArg));
Src/mah/Src/mah_boot.c|1847| pAttr = pfmCalloc(1, sizeof(SAdmAppAttr));

// [time]
Src/http/Src/HTTPFileGetMSP.cpp|157| unsigned long timeDiff = pfmTickDiff(m_StartTicks,currTick);
Src/mh5eng/Src/mh5i_scene.c|299| if (pfmUpTimeGet(&CurrentTime) != ERR_OK)
Src/mhv/Src/ServerAccess.cpp|286| tickdiff = pfmSubtractTick(PCTime::Tick(),m_dbLoadTimeStamp );

// [list]
Src/mah/Src/urlencode.cpp|66| pfmForEach(item,pArgList)
Src/mah/Src/urlencode.cpp|69| pArg = pfmListEntry(item,SIcPostArgument,list);
Src/mah/Src/urlencode.h|32| #include "pfmlist.h"

// [assert]
Src/mah/Src/urlencode.cpp|70| pfmAssert(pArg);

// [print]
Src/mh5eng/Src/mh5b_text.c|235| pfmPrint("MH5B_TextSetAttr:\tFont Parameters are NULL!\n");

// [file-lock]
Src/http/Src/TimelineConverter.cpp|100| pfmerr_t rc = mhvFileOpen(options.indexFileUrl.c_str(), 127,
Src/http/Src/TimelineConverter.cpp|161| pfmerr_t error = mhvFileLock(file, &fileBuffer, &fileLength);

// [sem]
Src/mah/Src/mah.cpp|502| initSemaphore = new PCSemaphore();

// [queue]
Src/mah/Src/mah.cpp|518| _gMhegQueueID = pfmQueueCreate("mhgQ", 1500);
Src/mah/Src/mah.cpp|591| if (pfmQueueSend(_gMhegQueueID, &msg) != ERR_OK)
Src/mah/Src/mah.cpp|759| rc = pfmQueueReceive(_gMhegQueueID, PFM_WAIT_FOREVER, &msg);

// [thread]
Src/mah/Src/mah.cpp|543| pfmResult = pfmThreadCreate(&threadParams, mahTask, 0);
Src/mh5eng/Src/mh5_graphics.c|644| pfmThreadSleep(500);
Src/mhv/Src/fscifile.c|101| tid = pfmThreadCurrent();

// [mutex]
Src/mh5eng/Src/mh5i_residentprogram.c|38| mutexFlag = pfmMutexCreate("rpf");
Src/mh5eng/Src/mh5i_residentprogram.c|40| pfmMutexLock(mutexFlag);
Src/mh5eng/Src/mh5i_residentprogram.c|46| pfmMutexUnlock(mutexFlag);

// [type]
Inc/MhegSi.h|68| virtual pfmerr_t reg   (IMhegServiceMonitor* mon,
Src/mhv/Src/cifile.c|204| static void ciFileReadTimeoutCb(SpfmSSCBArg *ssArg)
Src/mhv/Src/fscifile.c|230| timSetOnce(fsTimContext, 1000, (pfmSSCB)fsSessionOpenTimeoutCb,

// seems not used
Src/pfm/Src/pfmdoassert.cpp|7| /// @file    DvbApp\MHEG\Src\pfm\Src\pfmdoprint.cpp
Src/pfm/Src/pfmtim.cpp|7| /// @file    pfmtim.cpp
Src/pfm/Src/tim.c|34| //#include "pfmosa.h"


{mheg-app} {running-flow}

// depending on flag, add ftables
m_mhvDrivers[] = { _mhvFsDriver, _mhvDsmDrivers, ... };


./BP_AppCM/Src/AppManagement/TaskManager.cpp:65:TCFactory* g_pAppFactory;
./BP_APP/BP_AppConf/2013/FOXP_DVB/Config/AppCMTV/Src/TaskManagerConfig.cpp

<mw>

void CTaskManager::t_InitApplications()                                                         
    REGISTER_APP(DELAYED_GROUP, DTV_APP_MHEG, CMHEGApp, "MHEG");                                

\\106.1.8.6\keitee.park\mheg2013\BP_APP\BP_AppDVB\MHEG\Src\app\Src\

(./BP_GFX/BP_ShadowMW/4.0/Inc/CAppBase.h)
class CAppBase : public PCTask

(./BP_APP/BP_AppCM/Inc/CApp.h)
class CApp : public CAppBase , public CKeyRegister

class CMHEGApp : public CApp               

// do not have Create()
CMHEGApp::t_Create(void)
{
   pfmInitialise
	mhvInitialise // mhv.cpp
   {
      _mhvDriverInit();
      {
			// depends on global array m_mhvDrivers
         m_mhvDrivers[ii]->init(); // here use dsmcc drivers
      }
   }
	mahInitialise
	{
      pfmQueueCreate("mhgQ", 1500);
      pfmQueueCreate("mhgSecQ", 1024); // secondary q?

      mhegMemRegionCreate()

      threadParams.priority = threadPriorityHigh;
      threadParams.stack = 256 * 1024;
      threadParams.name = "MHEG mah";
      pfmResult = pfmThreadCreate(&threadParams, mahTask, 0);

         mahTask
         {
            MH5C_Init();   // mh5core.c
            {
               MH5B_Init();
            }
            mahProcessEvents();
            {
               for(;;)
               {
                  pfmQueueReceive(_gMhegQueueID, PFM_WAIT_FOREVER, &msg);
                  switch(msg.id)
							case eMhegMsgAppInit:
								MH5A_Launch();
									mhvSessionLaunch(const char* appname..);
										_mhvSessionOpen(name..);
											_mhvSessionResolveName

               }
            }
         }
	}

   dsmInitialise()
   {
   }
}


// [KT] object types
typedef enum ObjectType
{
   ObjectType_Undefined = 0,

   ObjectType_RootClass = 1,
   ObjectType_GroupClass,
   ObjectType_ApplicationClass,
   ObjectType_SceneClass,
   
   ...
} ObjectType;

MH5B_Init()
{
   // register funcs for each object type
   // Text
   theInitFuncTable[ObjectType_TextClass] = MH5B_TextInit;
   theClearFuncTable[ObjectType_TextClass] = MH5B_TextClear;
   thePreparationFuncTable[ObjectType_TextClass] = MH5B_TextPreparation;
   theDestructionFuncTable[ObjectType_TextClass] = MH5B_TextDestruction;
   theActivationFuncTable[ObjectType_TextClass] = MH5B_TextActivation;
   theDeactivationFuncTable[ObjectType_TextClass] = MH5B_TextDeactivation;
   theContentRetievedFuncTable[ObjectType_TextClass] = MH5B_TextContentRetieved;
   ...
}


MH5B_TextActivation or MH5B_TextPreparation in MH5B_Init()
MH5B_TextPreparation // many other types such as bitmap..
MH5B_IngredientContentPreparation
MH5I_ContentOpen
mhvStreamFileOpen
_mhvSessionStreamFileOpen
   _mhvDriverFileOpen
   {
		/* Find driver for volume. */
		*idx = _mhvDriverGetIndex(resolved_name);

      rc = m_mhvDrivers[idx]->fopen(ses, name, cachePriority, _mhvFileCallback, (void *)h, fileType);
      // carFsFileOpen // FsCarousel.cpp [KT] m_fs_root set root but not file
      // g_fsman->fileOpen
   }

{mheg-filename}

In mheg tizen build, can have startup file in the build and can run it.
/home/kit/mheg/mheg-proto/data/558/startup

However, when run it, this file has path for subsequent files and images in it and try to find these
from the root as below:

kit@kit-vb:~/mheg/mheg-proto/data/558$ more startup 
//T39/startup

Therefore, need to copy these into the root of a target as well.


_mhvSessionFileOpen

MH5B_ObjectInit( ObjectEntry * pEntry )
{
    int nObjType;

    nObjType = OBJTYPE(pEntry);
    MyAssert(MH5E_IsValidObjectType(nObjType) == true);
    if( theInitFuncTable[nObjType] )
    {
        theInitFuncTable[nObjType](pEntry);
    }
}

MH5B_ObjectActivation
MH5B_ObjectXXX()
{}

mh5a_text.c: MH5A_xxx : actions   : get/set funcs which calls ?I_xxx and ?_E_xx
mh5b_text.c: MH5B_xxx : behaviour : _TextInit, _TextActivation, ...
mh5i_text.c: MH5I_xxx : implementation of action

_mh5ApplicationInstall
MH5OB_ApplicationActivation
DecodeApplicationObject
#ifdef _WIN32
    {
        char filename[50];
        FILE* appfile;
        sprintf(filename, "c:\\mhegscripts\\mhegfile_%d.app", filecount);
        appfile = fopen(filename, "w");
        if (appfile)
        {
            asn_fprint(appfile, &asn_DEF_InterchangedObject, InterchangedObject);
            fclose(appfile);
        }
        sprintf(filename, "c:\\mhegscripts\\mhegfile_%d.app.bin", filecount++);
        appfile = fopen(filename, "wb");
        if (appfile)
        {
            fwrite(pData, nSize, 1, appfile);
            fclose(appfile);
        }
    }
#endif

{meng-init}

1> all mutex are for external mw interfaces. keep it?
2> s_mheg_init is not used. 
3> init mw and mheg components
4> send event.type = TCTv::EVENT_DS_TUNE_SUCCESS; event.param.s[3] = TCTv::TUNE_SUCCESS_NORMAL; to self

{mheg-boot}

right, normally this would be something like dsm://a but in your case it might be fil://test1/app
fil://test1/ automatically becomes the root of the app in the MHEG file system 'session'

Events which are not used:
    eAppObjFound,
    eAppObjMissing,

Events which are used in mhv but not in mhep app:
    eMHVAudioComponentChange,
    eMHVVideoComponentChange,

CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent)
{
  case eStartMheg:    // from IF to MW and other places. 
  case TCTv::EVENT_DS_TUNE_SUCCESS:
    CMHEGApp::NewService(void)

  case <eRebootMheg>:   // from processMHEGKey when EXIT is pressed. send it to itself
    CMHEGApp::NewService(void)
    {
      // do some with si such as remove and set si monitor. and call:
      mhegBootStart(unsigned char slr)
    }
}

OR

CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent)
{
  case eBootReboot: // from <mhegboot-reboot>
    // do some work
    mhegBootStart(unsigned char slr)
}

CMHEGApp::mhegBootStart(unsigned char slr)  // arg is not used.
{
    PTEvent evt;
    evt.receiver = this;
    evt.type = eBootStart;
    evt.param.l[0] = slr;
    PCTask::Send(&evt);
}

CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent) <request-to-si-for-pmt>
{
  case eBootStart:

    <mhegboot-reset> mhegBootReset();
    PTEvent ev;
    ev.receiver = this;
    ev.type = ePMTRecieved;
    ev.param.l[1] = m_boot_id;

    // expect to have a event back from si?
    m_SIManager->AddMonitor(on_id,ts_id,sv_id,&ev, &m_PMTHandle);

    // signal to mah?
    mahSetActive(eMhegFlagTaskActive);
}

CMHEGApp::t_OnEvent(const PTEvent* pEvent)
{
  case TCTv::EVENT_APP_MMI_START_APP: 
    mahStart((char*)initialObject, initialObjectLength);

  case ePMTRecieved:
    CMhegSvc // from mheg si.
    if( okay to get svc from mheg si ) then 
      onAcquire(loc,svc,pEvent->param.l[1]);
}

CMHEGApp::onAcquire(SMhegSvcLocation loc, CMhegSvc service, MhegSvcTransId tid)
{
    PTEvent evt;
    evt.receiver = this;
    evt.type = eSiAppSearch;
    evt.param.l[0] = (long) new CMhegSvc(service); //service.getCarouselId();
    evt.param.l[1] = (long) tid;
    PCTask::Send(&evt);
}

CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent)
{
  case eSiAppSearch:
    // do lots of thing to do search
    // once service locked, see if it has mheg and request MW to get mheg section. MW later send it back. evt.type = eServiceBootAcquired;
#ifdef DSM_SUPPORT
    if (dsmSessionCreate(m_dsm_ctx, mhegSessionCB) <dsm-session-create>
        // mheg regiester its callback with dsm. 
        // mhegCtxCB send evt.type = <eSiCarouselMounted> or evt.type = <eSiCarouselFailed>
#else
        mahStart();
#end

  case eServiceBootAcquired:
    if got the different one, cancel the section subscription.

  case eSiCarouselMounted:
  {
    if got the same boot-id and dsm session
      dsmContextListCreate(srg, mhegCtxCB)
        // mheg regiester its callback with dsm. 
        // mhegCtxCB send evt.type = <eCtxListAcquired> or evt.type = eCtxListFailed;
        
      dsmDirectoryListCreate(srg, mhegDirCB)
        // mhegDirCB send evt.type = <eDirListAcquired> or evt.type = eDirListFailed;

    case eCtxListAcquired:
      // to get app based on language setting. browse context list and locate path and destroy
      // context.
      if path is empty
        if found root app(m_bFoundRootApp) then send::eDoBoot(eBootSRG,boot_id);
        else if no root app(m_bNoRootApp) then <mhegboot-reboot>
        else set no init app. {set-no-init-app}
      else
        dsmObjectCreate(m_dsm_session, mhegInitialCb) on found path
        // mhegInitialCb send evt.type = <eInitialAcquired> or eInitialFailed;

    case eCtxListFailed:
      if found root app(m_bFoundRootApp) then send::eDoBoot(eBootSRG,boot_id); <to-boot>
      else if no root app(m_bNoRootApp) then <mhegboot-reboot>
      else set no init app. <set-no-init-app>

    case eDirListAcquired: 
      // browse a directory and try to find a file
      found =  <mhegBootStartObject>(pList, app_file);
      if found
        if no init app(m_bNoInitialApp) then send::eDoBoot(eBootSRG,boot_id);   <to-boot>
        else set root app. {this-is-only-place-to-set-root-app} // start object from dsmcc file?
      else
        if no init app then <mhegboot-reboot>
        else set no root app.

    case eDirListAcquired: 
      <mhegboot-reset>
  }

  case eDirListFailed:
    <mhegboot-reset>

  case eSiCarouselFailed:
    // abort search
    <mhegboot-reboot>

  case eSiCarouselRemount:

  case eInitialFailed:
    if found root app(m_bFoundRootApp) then send::eDoBoot(eBootSRG,boot_id);
    else if no root app(m_bNoRootApp) then mhegbootreboot();
    else set no init app. {set-no-init-app}

  case eInitialAcquired:
    if it is a file then send::eDoBoot(eBootCL, boot_id); <to-boot>
    else it is not a file or directory then
      if found root app(m_bFoundRootApp) then send::eDoBoot(eBootSRG,boot_id); <to-boot>
      else if no root app(m_bNoRootApp) then <mhegboot-reboot>;
      else set no init app. {set-no-init-app}
      destory dsm object;
    else ( it is a directory )
      dsmDirectoryListCreate(obj, mhegInitialListedCb)
      // evt.type = <eInitialListedAcquired> or evt.type = eInitialListedFailed; <- from dsm
      if found root app(m_bFoundRootApp) then send::eDoBoot(eBootSRG,boot_id); <to-boot>
      else if no root app(m_bNoRootApp) then <mhegboot-reboot>;
      else set no init app. {set-no-init-app}
      destory dsm object;
    
    case eInitialListedFailed:
    send::eDoBoot;

  case eInitialListedAcquired:
    if okay from <mhegBootStartObject>(pList, m_cl_app_object);
      send::eDoBoot( eBootCL, boot_id );  <BOOT-CL>

  case eDoBoot:

    // can start from either dsm or fs
    
    switch (pEvent->param.l[0])
    {
    case eBootSRG:
        app_obj_ref = std::string("DSM:/") + m_app_object;
        break;
    case eBootCL:
        app_obj_ref = std::string("DSM:/") + m_cl_app_object;
        break;
            default:
        ASSERT(0);
    }

    if (t_CheckAndEnableFsa() == false) // send eFSAStoreNotification frm dsm fsa.
      mahStart(app_obj_ref.c_str(),app_obj_ref.size());
    else
      

  case eFSAStoreNotification:
    t_ProcessFsaEvent(pEvent);
      mahStart()

  case eServiceChanged:
  case eServiceDead:
  case eServiceBootAcquired:

  case eStopMheg:  // Kill MHEG for some external reason
  case TCTv::EVENT_SOURCE_CHANGED:    // may lead to EVENT_DS_TUNE_START
  case TCTv::EVENT_NO_SIGNAL:  // Equiv to EVENT_DS_TUNE_START
  case TCTv::EVENT_SERVICE_NOT_AVAILABLE: // Equiv to EVENT_DS_TUNE_START

  // from a callback from mah
  case eMhegAppRunning:
  case eMhegAppStopped:

  case TCTv::EVENT_APP_MMI_CLOSE:
  case eAppMMIExit: // there is no place to send this

  // related pvr and reminder from interface for sub components
  case eEventConflictWndClose:

  // related pin from interface for sub components
  case eDisplayPINDialog:

  // from interface for sub components. mah
  case eLaunchWidget:

  // from mheg si from meh
  case eUserSelectChannel,
}


mahStart()
{
	mh5SendMAHMessage(eMhegMsgAppInit, (uint32_t)appname, 0, 0);
}

{mheg-events}

{ control messages from mw?
	// hide mheg from mw so lifecycle from mw
	case MESSAGE_TUNEMGR_MSG_HIDE:
	// active or deactive from mw
	case MESSAGE_APP_ACTIVE: 		// use MW
	case MESSAGE_APP_DEACTIVE:	// use MW

	// blocked from mw
	case MESSAGE_CHANGE_CHILDLOCK: 
	case MESSAGE_CHANGE_RATING_BLOCK:	// user MW

	// use MW. seems show/hide mheg when pop window is on and off
	case MESSAGE_SHOPMODE_CHANGED:	
	case MESSAGE_POP_ONOFF: 
		
	// use MW. seems stop/resume mheg when guide on?
	case MESSAGE_CHANGE_GUIDE_TYPE:
		
}

{ service related messages?
	// do not use MW. if delivery system changed, should be retune all channels
	case TCTv::EVENT_DELIVERY_SYSTEM_CHANGED:

	// no MW. seems to manage trace runtime.
	case TCTv::EVENT_MHEG_DEBUG_INT: case TCTv::EVENT_MHEG_DEBUG_STRING:

	// no MW. seems it means chan search is on so stop mheg si
	case TCTv::EVENT_SEARCH_CHANNEL:

	// no MW. set flag about chan search
	case TCTv::EVENT_SEARCH_CHANNEL_DONE:

	// use MW a lot and use mheg as well. means tune is success and try to start mheg.
	case TCTv::EVENT_TURN_ON_FROM_STANDBY:
	case eStartMheg:
	case TCTv::EVENT_DS_TUNE_SUCCESS: 
	case TCTv::EVENT_BAT_CHANGED:

	// use MW and mheg. stop mheg
	case TCTv::EVENT_DS_TUNE_START:
	case TCTv::EVENT_SOURCE_CHANGED:    // may lead to EVENT_DS_TUNE_START
	case TCTv::EVENT_NO_SIGNAL:  // Equiv to EVENT_DS_TUNE_START
	case TCTv::EVENT_SERVICE_NOT_AVAILABLE: // Equiv to EVENT_DS_TUNE_START
	case eStopMheg:  // Kill MHEG for some external reason

	// use mhv
	case TCTv::EVENT_SHOW_START:
		
	case TCTv::EVENT_SPEAKER_WINDOW_CHANGED:

	case TCTv::EVENT_ASPECT_RATIO_CHANGE:

	case TCTv::EVENT_RESOLUTION_CHANGED:

	case TCTv::EVENT_AFD:
			
	case TCTv::EVENT_MTS_PREFER_LAN_CHANGED:
			
	case USER_MHEG_DIGITALTEXT_STATUS_CHANGED:

	case TCTv::EVENT_APP_MMI_START_APP:

	case TCTv::EVENT_APP_MMI_CLOSE:
	case eAppMMIExit:

	// about media and use mhv
	case TCTv::EVENT_SOURCE_CONNECTED:

	// channel. use MW. set chan using MW from mhegsifun. can be moved to
	// sifun. except SetHighlight() since is from CAppBase.
	case eUserSelectChannel:

	case ePMTRecieved:
	case StorageManager::MESSAGE_MSC_CONNECTED: // about pvr
	case StorageManager::MESSAGE_MSC_DISCONNECTED: // about pvr

	// about pvr	
	case eEventConflictWndClose:

	// about pvr	
	case MESSAGE_REMIND_LIST_CHANGED:
}

{ // media	
#ifdef ROSE
	// about media and use mhv
	case MediaCommon::EVENT_MEDIA_BUFFERING:

	// about media and use mhv
	case TCTv::EVENT_MEDIA_CHANNEL_FOUND:

	// about media and use mhv
	case MediaCommon::EVENT_MEDIA_ERROR:

	// about media and use mhv
	case MediaCommon::EVENT_MEDIA_CONTROL:

	// about media and use mhv
	case MediaCommon::EVENT_MEDIA_PLAY_TIME:

	// no MW. call mahKeyProcess
	case SCWindow::EVENT_KEY_PRESS:

	// not used
	case MediaCommon::EVENT_MEDIA_SWITCH:
	case MediaCommon::EVENT_MEDIA_LOG:
	case MediaCommon::EVENT_MEDIA_CUSTOM:
#endif // ROSE
}

{ network
	case NetworkCommon::EVENT_NET_CABLE_DISCONNECTED:
	case NetworkCommon::EVENT_NET_WIRELESS_DISCONNECTED:

	case NetworkCommon::EVENT_NET_WIRELESS_CONNECTED:
	case NetworkCommon::EVENT_NET_CABLE_CONNECTED:
}

/////////////////////////////////////////////////////////////////////////////



{ boot and lifecycle
	// use MW. stop mheg and lauch widget?
	case eLaunchWidget:

	// no MW. set key process flag false
	case eMahStopped:

	// use MW. do various and set key flag true
	case eMhegAppRunning:

	// use MW
	case eMhegAppStopped:
    
	// send msg to mah		
	case eOnMuteKeyPress:

	case eDisplayPINDialog:
	case eRebootMheg:
	default:
		CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent)
		
		events about boots

    	case eFSAStoreNotification:

    	case eSiAppSearch:

    	case eServiceChanged:

    	case eServiceDead:

    	case eSiCarouselMounted:

    	case eCtxListAcquired:

    	case eCtxListFailed:

    	case eInitialAcquired:

    	case eInitialFailed:

    	case eInitialListedAcquired:

    	case eInitialListedFailed:

    	case eSiCarouselFailed:

    	case eSiCarouselRemount:

    	case eDirListAcquired:

    	case eDirListFailed:

    	case eServiceBootAcquired:

    	case eEventTargetSubscribe:
		case eEventTargetUnsubscribe:
		case eEventTargetUnregister:
}


{mheg-app-apis}

// register this with mw. state checker
CMHEGApp::NoSignalBannerEnableChecker(PTEvent* param)
tvModeMhegStopCompleteWrapper(PTEvent* pParam)
viewerMhegSourceStopCompleteWrapper(PTEvent* pParam)
viewerMhegStopCompleteWrapper(PTEvent* pParam)
	CMHEGApp::viewerMhegStopCB(PTEvent* pParam, bool AVRestart)

// only by mheg sifun to get member data
CMHEGApp::getDefaultServiceInfo( uint16_t* onid, uint16_t* tsid, uint16_t* sid,
CMHEGApp::getFreesatServiceId(uint16_t* sid )

// only by app
CMHEGApp::storeDefaultServiceInfo(void)
CMHEGApp::initGraphics()
bool isMHEGappRunnable()
CMHEGApp::CheckKey(int shadow_key)
CMHEGApp::onAcquire(SMhegSvcLocation loc, CMhegSvc service, MhegSvcTransId tid)
CMHEGApp::onChange(SMhegSvcLocation loc, CMhegSvc service, MhegSvcTransId tid)
CMHEGApp::onExpire(SMhegSvcLocation loc, MhegSvcTransId tid)
CMHEGApp::NewService(void)
CMHEGApp::canBoot(void)
CMHEGApp::StateChanged(void)
SendEvent2MHEGApp(unsigned long event_type)
CMHEGApp::mhegBootEventProcess(const PTEvent* pEvent)
static bool mhegBootStartObject(SMHEGDsmDirectoryList *pList, std::string &app_file)
CMHEGApp::mhegBootStart(unsigned char slr)
CMHEGApp::mhegBootReset(void)
CMHEGApp::mhegBootReboot(REBOOT_REASON rr, unsigned char slr, bool resetdsm)
CMHEGApp::MemoryCleardown()
CMHEGApp::MemoryResume()
initNbInfo(void)
setNbInfo(int len, uint8_t* buf)
getNbInfo(uint8_t** oinfo, uint32_t* olen)
static void getLangCode(int lang, char code[3])
CMHEGApp::unblockKeyInput(int clickid)
CMHEGApp::isSuspended(void)
bool CMHEGApp::isServiceChildRatingLocked(void)
bool CMHEGApp::appMMIGetOption(const uint8_t* options,
CMHEGApp::appMMISetState(AppMMIState state)
CMHEGApp::appMMIGetState(void)
CMHEGApp::setSDBMhegEPGStatus( bool is_avail )
CMHEGApp::resetSDBMhegEPGStatus( void )
CMHEGApp::reInjectEPGKey( bool mhegStarted )
uint32_t CMHEGApp::getNonDestructiveTuneCarouselId(void)
void CMHEGApp::suspendSession(void)
void CMHEGApp::resumeSession(void)
void CMHEGApp::abortNonDestructiveTune(void)
void CMHEGApp::startNonDestructiveTune(void)
bool CMHEGApp::NonDestructiveTune(void)
bool CMHEGApp::NonDestructiveTuneNewServiceSeen(void)
void CMHEGApp::resetAVstreams(void)
bool CMHEGApp::getContentProtectPinSupport(int& pinRequirement)
bool CMHEGApp::validateContentProtectPin(const char* pin, int& validationResult)
static void checkPrefs()
void CMHEGApp::SuppressDataService()
void CMHEGApp::BringBackDataService()
CMHEGApp::execPromptForGuidance( pfgRpCBFN cbfn, void * cbargs, char *reason, int reasonLen)
CMHEGApp::RunPvrConflictResolution(const CMhegPvrConflictResState::TEvents& events,
bool CMHEGApp::SetTruePersistentStorageFlag(bool value)
bool CMHEGApp::GetTruePersistentStorageFlag(bool& value)
bool CMHEGApp::m_CheckConflictionApp( void )
bool CMHEGApp::checkMHEGGraphicsLocked()
void CMHEGApp::suppressSubtitles(bool CIP)
void CMHEGApp::resumeSubtitles()

// used by mah to send message
mhegAppRunning(void)
mhegAppStopped(void)

// used by mah
mhegInputRegisterTransistion(int oldRegister, int newRegister)
void mhegWidgetLaunch(const char* uri, const char* params)

// used by eng. why is it here since it is not member func!
mhegPromptForGuidance( PromptForGuidanceCBFN cbfn, void * cbargs, char *reason, int reasonLen)
mhegGetContentProtectPinRequirement(int* pinRequirement)
mhegGetContentProtectPinSupport(int* pinRequirement)
mhegValidateContentProtectPin(char* pin, int* validationResult)
bool mhegIsVideoDecoderUsed(void)

extern "C"
{
// MHEG engine requires those functions to operate properly
// as MHEG engine is a pure C component it also referencesk
// functions with C linkage

    void MHEGAppKeyDoneCB( void )
    bool MHEGAppSuspended()
    void MHEGAppSubtitleSuspended(bool resume)
    bool mhegGraphicsLock()
    void mahBoot_Reboot(void)
    bool mahGetBootInfo(char **octs, uint32_t *len)
    {
    return getNbInfo((uint8_t**)octs,len);
    }
    void mahReInjectEPGKey( bool mhegStarted )
    bool IsMhegScreenUsedByApp(void)
} // extern "C"


// used by app, mhv
bool mhegIsDataServicePresent(void)

// register this with mah
mahStoppedCb(void* cbArg)

// register this with dsm
mhegSessionCB(void *cbArg, HDsmSession hSession, pfmerr_t status )
mhegSessionCBCarouselPIDChanged(void *cbArg, HDsmSession hSession, pfmerr_t status )
mhegDirCB(void *cbArg, SMHEGDsmDirectoryList *pList, pfmerr_t status)
mhegCtxCB(void *cbArg, SMHEGDsmContextList *pCtxList, pfmerr_t status )
mhegInitialCb(void *cbArg, HDsmObject obj,pfmerr_t status)
mhegInitialListedCb(void *cbArg, SMHEGDsmDirectoryList *plist, pfmerr_t status)

// only app so can be removed since check member vars
CMHEGApp::isMhegAppRunning(void)

// not used
CMHEGApp::isMhegInit(void)
CMHEGApp::isMhegEnabled(void)
static void rebootTimeout(timExpireData data)
CMHEGApp::checkEPGKey( void )
CMHEGApp::processEPGKey( void )
void CMHEGApp::PrintAppDebug(void)

// used by gpi.. will be kept???
static bool exposeEvent(const PTEvent* eventData, const void* pParam)

{mheg-sifun.cpp}

// only for internal use in this file.
static bool mhegGetChannelType( TCChannel::EChannelType &chType);
static bool GetMHEGDirectChannel(TCChannel &tch, int rcn)
static bool canTune(TCChannel* pChannel)
void cleanEIT(char* wbuff, unsigned int *length)
char *getContentDescriptorData( TCProgram *prg)
char *getProgramTitle(TCProgram *prg, int *titleLen)
char *getProgramDescription(TCProgram *prg, int *descLen )
static long ggCountryCode2ISO(int ggCountryCode)
static int convertRating2CountrySpecific(const int rating, const int country)
int getPrentalRatingDescriptorData( TCProgram *prg )
void getStartDateTime( TCProgram *prg, SPfmTime *startDateTime )
bool mhegGetChannelType(TCChannel::EChannelType &chType)


// used by mah	
mhegServiceTune(int rcn)
mhegServiceTuneQuietly(int rcn)
mhegServiceTuneNonDestructively(int rcn, bool quiet)
mhegServiceGetDefRcn(uint16_t* rcn)
mhegNonDestructiveTuneOK(int sid)
mhegSIGetEventInfo(int rcn, int porf, char **nbEventName, int *eventLen,
mhegServiceGetDefOnid(uint16_t *onid)
mhegServiceFindMuxRcn(uint16_t tsid, uint16_t onid, uint16_t sid, int *index)
mhegServiceFindLowestRcn( uint16_t sid, int *index)
mhegServiceFindMuxLcn(uint16_t tsid, uint16_t onid, uint16_t lcn, int *index)
mhegServiceFindLowestLcn(uint16_t lcn, int *index)
mhegServiceGetInfo(int rcn, int *netid, int *onid, int *tsid, int *sid)
mhegServiceGetFSI(int rcn, int *fsi)
mhegSIGetServiceInfo(int serviceIndex,
mhegServiceFSIRcn(uint16_t fsiid, int *index)
mhegGetAudioDescriptionVolume( int *adVolume )


// used by mah and mheg app
mhegServiceGetDefFreesatIndex(uint16_t* sid)
mhegGetAudioDescriptionPref( bool *setting )
mhegGetSubtitlePref( bool *setting )


// used by mah and sifun
mhegServiceGetDefTsid(uint16_t *tsid)

// used by mheg eng	
mhegGetLocalTime(SPfmTime* outtime)

// used by mhv
mhegServiceValidateOnid(uint16_t onid)

{mheg-mw-apis}

1> done for mhegapp.c, mhegservicefun.c, mhegpininput.c, keyhooker.cpp


g_pTaskManager->GetWrapperManager();
g_pAppWindow->GetIndirectChannel(&tChannel) )
pCountryMgr->GetDVBSpecCode() == DVBSPEC_ZIGGO_CABLE &&
pNetMgr->UnsubscribeEvent();
g_pAppTV->SetAppState()
g_pCustomProc->AddBeforeSourceChangeProc((
CAppEventManager::SubscribeEvent();
StorageManager->SubscribeEvent();
               ->UnsubscribeEvent(StorageManager::,
g_pStateChecker->SetNoSignalBannerEnableCheckHandler();
CApplicationManager* pApplicationManager = g_pTaskManager->GetApplicationManager();
g_pAppCI->SendAppMMIPendingMSG();
CAppStateMachine m_stateMachine;
CTuneManagerUtil::SetChannel(DTV_APP_MHEG, TCWindow::WINDOW_MAIN, pChannel, TCMW::SEEK_EXE, TCChannel::NAVIGATOR_MODE_ALL, NULL, true);
g_pInputService->GenerateIRKey(KEY_EXIT, KEY_FROM_IR_REMOTE);
CRatingUtil::CheckLockDVB())
g_pAppScreen->GetOption(TCScreen::OPTION_SHOP_MODE, &shopModeValue) && shopModeValue)
CInfoLink2Wrapper::RunWidget(*url, DTV_APP_MHEG, *payload);
CDeviceUtil::SetRemoteInputType( REMOTE_MHEG_TYPE ); 
CApp* pApp->FlagActive()
CApp::SendEvent(MESSAGE_CC_ON, DTV_APP_TVVIEWER);
CDAEWrapper::IsSupportHbbTV()
CPlugPlayUtil::GetPlugPlayState()
CTTXWrapper::IsTtxReady()
CDataServiceWrapper::CheckVisibleXletShown())
CViewerWrapper::HideBanner(DATASERVICE_BANNER);
CAppUtil::FlagExternalSource())
CTuneManagerUtil::GetFlagProcess())
g_pAppSpeaker->GetAudioDescription(&bSoundMode))

TCChannel::FlagDigital();
  OriginNetID();
  TransportStreamId();
  ProgramNumber();
  Major();
  LogicalChannelNumber();
   GetTVMode( (TCChannel::EChannelType)ch.Type() );

g_pAppChannelAPI->GetProviderName();

CTimerUtil::GetSITTime()

TCDescContent::NumOfContentLoop();
   ContentNibbleLevel1(i);
   ContentNibbleLevel2(i);

TCProgram::TitleLength();
   GetTitle(title,&readlen) )
   ExtendedTextLength();
   GetExtendedText(desc,&readlen) )
   Descriptor
   StartTime();
   Duration();
   FreeCAMode();

TCDescParentalRating::
   NumOfRatingLoop();
   Rating(LoopCount);
   CountryCode(LoopCount)

CPinNumberWidget *m_PinWindow;
  SetValidConfirmCallback( NULL, NULL, NULL );
  SetReturnKeyCallback( NULL, NULL, NULL );
  SetHideAlarmCallback( NULL, NULL, NULL );
  SetExitKeyCallback( NULL, NULL, NULL );
  Hide();
  Create(m_Task, CDefaultWindow::ITEM_TYPE_TITLE);
  SetFocus();
  Show();

CCPMS pms;
   Get();

2> [SI] mhegsi.cpp, mhegsvc.cpp, simanager.cpp, simonitor.cpp. 

TCPMTParser* p_parser = new TCPMTParser(0);
  Create())
  Parse(TCPATParser::NETWORK_PID

TCPATParser
  Create())
  Parse(TCPATParser::NETWORK_PID
  NumOfProgramList();
  ProgramNumber(ii);
  VersionNumber();
  ProgramPID(program_num);
  PMTInstance(sv_id);

TCPMTInstance
   NumOfElementary();
   PCR_PID();
   PMTElementary(es_idx);

TCPMTElementary
   ElementaryPID();
   Descriptor

TCDescLanguage
   NumOfLanguage();
   Language(idx,&code,&type))

TCDescStreamIdentifier * p_strid =
   Descriptor

TCDescAssociationTag
   Descriptor
   AssociationTag();

TCBaseDesc
   Length();
   GetDescriptor(buf,&olen);

TCDescCarouselIdent
   CarouselId();

3> [nvram] mhegfsa.cpp, mhegfsadescriptor.cpp, mhegfsadsmmanager.cpp   
          mhegfsagroup.cpp, mhegfsamanifest.cpp, ..fsastore.cpp,
          mhegnvram.cpp, mhegstorage.cpp, mhegtruepersistentstrorage.cpp  

XML_Parser parser;
PCDir;
PCFile
PCTime::PTTime CurrentTime;
g_pAppFactory->


4> [MHV] mhv: mhv_iframe.cpp, mhv_dsm.cpp,
note: use http dirs and HTTP_SUPPORTED USE_ROSE_PLAYER

TCWindow
   StopAudioClip( m_audioclip_index ) )
   m_tcwin->PlayAudioClip(  static_cast<unsigned char *>(m_mediaData->data),

TCAPI

PCMem
PCAlarm
CCEMS;
   SetEvent( event_type, &an_event);

PCTime::Tick();
PEM_write_X509(tempFile, cert);

m_manager = new CMediaManager();
m_manager->GetStreamMedia()

IStreamMedia    *m_movie;
m_movie->SetTotalBufferSize(3*1000*1000);

TCSpeaker::AUDIOENC_MODE_MPEG;
TCObjectSortedList chlist;

public IDescriptorContainer, 
public TCDescConfBase
done to					mhvBroadcastStream 


5> [MAH]

TCChannelKey
CReminder
   reminderAPI->




These are functions which are defined in the middleware interface for Tizen MHEG application.

/// Function processed recieved events from viewer
/// \param [in] Pointer to key event
/// \return TRUE-Key processed by MHEG. FALSE-Key not used by MHEG.
static bool processMHEGKey(PTEvent* pEvent);

/// Function Sets DigitalText flag (Enabled/Disable) to NVRAM
/// \param [in] Value to be set, TRUE=Enabled, FALSE=Disabled
/// \return Status of the operation. TRUE=OK, FALSE=Failure
static bool setDigitalTextValue(bool value);

/// Function Retrieves DigitalText flag (Enabled/Disable) from NVRAM
/// \param [out] Value of the flag, TRUE=Enabled, FALSE=Disabled
/// \return Status of the operation. TRUE=OK, FALSE=Failure
static bool getDigitalTextValue(bool &value);

/// Function Sets DigitalTextControl flag (Enabled/Disable)
/// \param [in] Value to be set, TRUE=Enabled, FALSE=Disabled
/// \return Status of the operation. TRUE=OK, FALSE=Failure
static bool getDigitalTextControlValue( bool &value );

/// Function Retrieves DigitalText flag (Enabled/Disable)
/// \param [out] Value of the flag, TRUE=Enabled, FALSE=Disabled
/// \return Status of the operation. TRUE=OK, FALSE=Failure
static void setDigitalTextControlValue(bool value);

/// Function "Enables" MHEG operation
/// \param None
/// \return None
static void EnableMHEG(void);

/// Function "Disables" MHEG. Once disabled, must be re-enabled
/// with EnableMHEG()
/// \param bool. Flag indicating synchronous or asynchronous shutdown
/// \return None
static void DisableMHEG(bool sync_shutdown=false);

/// Shutdown MHEG app & update country config enable flag
/// \param None
/// \return None
static void ResetMHEG(void);

/// Gets Dsiable/Enable flag. Used during MHEG startup
/// to determine startup mode
/// \param None
/// \return bool
static bool IsMHEGDisabled(void);

/// Returns MHEG EPG status as signalled by EPG Key register.
/// Returned vale is for "current service" as known by MHEG.
/// Value returned is based on internal volatile DB.
/// \param None
/// \return Bool -  True - MHEG EPG is signalled or "unknown"
///                 False - MHEG EPG is not signalled.
static bool IsMHEGEPGAvailable( void );

static bool IsMHEGGraphicsDrawn( void );

static bool IsMHEGICStreaming(void);

static bool IsMHEGAppRunning(void);

static bool CheckMHEGKey( int key );

/// Retrieves current value of Digital Text steaming content protect setting
/// \param pinRequirement Will hold retrieved value (0 = no PIN protection,
/// 1 = PIN required for "Guidance" content only, 2 = PIN required for all
/// streamed content)
/// \return Call success
static bool GetContentProtectPinRequirement(int& pinRequirement);

/// Stores new value of Digital Text steaming content protect setting
/// @param pinRequirement New setting value (0 = no PIN protection,
/// 1 = PIN required for "Guidance" content only, 2 = PIN required for all
/// streamed content)
/// @return Call success
static bool SetContentProtectPinRequirement(int pinRequirement);

static bool IsAppMmiRunning(void);
static void StopMHEG(void);


{mheg-key-handles}

This is how tizen handle keys:

kit@kit-vb:~/tizen/apps$ egrep -nr key .
./src/view_main.c:217:static void _ledge_key_pressed(void *data, Evas *e,
./src/view_main.c:232:	if (!strcmp(ev->keyname, "Left"))
./src/view_main.c:236:static void _redge_key_pressed(void *data, Evas *e,
./src/view_main.c:251:	if (!strcmp(ev->keyname, "Right"))
./src/view_main.c:279:				_ledge_key_pressed, ai);
./src/view_main.c:282:				_redge_key_pressed, ai);
./src/view_main.c:360:				_redge_key_pressed, ai);
./src/view_main.c:570:static void _download_btn_key_pressed(void *data, Evas *e,
./src/view_main.c:585:	if (!strcmp(ev->keyname, "Left"))
./src/view_main.c:587:	else if (!strcmp(ev->keyname, "Right"))
./src/view_main.c:619:			_download_btn_key_pressed, priv);


This is for MHEG:

MW-> CMHEGApp::processMHEGKey( PTEvent* pEvent ) 
  translate mw keys to mheg key(mheg_key)
  msg send to MHEGApp with mheg_key

CMHEGApp::t_OnEvent: case SCWindow::EVENT_KEY_PRESS:
	mahKeyProcess( static_cast<MhegKey_t>(pEvent->param.l[1]) );

mheg keys are define in mh5_key.h of mah.


==============================================================================
*kt_sruk_prjs_mheg_002* 	mheg spec: text render

ETSI ES 202 184 V1.1.1 (2004-11), MHEG-5 Broadcast Profile
S:\references\etsi\ES202184v010101p-MHEG.pdf

13.5 text rendering

{rendering-process}

STEP01

using <text-object> and font, calc:	note: ??

1) max num of line
2) width available on each line

STEP02

determine a series of lines using:

1) <logical-rule> note: ??
2) available line width from step01-2.
3) <breaking-text-rule> note: ??

STEP03

check if each line is fit <vertically> within the text-object. <vertical-truncation> is needed if
required line exceeds the max line. affected by <vertical-jutification> of the text-object.

note: is it defined in text-object?

STEP04

determine the place of each char in a line using:

1) even applied all rules so far, there are extreme cases that line length exceeds the available
width from step01-2. Then, <horizontal-truncation> may be requred: discard some chars. 

2) affected by <horizontal-jutification> of the text-object.

note: is it defined in text-object?
 
3) placement of chars should have sensible and consistent spacing. note: sensible?


{language}

http://www.cs.cf.ac.uk/Dave/Multimedia/node297.html

The key elements of the scene are its :Links. Links are where most processing happens in MHEG
applications. MHEG links could have been called action listeners. You write links to listen for
particular events, when this event occours your procedural code in the :LinkEffect section is
executed by the MHEG engine.


{runtime}

It is the responsibility of the client to have a runtime that interprets the application parts,
presents the application to the user, and handles the local interaction with the user. 


{dtg-test-spec}

Z:\cannon\ftp\test_suite\UK_DTG_MHEG\archive\DTG-MHEG106-V4.1.1\docs\DTG_MHEG_Test_Suite_Specification.pdf


==============================================================================
*kt_sruk_prjs_mheg_003* 	stream player

\\106.1.8.195\avshare\Dektec\StreamXpres3.11


==============================================================================
*kt_sruk_prjs_mheg_004* 	<empty>

{wreport-keitee}

{wreport-yanran}

W12
===
1.2 Completed
Investigate the problem of sub menu can't be entered, and assist Kit to solve the issue. Rectangle
lifecycle completed can be created, modified and deleted. Delete and pending delete are working.   

 [KT] memory model is not completed. tasks in redmine should be manged or moved to the project
 portal.

1.3 In progress
Thread model as detailed in design document.  
Code review issues 50% complete.

1.4 Next steps
Close all issues in code review as priority.
Complete thread model implementation (2nd priority).
Start to fix bugs in DTG test (3rd priority).

W11
===
Completed:
o Implemented image drawing functions and tested with PNG files in DTG test.
o Implemented most DLA drawing functions, but test can’t start due to DTG test doesn’t work completely.

In Progress:
o Working on DTG test entering sub menu.  

Plan for next week: 
o Compete thread and memory model.  individual DTG test can be started.  

{wreport-jason}

W12
===
1.2	Completed
The MHTR (MHEG Text Renderer) is now initialised and trying to do something useful. It detects
whether the platform is HD or SD and starts to instantiate the correct Renderer accordingly.

1.3	In progress
The font system is beginning to show signs of life by trying to decide which type of engine to use
and load the correct default font. At the current rate it is about 20% to complete. The rate of
progress various considerably depending on the side issues and/or research that has to be done at
each point.

1.4	Next steps
The current effort is focussed on debugging the start up of the font system and checking that all
the data structures are correctly populated.  The font architecture needs continual refinement as
some things need to be added, and others removed as the effort progresses. This is an iterative
process and can change substantially from day to day.

Looking to get basic font on screen for middle of next week.

W11
===
Completed:
-	MHTR ported into build but only as far as Shadow interface
-	Build environment set up and downloading builds to new hardware
-	Final document review with Andy

In Progress:
-	Completing of old Edge draw text code into EFL environment so that text can be seen in MHEG
environment
-	Continue with CFont re-implementation to use FreeType

Plan for next week:
-	Continue CFont work
-	Try and get debugging working on target hardware


==============================================================================
*kt_sruk_prjs_mheg_005* 	mhv

{files}

kit  10104 Nov 26 13:44 AppMMICache.cpp
kit   8566 Nov 26 13:44 CompSel.cpp
-> kit  53622 Nov 26 13:44 direct_output.cpp <not-used>
kit   7511 Jan  9 11:27 file_audio_media_pla.cpp
kit  24316 Jan  9 11:26 FsCarousel.cpp
kit   3429 Jan  9 11:26 FsCarouselProto.c
kit   1224 Nov 26 13:44 GenericMediaPla.cpp
kit  16544 Nov 26 13:44 h264_iframe_util.cpp
kit   9617 Jan  9 11:26 HashDigest.cpp
kit  69475 Jan  9 11:26 HybridFileSystem.cpp
kit  97395 Feb 19 17:09 mhvBroadcastStream.cpp
kit  30551 Jan  9 11:27 mhv_ci.c
kit  21685 Jan  9 11:27 mhv_ci_wrapper.cpp
kit  44586 Feb 24 11:51 mhv.cpp
kit  15333 Jan  9 11:27 mhv_drv.c
kit  57177 Jan  9 11:27 mhv_dsm.cpp
kit  14816 Jan  9 11:27 mhv_fil.c
kit  22372 Jan  9 11:27 mhv_http.cpp
kit   4465 Jan  9 11:27 mhv_hybrid.c
kit  27629 Dec 31 16:13 mhv_iframe.cpp
kit  67168 Jan 24 17:18 mhvIPStreaming.cpp
kit  27777 Nov 26 13:44 MHVIPStreamTrigger.cpp
kit   8274 Nov 26 13:44 MHVMediaAESKey.cpp
-> kit   4751 Nov 26 13:44 MHVMediaAESKey_UnitTest.cpp
kit 131576 Feb 24 11:32 MHVMedia.cpp
kit   2318 Nov 26 13:44 mhv_nvm.cpp
kit   1262 Nov 26 13:44 mhv_obj.c
kit  11023 Jan  9 11:27 mhv_rec.cpp
kit  11649 Jan  9 11:27 mhv_sec.cpp
kit  35504 Jan  9 11:27 mhv_ses.c
-> kit   2217 Dec 16 13:13 mhv_srvaccs.cpp
kit  79046 Jan  9 11:27 mhv_str.cpp
kit  21405 Jan  9 11:26 ServerAccess.cpp
kit    905 Nov 26 13:44 stubs.c
kit  16148 Nov 26 13:44 TLSCache.cpp

{init}
mhvInitialise // mhv.cpp
{
  _mhvDriverInit();
  {
    _mhvFileInit();
    {
      init static global pfm list array; 
      init memory block for this list?
        m_apstHashTable
    }
    _mhvStreamInit(void)
    {
      for( ii=0; ii < MHV_HASH_SIZE; ii++ )
      {
        init static global pfm list array;
        init memory block for this list?
          m_apstStreamHashTable, m_apstEventHashTable, m_apstSubscriptionHashTable;
      }
    }

    // has platform calls
    CMHVMedia::_mhvMediaInit();

    _mhvSessionInit();
    {
      init m_Sessions array;
    }

    // security module?   
    mhvSecInit();

    _mhvDriverInit(void)
    {
      IFRAME_SUPPORT
      DSM_SUPPORTED 
      REC_SUPPORTED 
      DVB_SUPPORTED 
      CI_SUPPORTED 

      static const SMhvDriver *const m_mhvDrivers[]=
      {
      #ifdef DSM_SUPPORTED
        &_mhvDsmDriver,                     /**< DSM-CC carousel driver. */
      #endif
      #ifdef CI_SUPPORTED
        &_mhvCiDriver,                      /**< CI filesystem driver. */
      #endif
      #ifdef REC_SUPPORTED
        &_mhvRecDriver,                     /**< receiver source driver. */
      #endif
      #ifdef DVB_SUPPORTED
        &_mhvDvbDriver,                     /**< DVB Locator driver. */
      #endif
        &mhvDriverNull
      }

      // loops through arrays and call init for each. depends on global array m_mhvDrivers
      m_mhvDrivers[ii]->init(); // here use dsmcc drivers
    }
  }
}

==============================================================================
*kt_sruk_prjs_mheg_005* 	mheg debug

# key presses
-485:40:MHEGDebug:I:view_main.c:347:_key_pressed _key_pressed: Down, 2 key pressed

# action num matches to decoded appliction file
-467:360:MHEGEngRun:M:mh5e_jobqueue.c:225:MH5C_AppendSyncJobQueue Sync Event 23 matches action 13115

{ :Link 13115
  :Shared true
  :EventSource 23012
  :EventType TestEvent
  :EventData true
  :LinkEffect
  (
    :Add(23014 1)
    :Call(15001 22099 :GOctetString '~/submenu.mheg' :GInteger :IndirectRef 23014 :GObjectRef :IndirectRef 25001)
    :TestVariable(22099 1 :GBoolean true)  // Equals comparison
    :SetPosition(:IndirectRef 25001 :IndirectRef 23006 :IndirectRef 23011)
    :SetCellPosition(3001 :IndirectRef 23012 :IndirectRef 23006 :IndirectRef 23011)
    :Add(23011 :IndirectRef 23000)
    :Add(23012 1)
    :TestVariable(23012 4 :GInteger :IndirectRef 23013)  // Less than equals comparison
  )
}


# Spawn|Launch
-496:370:MHEGEngRun:I:mh5a_application.c:631:MH5A_Spawn Spawn Elementary Action - //ColourPalette/startup 0
-496:710:MHEGDebug:I:FsCarousel.cpp:370:pfmerr_t PCFsCarouselManager::openSession(void*, const char*, int (*)(const void*, void*, void*, const char*, pfmerr_t), const void*) KT: PCFsCarouselManager: open: okay on fname(/ColourPalette/startup)

# ram persistent error
-459:260:MHEGEng:W:mh5i_application.c:302:MH5I_StorePersistent cannot write file ram://DTGSM1

# evas error
ERR<3825>:evas_main evas_object_image.c:314 evas_object_image_memfile_set() unable to load '/proc/3825/fd/36' from memory


# ============================================================================
#{

==============================================================================
*kt_sruk_prjs_tizen_000* tizen setup

{step-01}

HQ TV tizen and ras account request


{step-02} {firewall-request}

Use IT4U page.

mine: 106.1.9.55

according to "server_settings_for_tizen_1.0.docx" in guide for overseas.doc

internal (samsung)

{souece} {dest} {port} {bi-uni} {comment}

106.1.9.55 168.219.241.167 80 	unidirectional		"Tizen TV -  GIT/Gerrit/Crowd"
106.1.9.55 168.219.241.167 443 	unidirectional		"Tizen TV -  GIT/Gerrit/Crowd"
106.1.9.55 168.219.241.167 29418 unidirectional		"Tizen TV -  GIT/Gerrit/Crowd"

106.1.9.55 168.219.241.168 80 	unidirectional		"Tizen TV -  OBS"
106.1.9.55 168.219.241.168 443	unidirectional		"Tizen TV -  OBS"

External 

106.1.9.55	  ,198.145.20.45	  ,80		"Tizen RSA -  Code review history -  Code change history"
106.1.9.55	  ,198.145.20.45	  ,443	"Tizen RSA -  Code review history -  Code change history"
106.1.9.55	  ,198.145.20.45	  ,9418	"Tizen RSA -  Code review history -  Code change history"
106.1.9.55	  ,198.145.20.45	  ,29418	"Tizen RSA -  Code review history -  Code change history"

rockford: 106.1.8.6

approval list

Number Type Name Approved Date/Time Team Name 
0 Draft Kyoungtaek Park Senior Software Engineer Jul 25, 2013 11:02 SRUK-Advanced Development 
1 Approved Jonathan Naughton-Green Director Jul 25, 2013 14:26 SRUK-Audio Visual (AV) 
Access to Tizen 
2 Consent Chella Sivathasan IT Support Manager Jul 25, 2013 15:57 SRUK-IT Support 
3 Consent Gyeong heon Seo G7/Director Jul 25, 2013 16:00 Europe RHQ-Security 
[Delegate Approval] Delegate : security 4u ./HR Team ? Gyeong heon Seo G7/Director/Europe RHQ-Security 
4 Consent dc firewall manager Manager Jul 26, 2013 01:39 Information Security Assurance Group 
5 Notification SERI ITSupport . Jul 26, 2013 01:39 SRUK 
6 Notification London NOC Staff Jul 26, 2013 01:39 Network Support 
7 Notification suwon firewall Work Jul 26, 2013 01:39 Electronics & Manufacturing Network Group 2 


==============================================================================
*kt_sruk_prjs_tizen_001* tizen spec and resource

{tizen-architecture}

https://developer.tizen.org/documentation/dev-guide?redirect=https%3A//developer.tizen.org/help/topic/org.tizen.gettingstarted/html/tizen_overview/tizen_architecture.htm


| ------------------------------------ |
|  web app        | native app         |
| ------------------------------------ |
|  web framework  | native framework ( graphics and ui, text and locales )	|
| ------------------------------------ |
|               core ( graphics, ui )                   |
| ------------------------------------ |
|              Linux Kernel            |
| ------------------------------------ |

# from kms
# it says that native means OSP(BADA) and they use componts in core.
#
http://kms.sec.samsung.net/club/club.menu.bbs.read.screen?page_num=2&p_club_id=4968&p_menu_id=1&p_group_id=0&search_field=&search_query=&search_category=&message_id=856362

# from kms
# see tizen archtecture with core components
17._MediaContentFW.pptx

{native-framework}

# native app programming
https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.native.appprogramming%2Fhtml%2Fcover_page.htm

The native framework provides equivalent features through the Tizen::App namespace, while
additionally providing a programming model for UI and service applications with a set of
corresponding classes and interfaces. The App namespace also provides the means for Tizen native
applications to interact with each other through launching applications with parameters and
providing operations and data to other applications with an appropriate level of access control.

The application controls provided by the Tizen::App namespace also provide media features. The
difference is:

If your application uses the Tizen::App::AppControl features, the device launches the device's own
Media Player or Camera application. note: KT. it seems to be for web app. 

If your application uses the Media namespace features, your application does all the work itself,
with its own user interface. *kt_sruk_set_003* Tizen::Media


note: 2.0 supports

2) OpenGL ES. possible alternative to a graphic lib?

3) application life-cycle management.


{graphics-and-multimedia}

Features for 2D graphics, font, bitmap, and 3D graphics are provided by the *Tizen::Graphics*
namespace along with the Graphics module of the Core subsystem.

Multimedia features based on GStreamer are used to handle various media types, including video,
audio, imaging, and codec. The Multimedia module also provides media content management for managing
media file metadata information. It also provides features for handling camera functionality, such
as preview, capture, and recording.

Playing media

    Playing Audio

    Play audio files, and pause, stop, or skip playback.
    Playing Video

    Play video files, and pause, stop, or skip playback.
    Handling Player Controllers

    Handle actions when the player is opened or reaches the end of a clip.


{supported-codecs}

https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.native.appprogramming%2Fhtml%2Fguide%2Fmedia%2Fsupport_multimedia_format.htm
Supported Multimedia Formats

https://developer.tizen.org/documentation/articles/audio-video-playback-tutorial
Audio Video Playback Tutorial

{gstream}

http://gstreamer.freedesktop.org/
The Tizen Multimedia framework is based on GStreamer open source project. Media framework enables
you to play and manipulate images, video, audio, and VoIP.


{book-and-resource}

https://developer.tizen.org/blogs/chengluo/2013/tizen-dummies-book-2.0-alpha-2.1-release

# setup dev env
https://source.tizen.org/documentation/developer-guide

http://download.tizen.org/misc/media/conference2013/slides/

http://ebookbrowse.com/2012-05-08-1515-1555-design-and-implementation-of-tizen-emulator-pdf-d346698864


==============================================================================
*kt_sruk_prjs_tizen_002* Tizen::Media

{reference}

https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.native.apireference%2FnamespaceTizen_1_1Media.html

can see class diagram.


==============================================================================
*kt_sruk_prjs_tizen_003* Tizen::Graphics

{terms}

RTL(right-to-left) such as Arabic
LTR(left-to-right)

# composition
#
A component of desktop publishing and page layout, text composition deals specifically with how copy
is arranged on the page. It involves manipulating text placement and altering the visual appearance
of the text. 

Some of the tasks that come into play in text composition are choosing text alignment, changing font
sizes or making text bold or using italics, deciding how much space to put between lines of text or
columns of text, and using typographical embellishments such as drop caps. 

Text composition goes hand-in-hand with page layout where you are applying the principles of design
to the placement and interaction between text and images. Although it originally referred to print
design, the application of various styles and the use of HTML to format text for a Web page is also
text composition. 


{multiple-screen}

It is about features to support multiple screen resolutions in a single application.


{canvas}

TDC2013-Creating_Tizen_Native_Apps_with_the_Native_UI_and_Graphics_Framework.pdf

Canvas is a mem buffer where all drawing happens.

2D drawing primitives in p23 ??


==============================================================================
*kt_sruk_prjs_tizen_004* Tizen::App

{two-types-of-native-app}

two type of native app; <UI> and <service> which has no UI and runs background. Tizen::App::UiApp
and Tizen::App::ServiceApp.  

The UI and service applications can be packaged together, if necessary; however, a combined
application package must contain one and only one UI application, while it can also have one or more
service applications.

Only one Tizen UI application can run in the foreground while the remaining applications run in the
background. always.

note: KT. only one UI and one and more services

whereas service applications can only be launched from another application.


{frame} {window}

Tizen Native App Programming > Basics of Native App Programming > Application Model > Application Life-cycle
Frame State Transition

A UI application has a frame, which is the top-level main window of the application. The frame gets
deactivated when another frame is located on top of the current frame. For example, the frame is
deactivated when a pop-up message is displayed.


Graphic processing, such as 3D or animation, must be stopped, unnecessary resources released, and
media processing and sensor manipulations discontinued when a UI application is minimized.

note: this means that not possible to use UI app as an MEHG app?


{comm-between-apps}

Applications can communicate with each other using a MessagePort.

# doc: Tizen Native App Programming > Programming Guide > Io: Input, Output, and Data Handling

All Tizen native applications can communicate with each other using message ports.

 App #01                                                     App #02
 -------------                                               ------------
 (remote port)           --------------------->              (local port)
      |                                                           |
 (local port )           <---------------------              (remote port )

# Tizen::Io::RemoteMessagePort Class Reference

result Tizen::Io::RemoteMessagePort::SendMessage 	( 	const Tizen::Base::Collection::IMap *pMessage) 	


{multitasking} {out-of-memory-policy}

https://developer.tizen.org/help/topic/org.tizen.native.appprogramming/html/basics_tizen_programming/tizen_app_model/multitasking_in_tizen.htm

When the system is running low on memory, the system begins to terminate applications one by one
until sufficient memory is again available. The applications are terminated in the order the user
has last placed them to the background:

note: KT. should be considered?


{tutorial-analysys-from-sdk}

Tizen Native App Programming > Native Sample Applications 
https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.native.appprogramming%2Fhtml%2Fsample_descriptions%2Fsample_files_cpp.htm

Headers and source:
d:\tizen-sdk\platforms\tizen2.2\rootstraps\tizen-device-2.2.native\usr\include\osp
d:\tizen-sdk\platforms\tizen2.2\samples\native\cpp\Sample\Tizen Native\


# for namespaces diagram
Tizen Native App Programming > API Reference > Namespace List > Tizen::App

# for class
Tizen Native App Programming > API Reference > Namespace List > Tizen::App > UiApp

Tizen::Base::Object <- Tizen::App::App <- Tizen::App::ServiceApp
                                       <- Tizen::App::UiApp      <- MyApp


{Tizen::App::AppImpl} {FApp_AppImpl.h} {FApp_AppImpl.cpp}

note: have implementaion for OnXX

namespace Tizen { namespce App 
{
	class _AppImpl
	: public Tizen::Base::Object
	, public _IAppUserEventListener
	, virtual public Tizen::Base::Runtime::IEventListener # what?
	{
		 public:
			   'static' _AppImpl* GetInstance();
				result Construct(const Tizen::Base::Collection::IList* pArgs);
				result Execute(_IAppImpl* pIAppImpl);

				static bool OnCreate(void* user_data);
				static void OnService(service_s* service, void* user_data);
				static void OnPause(void* user_data);
				static void OnResume(void* user_data);
				static void OnTerminate(void* user_data);
				static void OnLowMemory(void* user_data);
				static void OnLanguageChanged(void* user_data);
				static void OnRegionFormatChanged(void* user_data);

		 private:
				'static' _AppImpl* __pAppImpl;
				App* __pApp;
				_IAppImpl* __pIAppImpl;

				friend class App;
	};
}}


result _AppImpl::Execute(_IAppImpl* pIAppImpl)                           
{
	pAppImpl->__pIAppImpl = pIAppImpl;

	app_event_callback_s state_handler;

	state_handler.create = &OnCreate;
	state_handler.service = &OnService;
	state_handler.terminate = &OnTerminate;
	state_handler.pause = &OnPause;
	state_handler.resume = &OnResume;
	state_handler.device_orientation = NULL;

	state_handler.low_memory = &OnLowMemory;
	state_handler.low_battery = NULL;
	state_handler.language_changed = &OnLanguageChanged;
	state_handler.region_format_changed = &OnRegionFormatChanged;

	//
	// D:\tizen-src\application\src\app_main.c
	// 
	eflResult = app_efl_main(&argc, &pArgv, &state_handler, this);
}


{Tizen::App::App} D:\tizen-src\appfw\src\app\FAppApp.cpp

namespace Tizen { namespce App                                             # <abc>
{

	class App : public Tizen::Base::Object
	{
		 public:
		 		virtual ~App(void);
				virtual bool 	OnAppInitialized (void)
				virtual bool 	OnAppInitializing (AppRegistry &appRegistry)=0  # <pure>
				virtual bool 	OnAppTerminating (AppRegistry &appRegistry, bool urgentTermination=false)=0 # <pure>
				virtual bool 	OnAppWillTerminate (void)
				virtual void 	OnBatteryLevelChanged (Tizen::System::BatteryLevel batteryLevel)
				virtual void 	OnLowMemory (void)
				virtual void 	OnUserEventReceivedN (RequestId requestId, Tizen::Base::Collection::IList *pArgs)

				# Reimplemented in Tizen::App::ServiceApp, and Tizen::App::UiApp.
				static App * 	GetInstance (void)                               # <static-get-instance>

		 protected:
				App(void);		 

		 private:
				App(const App& rhs);
				App& operator =(const App& rhs);

				class _AppImpl* __pAppImpl;                                     # <pointer-to-impl>

	}; # end of class
}} # end of namespace


{Tizen::App::ServiceApp} {FAServiceApp.h} {FAServiceApp.cpp}

note: no overrides members of App class

namespace Tizen { namespace App
{

class ServiceApp;

typedef ServiceApp* (*ServiceAppInstanceFactory)(void);

class _OSP_EXPORT_ ServiceApp : public Tizen::App::App

{
public:
	'static' ServiceApp* GetInstance(void);
	'static' result Execute(ServiceAppInstanceFactory pServiceAppFactory, const Tizen::Base::Collection::IList* pArguments);

protected:
	ServiceApp(void);

private:
	ServiceApp(const ServiceApp& rhs);
	ServiceApp& operator =(const ServiceApp& rhs);

	class _ServiceAppImpl* __pServiceAppImpl;

}; // ServiceApp

typedef ServiceApp Service;                             # ServiceApp == Service

} } // Tizen::App


{{osp-main}} D:\tizen-src\app-service\src\AppServiceEntry.cpp

/**
 * This file contains the Tizen C++ application entry point.
 */
OspMain() {

/*
 * When you start an application, the Process Manager loads the necessary libraries and application
 * executable binary into the memory. An instance of the application is created and executed in the
 * application entry point, the OspMain() method.
 */

   result r = Tizen::App::Service::Execute(AppService::CreateInstance, &args);

	this really lead to: <ServiceApp>
   result r = Tizen::App::ServiceApp::Execute(AppService::CreateInstance, &args);
}


{{main-entry}} D:\tizen-src\appfw\src\app\FApp_AppEntry.cpp

/**
* The entry function of SLP application called by the operating system.
*/
int _OSP_EXPORT_
main(int argc, char* pArgv[])
{
	int r = OspMain(argc, pArgv);
}


{life-cycle-in-core-layer}

external           app framework             app
                   - app launch              - main
							                        app_efl_main(); # register callbacks 
															- app_service_cb
															  handle 'relaunch' mesg and reset app state
															- app_pause_cb
															  when app become 'invisible'
															- app_resume_cb
															  when app become 'visible'

						 - main loop
app util lib                                 - corresponding callbacks
window mgr
sensor framework
system mgr

						 - terminate app
						 - app termination


{app-life-cycle-in-app-layer}

Tizen Native App Programming > Basics of Native App Programming > Application Model > Application Life-cycle

When lauched, AppFramework calls:

OnAppInitializing()
 - where the frame is added since every UI app has a frame. must.
OnAppInitialized ()
OnAppInitializing ()
OnAppTerminating ()
OnAppWillTerminate ()


{key-handling}

(from Tizen_Key_Input_Process.pptx)

two types of event: KeyPress and KeyRelease

For TV keys, it is HW keys and sent to 'keyrouter' which is a moudle in window mgr.

Keyrouter has routing table and can select registered app for a key.
- app make a key request that has property.
- keyrouter build <delivery-policy> using info in the property.
- send a key to selected app(window)
- keyrouter has <four> priority(mode). exclusive, top_position, etc.

utilx_grab_key(d, 0x1000a, KEY_HOME, EXCLUSIVE) = OK

This means that app can set key-policy per a key.

keyrouter:
exclusive set: (app#:key#), (app#:key#), (app#:key#) 
# there should not be two app for the same key as grab_key call will fail for the same key.

top_pos set: (app#:key#), (app#:key#), (app#:key#)   
# can have the same key. like a linked list and seems if app get a key, it consumed?

shared set: (app#:key#), (app#:key#), (app#:key#) 
# like a linked list but not consumed?


{exception-handling}

Because Tizen does not use the standard C++ exception mechanism in the platform layer, For more
information, see Exception Handling. 


==============================================================================
*kt_sruk_prjs_tizen_005* TizenTV

{core-api}

Tizen core api (mobile profile) and c based.

# (RE from HQ) The below link is only available in HQ. 
# http://10.89.55.57/capi/latest 
# For others, should use updates from following link in kms.
http://kms.sec.samsung.net/club/club.menu.bbs.read.screen?p_club_id=4968&p_menu_id=13&message_id=1020621


==============================================================================
*kt_sruk_prjs_tizen_006* Tizen SDK

https://developer.tizen.org/help/topic/org.tizen.gettingstarted/html/dev_env/tizen_sdk_ide.htm

The Tizen SDK is a software development kit that includes the Tizen platform binaries, documents,
and sample codes.  

s-core(3rd party) is developing tizen sdk.

KT: expects Tizen TV SDK has customized sdk which includes headers, docs, binaries and libraries
that are specific to Tizen TV.


{install-tizen-org-version}

https://developer.tizen.org/downloads/tizen-sdk#installmanager


{native-sample-app}

Headers and source:
d:\tizen-sdk\platforms\tizen2.2\rootstraps\tizen-device-2.2.native\usr\include\osp
d:\tizen-sdk\platforms\tizen2.2\samples\native\cpp\Sample\Tizen Native\

Tizen Native App Programming > Native Sample Applications

https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.native.appprogramming%2Fhtml%2Fsample_descriptions%2Fsample_files_cpp.htm

DrawingBoard 	
Demonstrates how you can draw 2D graphics and text on the canvas using: 

MediaApp 	
Demonstrates how you can implement various media-related functionalities related to audio or video recording, playback, encoding or decoding, and image capturing and processing using: 


{tv-platform-sdk-emulator}
http://kms.sec.samsung.net/club/club.menu.bbs.list.screen?p_club_id=6340&p_menu_id=27


==============================================================================
*kt_sruk_prjs_tizen_007* Tizen build process

{git}
A given project in the Git repository has two possible branches: master branch and upstream branch.

{Gerrit}
A web-based code review system

{obs}
The Open Build Service (OBS) 

{gbs}

https://source.tizen.org/documentation/articles/gbs-build

GBS (git-build-system) is a developer command line tool that supports Tizen package development.
To make RPM packages.

{{what-the-repo-is}}

The <Tizen_Project>/pre-built directory contains a group of prebuilt projects that provide base and
toolchain binary RPM packages for GBS build.

Besides toolchain in Tizen packages, there are several cycles that can't be dectected by GBS without
binary RPM. Therefore, a remote repo needs to be added in .gbs.conf.

{{config}}
has prio as:
$PWD/.gbs.conf > ~/.gbs.conf > /etc/gbs.conf

can use command line as:
-C|--config

note: from SS doc, gbs will mount your git tree to the build root, so please be very careful when
you remove your build root, you need to make sure you already umount source tree manually before you
remove it.

{{options}}

--include-all

Build with the --include-all option builds all the files:
Build without the --include-all option
Builds committed files only. All the modified files, which are not committed nor added, will NOT be
built:

https://source.tizen.org/documentation/reference/git-build-system

{mic}
meego image creator

{BOSS}
Release image creation.


{build-flow-overview} from Training - Workflow 130104.pptx

local git        gerrit        git           obs product project         release
    --------------->
	      push

			         review

						   ------------>
							  accept and merge

	--------------------------------------------------->
	 gbs-submit
	                                                   ------------------------>
																		 image release
																		                         -----> QA

Even if a submitted change is accepted on Gerrit and then merged into the central code repository,
the change is NOT yet integrated into the build system. An additional step is required to trigger
the actual integration.

{{labeling-rule}}
To submit changes to build system, it needs to be triggered by a tag, the tag needs to follow the
format as: submit/${version}/${date}.${time} (generated by gbs submit command)


{build-for-dev}

clone -> make local change -> build <rpm> using gbs -> 

o install rpm to the device

OR

o create images using mic and flash it to the device


==============================================================================
*kt_sruk_prjs_tizen_008* Tizen dev env

{target-ip}

106.1.11.219 - TV  - Keitee Park

{startup-app}


/etc/init.d/quickpanel
	/usr/apps/org.tizen.quickpanel/bin/quickpanel &
	[note] seems not used


/usr/lib/systemd/user/x.service

./core-efl.target.wants/quickpanel.service:5:After=xorg.target starter.service e17.service
./core-efl.target.wants/quickpanel.service:8:ExecStart=/usr/apps/org.tizen.quickpanel/bin/quickpanel
 [note] if move all org.xx files to somewhere, no default apps when boots.

-sh-4.1# ls org*
org.tizen.allshare.path     

org.tizen.ontv.service
org.tizen.social.path
org.tizen.allshare.service  
org.tizen.apps.path         
org.tizen.movie.path        
org.tizen.tv-viewer.path

Social
Apps
OnTV
Movies& TV shows
Video, Photo & Music


{setup-a-dev-env-for-general}

https://source.tizen.org/documentation/developer-guide/environment-setup

# Tutorial_TIZEN_VD_BP_Developer_0_1_1.docx
http://kms.sec.samsung.net/club/club.menu.bbs.read.screen?p_club_id=4968&p_menu_id=13&message_id=872820 

$ ssh -p 29418 168.219.241.167

  ****    Welcome to Gerrit Code Review    ****

  Hi Kit Park, you have successfully connected over SSH.

  Unfortunately, interactive shells are disabled.
  To clone a hosted Git repository, use:

  git clone ssh://keitee.park@168.219.241.167:29418/REPOSITORY_NAME.git

Connection to 168.219.241.167 closed.

note: no different when use userid in ssh line

git clone ssh://168.219.241.167:29418/All-Projects.git

{sample-app}

git clone ssh://keitee.park@168.219.241.167:29418/profile/tv/apps/home/epg
git clone ssh://keitee.park@168.219.241.167:29418/profile/tv/apps/homepanel/apps


{tv-service}

git clone ssh://keitee.park@168.219.241.167:29418/profile/tv/platform/framework/tv-service/tvs-api

{magnum}

git clone keitee.park@magnum:/dsk1/git/tizen-mheg.git mag_prev
git clone keitee.park@magnum:/dsk1/git/tizen-mheg-bare.git mag_prev


{gbs-install}

Follow inst from the below but not from the "server setting guide from SS".

https://source.tizen.org/documentation/developer-guide/installing-development-tools

2.1 Installing Development Tools in Ubuntu

as of 05/11/2013

Get:1 http://download.tizen.org/tools/latest-release/Ubuntu_12.04/  gbs 0.19-1 [32.4 kB]
Get:2 http://download.tizen.org/tools/latest-release/Ubuntu_12.04/  gbs-api 0.19-1 [25.6 kB]
Get:3 http://download.tizen.org/tools/latest-release/Ubuntu_12.04/  gbs-export 0.19-1 [10.5 kB]
Get:4 http://download.tizen.org/tools/latest-release/Ubuntu_12.04/  gbs-remotebuild 0.19-1 [9,972 B]


{gbs.conf}

# 168 is OBS server

[general]
profile = profile.tizentv

[profile.tizentv]
obs = obs.tizentv
repos = repo.tizentv_local, repo.tztv, repo.tizen

[obs.tizentv]
url = https://168.219.241.168/api
user = obs_viewer
passwd = obs_viewer

#Repo section example
[repo.tizentv_local]
url=/home/jongwon_kwak/GBS-ROOT/local/repos/tztv2.2

[repo.tztv]
url=http://168.219.241.168/snapshots/tztv-2.2/profile/latest/

[repo.tizen]
url=http://168.219.241.168/tizen-rsa/2.2.0_RC11_R1/tizen-2.2_20130717.6/


{image-flash}

{{get-board-ready}}


boot-up
=====================================
onboot Fox-P maintv 1.5GB S (Feb 15 2013 - 16:49:12)
version     : 0080
ETC         : reduced SBB boot-up time
=====================================
Fox-MP Revision ID : 1
Fox-AP ES1
Generic Timer Clock = 24.0MHz
Fox-P Board is [1] = 0:PDP, 1:LED
Fox-P Board is [0] = 0:NON LD, 1:LD
Start loading u-boot (to 0x47c00000)[mmc : 1]
Jump to...

-----------------------------------------------
U-Boot version : 0014 (Jan 31 2013 - 12:39:13)
-----------------------------------------------
Fox-AP(SDP1202) Operation clock
arm clock :  1350.000 Mhz
bus clock :  1200.000 Mhz
peri clock : 200.000 Mhz

DRAM:  1.1 GiB
MMC:   SDP_MMC: 0

[SDP_MMC] initialization!!!
[SDP_MMC] eMMC Card is DDR Mode.
ext_csd_sectors : 0x748000
moviNand size : 3909091328[Byte] / 7634944[LBA]
*** Warning - bad CRC or MMC, using default environment

In:    serial
Out:   serial
Err:   serial
Hit any key to stop autoboot:  0
Fox-AP # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Unknown command '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' - try 'help'
Fox-AP #

NOTE: If a target reboots soon after a prompt, means that watchdog is enabled. Should disable it to
get a prompt working. 


{{disable-the-watchdog}}

Refer to : http://106.1.8.7/wiki/index.php/Guggenheim_Board_Help

Use RC, mute, 2, 5, 8, exit

{{enable-serial-out}}

Use RC, mute, 3, 6, 9, exit

note: what is the audio-serial-cable?

http://168.219.241.167/confluence/display/TIPS/Updating+Tizen+to+TV+Set

{{get-debug-console}}

To eable serial input:
Echo is 20102011 

To access optioN MENU:
i enter s enter


03: run "mmc update"
04: reboot a board.


(Once done mmc update - update onboot and uboot)

boot-up
=====================================
onboot Fox-P maintv 1.5GB S (Aug  8 2013 - 17:43:13)
version     : 0083
ETC         : tag size changed
=====================================
Fox-MP Revision ID : 1
Fox-AP ES1
Generic Timer Clock = 24.0MHz
Fox-P Board is [1] = 0:PDP, 1:LED
Fox-P Board is [0] = 0:NON LD, 1:LD
Start loading u-boot (to 0x47c00000)[mmc : 1]
Jump to...


U-Boot 2013.04-rc1-g377a301-dirty (Jun 20 2013 - 17:31:16)

Fox-AP(SDP1202) Operation clock
arm clock :  1350.000 Mhz
bus clock :  1200.000 Mhz
peri clock : 200.000 Mhz

DRAM:  128 MiB
WARNING: Caches not enabled
MMC:   SDP_MMC: 0

[SDP_MMC] initialization!!!
[SDP_MMC] ERROR : End-bit error (read)/write no CRC (EBE)
[SDP_MMC] ERROR : Data CRC error (DCRC)
[SDP_MMC] eMMC Card is DDR Mode.
*** Warning - bad CRC, using default environment

In:    serial
Out:   serial
Err:   serial
Hit any key to stop autoboot:  0
Fox-AP #


{{update-tizen}}

01: copy files into usb stick under /updateFP. may only need onboot and uboot?
02: power on a board while holding "shift and ~" keys and get uboot prompt.

Get image tar:
http://168.219.241.168/releases/tztv-2.2/tztv-2.2_20130814/

the latest
http://168.219.241.168/releases/tztv-2.2/tztv-2.2_20130828.5/integrated/

copy files to usb: /updateFP

# once used tizen image, then use
update system

platform.img      # rootfs
data.img          # /opt, include apps.
ums.img           # /opt/usr


# update tizen. run "update tizen" in uboot shell. will flash *.img.
update tizen

# only for kernel
update uimage


{tizen-nfs}

-sh-4.1# cat /usr/lib/systemd/system/network.service
[Unit]
Description=106.1.11.219
Before=sshd.service
[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/sbin/ifconfig eth0 hw ether 00:19:FB:1A:2C:2F
ExecStart=/sbin/ifconfig eth0 106.1.11.219
ExecStart=/sbin/ifconfig eth0 netmask 255.255.252.0
ExecStart=/sbin/ifconfig eth0 broadcast 106.1.11.255
ExecStart=/sbin/ifconfig eth0 gateway 255.255.252.0
ExecStart=/sbin/ifconfig eth0 up
[install]
WantedBy=multi-user.target

/sbin/ifconfig eth0 hw ether 00:19:FB:1A:2C:2F 
/sbin/ifconfig eth0 106.1.11.219
/sbin/ifconfig eth0 netmask 255.255.252.0
/sbin/ifconfig eth0 broadcast 106.1.11.255
/sbin/ifconfig eth0 gateway 255.255.252.0
/sbin/ifconfig eth0 up

use VM.

mount -t nfs -o nolock 106.1.9.41:/home/kit /mnt/nfs
cp /mnt/nfs/build/org.tizen.mhegproto-0.1/mhegproto /opt/apps/org.tizen.mhegproto/bin/
/opt/apps/org.tizen.mhegproto/bin/mhegproto &

{tizen-core}

1. mkdir /tmp/core and make a sym link /core to it
2. copy core to /mnt/nfs and chmod 777
3. copy rmps
org.tizen.mhegproto-0.1-1.armv7l.rpm
org.tizen.mhegproto-debuginfo-0.1-1.armv7l.rpm
org.tizen.mhegproto-debugsource-0.1-1.armv7l.rpm

4. extract rpms
rpm2cpio /path/to/file.rpm | cpio -i --make-directorie

5. run gdb

core core
file /home/kit/rpmcore/usr/lib/debug/opt/apps/org.tizen.mhegproto/bin/mhegproto.debug


{install-rpm}

<using-sdb>

<using-usb>
-sh-4.1# mkdir /mnt/usb
mount -t vfat /dev/sda1 /mnt/usb
security-server &

note: pkccmd command not found?

/usr/bin/pkgcmd --help

pkgcmd -i -t rpm -p /mnt/nfs/com.samsung.calculator_0.1.2-95_armel.rpm
pkgcmd -i -t rpm -p /mnt/usb/org.tizen.mheg-0.1-1.armv7l.rpm
pkgcmd -i -t rpm -p /mnt/nfs/
pkgcmd -i -t rpm -p /mnt/nfs/rpms/org.tizen.mheg-0.1-1.armv7l.rpm
pkgcmd -i -t rpm -p /mnt/nfs/rpms/org.tizen.mhegproto-0.1-1.armv7l.rpm

note that pkgcmd tool keeps changing since --force is not supported in the 0829 release but do in
the 0917 release.

# press key on RC and see the success message
#
/opt/apps/org.tizen.epg/bin/epg &
/opt/apps/org.tizen.mheg/bin/mheg &
/opt/apps/org.tizen.mhegproto/bin/mhegproto &

{{run-rpm}}

To check where the package is installed:

target#  rpm -ql org.tizen.apps

To run a package on a target:

/opt/apps/org.tizen.apps/bin/apps &
/opt/apps/org.tizen.mheg/bin/mheg &
/opt/apps/org.tizen.{package}/bin/apps &

note: sometimes do not work  but sometimes do. need more tries. when works, should run while default
apps is running back ground. when fails, seen messages showing main in and out. seems to fail to run
app_elf_main.

{{run-log}}

note: there is no leave main but when failed there is a leve main log.

-sh-4.1# /opt/apps/org.tizen.mhegproto/bin/mhegproto &
-sh-4.1# enter main
--------------------------enter _create
--------------------------enter sample_thread
--------------------------*** enter loop...
--------------------------leave _create
appcore: --- _call_predef_action: start
appcore: --- _call_predef_action: send msg
appcore: --- sysnoti_send: start
appcore: --- sysnoti_send: read
appcore: --- sysnoti_send: end
appcore: --- _call_predef_action: end
--------------------------*** i'm alive at 1000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 2000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 3000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 4000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 5000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 6000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 7000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 8000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 9000 ms
--------------------------*** enter loop...
--------------------------*** i'm alive at 10000 ms
--------------------------leave sample_thread
-sh-4.1# 

Can see the place where rpm is installed and to run:

-sh-4.1# ls /opt/apps/org.tizen.
org.tizen.allshare/            org.tizen.mheg/
org.tizen.apps/                org.tizen.mhegproto/
org.tizen.bluetooth-share-ui/  org.tizen.mmbrowser-tv/
org.tizen.browser/             org.tizen.movie/
org.tizen.bt-syspopup/         org.tizen.music-player/
org.tizen.contacts/            org.tizen.music-player-tv/
org.tizen.contacts-viewer/     org.tizen.myfile/
org.tizen.data-provider-slave/ org.tizen.ontv/
org.tizen.download-manager/    org.tizen.photo-player-tv/
org.tizen.elm-demo-tizen-tv/   org.tizen.smartsearch/
org.tizen.epg/                 org.tizen.social/
org.tizen.gallery/             org.tizen.sound-player/
org.tizen.indicator/           org.tizen.taskmgr/
org.tizen.memo/                org.tizen.tv-viewer/
org.tizen.menu-screen/         org.tizen.video-player-tv/
org.tizen.message/


{boot-files}

/usr/lib/systemd/user/core-efl.target.wants

boot-animation.service  org.tizen.allshare.path  org.tizen.tv-viewer.path
cbhm.service            org.tizen.apps.path      quickpanel.service
e17.service             org.tizen.movie.path     scim.service
e17_early.service       org.tizen.ontv.path      xmodmap.service
indicator.service       org.tizen.social.path    xrdb.service

(quickpanel.service)
ExecStart=/usr/apps/org.tizen.quickpanel/bin/quickpanel


-sh-4.1# ls /usr/apps/
D7eOJquGtL                     org.tizen.memo
livebox.web-provider           org.tizen.menu-screen
org.tizen.browser              org.tizen.message
org.tizen.calculator           org.tizen.music-player
org.tizen.calendar             org.tizen.myfile
org.tizen.calendar-viewer      org.tizen.net-popup
org.tizen.camera-app           org.tizen.policy
org.tizen.clock                org.tizen.poweroff-syspopup
org.tizen.contacts             org.tizen.pwlock
org.tizen.contacts-viewer      org.tizen.quickpanel
org.tizen.crash-popup          org.tizen.ring
org.tizen.data-provider-slave  org.tizen.setting
org.tizen.download-manager     org.tizen.smartsearch
org.tizen.email                org.tizen.sound-player
org.tizen.gallery              org.tizen.taskmgr
org.tizen.image-viewer         org.tizen.usb-syspopup
org.tizen.indicator            org.tizen.video-player
org.tizen.lockscreen           org.tizen.wifi-direct-popup
org.tizen.lowbat-syspopup      org.tizen.wifi-direct-ugapp
org.tizen.lowmem-syspopup


==============================================================================
*kt_sruk_prjs_tizen_009* Tizen dev rpm build

Here {project_name} is mheg. Ref: Tizen TV dev guide v0.95 

http://fedoraproject.org/wiki/How_to_create_an_RPM_package

{spec-file}

./{project_name}/packaging/org.tizen.mheg.spec

Name:       org.tizen.mheg
%define _packagedir /opt/apps/%{name}
%define _bindir %{_packagedir}/bin

%build
cmake . \
	-DCMAKE_INSTALL_PREFIX=%{_packagedir} \
	-DPACKAGE_NAME=%{name} \


{Q} what the these?

org.tizen.mheg.path
org.tizen.mheg.service

{cmake-file}

Variables used in cmakefile comes from spec file via %build section.

./{project_name}/CMakeLists.txt

{{to-change}}

PROJECT(mheg C)

ADD_EXECUTABLE(${PROJECT_NAME}
	src/main.c
#	src/viewmgr.c
#	src/view_main.c
#	src/view_downloaded.c
)

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${BINDIR})


{build-cmd}

Seen following errors:

info: start building packages from: /home/kit/tizen/epg (git)
error: No source package found at /home/kit/tizen/epg
error: Traceback (most recent call last):

This happens when there is no .git in a directory.

Shall be:
gbs build -A {architecture} --include-all --clean

# gbs -v build -A armv7l -clean

{{for-apps-when-okay-to-build}}

info: finished building org.tizen.apps
info: updating local repo
info: generated RPM packages can be found from local repo:
     /home/kit/GBS-ROOT/local/repos/tizentv/armv7l/RPMS ~
info: generated source RPM packages can be found from local repo:
     /home/kit/GBS-ROOT/local/repos/tizentv/armv7l/SRPMS
info: build roots located in:
     /home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.*
info: Done

$ ls /home/kit/GBS-ROOT/local/repos/tizentv/armv7l/RPMS
org.tizen.apps-0.1-1.armv7l.rpm
org.tizen.apps-debuginfo-0.1-1.armv7l.rpm
org.tizen.apps-debugsource-0.1-1.armv7l.rpm

org.tizen.epg-0.1-1.armv7l.rpm
org.tizen.epg-debuginfo-0.1-1.armv7l.rpm
org.tizen.epg-debugsource-0.1-1.armv7l.rpm

org.tizen.mheg-0.1-1.armv7l.rpm
org.tizen.mheg-debuginfo-0.1-1.armv7l.rpm
org.tizen.mheg-debugsource-0.1-1.armv7l.rpm

{build-log}

success or fail

/home/kit/GBS-ROOT/local/repos/tizentv/armv7l/logs/success/org.tizen.mhegproto-0.1-1

{build-tools}

/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/usr/bin/gcc
gcc (GCC) 4.5.3

<includes>
/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/usr/lib/gcc/armv7l-tizen-linux-gnueabi/4.5.3/include/

{build-dirs}

/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/home/abuild/rpmbuild/BUILD/org.tizen.mhegproto-0.1/CMakeFiles/mhegproto.dir

# for bin and res

this is excutable
/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/home/abuild/rpmbuild/BUILD/org.tizen.mheg-0.1/mheg

# to check flags and includes
/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/home/abuild/rpmbuild/BUILD
./mhv/CMakeFiles/mhv.dir/flags.make:8:C_DEFINES = -DLOG_TAG=\"mhegproto\" -DPACKAGE=\"org.tizen.mhegproto\" -DIMAGEDIR=\"/opt/apps/org.tizen.mhegproto/res/images\" -DEDJEDIR=\"/opt/apps/org.tizen.mhegproto/res/edje\" -DEDJEFILE=\"/opt/apps/org.tizen.mhegproto/res/edje/mhegproto.edj\" -DTHEMEFILE=\"/opt/apps/org.tizen.mhegproto/res/edje/mhegproto-theme.edj\" -DLOCALEDIR=\"/opt/apps/org.tizen.mhegproto/res/locale\" -D_LINUX -DFS_SUPPORTED

./mhv/CMakeFiles/mhv.dir/flags.make:12:CXX_DEFINES = -DLOG_TAG=\"mhegproto\" -DPACKAGE=\"org.tizen.mhegproto\" -DIMAGEDIR=\"/opt/apps/org.tizen.mhegproto/res/images\" -DEDJEDIR=\"/opt/apps/org.tizen.mhegproto/res/edje\" -DEDJEFILE=\"/opt/apps/org.tizen.mhegproto/res/edje/mhegproto.edj\" -DTHEMEFILE=\"/opt/apps/org.tizen.mhegproto/res/edje/mhegproto-theme.edj\" -DLOCALEDIR=\"/opt/apps/org.tizen.mhegproto/res/locale\" -D_LINUX -DFS_SUPPORTED

# 
/home/kit/GBS-ROOT/local/BUILD-ROOTS/scratch.armv7l.0/home/abuild/rpmbuild/BUILDROOT/org.tizen.mhegproto-0.1/opt/apps/

# link options
./mhegproto.dir/link.txt:1:/usr/bin/c++   -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions
-fstack-protector --param=ssp-buffer-size=4 -Wformat -Wformat-security  -fmessage-length=0
-march=armv7-a -mtune=cortex-a8 -mlittle-endian  -mfpu=vfpv3 -mfloat-abi=softfp -D__SOFTFP__ -mthumb
-Wa,-mimplicit-it=thumb     CMakeFiles/mhegproto.dir/main/main.c.o
CMakeFiles/mhegproto.dir/main/viewmgr.c.o CMakeFiles/mhegproto.dir/main/view_main.c.o  -o mhegproto
-rdynamic mh5eng/libmh5eng.a -pthread -lcapi-appfw-application -lelementary -lm -leet -lecore
-lecore_evas -lecore_file -lecore_input -ledje -lefreet -lefreet_mime -lefreet_trash -ledbus
-ldbus-1 -lethumb_client -lecore_imf -lecore_con -lecore_x -levas -leina -lrt -lutilX -lX11 -laul
-lbundle -lxdgmime -lail -lvconf -lSLP-db-util -lsqlite3 -ldlog -lpthread -lglib-2.0 -licui18n
-licuuc -licudata

{build-errors}

when miss out followings in a spec file:
%{_imgdir}/*.png
%{_edjedir}/*

Got errors:

[  105s] Checking for unpackaged file(s): /usr/lib/rpm/check-files 
/home/abuild/rpmbuild/BUILDROOT/org.tizen.mhegproto-0.1-1.arm
[  105s] error: Installed (but unpackaged) file(s) found:
[  105s]    /opt/apps/org.tizen.mhegproto/res/edje/mhegproto-theme.edj
[  105s]    /opt/apps/org.tizen.mhegproto/res/edje/mhegproto.edj
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps_selected.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps_wallpaper.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/dummy.png
[  105s] 
[  105s] 
[  105s] RPM build errors:
[  105s]     Installed (but unpackaged) file(s) found:
[  105s]    /opt/apps/org.tizen.mhegproto/res/edje/mhegproto-theme.edj
[  105s]    /opt/apps/org.tizen.mhegproto/res/edje/mhegproto.edj
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps_selected.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/apps_wallpaper.png
[  105s]    /opt/apps/org.tizen.mhegproto/res/images/dummy.png
warning: build failed, Leaving the logs in 
/home/kit/GBS-ROOT/local/repos/tizentv/armv7l/logs/fail/org.tizen.mhegproto-0.1-1/log
error: *** Error Summary ***
 === the following packages failed to build due to rpmbuild issue (1) ===



==============================================================================
*kt_sruk_prjs_tizen_010* Tizen dev git create

Have to requst PL in HQ.

{kms}
http://kms.sec.samsung.net/club/club.menu.bbs.read.screen?page_num=4&p_club_id=4968&p_menu_id=1&p_group_id=0&search_field=&search_query=&search_category=&message_id=962737

{wiki}
http://168.219.241.167/confluence/display/scm/Processes

profile/tv/platform/framework/tv-service/data-service/mheg


==============================================================================
*kt_sruk_prjs_tizen_019* Tizen EFL

# EFL docs
http://docs.enlightenment.org/auto/elementary/index.html


{nviframe} {multiple-scene} {container}

naviframe (build-05-TIZEN_application__programming_guide.docx)
http://docs.enlightenment.org/auto/elementary/group__Naviframe.html#_details

Naviframe stands for navigation frame. It is one of the containers in elementary (EFL) to manage
multiple scenes/views easily.  

The views are maintained as an item and organized in a stack, so that new view items get pushed on
top of the old, and only the topmost view is displayed at one time. 

View manager will provide functionalities for pushing a view, popping a view, terminating a view
etc.

note: VM looks like a util set which is not part of EFL or Tizen.

viewmgr
{
	 T* vlist;	view list 
	 	{
			 view_class* vclass;		register callbacks
			 	{
					 int show_bg;		show or hide background. to signal to the view to show the
					 background of hide. call elm signal and call show callback of view
				}
			 T* base;					base object 
			 T* it;						naviframe
		}
	 T* navi;	naviframe added to window
	 T* bg;		background added to window
	 T* win;		main window
}

viewmgr_init: return vmgr and add a layout to the window
viewmgr_push: will push a view into a naviframe. call hide function of the previous view.


{elementary} {widgets}

note: seems not necessary for mheg.

This is UI control library providing 62 controls; seems widget such as button, check, icon, box,
table, layout, list, label, entry, map, and etc. For more specific usage and guide, please visit
official EFL web site. http://docs.enlightenment.org/stable/elementary

{{themeable}}

Look and feel can be changed in run-time since logic and style are implemented separately. logic of
each UI control is implemented in elementary source code which is written in C but, the style is
written in different language called -EDC (Edje Data Collection).- And, we call a set of such styles
which is written in EDC theme.

http://docs.enlightenment.org/auto/edje/edcref.html)

{evas}

http://docs.enlightenment.org/auto/evas/Evas_8h.html


==============================================================================
*kt_sruk_prjs_tizen_020* Tizen contacts

#
MMPlayer, Yun-Su Kim, ystoto.kim@samsung.com, sunim, -> Young-Hyun Kim, yh_46.kim@samsung.com, checkim
AVOC, Jongho Yang, jongho.yang@samsung.com, checkim,
Network, SungWon Kim, justin11.kim@samsung.com, checkim,
BP App, KeeHyun Kim, keehyun.kim@samsung.com, checkim
DASH, Mengyun Jiang, myun.jiang@samsung.com
Driver, OhIn Kwon, rany.kwon@samsung.com, checkim


# tizen SPS
http://platform.sec.samsung.net/tizentv<

# w/r
# mentioned SRUK MHEG here
BP MW, Kyungchul Nam, kch.nahm@samsung.com


# tizen tv emulator
Yeonguk Yu, yeonguk.yu@samsung.com,  


# ============================================================================
#{

==============================================================================
*kt_sruk_process_001* 	PA(proposal approval)

{plm}

http://splm.sec.samsung.net/portal/com/shared/main.do

From PLM, create PA and fill forms using PDP and 

SRUK-SEP-13012_SW_Project_Proposal(PDP).doc
SERI-SEP-13012-RFP_duffman_request_for_proposal.docx
SRUK-SEP-13012-CHK01_SW_Kickoff_Checklist.xls

Note:

o Get 'Approval_Path_SRUK.xlsx' from MOSS (click oversea labs). Click shared document on left. 
http://vdsw.sec.samsung.net/OverseaLabs/Shared%20Documents/Forms/AllItems.aspx?RootFolder=%2FOverseaLabs%2FShared%20Documents%2FApproval%20Path

o Refer 'PDP approval path' sheet in 'Approval_Path_SRUK.xlsx' and find approval path. Approval and HQ
Approval are 'approval' and agreements and HQ agreements are 'consent' and the rest is notification.

To find Lab manager, see 'Role and Performer' sheet. 

HQ S/W Platform Lab Manager
Lab1: Jungsuk Kang(jungsuk.kang) /

Head of SW Platform Group
Kwangkee Lee (kklee)


PA

0 Draft Kyoungtaek Park Senior Software Engineer Sep 10, 2013 14:58 SRUK-Advanced Development 
1 Consent Kee-Hyun Kim S5/Senior Engineer Sep 16, 2013 03:53 S/W Platform Lab.1 
2 Consent ??? S5(??)/?? Sep 16, 2013 03:54 S/W Platform 1Lab(VD) 
3 Consent Charles Lim S5/Senior Engineer Sep 16, 2013 09:37 Samsung R&D Institute U.K. 
4 Consent Juhee Song S3/Assistant Engineer Sep 16, 2013 10:23 Technology Planning Part 
[Delegate Approval] Delegate : Young Cho S5/Senior Engineer/Technology Planning Part ? Juhee Song S3/Assistant Engineer/Technology Planning Part
SRUK ?????? MHEG Tizen platform ???? ?? ??????. 
5 Consent JUNGSUK KANG Vice President/Lab Leader Sep 16, 2013 10:33 S/W Platform Lab.1 
6 Approved Jonathan Naughton-Green Director Sep 16, 2013 14:09 SRUK-Audio Visual (AV) 
7 Approved Yong-Suk Moon Vice President Sep 16, 2013 16:55 Samsung R&D Institute U.K. 
8 Approved Kwangkee Lee Vice President/Group Leader Sep 16, 2013 21:45 S/W Platform Group 
9 Notification Jaewook Ahn S6/Principal Engineer Sep 16, 2013 21:45 Technology Planning Part 
10 Notification HYEONG KOOK KIM S5/Senior Engineer Sep 16, 2013 21:45 R&D Management Part 
11 Notification YoungKi Byun Vice President/Team Leader Sep 16, 2013 21:45 S/W R&D Team 
12 Notification Andrew Sheppard Principal Engineer Sep 16, 2013 21:45 SRUK-Advanced Development 
13 Notification Christopher Alder Principal Engineer Sep 16, 2013 21:45 SRUK-Research 

EA

0 Draft Kyoungtaek Park Senior Software Engineer Oct 15, 2013 10:38 SRUK-Advanced Development 
Please approve this EA which is a prototype project to port MHEG on Tizen. 
1 Consent haeeun lee E3/Assistant Engineer Oct 15, 2013 23:29 R&D Management Part 
2 Consent Charles Lim S5/Senior Engineer Oct 17, 2013 08:40 Samsung R&D Institute U.K. 
3 Consent Kee-Hyun Kim S5/Senior Engineer Oct 24, 2013 08:51 S/W Platform Group 
4 Consent ??? S5(??)/?? Undecided/Pending S/W Platform??(VD) 
5 Approve ??? S5(??)/?? Pending S/W Platform??(VD) 
6 Consent Young Cho S5/Senior Engineer Undecided/Pending Technology Planning Part 
7 Consent JUNGSUK KANG Vice President/Group Leader Undecided/Pending S/W Platform Group 
8 Approve Jonathan Naughton-Green Director Pending SRUK-Audio Visual (AV) 
9 Approve Yong-Suk Moon Vice President Pending Samsung R&D Institute U.K. 
10 Approve Kwangkee Lee Vice President/Group Leader Pending Service Platform Group 
11 Notification Jaewook Ahn S6/Principal Engineer Not Delivered Technology Planning Part 
12 Notification HYEONG KOOK KIM S5/Senior Engineer Not Delivered R&D Management Part 
13 Notification Dorota Niec Junior Software Engineering Specialist Not Delivered SRPOL-Software Process Deployment & Improvement (SWS) 
14 Notification Andrew Sheppard Principal Engineer Not Delivered SRUK-Advanced Development 
15 Notification Christopher Alder Principal Engineer Not Delivered SRUK-Research 

o From SRUK-SEP-13012-CHK01_SW_Kickoff_Checklist.xls, check
2-1-1	The project to be approved by The head of R&D office at milestone 				Not required

Add approver depending on this field.

UTR (from PLM not a single)

CA (On-Line Approval Meeting from PLM)
Consent cilim
Consent jy2013.jeong, keehyun.kim, sjung.park # HQ agree. HQ PLs
Consent y0709.cho # HQ agree.
jnaught  # Approval
ysmoon   # Approval

Head of SW Platform Group
Jungsuk Kang(jungsuk.kang)

Noti:
jwahn
hank72.kim
Jaebang.lee
byunyk



==============================================================================
*kt_sruk_process_002* 	EA(proposal approval)

{sdp}
Done in the project protal.

Make all items blue in Project info release. 

M/M : man month calc. 150,000 / 12 months = 12,500 cost per month. 


==============================================================================
*kt_sruk_env_001* 		servers

magnum ss-1


==============================================================================
Copyright: see |ktkb|  vim:tw=100:ts=3:ft=help:norl:
