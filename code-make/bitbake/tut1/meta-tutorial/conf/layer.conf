# https://a4z.bitbucket.io/docs/BitBake/guide.html
#
# LAYERDIR is a variable BitBake passes to the layer it loads.
# We append this path to the BBPATH variable.
# 
# BBFILES tells BitBake where recipes are.
# Currently we append nothing, but we will change this later.
#
# 5.2. Adding a recipe location to the tutorial layer
#
# BitBake needs to know about which recipes a layer provides.
# We edit our meta-tutorial/conf/layer.conf file and tell BitBake to load all
# recipe files by using a common pattern.

BBPATH .= ":${LAYERDIR}"
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb"

# 7.3. Extending the layer configuration
#
# a layer collection name
#
# a search pattern for files to add
#
# a layer priority
#
# append layer name to list of configured layers
BBFILE_COLLECTIONS += "tutorial"
# and use name as suffix for other properties
BBFILE_PATTERN_tutorial = "^${LAYERDIR}/"
BBFILE_PRIORITY_tutorial = "5"

# 7.4. Layer compatibility
# A project like yocto is composed out of very many layers. To ensure used layer
# are compatible with a project version, a project can define a layer series
# name, and layers can specify to be compatible to one, or multiple, layer
# series.
# 
# In practice, for a yocto project, each release defines its release name as its
# layer series core name. Layers that are tested for this release can add the
# compatibility name in its config. If a layer is added that does not have the
# compatibility name specified, bitbake will tell about this by showing a
# warning.
#
# 7.4.1. Layer series core name First we define a 'project core name'. This is
# done by setting the LAYERSERIES_CORENAMES variable.

LAYERSERIES_CORENAMES = "bitbakeguilde"

# 7.4.2. Layer series compatibility
# We also need to specify that the tutorial layer is compatible with the
# bitbakeguilde. This can be done by setting LAYERSERIES_COMPAT_...
# variable in the in the layer.conf files of *each layer.*
#
# The variable ends on the layer name

LAYERVERSION_tutorial = "1"
LAYERSERIES_COMPAT_tutorial = "bitbakeguilde"
