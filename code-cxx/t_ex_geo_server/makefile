# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make clean  - removes all files generated by make.

GTEST_DIR = /home/kyoupark/works/googletest/googletest
GMOCK_DIR = /home/kyoupark/works/googletest/googlemock

TARGET1 = location
TARGET2 = geoserver

# Where to find user code.
USER_DIR = .

CPPFLAGS += -isystem $(GTEST_DIR)/include -isystem $(GMOCK_DIR)/include 

CXXFLAGS += -std=c++11 -g -Wall -Wextra -pthread

TESTS = geoserver_test

GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h

# House-keeping build targets.
all : $(TESTS)

clean :
	rm -f $(TESTS) *.a *.o

# Builds gtest.a and gtest_main.a.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

# Builds gtest.a and gtest_main.a.
GMOCK_SRCS_ = $(GMOCK_DIR)/src/*.cc $(GMOCK_HEADERS)

# For simplicity and to avoid depending on Google Test's
gmock-all.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GMOCK_DIR) $(CXXFLAGS) -c \
            $(GMOCK_DIR)/src/gmock-all.cc

gmock.a : gmock-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

# threadpool_test.cpp
threadpool_test.o : threadpool_test.cpp $(GTEST_HEADERS) threadpool.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c threadpool_test.cpp -o threadpool_test.o

# work_test.cpp
work_test.o : work_test.cpp $(GTEST_HEADERS) work.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c work_test.cpp -o work_test.o

# time.cpp
time.o : time.cpp $(GTEST_HEADERS) time.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c time.cpp -o time.o

# area.cpp
area.o : area.cpp $(GTEST_HEADERS) area.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c area.cpp -o area.o

# location.cpp
$(TARGET1).o : $(TARGET1).cpp $(GTEST_HEADERS) geoserver.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TARGET1).cpp -o $(TARGET1).o

# geoserver.cpp
$(TARGET2).o : $(TARGET2).cpp $(GTEST_HEADERS) geoserver.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TARGET2).cpp -o $(TARGET2).o

# location_test.cpp
$(TARGET1)_test.o : $(TARGET1)_test.cpp $(GTEST_HEADERS) geoserver.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TARGET1)_test.cpp -o $(TARGET1)_test.o

# geoserver_test.cpp
$(TARGET2)_test.o : $(TARGET2)_test.cpp $(GTEST_HEADERS) geoserver.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TARGET2)_test.cpp -o $(TARGET2)_test.o

$(TESTS) : $(TARGET1)_test.o $(TARGET2)_test.o $(TARGET1).o $(TARGET2).o area.o time.o work_test.o threadpool_test.o gtest.a gmock.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
