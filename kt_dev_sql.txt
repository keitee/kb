*kt_dev_07*                                                                tw=100

kt.dev.sql

/^[#=]{
Use #{ for a group and ={ for a item

|kt_dev_sql_001| intro


# ============================================================================
#{
={============================================================================
*kt_dev_sql_001* intro

* SQL, Structured Query Language

* special-purpose programming language
  to manipulate relational database
  contains both a data definition syntax and data manipulation syntax

* Primary key
  if more than on table uses the same primary key, you can then `merge` those
  two tables together.

* Foreign kay
  `links` that table to another table's primary key

* SQL is not case-sensitive


={============================================================================
*kt_dev_sql_001* select

<alias>
p is alias for a table name.

SELECT p.person_first_name FROM person p;

<limit-result-set>
How to limit rows from a query?

Use result set qualifier. ALL implied by default.

SELECT DISTINCT p.person_first_name FROM person p;

shows all the unique first names.

<where-clause>
The body of the WHERE clause will be a set of expression that can evaluate to
TRUE or FALSE. boolean expression. Uses to `filter` down the result set.

Who are all the people in my contact list that have the first name Jon?

SELECT p.person_first_name FROM person p WHERE p.person_first_name = 'Jon';

<simple-operators>
=     equal to
<>    not equal to
>     greater than
>=
<=


=}============================================================================
Copyright: see |ktkb|                              vim:tw=100:ts=3:ft=help:norl:
