*kt_dev_07*                                                                tw=100

kt.dev.sql

/^[#=]{
Use #{ for a group and ={ for a item

|kt_dev_sql_001| intro
|kt_dev_sql_002| select data
|kt_dev_sql_003| shape data


# ============================================================================
#{
={============================================================================
*kt_dev_sql_001* intro

* SQL, Structured Query Language

* special-purpose programming language
  to manipulate relational database
  contains both a data definition syntax and data manipulation syntax

* Primary key
  if more than on table uses the same primary key, you can then `merge` those
  two tables together.

* Foreign kay
  `links` that table to another table's primary key

* SQL is not case-sensitive


={============================================================================
*kt_dev_sql_002* select data

<alias>
p is alias for a table name.

SELECT p.person_first_name FROM person p;

<where-clause>
The body of the WHERE clause will be a set of expression that can evaluate to
TRUE or FALSE. boolean expression. Uses to `filter` down the result set.

Who are all the people in my contact list that have the first name Jon?

SELECT p.person_first_name FROM person p WHERE p.person_first_name = 'Jon';

<simple-operators>
=     equal to
<>    not equal to
>     greater than
>=
<=


<more-operators>

BETWEEN is `inclusive`

Who are all the people in my contact list that I have contacted at least once
but no more than 20 times?

SELECT p.person_first_name FROM person p WHERE p.contacted_number 
BETWEEN 1 AND 20;


LIKE is a special operator just for strings, give LIKE a pattern that will
match strings. % is the wild-card character.

Who are all the people in my contact list that have a first name that begins
with the letter J?

SELECT p.person_first_name FROM person p WHERE p.person_first_name 
LIKE 'J%';


IN requires a list of potential values and if row matches `any` of the
  potential values, then is added to the result set.

Who are all the people in my contact list that are named Jon, Shannon, or
Flitz?

SELECT p.person_first_name FROM person p WHERE p.person_first_name 
IN ('Jon','Shannon','Flitz');


IS is used to check NULL which is special in SQL and don't work with equality(=)
operator.

Who are all the people in my contact list that don't have a last name?

SELECT p.person_first_name FROM person p WHERE p.person_last_name 
IS NULL;

Who are all the people in my contact list that have a last name?

SELECT p.person_first_name FROM person p WHERE p.person_last_name 
IS NOT NULL;


={============================================================================
*kt_dev_sql_003* shape data

ORDER BY

* ascending order is the default.
* after WHERE clause but WHERE isn't required.

Who are all the people in my contact list, ordered by last name?

SELECT p.person_first_name, p.person_last_name FROM person p 
ORDER BY p.person_last_name;

* descending order

SELECT p.person_first_name, p.person_last_name FROM person p 
ORDER BY p.person_last_name DESC;


<set-function>
built-in functions to provide additional functionality and use these function
instead of columns in the slect list.

Q: How many contacts do I have?
Q: Who is the contact that I've interacted with the least?

CONUT
* include NULL when use *
* use alias to change column name as result set

SELECT COUNT(*) FROM person p;

SELECT COUNT(*) as NumberOfPople FROM person p;
SELECT COUNT(p.person_first_name) as NumberOfPople FROM person p;

MAX

SELECT MAX(p.person_contacted_number) FROM person p;

MIN
AVG
SUM


<qualifiers-and-set-function>
How to limit rows from a query?

Use result set qualifier. ALL implied by default.

SELECT DISTINCT p.person_first_name FROM person p;

shows all the unique first names since DISTINCT removes duplicates.

Q: What is the count of unique first names among my contacts?

SELECT COUNT(DISTINCT p.person_first_name) FROM person p;


GROUP BY
* can `subset` of the set which set function can run on and get `subresult`

Q: What is the count of every unique first names among my contacts?

SELECT COUNT(DISTINCT p.person_first_name), p.person_first_name FROM person p
GROUP BY p.person_first_name;

<ex>
> SELECT a.address_street FROM address a;
+----------------+
| address_street |
+----------------+
| Pluralsight    |
| Trainsignal    |
| Pluralsight    |
| Pluralsight    |
+----------------+

> SELECT COUNT(a.address_street) FROM address a;
4

> SELECT COUNT(DISTINCT a.address_street) FROM address a;
2

> SELECT COUNT(DISTINCT a.address_street), a.address_street FROM address a;
| COUNT(DISTINCT a.address_street)  | a.address_street |
|                                 2 | Pluralsight      |

this do not make sense.

> SELECT COUNT(DISTINCT a.address_street), a.address_street FROM address a
GROUP BY a.address_street;
| COUNT(DISTINCT a.address_street)  | a.address_street |
|                                 1 | Pluralsight      |
|                                 1 | Trainsignal      |

> SELECT COUNT(a.address_street), a.address_street FROM address a
GROUP BY a.address_street;
| COUNT(a.address_street)           | a.address_street |
|                                 3 | Pluralsight      |
|                                 1 | Trainsignal      |


=}============================================================================
Copyright: see |ktkb|                              vim:tw=100:ts=3:ft=help:norl:
