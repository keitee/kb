0019fb5b870e

-sh-3.2# lsmod
    Tainted: P  
xtvfs 1698672 1 - Live 0xc03b9000
mhxnvramfs 41792 1 - Live 0xc01c3000
ath6kl_usb 452384 0 - Live 0xc0349000
cfg80211 194512 1 ath6kl_usb, Live 0xc01f6000
rfkill_backport 11936 1 cfg80211, Live 0xc014b000
compat 22624 3 ath6kl_usb,cfg80211,rfkill_backport, Live 0xc01ac000
ehci_hcd 48672 0 - Live 0xc013e000
usbcore 147952 3 ath6kl_usb,ehci_hcd, Live 0xc0323000
extra_drivers 227552 22 - Live 0xc0105000
callisto_periph 41968 11 extra_drivers, Live 0xc00f7000
callisto_tuner 321600 8 - Live 0xc0150000
callisto 6817616 181 extra_drivers,callisto_periph,callisto_tuner, Live 0xc0832000

==
-sh-3.2# more start-mw.sh 
/usr/bin/bootlog_w.sh 15 1024 upload http

ftpsky "ls *_0019fb5b870e_*" | grep 'Mar 27'

==
ORG way
==
(etc/start-mw.sh)
/usr/bin/bootlog.sh 15 1024 upload http

	[ -n "$upload" ] && /usr/bin/bootlog-upload.sh "$loguploadmethod"

	# bootlog-upload.sh
	#
	
	# if eth0 is up then skip_dhcp=true
	# logdir=/tmp/dummydisk/BLOGDIR/FSN_DATA/BOOTLOG
	logdir="${BLOG_DATAPATH}"/BOOTLOG
			
		# exit 1 when ftp or httpsend fails
		# output from 'upload-1.sh' goes into /tmp/UPLOAD.LOG
		if /usr/bin/bootlog-upload-1.sh "$logdir" "$uploadmethod" >/tmp/UPLOAD.LOG ; then
		{
			srcfile="$logdir"/UPLOAD

			"udhcpc" # get dhcp if required. run udhcpc. if udhcpc fails, exit!
			# enable led
			"${BLOG_DATAPATH}"/UPLOAD.LOG is the main log
			# prepare a tarball under logdir. "${BLOG_DATAPATH}"/UPLOAD.LOG. collect files from logdir to logdir/UPLOAD file
			# upload a tarball either by ftp or by http
		}

		okay case: log and copy /tmp/UPLOAD.LOG into $logdir/UPLOAD.LOG. "rm" the main log.
		fail case: cat /tmp/UPLOAD.LOG >>"${BLOG_DATAPATH}"/UPLOAD.LOG

		KT. log only falied case and will be seen in the next boot.
		
	if skip_dhcp=false then "kill udhcpc"
		

==
Wifi
==
# new files
/usr/bin/bootlog_w.sh
/usr/bin/bootlog-upload_w.sh
/usr/bin/bootlog-wifi-upload.sh

(etc/start-mw.sh)
/usr/bin/bootlog.sh 15 1024 upload http

/usr/bin/bootlog_w.sh 15 1024 upload http	# is the same as before with one line as below

	[ -n "$upload" ] && /usr/bin/bootlog-upload_w.sh "$loguploadmethod"

	# bootlog-upload_w.sh
	#
	
	# if eth0 is up then skip_dhcp=true	

	"ADDED" skip_dhcp==false then run "udhcpc"

	if( udhcpc is OKAY ) # ret from udhcpc is 0 when okay
	{

		# bootlog-upload-1.sh
		#
		if /usr/bin/bootlog-upload-1.sh "$logdir" "$uploadmethod" >/tmp/UPLOAD.LOG ; then
		{
			"REMOVED. THIS IS ONLY DIFFERENCE." # get dhcp if required. run udhcpc
			# enable led
			# prepare tarball
			# upload a tarball either by ftp or by http
		}
		else
		{
			"ADDED" kill udhcpc and down eth0

			"ADDED" call_wifi_script
			{
				/usr/bin/bootlog-wifi-upload.sh "${blogdir}" "${logdir}" "${uploadmethod}"

					"udhcpc" on wifi

					/usr/bin/bootlog-upload-1.sh
			}
		}
	}
	else
	{
		"ADDED" call_wifi_script
	}


## from /NDS/bin/ReadNVRAM 
WIFI_DHCP_ON="Y"
WIFI_ENCRYPTION_TYPE="WPA2"
WIFI_V6_ENABLED="N"
WIFI_V6_GATEWAY="00:00:00:00"
WIFI_V6_IP_ADDRESS="00:00:00:00"
WIFI_V6_PREFIX_LEN="0"
WIFI_V6_CONFIG="2"
WIFI_IP_ADDRESS="000.000.000.000"
WIFI_GATEWAY="000.000.000.000"
WIFI_SUBNET_MASK="000.000.000.000"
WIFI_SSID="SKY0F227"
WIFI_BSSID="00.19.fb.5b.9c.25"
WIFI_IF_NAME=
WIFI_WPA_PASSPHRASE_LENGTH="8"
WIFI_IS_WPA_ASCII="Y"
WIFI_WPA_PASSPHRASE="YYTTQEVW"
WIFI_WEP_KEY=""

