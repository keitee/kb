*kt_dev_uv*                                                             tw=100

|kt_dev_uv_set_001| setup printer
|kt_dev_uv_set_002| setup email
|kt_dev_uv_set_003| setup: humax build the stack
|kt_dev_uv_set_004| 
|kt_dev_uv_set_005| setup: scren connection
|kt_dev_uv_set_006| 
|kt_dev_uv_set_007| setup: huawei build the stack
|kt_dev_uv_set_008| setup: oem staging and toolchains
|kt_dev_uv_set_009| setup: boxes
|kt_dev_uv_set_010| setup: git for dev and oem

|kt_dev_uv_stack_000| stack: builds
|kt_dev_uv_stack_001| stack: build examples
|kt_dev_uv_stack_002| stack: build: deploy
|kt_dev_uv_stack_003| stack: startup and tree
|kt_dev_uv_stack_004| stack: oem configs
|kt_dev_uv_stack_005| stack: brcm debug level
|kt_dev_uv_stack_006| stack: netflix ps line
|kt_dev_uv_stack_007| stack: virtual rcu
|kt_dev_uv_stack_008| stack: startup mw
|kt_dev_uv_stack_009| stack: nexusmgr
|kt_dev_uv_stack_010| stack: commit
|kt_dev_uv_stack_011| stack: log

|kt_dev_uv_stack_100| stack: element names
|kt_dev_uv_stack_101| stack: vanadium: runBrowser
|kt_dev_uv_stack_102| stack: vanadium: binding
|kt_dev_uv_stack_103| stack: vanadium: remote debug
|kt_dev_uv_stack_104| stack: LSR (local storage repository)

|kt_dev_uv_stack_150| stack: network
|kt_dev_uv_stack_200| stack: dbus

|kt_dev_uv_stack_200| commands TODO:

|kt_dev_uv_wiki_001| dbus-monitor

|kt_dev_uv_hwei_001| stack: convert ro filesystem to rw

|kt_dev_uv_task_001| task:01: nexusMgr
|kt_dev_uv_task_002| task:02: DEVARCH-8869
|kt_dev_uv_task_003| task:02: DEVARCH-7508


# ============================================================================
#{
={============================================================================
*kt_dev_uv_set_001* setup: printer

1. install cups
sudo apt-get install cups

2. add printers via cups admin page 
See this page, add user to the printer group, and browse to localhost, and follow the instructions to add printers. 
www.howtoforge.com/how-to-install-a-canon-printer-on-debian-and-debian-like-systems

3. use printer names from this page.
https://wiki.youview.co.uk/display/canvas/How+To+-+Set+up+printers


={============================================================================
*kt_dev_uv_set_002* setup: email

1. The evolution under debian do not work. Forced to use icedove, OWA and
phone instead.

2. Clone the git repo.
Follow this page.
https://wiki.youview.co.uk/display/canvas/How+To+-+Get+access+to+git-dev+repositories


={============================================================================
*kt_dev_uv_set_003* setup: humax build the stack

{install-package}
1. Can see package files from the repo
http://devarch-deb:8080/job/DEBs/ws/DEBS/

-rw-r--r--  1 kpark kpark 205942756 Jan  8 10:30 adobe-flex4-sdk_4.1.0.16076withairsdk2.5-3_i386.deb
-rw-r--r--  1 kpark kpark   5310170 Jan  8 10:30 adobe-stagecraft_2.5.2.3.20120518-3_i386.deb
-rw-r--r--  1 kpark kpark  80815260 Jan  8 10:35 generic-stbgcc-4.4.5-2.0_20120927-2_i386.deb
-rw-r--r--  1 kpark kpark  24399388 Jan  8 10:37 humax-dtr-t1000-staging_20140718H20.2.0-3_i386.deb
-rw-r--r--  1 kpark kpark 328730796 Jan  8 10:48 humax-stbgcc-4.5.3-2.4_20130321-2_i386.deb

2. Or can use apt-get install on the command line.
sudo apt-get install map-dir-and-exec


{ccache}
https://wiki.youview.co.uk/display/canvas/2014/03/26/Speeding+up+builds+with+ccache?src=search

The ccache tool tries to speed up a build by taking object files from cache when the preprocessed
source didn't change. In addition, it can often avoid preprocessing, as a cache lookup on the source
file path and compiler options returns a list of include files and their modification times. If
those weren't updated, that counts as a 'direct hit'. Otherwise it falls back to preprocessing the
source and trying to look-up its hash in the cache. If successful, that counts as a 'preprocessed
hit'.

The main barrier preventing cache sharing across git branches has to do with the fact we create
separate build slaves for each git branch, which results in different source and binary directories
being seen by the compiler. More specifically:

The compiler sets the __FILE__ macro to be the absolute path to the source file. The value of that
macro leaks to preprocessed source through the use of assert().

We pass preprocessor definitions like -DMACRO__prefix="...", -DMACRO__builddir="...",
   -DMACRO__top_srcdir="...", which can also leak to preprocessed source.

To address this issue, the new zb-virtual-slave tool was developed. It's meant to wrap around other
build tools, such as zb-build-with-progress, zb-deploy, zb-shell, etc. and leading them to believe
we are always building a branch called _virtual_. This way, the compiler will see identical source
and binary locations, enabling cache hits across different git branches. zb-virtual-slave uses the
map-dir-and-exec tool internally, which you will have to build and install yourself.

note: need to install map-dir-and-exec package


{1} build-stack
$ cd ~/sources/
zb-virtual-slave zb-shell
ZB_CFG=humax.1000 zb-make

note: shall have pysical data dir under /. when use sym link to the home, failed to build.


<check-package>
dpkg-query -l | grep humax

{2} update-cds; core driver software
https://wiki.youview.co.uk/display/canvas/HOWTO+Install+Humax+DTR-T1000+T1000+H21.5.0

note: follow instruction, need to find out box type, CTK or not. 


{3} update the zinc whcich was built
1. follow "boot from HDD" instruction from:
https://wiki.youview.co.uk/display/canvas/HOWTO+Install+Humax+DTR-T1000+T1000+H21.5.0


{layout}
/data/builds/master/huawei.370/zinc-build-root/release-huawei-bcm7409

/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409$ tree -L 3
.
|-- opt
|   `-- zinc-trunk
|       |-- bin
|       |-- devel
|       |-- include
|       |-- lib
|       |-- libexec
|       |-- oss
|       |-- platform
|       |-- share
|       |-- tests
|       `-- var
`-- usr -> /opt/oem-staging/huawei-bcm7409/usr


={============================================================================
*kt_dev_uv_set_004* 



={============================================================================
*kt_dev_uv_set_005* setup: screen connection

sudo screen /dev/ttyS0 115200

to close screen use Ctrl-A, k, y. Do not use Ctrl-C as it can kill processes running on the box.


={============================================================================
*kt_dev_uv_set_006* 


={============================================================================
*kt_dev_uv_set_007* setup: huawei build the stack

sudo apt-get install huawei-dn370t-toolchain
sudo apt-get install huawei-dn370t-staging
sudo apt-get install huawei-stbgcc-4.5.3-2.4

note: this will picks up the correct file from the link below.
http://devarch-deb.dev.youview.co.uk:8080/job/DEBs/ws/DEBS/

huawei-dn370t-toolchain_20120927-2_i386.deb
huawei-dn370t-nexus_20131104-2_i386.deb
huawei-dn370t-staging_20140804-2_i386.deb

https://wiki.youview.co.uk/display/canvas/HOWTO+Install+Huawei+DN370T+PVR1+B37SP11

ZB_CFG=huawei.370 zb-make


={============================================================================
*kt_dev_uv_set_008* setup: oem staging and toolchanis

https://wiki.youview.co.uk/display/canvas/OEM+Staging+and+Toolchains?src=search

.
|-- adobe
|   `-- stagecraft
|-- Adobe
|   |-- Flex4SDK -> flex_sdk_4.1.0.16076_with_air_sdk_2.5_linux
|   `-- flex_sdk_4.1.0.16076_with_air_sdk_2.5_linux
|-- HipChat
|   |-- bin
|   |-- lib
|   `-- share
|-- oem-staging            // note: it does have headers or possibly sources
|   |-- huawei-bcm7409
|   |-- huawei-dn370t -> huawei-bcm7409
|   |-- humax-dtr_t1000
|   `-- oem-staging.md5
|-- pac
|   |-- lib
|   |-- LICENSE
|   |-- pac
|   |-- README
|   |-- res
|   `-- utils
|-- stagecraft-2.0 -> stagecraft-2.5.2.3.20120105-sl6-directfb1.4-windowed-C12M2-maine_coon-release-20120518
|-- stagecraft-2.5.2.3.20120105-sl6-directfb1.4-windowed-C12M2-maine_coon-release-20120518
|   |-- bin
|   `-- share
`-- toolchains
    |-- generic-stbgcc-4.4.5-2.0
    |-- huawei-bcm7409 -> generic-stbgcc-4.4.5-2.0
    |-- huawei-stbgcc-4.5.3-2.4
    |-- humax-dtr_t1000 -> generic-stbgcc-4.4.5-2.0
    `-- humax-stbgcc-4.5.3-2.4

/data/builds/master/huawei.370/zinc-build-root/release-huawei-bcm7409

/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409
drwxr-xr-x 4 kpark kpark 4096 Feb  3 08:06 opt/
lrwxrwxrwx 1 kpark kpark   35 Jan 30 08:28 usr -> /opt/oem-staging/huawei-bcm7409/usr/

<refsw>
The refsw headers from staging:
/opt/oem-staging/huawei-bcm7409/usr/local/refsw/nexus

This is copied to build root to be used in building and these are the same:
/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/usr/local/refsw/nexus

<oem-code>
The OEM header files: note: this means that if changes OEM code and want to build any in the full
stack build env, then need to update staging as well before building.

/opt/oem-staging/huawei-bcm7409/
./usr/local/include/nexusMgr/nexusMgr.h
./usr/local/include/nexusMgr/nexusMgr.c
./usr/local/lib/nexusMgr.h
./usr/local/lib/pkgconfig/nexusMgr.pc

For example, inspect tool and this is link option: path when build inspect tool
-L/opt/oem-staging/huawei-bcm7409/usr/local/lib


/opt/oem-staging/huawei-bcm7409/usr:
./local/directfb/lib/libnexusMgr.so
./local/lib/libnexusMgr.so


={============================================================================
*kt_dev_uv_set_009* setup: boxes

root Password is onlydebug (Humax) TestHw123 (Huawei)

{hmax}
||Hostname||FQDN||IP Address||MAC Address||
humax-0873   humax-0873.dev.youview.co.uk    172.20.35.27   00:03:78:4B:7A:2B

/.ssh -> /var/tmp/authorized_keys


{hwei}
huawei-04877 huawei-04877.dev.youview.co.uk  172.20.33.192  20:F3:A3:70:D1:94

<1>
if delete this, then will boot from flash
/mnt/nand/userdata/data/rw_cmd


={============================================================================
*kt_dev_uv_set_010* setup: git for dev and oem

<git-oems>
url = gitolite@git-huawei.dev.youview.co.uk:/nexusMgr.git
url = gitolite@git-humax.dev.youview.co.uk:/nexusMgr.git

<git-local>
https://git-dev.dev.youview.co.uk/?p=nexusMgr.git;a=summary

https://git-dev.dev.youview.co.uk/

git clone -b huawei/dn370t gitolite@git-dev:/nexusMgr.git XX

/home/kpark/git-dev/nexusMgr        " cloned
/home/kpark/git-dev/nexusMgr-WIP    " work space for hwei 370

{oem}
/home/kpark/git-oem/*

<hmax>
note: need to figure out branch name
git clone gitolite@git-humax.dev.youview.co.uk:/nexusMgr.git nexusHmax

<hwei>
git clone -b huawei/dn370t gitolite@git-huawei.dev.youview.co.uk:/nexusMgr.git nexusHwei


={============================================================================
*kt_dev_uv_stack_000* stack: builds

<ET>
Many of these tools rely on the environment variable "ET" to find your checkout of the DEVARCH repo.
The zb-make and zb-build-with-progress tools build the stack out of your source tree, so you can
carry on developing while a build is running. You control this behaviour with the "ZB_BUILD_DIR"
environment variable, so make sure it exists and is writeable by yourself. Similarly, you'll
probably want the tools available in your PATH, so add these to your ~/.profile:

export PATH=~/sources/zinc-git-tools:$PATH
export ET=~/sources/DEVARCH/

$ cd ~/sources/
ZB_CFG=huawei.370 zb-shell
zb-make

OR

zb-virtual-slave zb-shell
ZB_CFG=humax.1000 zb-make


<after-zb-shell>
$ env | grep ^Z
ZINC_USER_BUILD_TYPE=release ~
ZINC_HOST_PREFIX=/opt/zinc-trunk
ZINC_REMOTE_LOGGING_HOST=localhost
ZINC_SRC_ROOT=/data/builds/master/huawei.370/DEVARCH
ZINC_HOST_3PS=/data/builds/master/huawei.370/DEVARCH/OEM.Huawei/OEM.Huawei.3rdPartyStack
ZINC_BUILD_ROOT=/data/builds/master/huawei.370/zinc-build-root 
ZINC_DESTDIR=/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409 ~
ZINC_BUILD_DIR=/data/builds/master/huawei.370/zinc-build-root/release-huawei-bcm7409 ~
ZINC_NATIVE_BUILD_ROOT=/data/builds/master/huawei.370/zinc-build-root
ZB_HOST_CONFIG=huawei-bcm7409
ZINC_BUILD_CFG=debian-7-x86_64
ZINC_INSTALL_ROOT=/data/builds/master/huawei.370/zinc-install-root
ZB_CFG=huawei.370 ~
ZB_BUILD_DIR=/data/builds ~
ZB_BRANCH=master ~
ZINC_USER_HOST_PREFIX=/opt/zinc-trunk
ZINC_HOST_CFG=huawei-bcm7409
ZINC_3PS_HOST_PREFIX=/opt/zinc-trunk/oss
ZINC_REMOTE_LOGGING_PORT=4560
ZINC_BUILD_TYPE=release


<build-and-install-dir>

note: the build system picks up any dirs in the tree and try to build those.

note: source is copied to /data/builds/.../DEVARCH
1. ~/source/DEVARCH

2. The build root has only output files such as o and a:
can run make here:

/data/builds/<ZB_BRANCH> /huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect/Makefile
/data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect/Makefile

3. But the makefile uses sources from the copied sources as

/data/builds/<ZB_BRANCH> /huawei.370/DEVARCH/Polonium/Polonium.NexusInspect/src/nexus-inspect.c
/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Polonium/Polonium.NexusInspect/src/nexus-inspect.c

-c -o nexus_inspect-nexus-inspect.o `test -f 'src/nexus-inspect.c' || echo
'/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Polonium/Polonium.NexusInspect/'`src/nexus-inspect.c


/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/
`-- zinc-trunk
    |-- bin
    |-- devel
    |-- include
    |-- lib
    |-- libexec
    |-- oss
    |-- platform
    |-- share
    |-- tests
    `-- var

/bin/
airlauncher.sh*
audiofeedbackd*
avahi-launcher*
babysitterd*
cadmiumcontentacquisitiond*
cobaltmetadatabrokerd*
copperannouncementd*
CopperDownloader*
copperlocalstoragerepod*
crbd*
dbusredirect*
dbussenddaemon*
dbuswaitbusname*
deleteTree*
device-manager-launcher*
dial-server*
dial-server-launcher.sh*
exec-then-cleanup-app*
exec-then-cleanup-app.sh*
exec-with-cache*
generate-http-user-agent*
getChildItems*
getItem*
http-dbus-bridge*
http-dbus-bridge-launcher.sh*
https-cache-proxy*
ironmetadatad*
linearsourced*
linearsource-launch*
linearsource-launch-and-sandbox*
lsr-config*
nexus-inspect*
nickelmediad*
on-demand-launcher*
onscreenidd*
onscreenidd-launch*
osmiumd*
pcmplaybackd*
provisioninginformationparser*
purge-polipo-diskcache.sh*
python_launcher.sh*
queryNetworkManager*
radiumairlauncher*
radiumd*
remindersd*
runBrowser.sh*
runNetflix.sh*
run-stagecraft2-functions.sh*
runStagecraft2.sh*
run-stagecraft2-with-cache.sh*
sandbox-drop-privileges*
setItem*
setpgid-and-exec*
sodiumd*
splashScreen*
start-service-over-dbus.sh*
storagemanagementd*
tunerd*
uimanagerd*
w3cEngine*
watcher*
yv-mainui*
yv-remote-booking-agent-activate*
yv-remote-booking-agent-watcher*
yv-start-services.sh*


<zb-virtual-slave>
zb-virtual-slave zb-make
{
  /home/kpark/source/zinc-git-tools/zb/zb-load-config.sh
  {
      pre: ET, ZB_CFG 

      configure_git_for_zb() {

      conf zb.huawei.360.host-config huawei-dn360t
      conf zb.huawei.370.host-config huawei-bcm7409
      conf zb.huawei.372.host-config huawei-bcm7231
      conf zb.humax.1000.host-config humax-dtr_t1000
      }

      do : set ZB_BUILD_DIR, slave_dir=/data/builds/master/pc
  }

  + real_path=/data/builds/master
  + virtual_path=/data/builds/_virtual_
  + exec map-dir-and-exec /data/builds/master:/data/builds/_virtual_ /bin/bash -c '"zb-make"  		2> >( sed -u "s|/data/builds/_virtual_|/data/builds/master|" >&2 ) | sed -u "s|/data/builds/_virtual_|/data/builds/master|"'

}


zb-make:
{
   source $where_am_i/zb/zb-load-config.sh
   {
      note: pick up brach name or force it

      # Branch of git repository for which build is to be performed
      if [ -n "${ZB_FORCE_BRANCH}" ]; then
          echo "Overriding branch to build to: ${ZB_FORCE_BRANCH}"
          branch=$ZB_FORCE_BRANCH
          # TODO: Validate that the branch exists.
      else
          if [ -f "$ET/.git/rebase-merge/head-name" ]; then
              # We are in the middle of rebasing
              branch="$(cut -b 12- < "$ET/.git/rebase-merge/head-name")"
          else
              branch=$(GIT_DIR=$ET/.git git symbolic-ref HEAD | cut -b 12- )
          fi
      fi

      ++++ GIT_DIR=/home/kpark/source/DEVARCH//.git
      ++++ git config zb.huawei.install-prefix
      +++ var=/opt/zinc-trunk
      ++ ZINC_USER_HOST_PREFIX=/opt/zinc-trunk

      export ZB_BRANCH=$branch
      ++ ZB_BRANCH=DEVARCH-8092

      if
          slave_dir=$ZB_SLAVE_DIR/$ZB_CFG
      else
          slave_dir=$ZB_BUILD_DIR/$branch/$ZB_CFG
      fi

      ++ slave_dir=/data/builds/DEVARCH-8092/huawei.370
   }

   ZB_HOST_CONFIG=host 
   cd $ET
   + cd /home/kpark/source/DEVARCH

   ++ git rev-parse HEAD
   + commit_sha=fa4948db164a29775e0804795047ebefdce29e5d

   + git update-ref -m zb-make refs/heads/zb/DEVARCH-8092 7887ca28ed3a1480959ce9f5d1804405b3b5bfdc
   + branch=zb/DEVARCH-8092

   note: one time and can clone again by deleting a makefile?

   # Create repo
   if [ ! -e "$slave_dir/DEVARCH/Zinc/Zinc.Build/Makefile" ]; then
       echo "Creating new build slave - \
         $branch because $slave_dir/DEVARCH/Zinc/Zinc.Build/Makefile doesn't exist"
       rm -Rf "$slave_dir/DEVARCH/"
       mkdir -p "$slave_dir/DEVARCH"
       cd "$slave_dir"
       git clone -s --depth=1 --branch "$branch" "$ET" "$slave_dir/DEVARCH"
   fi

   build_cmd=${ZB_BUILD_CMD-"make"}
   + build_cmd=make

   <setvars>
   {
      source ../../*/*/setvars-$ZB_HOST_CONFIG.sh
      + source ../../Zinc/Zinc.Build/setvars-host.sh

      export HOST_TRIPLE="${ARCH}-pc-linux-gnu"
      ++ export HOST_TRIPLE=x86_64-pc-linux-gnu
      export BUILD_TRIPLE=${HOST_TRIPLE}

      :~/source$ ls -al ./DEVARCH/OEM.Huawei/OEM.Huawei.3rdPartyStack/
      -rwxr-xr-x 1 kpark kpark 1671 Jan  7 15:55 setvars-huawei-bcm7231.sh
      -rwxr-xr-x 1 kpark kpark 1598 Jan  7 15:55 setvars-huawei-bcm7409.sh
      -rwxr-xr-x 1 kpark kpark 1670 Jan  7 15:55 setvars-huawei-dn360t.sh

      :~/source$ ls -al ./DEVARCH/OEM.Humax/OEM.Humax.3rdPartyStack/
      -rw-r--r-- 1 kpark kpark 1822 Jan  7 15:55 setvars-humax-db_t2200.sh
      -rw-r--r-- 1 kpark kpark 1653 Jan  7 15:55 setvars-humax-dtr_t1000.sh
      -rw-r--r-- 1 kpark kpark 1930 Jan  7 15:55 setvars-humax-dtr_t2100.sh
      -rw-r--r-- 1 kpark kpark 2177 Jan  7 15:55 setvars-humax-dtr_t4000.sh
      {
         note: this is for host tools and cwd.

         <setvars-common>
         ++ source ../../Zinc/Zinc.Build/setvars-common.sh
         +++ where_am_i=/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Zinc/Zinc.Build
         {
            {
            if [[ "${ZINC_HOST_CFG}" != "${ZINC_BUILD_CFG}" ]]
            then
               # Cross compilation

               echo "Cross compiling. Host cfg: '${ZINC_HOST_CFG}' Build cfg: '${ZINC_BUILD_CFG}'"
            }

           +++ ZINC_SRC_ROOT=/data/builds/DEVARCH-8092/huawei.370/DEVARCH
           +++ ZINC_BUILD_ROOT=/data/builds/DEVARCH-8092/huawei.370/zinc-build-root
           +++ ZINC_INSTALL_ROOT=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root


           +++ ZINC_BUILD_DIR=/data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-debian-7-x86_64

           # CXXFLAGS
           if [[ "${ZINC_BUILD_TYPE}" == "debug" ]]
           then
              export CXXFLAGS="-g -O0 -pipe -pthread ${EXTRA_CXXFLAGS:-}"
              export CFLAGS="-g -O0 -pipe ${EXTRA_CFLAGS:-}"
           else
              export CXXFLAGS="-DNDEBUG -O3 -pipe -pthread ${EXTRA_CXXFLAGS:-}"
              export CFLAGS="-DNDEBUG -O2 -pipe ${EXTRA_CFLAGS:-}"
           fi
           +++ [[ debug == \d\e\b\u\g ]]
           +++ export 'CXXFLAGS=-g -O0 -pipe -pthread '
           +++ CXXFLAGS='-g -O0 -pipe -pthread '
           +++ export 'CFLAGS=-g -O0 -pipe '
           +++ CFLAGS='-g -O0 -pipe '

           +++ PKG_CONFIG=/data/builds/master/pc/zinc-install-root/debug/debian-7-x86_64/oss/bin/pkg-config

           # N.B. We are setting -rpath-link here, but DO NOT use this to set -rpath.
           # We should leave libtool to deal with -rpath. Setting it here leads to test executables
           # linking against the old (already installed) libraries.
           #
           
           LDFLAGS="-L${ZINC_DESTDIR}${ZINC_HOST_PREFIX}/lib
           -L${ZINC_DESTDIR}${ZINC_3PS_HOST_PREFIX}/lib -Wl,--as-needed
           -Wl,-rpath-link,${ZINC_DESTDIR}${ZINC_HOST_PREFIX}/lib
           -Wl,-rpath-link,${ZINC_DESTDIR}${ZINC_3PS_HOST_PREFIX}/lib"
           
           +++
           LDFLAGS='-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/debian-7-x86_64/lib
           -L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/debian-7-x86_64/oss/lib
           -Wl,--as-needed
           -Wl,-rpath-link,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/debian-7-x86_64/lib
        -Wl,-rpath-link,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/debian-7-x86_64/oss/lib'

         }
      }

      note: still running setvars-host.sh

      # We can't build these for PC
      export ZINC_EXCLUDE_PROJECTS="Polonium.GSTNexus Polonium.NexusInspect Polonium.PCMPlayback"

      ++ warnings_flags='-Wall -Wextra -Werror=address -Werror=array-bounds -Werror=c++0x-compat
      -Werror=char-subscripts -Werror=comment -Werror=enum-compare -Werror=format
      -Werror=missing-braces -Werror=nonnull -Werror=parentheses -Werror=pointer-sign
      -Werror=return-type -Werror=sequence-point -Werror=strict-overflow=1 -Werror=trigraphs
      -Werror=unknown-pragmas -Werror=unused-function -Werror=unused-label -Werror=unused-value
      -Werror=volatile-register-var -fdiagnostics-show-option'

      # Enable "Safe" STL wrappers in debug builds.
      # 
      if [[ "${ZINC_BUILD_TYPE}" == "debug" ]]; then
          export CPPFLAGS+=" -D_GLIBCXX_DEBUG "
      fi
      ++ [[ debug == \d\e\b\u\g ]]
      ++ export 'CPPFLAGS+= -D_GLIBCXX_DEBUG '
      ++ CPPFLAGS+=' -D_GLIBCXX_DEBUG '

      # -fstack-protector-all enables the insertion of "canaries" to detect stack-smashing at
      # runtime. The cost of such checks are supposedly small.
      export CPPFLAGS+=" -fstack-protector-all "
      ++ export 'CPPFLAGS+= -fstack-protector-all '
      ++ CPPFLAGS+=' -fstack-protector-all '
   }

   note: back to zb-make

   + build_date='2015-01-09 08:58:17+00:00'
   (
      # Create an environment more like the build servers
      unset DBUS_SESSION_BUS_ADDRESS

      set -o pipefail
      $build_cmd "$@" 2> >( sed -u "s | $ZINC_SRC_ROOT | $ET|" >&2 ) \
      | sed -u "s| $ZINC_SRC_ROOT| $ET|"
   ) && exit_code=0 || exit_code=1 # Don't want to exit on failure

   + unset DBUS_SESSION_BUS_ADDRESS
   + set -o pipefai
l

+ make buildtools
+ make
+ sed -u 's|/data/builds/master/pc/DEVARCH|/home/kpark/source/DEVARCH|'
 sed -u "s|$ZINC_SRC_ROOT|$ET|" >&2 
++ sed -u 's|/data/builds/master/pc/DEVARCH|/home/kpark/source/DEVARCH|'

<main-makefile>
make[1]: Entering directory `/home/kpark/source/DEVARCH/Zinc/Zinc.Build'
make[1]: Leaving directory `/home/kpark/source/DEVARCH/Zinc/Zinc.Build'

+++ Source: /home/kpark/source/DEVARCH/ +++
+++ Host build dir: /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409 +++
+++ Build log dir: /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/logs +++
+++ Install location: /data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk +++
+++ release build +++
+++ Building Zinc/Zinc.3rdPartyStack +++

[gmock] libtool: link: (cd "lib/.libs" && rm -f "libgtest_main.so.0" && ln -s "libgtest_main.so.0.0.0" "libgtest_main.so.0")

note: for vanadium

+++ Building Vanadium/Vanadium.Common +++
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-BigData.xml doc/htmlfragments/interface-BigData.html --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/doc-interface.html.template
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-AnotherInterface.xml doc/htmlfragments/interface-AnotherInterface.html --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/doc-interface.html.template
make[1]: Entering directory `/home/kpark/source/DEVARCH//Zinc/Zinc.Build'
Generating configure files... may take a while.
Found new dependencies; recursively calling docmakedepend. $*='/home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-Farm.xml'; $dependents_list='/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Lead/Lead.System.API/data/introspection-xml/enum-Animal.xml'
mv -f .deps/Profiler.Tpo .deps/Profiler.Plo
Found new dependencies; recursively calling docmakedepend. $*='/home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-ChannelService.xml'; $dependents_list='/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Lead/Lead.System.API/data/introspection-xml/struct-BroadcastData.xml /data/builds/DEVARCH-8092/huawei.370/DEVARCH/Lead/Lead.System.API/data/introspection-xml/struct-ChannelData.xml'
Found new dependencies; recursively calling docmakedepend. $*='/home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-BroadcastService.xml'; $dependents_list='/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Lead/Lead.System.API/data/introspection-xml/struct-BroadcastData.xml'
rm -rf /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Vanadium/Vanadium.Common


+++ Building Vanadium/Vanadium.Client.API +++
make[1]: Entering directory `/home/kpark/source/DEVARCH//Zinc/Zinc.Build'
make[2]: Leaving directory `/data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Lead/Lead.System.API'
Generating configure files... may take a while.
make[2]: Entering directory `/data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Lead/Lead.System.API'
/bin/mkdir -p include src
/bin/mkdir -p include/mock
/bin/mkdir -p mock-python
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-AnotherInterface.xml src/AnotherInterface.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-BigData.xml src/BigData.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-BroadcastService.xml src/BroadcastService.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template '--extra-include="BroadcastData.h"'
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-ChannelService.xml src/ChannelService.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template '--extra-include="ChannelData.h" --extra-include="BroadcastData.h"'
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-ComplexTypes.xml src/ComplexTypes.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template '--extra-include="MediaRouter.h" --extra-include="ComplexStruct.h" --extra-include="AnotherInterface.h"'
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-EchoService.xml src/EchoService.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-Farm.xml src/Farm.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template '--extra-include="Animal.h"'
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-MediaRouter.xml src/MediaRouter.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-MediaRouterService.xml src/MediaRouterService.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template '--extra-include="MediaRouter.h"'
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-Properties.xml src/Properties.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/interface-TuningService.xml src/TuningService.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base.cpp.template 
run_xml2cpp.sh /home/kpark/source/DEVARCH//Lead/Lead.System.API/data/introspection-xml/error-InvalidApplication.xml src/InvalidApplicationException.cpp --template=/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/share/zinc-system-api/templates/base-exception.cpp.template '--extra-include="lead-system-exceptions.h"' 
mv -f .deps/acl-utils-test.Tpo .deps/acl-utils-test.Po
rm -rf /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Vanadium/Vanadium.Client.API

note: to search, use "Building\|NexusInspect" since logs are intermixed.

+++ Building Polonium/Polonium.NexusInspect +++

mkdir -p /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect

cd /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect
&& /home/kpark/source/DEVARCH//Polonium/Polonium.NexusInspect/configure
--prefix=/opt/zinc-trunk --build=x86_64-pc-linux-gnu --host=mipsel-linux
--enable-shared --disable-static

make -C /data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect

cd /home/kpark/source/DEVARCH//Polonium/Polonium.NexusInspect && /bin/bash
/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Polonium/Polonium.NexusInspect/missing
--run automake-1.11 --foreign

make[2]: Entering directory `/data/builds/DEVARCH-8092/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusInspect'

mipsel-linux-gcc -DPACKAGE_NAME=\"nexus-inspect\"
-DPACKAGE_TARNAME=\"nexus-inspect\" -DPACKAGE_VERSION=\"0.1\"
-DPACKAGE_STRING=\"nexus-inspect\ 0.1\"
-DPACKAGE_BUGREPORT=\"darren.garvey@youview.com\"
-DPACKAGE_URL=\"http://www.youview.com\" -DPACKAGE=\"nexus-inspect\"
-DVERSION=\"0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1
-DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1
-DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1
-DLT_OBJDIR=\".libs/\" -I.
-I/home/kpark/source/DEVARCH//Polonium/Polonium.NexusInspect
-I/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/include
-isystem
/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/include
-I/opt/oem-staging/huawei-bcm7409/usr/include
-I/opt/oem-staging/huawei-bcm7409/usr/local/include  -D_GNU_SOURCE=1  -fPIC
-fvisibility=hidden -DVERSION=\"0.1\" -DPACKAGE=\"nexus-inspect\"
-DPKG_BIN_DIR=\"/opt/zinc-trunk/bin\" -O3 -g -Wall -Wextra -std=c99
-Werror=implicit-function-declaration -D_REENTRANT -pthread -DNEXUS_MODE_proxy
-DPLATFORM=97409 -DNEXUS_PLATFORM=97409 -DLINUX -D_GNU_SOURCE=1 -DHAVE_RSRVD=1
-DKBUILD_MODNAME=nexus -DPLATFORM=97409 -DNEXUS_PLATFORM=97409
-DBCHP_CHIP=7420 -DBCHP_VER=BCHP_VER_C1 -DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE
-DBINT_REENTRANT_CONFIG=BINT_REENTRANT -DBMEM_REENTRANT_CONFIG=BMEM_REENTRANT
-DNEXUS_BASE_OS_linuxkernel=1 -DNEXUS_PROFILE_OS_linuxkernel
-DNEXUS_MODE_driver -DNEXUS_PLATFORM_7410_UMA_32b=1 -DNEXUS_IPLICENSING=1
-DNEXUS_OTPMSP=1 -DNEXUS_USERCMD=1 -DNEXUS_HAS_KEYLADDER_SUPPORT=1
-DNEXUS_KEYLADDER=1 -DNEXUS_SECUREACCESS=1 -DNEXUS_SECURERSA=1
-DNEXUS_SECURITY_EXT_KEY_IV -DNEXUS_SECURITY_SC_VALUE -DNEXUS_FRONTEND_NIM
-DNEXUS_AC3 -DNEXUS_CONFIG_IMAGE -DNEXUS_DDP -DNEXUS_HAS_PLATFORM
-DNEXUS_HAS_CORE -DNEXUS_HAS_BASE -DNEXUS_HAS_I2C -DNEXUS_HAS_GPIO
-DNEXUS_HAS_PWM -DNEXUS_HAS_LED -DNEXUS_HAS_IR_INPUT -DNEXUS_HAS_IR_BLASTER
-DNEXUS_HAS_KEYPAD -DNEXUS_HAS_INPUT_CAPTURE -DNEXUS_HAS_UHF_INPUT
-DNEXUS_HAS_RFM -DNEXUS_HAS_FRONTEND -DNEXUS_HAS_SPI -DNEXUS_HAS_SECURITY
-DNEXUS_HAS_DMA -DNEXUS_HAS_TRANSPORT -DNEXUS_HAS_VIDEO_DECODER
-DNEXUS_HAS_AUDIO -DNEXUS_HAS_SURFACE -DNEXUS_HAS_GRAPHICS2D
-DNEXUS_HAS_PLAYBACK -DNEXUS_HAS_DISPLAY -DNEXUS_HAS_ASTM
-DNEXUS_HAS_SYNC_CHANNEL -DNEXUS_HAS_HDMI_OUTPUT -DNEXUS_HAS_SMARTCARD
-DNEXUS_HAS_SIMPLE_DECODER -DNEXUS_HAS_EEPROM -DNEXUS_HAS_SCART
-DBADS_312X_VER=BCHP_VER_A0 -DBHAB_312X_VER=BCHP_VER_A0 -DBHDM_CEC_SUPPORT
-DBHSM_AEGIS_SUPPORT -DBHSM_SC_VALUE -DBHSM_SECURE_PI_SUPPORT=1
-DBHSM_SECURE_PI_SUPPORT_KEYLADDER=1 -DBHSM_SECURE_PI_SUPPORT_MISC=0
-DBHSM_SECURE_PI_SUPPORT_OTPMSP=1 -DBSP_GENERIC -DBXVD_USE_CUSTOM_IMAGE
-DB_HAS_AVI=1 -DB_HAS_RMFF=1 -DGRCPACKET_SUPPORT=1
-DRAP_AACSBR_PASSTHRU_SUPPORT -DRAP_AACSBR_SUPPORT -DRAP_AC3ENC_SUPPORT
-DRAP_AC3_PASSTHRU_SUPPORT -DRAP_AC3_SUPPORT -DRAP_DDP_PASSTHRU_SUPPORT
-DRAP_DDP_SUPPORT -DRAP_DDP_TO_AC3_SUPPORT -DRAP_DRA_PASSTHRU_SUPPORT
-DRAP_DSOLA_SUPPORT -DRAP_DTSBROADCAST_PASSTHRU_SUPPORT
-DRAP_DTSHD_PASSTHRU_SUPPORT -DRAP_LPCMDVD_SUPPORT -DRAP_MPEG_PASSTHRU_SUPPORT
-DRAP_MPEG_SUPPORT -DRAP_PCMWAV_SUPPORT -DRAP_PCM_SUPPORT
-DRAP_REALAUDIOLBR_PASSTHRU_SUPPORT -DRAP_SRC_SUPPORT -DUNIFIED_ITB_SUPPORT
-DDUAL_OUTPUT
-DNDEBUG -O2 -pipe  -MT nexus_inspect-nexus-inspect.o -MD -MP -MF
.deps/nexus_inspect-nexus-inspect.Tpo -c -o nexus_inspect-nexus-inspect.o
`test -f 'src/nexus-inspect.c' || echo
'/data/builds/DEVARCH-8092/huawei.370/DEVARCH/Polonium/Polonium.NexusInspect/'`src/nexus-inspect.c

libtool: link: mipsel-linux-gcc -fPIC -fvisibility=hidden -DVERSION=\"0.1\"
-DPACKAGE=\"nexus-inspect\" -DPKG_BIN_DIR=\"/opt/zinc-trunk/bin\" -O3 -g -Wall
-Wextra -std=c99 -Werror=implicit-function-declaration -D_REENTRANT -pthread
-DNEXUS_MODE_proxy -DPLATFORM=97409 -DNEXUS_PLATFORM=97409 -DLINUX
-D_GNU_SOURCE=1 -DHAVE_RSRVD=1 -DKBUILD_MODNAME=nexus -DPLATFORM=97409
-DNEXUS_PLATFORM=97409 -DBCHP_CHIP=7420 -DBCHP_VER=BCHP_VER_C1
-DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE -DBINT_REENTRANT_CONFIG=BINT_REENTRANT
-DBMEM_REENTRANT_CONFIG=BMEM_REENTRANT -DNEXUS_BASE_OS_linuxkernel=1
-DNEXUS_PROFILE_OS_linuxkernel -DNEXUS_MODE_driver
-DNEXUS_PLATFORM_7410_UMA_32b=1 -DNEXUS_IPLICENSING=1 -DNEXUS_OTPMSP=1
-DNEXUS_USERCMD=1 -DNEXUS_HAS_KEYLADDER_SUPPORT=1 -DNEXUS_KEYLADDER=1
-DNEXUS_SECUREACCESS=1 -DNEXUS_SECURERSA=1 -DNEXUS_SECURITY_EXT_KEY_IV
-DNEXUS_SECURITY_SC_VALUE -DNEXUS_FRONTEND_NIM -DNEXUS_AC3
-DNEXUS_CONFIG_IMAGE -DNEXUS_DDP -DNEXUS_HAS_PLATFORM -DNEXUS_HAS_CORE
-DNEXUS_HAS_BASE -DNEXUS_HAS_I2C -DNEXUS_HAS_GPIO -DNEXUS_HAS_PWM
-DNEXUS_HAS_LED -DNEXUS_HAS_IR_INPUT -DNEXUS_HAS_IR_BLASTER -DNEXUS_HAS_KEYPAD
-DNEXUS_HAS_INPUT_CAPTURE -DNEXUS_HAS_UHF_INPUT -DNEXUS_HAS_RFM
-DNEXUS_HAS_FRONTEND -DNEXUS_HAS_SPI -DNEXUS_HAS_SECURITY -DNEXUS_HAS_DMA
-DNEXUS_HAS_TRANSPORT -DNEXUS_HAS_VIDEO_DECODER -DNEXUS_HAS_AUDIO
-DNEXUS_HAS_SURFACE -DNEXUS_HAS_GRAPHICS2D -DNEXUS_HAS_PLAYBACK
-DNEXUS_HAS_DISPLAY -DNEXUS_HAS_ASTM -DNEXUS_HAS_SYNC_CHANNEL
-DNEXUS_HAS_HDMI_OUTPUT -DNEXUS_HAS_SMARTCARD -DNEXUS_HAS_SIMPLE_DECODER
-DNEXUS_HAS_EEPROM -DNEXUS_HAS_SCART -DBADS_312X_VER=BCHP_VER_A0
-DBHAB_312X_VER=BCHP_VER_A0 -DBHDM_CEC_SUPPORT -DBHSM_AEGIS_SUPPORT
-DBHSM_SC_VALUE -DBHSM_SECURE_PI_SUPPORT=1
-DBHSM_SECURE_PI_SUPPORT_KEYLADDER=1 -DBHSM_SECURE_PI_SUPPORT_MISC=0
-DBHSM_SECURE_PI_SUPPORT_OTPMSP=1 -DBSP_GENERIC -DBXVD_USE_CUSTOM_IMAGE
-DB_HAS_AVI=1 -DB_HAS_RMFF=1 -DGRCPACKET_SUPPORT=1
-DRAP_AACSBR_PASSTHRU_SUPPORT -DRAP_AACSBR_SUPPORT -DRAP_AC3ENC_SUPPORT
-DRAP_AC3_PASSTHRU_SUPPORT -DRAP_AC3_SUPPORT -DRAP_DDP_PASSTHRU_SUPPORT
-DRAP_DDP_SUPPORT -DRAP_DDP_TO_AC3_SUPPORT -DRAP_DRA_PASSTHRU_SUPPORT
-DRAP_DSOLA_SUPPORT -DRAP_DTSBROADCAST_PASSTHRU_SUPPORT
-DRAP_DTSHD_PASSTHRU_SUPPORT -DRAP_LPCMDVD_SUPPORT -DRAP_MPEG_PASSTHRU_SUPPORT
-DRAP_MPEG_SUPPORT -DRAP_PCMWAV_SUPPORT -DRAP_PCM_SUPPORT
-DRAP_REALAUDIOLBR_PASSTHRU_SUPPORT -DRAP_SRC_SUPPORT -DUNIFIED_ITB_SUPPORT
-DDUAL_OUTPUT
-DNDEBUG -O2 -pipe -rdynamic -Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-o nexus-release nexus_release-nexus-release.o -Wl,-rpath -Wl,/usr/local/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-Wl,--as-needed
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/lib
-L/opt/oem-staging/huawei-bcm7409/usr/local/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/usr/local/lib
-lnexusMgr -ldirectfb -lfusion -ldirect -linit -lnexus -lz -lpthread -pthread

/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBSetOption'
/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBCreate'
/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBInit'


={============================================================================
*kt_dev_uv_stack_001* stack: build examples

<one>
cd =~/sources/DEVARCH/
ZB_CFG="huawei.370" zb-make Polonium/Polonium.NexusInspect
ZB_CFG="huawei.370" zb-make

<two>
cd ~/source/DEVARCH/
ZB_CFG=huawei.370 zb-shell

move to the source dir to build:

mipsel-linux-gcc -c src/nexusMgr.c -o nexusMgr.o -DPIC -fpic -std=c99 `pkg-config --cflags nexus directfb`
mipsel-linux-g++ nexusMgr.o -lnexus `pkg-config --libs nexus directfb` -shared -o libnexusMgr.so

<example> to run makefile on built-root
export ET=/data/builds/master/huawei.370/DEVARCH/
ZINC_USER_BUILD_TYPE=release source $ET/OEM.Huawei/OEM.Huawei.3rdPartyStack/setvars-huawei-bcm7409.sh

make clean; make;
can see output and o file under this.

/data/builds/master/huawei.370/zinc-build-root/release-huawei-bcm7409/Polonium/Polonium.NexusRelease

But uses sources from:

`test -f 'src/exec-then-cleanup-app.c' || echo '/data/builds/master/huawei.370/DEVARCH/Polonium/Polonium.NexusRelease/'`src/exec-then-cleanup-app.c


<use-autoconf>
git clone -b huawei/dn370t gitolite@git-huawei.dev.youview.co.uk:/nexusMgr.git nexusTest

cd nexusMgr

note: use BRANCH
export ET=/data/builds/master/huawei.370/DEVARCH/
export ET=/data/builds/<BRANCH>/huawei.370/DEVARCH/

ZINC_USER_BUILD_TYPE=release source $ET/OEM.Huawei/OEM.Huawei.3rdPartyStack/setvars-huawei-bcm7409.sh
./autogen.sh
export HOST_TRIPLE=mipsel-linux
./configure --host=$HOST_TRIPLE --with-pic --enable-shared --prefix=$PWD/install
make && make install


={============================================================================
*kt_dev_uv_stack_002* stack: build: deploy

  973  2015-02-02 12:28:38 vim DEVARCH/.git/config 
  974  2015-02-02 12:29:10 which rsync
  975  2015-02-02 12:29:21 ssh root@humax-0873
  976  2015-02-02 12:30:02 ./setup-humax/setup-humax.sh -h humax-0873
  977  2015-02-02 12:30:20 ./setup-humax/setup-humax.sh -f humax-0873
  978  2015-02-02 12:31:00 zb-deploy -o humax.1000 -- -r


kpark@wll1p04345:~/source$ pwd
/home/kpark/source

<setup-xx-sh>
note: no zinc-trunk handling.

#/   -f            Force first time setup. Does additional installation of
#/                 eg. password-less login, rsync, scp.

#
# firstTimeSetup() {
# 
# + debug 'Setting up passwordless login...'
# + debug 'Installing rsync on Humax device...'
# + debug 'Installing custom login script (./setup-humax/custom-login.sh) to /usr/local/bin/ ...'

$ ./setup-huawei/setup-huawei.sh -f 172.20.33.192

git config zb.huawei.370.deploy-host "hostname of your box here"


<zb-deploy> 
note: careful when use -o option. not to use humax1000 and spend some hours why not working.

zb-deploy -o huawei.370 -- -r

# set ZB_CFG from option
+ export ZB_CFG=humax.1000
+ ZB_CFG=humax.1000

# uses branch name to make up $slave_dir
++ branch=review/DEVARCH-8746/0


={============================================================================
*kt_dev_uv_stack_003* stack: startup

cds: core driver software

/opt/cds/etc/rc.user

root# pwd
/opt

root# ls -al
drwxr-xr-x    8 root     root           149 Dec 25 04:33 .
drwxr-xr-x   17 root     root           259 Dec 25 04:33 ..
drwxr-xr-x    3 root     root            33 Dec 25 02:36 adobe
drwxr-xr-x   12 root     root           247 Dec 25 04:33 cds
drwxr-xr-x    4 root     root            84 Dec 18 14:20 netflix
drwxr-xr-x    4 root     root            39 Dec 25 04:33 stagecraft-2.0
lrwxrwxrwx    1 root     root            15 Dec 25 04:33 ui -> /mnt/psi/ui_psi
dr-xr-xr-x    4 root     root            57 Dec 25 02:36 youview
drwxr-xr-x    9 root     root           186 Dec 25 04:33 zinc


<zinc>
root# pwd
/opt/zinc/bin

root# ls
CopperDownloader                     onscreenidd-launch
MediaRouterDbusSpy                   osmiumd
airlauncher.sh                       pcmplaybackd
audiofeedbackd                       persistedpairingrepository_utils.py
avahi-launcher                       provisioninginformationparser
babysitterd                          purge-polipo-diskcache.sh
cadmiumcontentacquisitiond           python_launcher.sh
cobaltmetadatabrokerd                queryNetworkManager
copperannouncementd                  radiumairlauncher
copperlocalstoragerepod              radiumd
crbd                                 remindersd
dbusredirect                         run-stagecraft2-functions.sh
dbussenddaemon                       run-stagecraft2-with-cache.sh
dbuswaitbusname                      runBrowser.sh
deleteTree                           runNetflix.sh
device-manager-launcher              runStagecraft2.sh
dial-server                          sandbox-drop-privileges
dial-server-launcher.sh              setItem
exec-with-cache                      setpgid-and-exec
generate-http-user-agent             sodiumd
getChildItems                        splashScreen
getItem                              start-and-wait-for-busname.sh
http-dbus-bridge                     start-service-over-dbus.sh
http-dbus-bridge-launcher.sh         storagemanagementd
https-cache-proxy                    tunerd
ironmetadatad                        uimanagerd
linearsource-launch                  w3cEngine
linearsource-launch-and-sandbox      watcher
linearsourced                        yv-mainui
lsr-config                           yv-remote-booking-agent-activate
nickelmediad                         yv-remote-booking-agent-watcher
on-demand-launcher                   yv-start-services.sh
onscreenidd

[root@HUMAX bin]# ls
CopperDownloader*                 litaniumsystemmanagerd*
airlauncher.sh*                   lsr-config*
appfactoryreset*                  nexus-inspect*
appstart*                         nickelmediad*
appversion*                       on-demand-launcher*
audiofeedbackd*                   onscreenidd*
avahi-launcher*                   onscreenidd-launch*
babysitterd*                      osmiumd*
bronzemediad*                     pcmplaybackd*
cadmiumcontentacquisitiond*       provisioninginformationparser*
cobaltmetadatabrokerd*            purge-polipo-diskcache.sh*
copperannouncementd*              python_launcher.sh*
copperlocalstoragerepod*          queryNetworkManager*
crbd*                             radiumairlauncher*
dbusredirect*                     radiumd*
dbussenddaemon*                   remindersd*
dbuswaitbusname*                  run-stagecraft2-functions.sh*
deleteTree*                       run-stagecraft2-with-cache.sh*
device-manager-launcher*          runBrowser.sh*
dial-server*                      runNetflix.sh*
dial-server-launcher.sh*          runStagecraft2.sh*
exec-then-cleanup-app*            sandbox-drop-privileges*
exec-then-cleanup-app.sh*         setItem*
exec-with-cache*                  setpgid-and-exec*
formathdd*                        sodiumd*
generate-http-user-agent*         splashScreen*
getChildItems*                    start-service-over-dbus.sh*
getItem*                          storagemanagementd*
goldsystemtimed*                  tunerd*
http-dbus-bridge*                 uimanagerd*
http-dbus-bridge-launcher.sh*     w3cEngine*
https-cache-proxy*                watcher*
indiumd*                          yv-mainui*
ironmetadatad*                    yv-remote-booking-agent-activate*
linearsource-launch*              yv-remote-booking-agent-watcher*
linearsource-launch-and-sandbox*  yv-start-services.sh*
linearsourced*


<lib-third-party>
/usr/local/lib

directfb-1.4-15            libfusion-1.4.so.15.0.0    libpng14.so.14.3.0
libdirect-1.4.so.15        libfusion.so               libsawman-1.5.so.0
libdirect-1.4.so.15.0.0    libinit.so                 libsawman-1.5.so.0.0.4
libdirect.so               libjpeg.so                 libsawman.so
libdirectfb-1.4.so.15      libjpeg.so.7               libshim_nexus.so
libdirectfb-1.4.so.15.0.0  libjpeg.so.7.0.0           libz.so
libdirectfb.so             libnexus.so                libz.so.1
libfreetype.so             libnexusMgr.so             libz.so.1.2.6
libfreetype.so.6           libpng.so                  modules
libfreetype.so.6.4.0       libpng14.so                pkgconfig
libfusion-1.4.so.15        libpng14.so.14

<humax-from-hdd-boot-case>
/mnt/hd1/bin

[root@HUMAX bin]# cat startYVServices.sh 
#!/bin/sh

/opt/zinc/bin/start-service-over-dbus.sh Zinc.ContentAcquisition
/opt/zinc/bin/start-service-over-dbus.sh Zinc.DeviceSoftware
/opt/zinc/bin/start-service-over-dbus.sh Zinc.DeviceManager
/opt/zinc/bin/start-service-over-dbus.sh Zinc.Broker
/opt/zinc/bin/start-service-over-dbus.sh Zinc.UsageCollection
/opt/zinc/bin/start-service-over-dbus.sh Zinc.Application
/opt/zinc/bin/start-service-over-dbus.sh Zinc.LinearSource
/opt/zinc/bin/start-service-over-dbus.sh Zinc.RemoteDiagnostics
/opt/zinc/bin/start-service-over-dbus.sh Zinc.Metadata --requires Zinc.Broker
/opt/zinc/bin/start-service-over-dbus.sh Zinc.Reminders
/opt/zinc/bin/start-service-over-dbus.sh Zinc.Boot


={============================================================================
*kt_dev_uv_stack_004* stack: oem configs

root# getChildItems oem

root# getChildItems oem | grep softwre
oem.activatedsoftware.coredevicesoftware.platformapiversion=2.9.1
oem.activatedsoftware.coredevicesoftware.version=70.37.05
oem.activatedsoftware.coredevitesoftware.version=1.0.0
oem.activatedsoftware.ispconfiguration.version=10002
oem.activatedsoftware.manufacturerconfiguration.version=4
oem.activatedsoftware.platformconfig=
oem.activatedsoftware.platformconfiguration.version=1304
oem.activatedsoftware.platformsoftware.version=2.9.6
oem.software.version=70.37.05
oem.softwaremanagement.coredevicesoftware.manifest.baseurl=http://su.tv.talktalk.net
oem.softwaremanagement.coredevicesoftware.updatepolicy=standard
oem.softwaremanagement.manufacturerconfiguration.baseurl=http://su.tv.talktalk.net
oem.softwaremanagement.manufacturerconfiguration.updatepolicy=standard


root# which getChildItems
/opt/zinc/bin/getChildItems


{oem-pkg-config}
local -> /opt/oem-staging/humax-dtr_t1000/usr/local//
local/lib/pkgconfig/axis2c.pc
local/lib/pkgconfig/nexus-mgr.pc
local/lib/pkgconfig/directfb.pc
local/lib/pkgconfig/direct.pc
local/lib/pkgconfig/nexusMgr.pc
local/lib/pkgconfig/uuid.pc
local/lib/pkgconfig/fusion.pc
local/lib/pkgconfig/directfb-internal.pc
local/lib/pkgconfig/sawman.pc
local/lib/pkgconfig/nexus.pc


local -> /opt/oem-staging/huawei-dn370t/usr/local/
local/directfb/lib/pkgconfig/libpng.pc
local/directfb/lib/pkgconfig/nexus-mgr.pc
local/directfb/lib/pkgconfig/freetype2.pc
local/directfb/lib/pkgconfig/libpng14.pc
local/directfb/lib/pkgconfig/directfb.pc
local/directfb/lib/pkgconfig/direct.pc
local/directfb/lib/pkgconfig/nexusMgr.pc
local/directfb/lib/pkgconfig/uuid.pc
local/directfb/lib/pkgconfig/fusion.pc
local/directfb/lib/pkgconfig/directfb-internal.pc
local/directfb/lib/pkgconfig/sawman.pc
local/directfb/lib/pkgconfig/nexus.pc
local/lib/pkgconfig/libpng.pc
local/lib/pkgconfig/nexus-mgr.pc
local/lib/pkgconfig/freetype2.pc
local/lib/pkgconfig/libpng14.pc
local/lib/pkgconfig/directfb.pc
local/lib/pkgconfig/direct.pc
local/lib/pkgconfig/nexusMgr.pc
local/lib/pkgconfig/uuid.pc
local/lib/pkgconfig/fusion.pc
local/lib/pkgconfig/directfb-internal.pc
local/lib/pkgconfig/sawman.pc
local/lib/pkgconfig/nexus.pc


={============================================================================
*kt_dev_uv_stack_005* stack: brcm debug level

Invalid level. Should be: err, wrn, msg or none.
echo "nexusMgr msg" >> /proc/brcm/debug


={============================================================================
*kt_dev_uv_stack_006* stack: netflix ps line

16386     1518 66.4 30.2 229456 97392 ?        Sl   14:45   1:03 /opt/netflix/netflix
--write-data-path /app-data/var --cache-path /app-data/cache --disk-cache-path
/app-data/var/nrd/gibbon --user-agent YouViewPlayer4/1.0 (Huawei Technologies Co., Ltd;
    DN370T.02.02.T; 001; CDS/70.37.05; API/2.9.1; PS/2.9.6) (+DVR+FLASH+HTML+MHEG+IPCMC)
--dpi-friendlyname YouView-0067 --device-model YouView_DN370T --esn
YVWTTGD370-9cac040a-6397-4bbd-a0dd-61743837e958 --mdx-manufacturer Huawei Technologies Co., Ltd
--mdx-model-name YouView_DN370T --software-version 70.37.05 --no-mdx
--ui-query-string=source_type=2&trackId=13783779&trackUrl=https%3A%2F%2Fapi.netflix.com%2FBaSePaTh%3Fpage%3DMetaSearch%3F


={============================================================================
*kt_dev_uv_stack_007* stack: virtual rcu

https://wiki.youview.co.uk/display/canvas/2012/04/23/Automating+input+to+the+UI?src=search

<hwei-case>
scp libyouviewrcu.so root@172.20.33.192:/opt/zinc/lib
scp libyouviewrcushim.so root@172.20.33.192:/usr/local/lib/directfb-1.4-15/inputdrivers/
scp libyouviewrcushim.so root@172.20.33.192:/opt/zinc/oss/lib/directfb-1.4-15-pure/inputdrivers/
scp zinc-send-input-key root@172.20.33.192:/usr/local/bin

note: no need to build drivers for hwei. Simply use humax binary which are pre-built.

note: the difference is whether use host nc or busybox nc

# to run it on the box
$ scp zinc-send-input-key root@172.20.33.192:/usr/local/bin

printf "D\t${key}\n\0U\t${key}\n\0" | /opt/zinc/oss/bin/busybox nc $box_ip $box_port

# to run it on the host
./zinc-send-input.sh page_up 172.20.33.192 2033

<keys>
See this for other keys:
https://svn.youview.co.uk/Canvas/Documents/Presentation.Technology/trunk/2105-S%20Flash%20Presentation%20Engine%20Integration%20Specification%20v1.1E%20tracked.pdf

menu                             YouView
page_up                          Channel Up
page_down                        Channel Down
escape                           Close
cursor_up/down/left/right        
ok                               Enter
back                             Back


={============================================================================
*kt_dev_uv_stack_008* stack: startup mw

/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/bin/yv-start-services.sh

#!/bin/sh

prefix="/opt/zinc-trunk"

start() {
    echo "Starting $1"
    "${prefix}/bin/start-service-over-dbus.sh" "$@"
}

start Zinc.DIAL
start Zinc.Crb

exit 0


/opt/zinc-trunk/bin$ cat start-service-over-dbus.sh 
#!/bin/bash

#
# Launch a dbus service using dbus activation
#
# Author: morgan.henry@youview.com
#

#
# Usage: ./start-service-over-dbus.sh Zinc.Metadata [ --requires Zinc.System ]
#

busname=$1

if [[ $2 == "--requires" ]]; then
	# If we know the service we are about to start requires some other service
	# that has an initialisation period that is potentially greater that the dbus method_call timeout
	# then we can explicitly wait for the required service to start
	# This should be avoided where possible, since it is sub-optimial
	requires=$3
	dbuswaitbusname --timeout 30 $requires
fi

# Send a ping to a known dbus service daemon to cause dbus activation trigger daemon launch
dbus-send --session --type=method_call --print-reply --dest=$busname / org.freedesktop.DBus.Peer.Ping &


{nickelmediad} {onscreenidd}
/source/DEVARCH/Nickel/NickelOnScreenId.System.DBusServer/Makefile.am
bin_PROGRAMS = \
	onscreenidd

/source/DEVARCH/Nickel/Nickel.System.DBusServer/Makefile.am
bin_PROGRAMS = nickelmediad

/source/DEVARCH/Nickel/Nickel.System.DBusServer/src/MediaDaemon.cpp

int main(int argc, char *argv[]) {
  NICKEL_INFO("Launching Fake Media Router Service Daemon...");
  int result = EXIT_SUCCESS;

  try {
    MainLoop mainloop(BusName::MEDIA);
    MediaDaemon daemon(mainloop);
    mainloop.post(boost::bind(&MediaDaemon::start, &daemon, argc, argv));
    result = mainloop.run();
  } catch (std::exception& e) {
    std::cerr << e.what() << endl;
    result = EXIT_FAILURE;
  }

  NICKEL_INFO("Fake Media Router Service Daemon shutting down...");
  return result;
}


={============================================================================
*kt_dev_uv_stack_009* stack: nexusmgr

While working on nexus inspect tool, found that it failed to find the libnexusMgr.so at runtime.
Investigated and found that SONAME was libnexusMgr.so.0 but there is no file in /usr/local/lib. When
made a sym link like:

libnexusMgr.so.0 -> libnexusMgr.so

Worked okay. Do we need to make a change to a system to make a link? Why was it okay to run other
application that uses that library?

note: <QQQQ> this is hwei case. how about humax? see /usr/local/lib

Investigated the system and found that applications uses the realname.

note: not used in a box
/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/bin/pcmplaybackd

pcmplaybackd:
 0x00000001 (NEEDED)                     Shared library: [libnexusMgr.so.0]
 0x00000001 (NEEDED)                     Shared library: [libc.so.0]
 0x0000000f (RPATH)                      Library rpath: [/usr/local/lib]
 0x0000001d (RUNPATH)                    Library runpath: [/usr/local/lib]

So the easiest is to change makefile of libnexusMgr to use realname than soname.

<Q>
1. the previous next inspect do not have a reference to nexusMgr.so as below:

$ readelf -d ./Polonium/Polonium.NexusRelease/nexus-inspect | grep NEED
(standard input):4: 0x00000001 (NEEDED)                     Shared library: [libnexus.so]

2. when run w3c, not load nexusMgr but when runs video, can see nexusMgr in mem mapping. So there
  seems other so to load nexusMgr when needed.

Then, the new nexus inspect?

3. Who's using nexusMgr?

Found that mhegdaemon use and get it from a box:

# mhegdaemon
root# cat 1402/maps | grep nexus
2ad14000-2ad17000 r-xp 00000000 08:04 131668     /run/youview/jail/daemons/mhegdaemon-5Zfubm/opt/cds/lib/libdrm_nexus_security.so
2ad26000-2ad28000 rw-p 00002000 08:04 131668     /run/youview/jail/daemons/mhegdaemon-5Zfubm/opt/cds/lib/libdrm_nexus_security.so
2ae12000-2ae17000 r-xp 00000000 08:04 131372     /run/youview/jail/daemons/mhegdaemon-5Zfubm/usr/local/lib/libnexusMgr.so
2ae26000-2ae27000 r--p 00004000 08:04 131372     /run/youview/jail/daemons/mhegdaemon-5Zfubm/usr/local/lib/libnexusMgr.so
2ae27000-2ae28000 rw-p 00005000 08:04 131372     /run/youview/jail/daemons/mhegdaemon-5Zfubm/usr/local/lib/libnexusMgr.so

# readelf -d
0x00000001 (NEEDED)                     Shared library: [libnexusMgr.so]


4.

note: DO NOT have soname but rpath
kpark@wll1p04345:/opt/oem-staging/huawei-dn370t/usr/local/lib$ readelf -d libnexusMgr.so.org 

Dynamic section at offset 0x14c contains 29 entries:
  Tag        Type                         Name/Value
 0x00000001 (NEEDED)                     Shared library: [libnexus.so]
 0x00000001 (NEEDED)                     Shared library: [libstdc++.so.6]
 0x00000001 (NEEDED)                     Shared library: [libm.so.0]
 0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
 0x00000001 (NEEDED)                     Shared library: [libc.so.0]
 0x0000000f (RPATH)                      Library rpath: [/opt/stagecraft-2.0/bin:/opt/zinc/oss/lib]
 0x0000001d (RUNPATH)                    Library runpath: [/opt/stagecraft-2.0/bin:/opt/zinc/oss/lib]
 0x6ffffffe (VERNEED)                    0x1b3c
 0x6fffffff (VERNEEDNUM)                 1
 0x6ffffff0 (VERSYM)                     0x1a34
 0x00000000 (NULL)                       0x0

kpark@wll1p04345:/opt/oem-staging/huawei-dn370t/usr/local/lib$ readelf -d libnexusMgr.so

Dynamic section at offset 0x14c contains 27 entries:
  Tag        Type                         Name/Value
 0x00000001 (NEEDED)                     Shared library: [libpthread.so.0]
 0x00000001 (NEEDED)                     Shared library: [libinit.so]
 0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
 0x00000001 (NEEDED)                     Shared library: [libc.so.0]
 0x0000000e (SONAME)                     Library soname: [libnexusMgr.so.0]


={============================================================================
*kt_dev_uv_stack_010* stack: commit

DEVARCH-XXX: Single line brief description of what this does or fixes.

High level description of what this commit fixes. Give the "why" without
going into too much implementation detail. Could be readable by DME,
OEMs and others who don't have intimate knowledge of the code.

Some more detail about what you've done. Useful for future reference
and for those with more technical knowledge.

- Possibly some bullet points if the commit touched a few different
  things.

Keep all but the first line to <80 chars. If the first line has to be very long to say what the
commit does, then you're probably trying to put too much into one commit. Commits should be "unixy"
- do only one thing and do it well. Here's the wiki page I mentioned previously:

https://wiki.youview.co.uk/display/testautomation/Zinc+Coding+guidelines?src=search#ZincCodingguidelines-Gitcommits

<commit-log>
DEVARCH-8092: the proposed nexus tools and interface to nexusMgr

There is no nexus-inspect for Huawei which is used to release all nexus resources when an
application exits abnormally.

The both OEMs have different nexusMgr implementations and the current nexus-inspect is tightly
coupled with nexusMgr implementation which is private and OEM dependant as described in
DEVARCH-8081, DEVARCH-8092, DEVARCH-8101, and DEVARCH-8080.

Therefore, these commits introduce a separation between inspection and releasing and OEMs and
Youview, propose new APIs, and shows a working implementation in order to make them to deliver the
updated nexusMgr as soon.
  
To use this commit, may use the revised nexusMgr from OEMs which is subject to future delivery from
OEMs according to this proposal.

<log>
DEVARCH-7508: Vanadium.W3CEngine.test: Fix runbrowser-test.sh

The cause of the problem is that the cache size is introduced in the runBrowser.sh[1] but not in the
runBrowser-test.sh. Hence mismatch which causes this failure.

As with runBrower.sh, this commit fixes the problem by looking up the cache size or silently continuing
if it hasn't been set from LSR key `platform.settings.html-app-cache-size` and so the behaviour
shouldn't be surprising.

[1] See DEVARCH-7362, commit cddb793

$ zg-jira-request-review DEVARCH-7508_1 b6157860ac9fbc1d54bb48820b2f2ed7d662c094^1..b6157860ac9fbc1d54bb48820b2f2ed7d662c094


={============================================================================
*kt_dev_uv_stack_011* stack: log

{from-proc}
As an example, can work out log file from fd info:

root       793  0.7  1.0  25528  4176 ?        Sl   16:04   0:00 /opt/zinc/oss/sbin/NetworkManager --no-daemon --log-level=INFO

# ll /proc/793/fd
fd/     fdinfo/ 

# ll /proc/793/fd/
dr-x------    2 root     root           0 Feb 16 16:06 ./
dr-xr-xr-x    6 root     root           0 Jan  1  2000 ../
lr-x------    1 root     root          64 Feb 16 16:06 0 -> /dev/null
l-wx------    1 root     root          64 Feb 16 16:06 1 -> /var/tmp/NetworkManager.log
lrwx------    1 root     root          64 Feb 16 16:06 10 -> /dev/nexus_astm
lrwx------    1 root     root          64 Feb 16 16:06 11 -> /dev/nexus_display
lrwx------    1 root     root          64 Feb 16 16:06 12 -> /dev/nexus_graphics2d
lrwx------    1 root     root          64 Feb 16 16:06 13 -> /dev/nexus_surface
lrwx------    1 root     root          64 Feb 16 16:06 14 -> /dev/nexus_audio
lrwx------    1 root     root          64 Feb 16 16:06 15 -> /dev/nexus_video_decoder
lrwx------    1 root     root          64 Feb 16 16:06 16 -> /dev/nexus_transport
lrwx------    1 root     root          64 Feb 16 16:06 17 -> /dev/nexus_dma
lrwx------    1 root     root          64 Feb 16 16:06 18 -> /dev/nexus_security
lrwx------    1 root     root          64 Feb 16 16:06 19 -> /dev/nexus_spi
l-wx------    1 root     root          64 Feb 16 16:06 2 -> /var/tmp/NetworkManager.log
lrwx------    1 root     root          64 Feb 16 16:06 20 -> /dev/nexus_frontend
lrwx------    1 root     root          64 Feb 16 16:06 21 -> /dev/nexus_keypad
lrwx------    1 root     root          64 Feb 16 16:06 22 -> /dev/nexus_rfm
lrwx------    1 root     root          64 Feb 16 16:06 23 -> /dev/nexus_uhf_input
lrwx------    1 root     root          64 Feb 16 16:06 24 -> /dev/nexus_input_capture
lrwx------    1 root     root          64 Feb 16 16:06 25 -> /dev/nexus_ir_blaster
lrwx------    1 root     root          64 Feb 16 16:06 26 -> /dev/nexus_ir_input
lrwx------    1 root     root          64 Feb 16 16:06 27 -> /dev/nexus_led
lrwx------    1 root     root          64 Feb 16 16:06 28 -> /dev/nexus_gpio
lrwx------    1 root     root          64 Feb 16 16:06 29 -> /dev/nexus_i2c
lr-x------    1 root     root          64 Feb 16 16:06 3 -> pipe:[548]|
lrwx------    1 root     root          64 Feb 16 16:06 30 -> /dev/nexus_pwm
...

cat /var/tmp/NetworkManager.log

<when-in-sandbox>
l-wx------    1 osmiumd  osmiumd       64 Feb 16 16:14 10 -> /run/youview/jail/daemons/osmiumd-N7HXTA/opt/zinc/var/log/litanium.log
lrwx------    1 osmiumd  osmiumd       64 Feb 16 16:14 11 -> anon_inode:[eventpoll]
lrwx------    1 osmiumd  osmiumd       64 Feb 16 16:14 12 -> anon_inode:[eventfd]
l-wx------    1 osmiumd  osmiumd       64 Feb 16 16:04 2 -> /dev/null
l-wx------    1 osmiumd  osmiumd       64 Feb 16 16:04 3 -> /run/youview/jail/daemons/osmiumd-N7HXTA/opt/zinc/var/log/osmium.log

cat /opt/zinc/var/daemons/osmiumd/log/osmium.log


={============================================================================
*kt_dev_uv_stack_100* stack: elememt names

element or component names
https://wiki.youview.co.uk/display/canvas/YouView+Element+Names?src=search



={============================================================================
*kt_dev_uv_stack_101* stack: vanadium: runbrowser

Vanadium provides:

Support for Remote Debugging Webkit provides a protocol that allows remote access to the browser.
See https://www.webkit.org/blog/1620/webkit-remote-debugging/ It adds a "-debug" option to the
command line for w3cEngine that will enable the remote debug on port 9222. Once enabled, you can
access the remote debug information by connecting to port 9222 on the STB using Chrome.

Support for client-side disk cache, i.e. support for storing data on the client in a directory that
is specified by the "-cache" command line. Specifically, it adds support for:

Client-side caching of resources requested by the w3cEngine
Usage of the LocalStorage HTML5 API
Usage of the application cache HTML5 feature

Support for persistent storage of cookies It adds a CookieJar class that uses the QSettings API to
persist cookies. The file used to store cookies is specified by the "-jar" command line option.


# from terminal
Running '/opt/zinc-trunk/bin/runBrowser.sh --app /app --data /app-data --app-launch-parameters
http://refdata.youview.com/mpeg7cs/YouViewIdentifierTypeCS/2011-10-22#groupId.application
crid://bbc.co.uk/iplayer/flash_player/1
http://refdata.youview.com/mpeg7cs/YouViewIdentifierTypeCS/2012-11-08#applicationPublisherIdentifier
uk.co.bbc
http://refdata.youview.com/mpeg7cs/YouViewIdentifierTypeCS/2014-09-25#groupId.application.ondemandPlayer
crid://bbc.co.uk/iplayer/flash_player/1 launch_context.ui.youview.com portal tvp.bbc.co.uk iplayer'
in sandbox...  /app/META-INF/HTML/application.xml validates


app-dir    : /app
data-dir   : /app-data
url        : http://www.bbc.co.uk/iplayer/
sources    : http://www.test.bbc.co.uk http://www.bbc.co.uk http://www.int.bbc.co.uk http://www.stage.bbc.co.uk http://filegateway.youview.co.uk
cache-size : 50000000
channel    : 
exec-helper: /opt/zinc-trunk/bin/exec-then-cleanup-app


./Vanadium/Vanadium.W3CEngine/scripts/runBrowser.sh

exec_wrapper="$prefix/bin/exec-then-cleanup-app"
[ -x "$exec_wrapper" ] || exec_wrapper=""

cmd="${RUN_BROWSER_CMD:-$prefix/bin/w3cEngine}"

exec $exec_wrapper "$cmd" \
$enable_webkit_remote_debugging_as_needed \
-cache "$app_data_dir/client-cache" \
-cache-size "$cacheSize" \
-jar "$app_data_dir/cookies.sqlite" \
-url "$url" \
-src "$sources"


** KT: ===================== **
** KT: exec-then-cleanup-app ** pid((null)) 
** KT: exec-then-cleanup-app: pid(null) 
** KT: exec-then-cleanup-app: parent: argv[1](/opt/zinc-trunk/bin/w3cEngine) 
** KT: exec-then-cleanup-app: child: argv[0](/opt/zinc-trunk/bin/exec-then-cleanup-app) parent_pid(1479) 
** KT: ===================== **
** KT: exec-then-cleanup-app ** pid(1479) 
** KT: exec-then-cleanup-app: pid(not null), cleanup_exe(/opt/zinc-trunk/bin/nexus-inspect) 
Going to watch pid: 1479

# when do abnormal termination
** HMAX KT: Releasing Nexus resources: expected 1479 == shm 1479 

# when do normal termination
** HMAX KT: The nexus resources are currently free. shm is 0


16385     2025 15.1 19.9 341300 75940 ?        Sl   15:22   0:37 /opt/zinc/bin/w3cEngine -cache
/app-data/client-cache -cache-size 50000000 -jar /app-data/cookies.sqlite -url
http://www.bbc.co.uk/iplayer/ -src http://www.test.bbc.co.uk http://www.bbc.co.uk
http://www.int.bbc.co.uk http://www.stage.bbc.co.uk http://filegateway.youview.co.uk

note: do not work on the box
LD_DEBUG=libs 
/opt/zinc/bin/w3cEngine -cache 
/app-data/client-cache -cache-size 50000000 -jar /app-data/cookies.sqlite -url 
http://www.bbc.co.uk/iplayer/ -src http://www.test.bbc.co.uk http://www.bbc.co.uk 
http://www.int.bbc.co.uk http://www.stage.bbc.co.uk http://filegateway.youview.co.uk


={============================================================================
*kt_dev_uv_stack_102* stack: vanadium: binding

JSBindingNP.h

/**
 * This is a single entry point for binding JavaScript with C++ via NPAPI.
 *
 * `JSBindingNP` is a base class which API specific classes should inherit For
 * example if `Example` API needs to be provided to JavaScript, a binding class
 * for it should be created:
 *
 *     class ExampleBindingNP : public JSBindingNP { ... };
 *
 * The reason for this relationship is that the `JSBindingNP` base class is used
 * to resolve the actual calls with what's been registered by the concrete
 * binding class.
 *
 * The concrete binding class should provide an API that mirrors the actual
 * "back-end" implementation API and register it in the `JSBindingNP` class with
 * macros provided.  When the call is resolved it's responsible for
 * unmarshalling and validating the arguments, making a call to the
 * implementation and marshalling the result.
 *
 *    ExampleBindingNP::ExampleBindingNP(const boost::shared_ptr<Example>& impl)
 *        : impl(impl), ...
 *    {
 *        JS_BINDING_NP_BEGIN(ExampleBindingNP);
 *        ADD_METHOD(foo);
 *        ADD_PROPERTY(bar);
 *        JS_BINDING_NP_END();
 *    }
 *
 *    NPVariant ExampleBindingNP::foo(const NPVariant* const args,
 *                                    const uint32_t argCount)
 *    {
 *        // ...
 *    }
 *
 *    NPVariant ExampleBindingNP::bar()
 *    {
 *        // getter
 *    }
 *
 *    void ExampleBindingNP::bar(const NPVariant* value)
 *    {
 *        // setter
 *    }
 *
 * Adding and removing events is pretty much handled by the `JSBindingNP` class.
 * A concrete binding class only needs to register the event and set a callback
 * on a relevant implementation callback handler.  The callback should then do
 * all arguments marshalling and call `JSBindingNP::notifyListeners()` method.
 *
 *    JS_BINDING_NP_BEGIN(ExampleBindingNP);
 *    // ...
 *    ADD_EVENT(onbaz);
 *    impl->onbaz(
 *        boost::bind(&ExampleBindingNP::onbaz, this));
 *    // ...
 *
 *    void ExampleBindingNP::onbaz()
 *    {
 *        notifyListeners("onbaz", std::vector<NPVariant>());
 *    }
 */

<0> To be used from JavaScript like this:

broadcastObj = document.getElementById('someId');
broadcastObj.addEventListener("NetworkConnectivityStateChange",
function(state, error) { /* console.log("state = "+state); */ });

The state argument is an integer enumeration with 0 standing for "disconnected" and 1 standing for "connected".


<1> so "binding" dir has sources for each interface bindings such as channel and videobroadcast.

// a/Vanadium/Vanadium.W3CEngine/src/plugins/broadcast/bindings/VideoBroadcastBindingNP.h, cpp
// 
// class VideoBroadcast is ABC and then concrete impl classes:
//
// /broadcast/production/
// class ProductionVideoBroadcast : public VideoBroadcast,
//
// /broadcast/fake/
// class ZINC_LOCAL FakeBroadcast : virtual public Broadcast   note: why virtual?
//

class VideoBroadcastBindingNP : public JSBindingNP
{
    boost::shared_ptr<VideoBroadcast> vb;
}

note: register its handler with vb "impl" class. that is event 'down' path

VideoBroadcastBindingNP::VideoBroadcastBindingNP()
{
    ADD_EVENT(onNetworkConnectivityStateChange);
    vb->onNetworkConnectivityStateChange(
        boost::bind(&VideoBroadcastBindingNP::onNetworkConnectivityStateChange,
                    this, _1));
}

note: forward 'event' up to the chain.

void VideoBroadcastBindingNP::onNetworkConnectivityStateChange(
    NetworkConnectivityState::Enum state)
{
    std::vector<NPVariant> args(1);
    args[0] = wrap(state, plugin());

    notifyListeners("onNetworkConnectivityStateChange", args);
}


<2> save a handler from "binding" class

// a/Vanadium/Vanadium.W3CEngine/src/plugins/broadcast/production/ProductionVideoBroadcast.cpp 

void ProductionVideoBroadcast::onNetworkConnectivityStateChange(
    boost::function<void(NetworkConnectivityState::Enum)> handler)
{
    onNetworkConnectivityStateChangeHandler = handler;
}

// from NM?
// a/Vanadium/Vanadium.W3CEngine/src/plugins/broadcast/production/ProductionVideoBroadcast.cpp 
// 
void ProductionVideoBroadcast::StateChanged(
    const NS_NEON_SYSTEM::NM_STATE::Enum state)
{
    NetworkConnectivityState::Enum const targetState =
        state == NS_NEON_SYSTEM::NM_STATE::connected
        ? NetworkConnectivityState::connected
        : NetworkConnectivityState::disconnected;

    emitNetworkConnectivityStateChange(targetState);
}

void ProductionVideoBroadcast::emitNetworkConnectivityStateChange(
    NetworkConnectivityState::Enum state)
{
    if (onNetworkConnectivityStateChangeHandler)
    {
        try
        {
            onNetworkConnectivityStateChangeHandler(state);
        }
        catch (...)
        {
            VANADIUM_WARN("Executing network connectivity state change handler failed");
        }
    }
}


={============================================================================
*kt_dev_uv_stack_103* stack: vanadium: remote debug

https://wiki.youview.co.uk/display/YVDP/Debugging?src=search


={============================================================================
*kt_dev_uv_stack_104* stack: LSR (local storage repository)

./Copper/Copper.System.DBusClient/src/lsr-config.c


={============================================================================
*kt_dev_uv_stack_150* stack: network

The dbus log when plug out and then plug in a cable

# dbus-monitor "interface=org.freedesktop.NetworkManager.Device.Wired 

Tue 2015-02-17 14:32:27 GMT
[17-02-2015 14:32:27.880473] signal sender=org.freedesktop.DBus -> dest=:1.80 serial=2 path=/org/freedesktop/DBus; interface=org.freedesktop.DBus; member=NameAcquired
   string ":1.80"
Feb 17 14:32:44 syslog[785]: <info> (eth0): carrier now OFF (device state 8)
Feb 17 14:32:44 syslog[785]: <info> (eth0): device state change: 8 -> 2 (reason 40)
Feb 17 14:32:44 syslog[785]: <info> (eth0): deactivating device (reason: 40).
eth0 Link DOWN.
Feb 17 14:32:44 syslog[785]: <info> (eth0): canceled DHCP transaction, DHCP client pid 815
[17-02-2015 14:32:44.579382] signal sender=:1.0 -> dest=(null destination) serial=204 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "Carrier"
         variant             boolean false                  note: OFF
      )
      dict entry(
         string "State"
         variant             uint32 2
      )
      dict entry(
         string "Dhcp4Config"
         variant             object path "/"
      )
      dict entry(
         string "Ip6Config"
         variant             object path "/"
      )
      dict entry(
         string "Ip4Config"
         variant             object path "/"
      )
   ]
eth0 cable unplugged, powering down
eth0 cable plugged in, powering up
eth0 Link UP.
Auto config phy
eth0: Link is up, 100 Mbps Full Duplex
Feb 17 14:33:05 syslog[785]: <info> (eth0): carrier now ON (device state 2)
Feb 17 14:33:05 syslog[785]: <info> (eth0): device state change: 2 -> 3 (reason 40)
[17-02-2015 14:33:05.661158] signal sender=:1.0 -> dest=(null destination) serial=209 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "Carrier"
         variant             boolean true          note: ON
      )
      dict entry(
         string "State"
         variant             uint32 3
      )
   ]
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) starting connection 'bf2bf8f8-d3c5-43c9-806f-129a9f730cb6'
Feb 17 14:33:05 syslog[785]: <info> (eth0): device state change: 3 -> 4 (reason 0)
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 1 of 5 (Device Prepare) scheduled...
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 1 of 5 (Device Prepare) started...
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 2 of 5 (Device Configure) scheduled...
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 1 of 5 (Device Prepare) complete.
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 2 of 5 (Device Configure) starting...
Feb 17 14:33:05 syslog[785]: <info> (eth0): device state change: 4 -> 5 (reason 0)
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 2 of 5 (Device Configure) successful.
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 3 of 5 (IP Configure Start) scheduled.
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 2 of 5 (Device Configure) complete.
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 3 of 5 (IP Configure Start) started...
Feb 17 14:33:05 syslog[785]: <info> (eth0): device state change: 5 -> 7 (reason 0)
[17-02-2015 14:33:05.685977] signal sender=:1.0 -> dest=(null destination) serial=214 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Beginning DHCPv4 transaction (timeout in 1073741823 seconds)
   array [
      dict entry(
         string "State"
         variant             uint32 4
      )
   ]
[17-02-2015 14:33:05.701563] signal sender=:1.0 -> dest=(null destination) serial=218 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "State"
         variant             uint32 5
      )
   ]
Feb 17 14:33:05 syslog[785]: <info> dhclient started with pid 1546
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 3 of 5 (IP Configure Start) complete.
[17-02-2015 14:33:05.708832] signal sender=:1.0 -> dest=(null destination) serial=220 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "State"
         variant             uint32 7
      )
   ]
Feb 17 14:33:05 syslog[785]: <info> (eth0): DHCPv4 state changed nbi -> preinit
Feb 17 14:33:05 syslog[785]: <info> (eth0): DHCPv4 state changed preinit -> reboot
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 4 of 5 (IP4 Configure Get) scheduled...
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 4 of 5 (IP4 Configure Get) started...
Feb 17 14:33:05 syslog[785]: <info>   address 172.20.35.27
Feb 17 14:33:05 syslog[785]: <info>   prefix 20 (255.255.240.0)
Feb 17 14:33:05 syslog[785]: <info>   gateway 172.20.32.1
Feb 17 14:33:05 syslog[785]: <info>   nameserver '127.0.0.1'
Feb 17 14:33:05 syslog[785]: <info>   nameserver '172.20.34.223'
Feb 17 14:33:05 syslog[785]: <info>   nameserver '172.20.34.224'
Feb 17 14:33:05 syslog[785]: <info>   nameserver '172.20.35.66'
Feb 17 14:33:05 syslog[785]: <info> Scheduling stage 5
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 5 of 5 (IP Configure Commit) scheduled...
Feb 17 14:33:05 syslog[785]: <info> Done scheduling stage 5
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 4 of 5 (IP4 Configure Get) complete.
Feb 17 14:33:05 syslog[785]: <info> Activation (eth0) Stage 5 of 5 (IP Configure Commit) started...
[17-02-2015 14:33:05.932824] signal sender=:1.0 -> dest=(null destination) serial=222 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "Dhcp4Config"
         variant             object path "/org/freedesktop/NetworkManager/DHCP4Config/1"
      )
   ]
Feb 17 14:33:06 syslog[785]: <info> (eth0): device state change: 7 -> 8 (reason 0)
Feb 17 14:33:06 syslog[785]: <info> Policy set 'bf2bf8f8-d3c5-43c9-806f-129a9f730cb6' (eth0) as default for IPv4 routing and DNS.
Feb 17 14:33:06 syslog[785]: <info> Activation (eth0) successful, device activated.
Feb 17 14:33:06 syslog[785]: <info> Activation (eth0) Stage 5 of 5 (IP Configure Commit) complete.
[17-02-2015 14:33:07.009626] signal sender=:1.0 -> dest=(null destination) serial=230 path=/org/freedesktop/NetworkManager/Devices/0; interface=org.freedesktop.NetworkManager.Device.Wired; d
   array [
      dict entry(
         string "State"
         variant             uint32 8
      )
      dict entry(
         string "Ip4Config"
         variant             object path "/org/freedesktop/NetworkManager/IP4Config/1"
      )
   ]
Feb 17 14:33:56 syslog[785]: <info> Trying to start the supplicant...


={============================================================================
*kt_dev_uv_stack_200* stack: dbus

To get the list of active bus names. This is script in box: opt/zinc/devel/bin/lsdbus

$lsdbus

# dbus-send Emporium

https://wiki.youview.co.uk/display/canvas/dbus-send+Emporium?src=contextnavpagetreemode

<monitor>
# to capture
dbus-monitor > /mnt/hd1/mylogs.log &
dbus-monitor | tee /mnt/hd1/mylogs.log &

# To launch Dbus-Monitor on your STB, and inspect MediaRouter activity, run the following command:
dbus-monitor "interface=Zinc.Media.MediaRouter"

# will only display MediaRouter SourceEvent messages:
dbus-monitor | grep -C 2 "member=SourceEvent"

dbus-monitor "type=method_call" "type=method_return" "type=error"

dbus-monitor --profile "interface=Zinc.Application.ApplicationManager,member=launchApplication" \ 
   "interface=Zinc.Application.ApplicationManager,member=ApplicationLifecycleEvent"

<introspect>

Q: which is the start to build interface/method to build a hierarchy?

kpark@wll1p04345:~/source/DEVARCH/Neon$ find . -name *.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerActiveConnection.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerSettings.xml
./Neon.System.API/data/introspection-xml/enum-PingStatus.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-settings.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-device-ethernet.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-active-connection.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-manager.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-device.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-exported-connection.xml
./Neon.System.API/data/introspection-xml/vendor/NetworkManager/NM_0_8/nm-ip4-config.xml
./Neon.System.API/data/introspection-xml/enum-NM_DEVICE_CAP.xml
./Neon.System.API/data/introspection-xml/struct-PingResponse.xml
./Neon.System.API/data/introspection-xml/enum-NM_ACTIVE_CONNECTION_STATE.xml
./Neon.System.API/data/introspection-xml/enum-NM_STATE.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerIP4Config.xml
./Neon.System.API/data/introspection-xml/service.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerDeviceWired.xml
./Neon.System.API/data/introspection-xml/enum-NM_DEVICE_TYPE.xml
./Neon.System.API/data/introspection-xml/enum-NM_DEVICE_STATE.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerDevice.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManager.xml
./Neon.System.API/data/introspection-xml/interface-NetworkManagerSettingsConnection.xml
./Neon.System.API/data/introspection-xml/enum-NM_DEVICE_STATE_REASON.xml
./Neon.System.API/data/introspection-xml/interface-IPNetwork.xml


={============================================================================
*kt_dev_uv_stack_200* commands

# what?
root# setItem platform.settings.enable-ipcrb 1

# log?
tail -f /opt/zinc/var/daemons/crbd/log/helium.log


How to Introspect DBus from the Command Line
https://wiki.youview.co.uk/display/canvas/How+to+Introspect+DBus+from+the+Command+Line?src=search
# to see messages on dbus
root# dbus-monitor "interface=Zinc.Application.ApplicationManager"

# what is it? LSR?
root# getChildItems oem

# what?
export GST_PLUGIN_PATH=/opt/zinc/oss/lib:/opt/zinc/oss/lib/gstreamer-1.0
export LD_LIBRARY_PATH=/lib:/usr/local/lib:/opt/zinc/oss/lib/gstreamer-1.0:/opt/zinc/oss/lib:/opt/zinc/oss/lib/python2.6

LD_PRELOAD=/usr/local/lib/libdirectfb.so:/usr/local/lib/libdirect.so:/usr/local/lib/libinit.so gst-launch-1.0 souphttpsrc location=http://54.225.86.153/INT01_LCN_551.sdp ! vqesdpdemux caps=video/mpegts ! queue ! tsnexusbin 


={============================================================================
*kt_dev_uv_wiki_001* dbus-monitor

dbus-send  --session --type=method_call --print-reply --dest='org.freedesktop.DBus' / org.freedesktop.DBus.ListNames
dbus-monitor --profile "interface=Zinc.Application.ApplicationManager,member=launchApplication" "interface=Zinc.Application.ApplicationManager,member=ApplicationLifecycleEvent"

{dbus-spy}
https://wiki.youview.co.uk/display/YVDP/How+to+inspect+MediaRouter+activity
This is a python script and run on the box.

MediaRouter Dbus Spy is a tool that prints all the MediaRouter dbus communications in a more
readable format than the raw output. It also reports when a new application is launched or killed
and any MediaRouter crash.


={============================================================================
*kt_dev_uv_hwei_001* stack: convert ro filesystem to rw

From the release, follow the step 3:

https://wiki.youview.co.uk/display/canvas/HOWTO+Install+Huawei+DN370T+PVR1+B37SP11

3. Boot from HDD

From SSH or the serial console run the following command:

mkdir -p /mnt/nand/userdata/data && echo "rw" > /mnt/nand/userdata/data/rw_cmd

The next boot will take slightly longer than normal as the files are copied from nand to the harddisk.


={============================================================================
*kt_dev_uv_task_001* task:01: nexusMgr

{inspect}
used in wrapper:

/bin/nexus-inspect -r -p "${parent_pid}"


{mgr-interface}
nexusMgr interfaces:

BcmNexus_Audio_Mixer_Register(NEXUS_AudioMixerHandle hMixer)
BcmNexus_Audio_Mixer_Unregister(void)
BcmNexus_Graphics_Resources_Acquire(BcmNexus_Graphics_Resources_Config *)
BcmNexus_Graphics_Resources_Release(const BcmNexus_Graphics_Resources *)
BcmNexus_ImageDecoder_Resources_Acquire(const BcmNexus_ImageDecoder_Resources_Config *)
BcmNexus_ImageDecoder_Resources_Release(const BcmNexus_ImageDecoder_Resources *)
BcmNexus_Input_Resources_Acquire(const BcmNexus_Input_Resources_Config *)
BcmNexus_Input_Resources_Release(const BcmNexus_Input_Resources *)
BcmNexus_Key_Last_Key_Timestamp(void)
BcmNexus_Platform_Init(void)
BcmNexus_Platform_Uninit(void)
BcmNexus_Screen_Capture(void)
BcmNexus_SetMixerPath(NEXUS_AudioMixerHandle hmixer, const BcmNexus_StreamPlayer_Resources *resources)
BcmNexus_Set_Last_Key_Timestamp(void)
BcmNexus_SoundOutput_Resources_Acquire(const BcmNexus_SoundOutput_Resources_Config *)
BcmNexus_SoundOutput_Resources_Release(const BcmNexus_SoundOutput_Resources *)
BcmNexus_SoundOutput_SetVolume(BcmNexus_SoundOutput_Volume, unsigned)
BcmNexus_StreamPlayer_Resources_Acquire(const BcmNexus_StreamPlayer_Resources_Config *)
BcmNexus_StreamPlayer_Resources_Avaiable(void)
BcmNexus_StreamPlayer_Resources_Release(const BcmNexus_StreamPlayer_Resources *)
BcmNexus_UnSetMixerPath(NEXUS_AudioMixerHandle hmixer, const BcmNexus_StreamPlayer_Resources *resources)


{shm}
<from-inspect>
// return true if no shared mem opens or destroied it successfully. so no process owns it
static bool do_platform_init(size_t shMemSz);

static void releaseNexusResources( BcmNexus_Shared_Memory *shmem )
{
  shmem->resource_pid = getpid();
  printf( "Reset resource_pid\n" );
  /* set callback to NULL */

  // <out> commented out since no support from HWEI
  // resetDimmingSetting(shmem);
  // {
  //  NEXUS_PictureCtrl_GetCommonSettings( sharedMem->videoWindow, &picture_settings );
  // }

  NEXUS_VideoDecoder_Stop( shmem->videoDecoder );
  NEXUS_AudioDecoder_Stop( shmem->audioDecoder[0] );

  // <out> commented out since no support from HWEI
  // for (uint8_t i = 0; i < MAX_PUMP_NUM; ++i)
  // {
  //   // stopPlayPump( shmem->playpump[i] );
  //   {
  //     NEXUS_PlaypumpSettings playpump_settings;
  //     NEXUS_Playpump_Stop( playPump );
  //     NEXUS_Playpump_GetSettings( playPump, &playpump_settings );
  //     NEXUS_Playpump_SetSettings( playPump, &playpump_settings );
  //   }
  // }

  NEXUS_VideoDecoder_Flush( shmem->videoDecoder );

  // <mod> HWEI has two audio decoders
  NEXUS_AudioDecoder_Flush( shmem->audioDecoder[0] );

  // <out> commented out since no support from HWEI
  // for (uint8_t i = 0; i < MAX_PUMP_NUM; ++i)
  // {
  //   NEXUS_Playpump_Flush( shmem->playpump[i] );
  // }

  shmem->resource_pid=0;
}

<missed-from-huawei>
These are fields that huawei mgr DO NOT HAVE from what inspect tool uses.

BcmNexus_State.sharedMem->videoWindow;
BcmNexus_State.sharedMem->playPump[i];


<from-inspect>
typedef struct
{
  NEXUS_AudioMixerHandle      mixer;
  NEXUS_AudioPlaybackHandle   pcmPlayback[NEXUS_NUM_AUDIO_PLAYBACKS];
  NEXUS_AudioDecoderHandle    audioDecoder[1];           // used
  NEXUS_Ac3EncodeHandle       ac3Encoder;
  NEXUS_StcChannelHandle      stcChannel;
  NEXUS_VideoDecoderHandle    videoDecoder;              // used
  NEXUS_VideoWindowHandle     videoWindow;               // used
  NEXUS_PlaypumpHandle        playpump[MAX_PUMP_NUM];    // used
  NEXUS_DmaHandle             dmaHandle;
  pid_t                       resource_pid;
} BcmNexus_Shared_Memory;


<from-mgr-humax>
typedef struct {
  //
  // 'same' as inspect
  //
  NEXUS_AudioPlaybackStartSettings    audioStartSettings;
  bool                                pcmStarted[NEXUS_NUM_AUDIO_PLAYBACKS];
} BcmNexus_Shared_Memory;

<from-mgr-huawei>
typedef struct {
    NEXUS_AudioMixerHandle              mixer;
    NEXUS_AudioPlaybackHandle           pcmPlayback[NEXUS_NUM_AUDIO_PLAYBACKS];
    NEXUS_AudioDecoderHandle            audioDecoder[2];
    NEXUS_VideoDecoderHandle            videoDecoder;
} BcmNexus_Shared_Memory;



{pid-check}
<from-inspect>
When the given pid is the same as shm pid, then do release:

if ( 0 == expected_owning_pid || expected_owning_pid == sharedMem->resource_pid )

<from-mgr-humax>
BcmNexus_StreamPlayer_Resources_Acquire( const BcmNexus_StreamPlayer_Resources_Config *config)
{
  // check in both oem. this prevents the same process getting the same.
  if (BcmNexus_State.streamResource) {
    BDBG_MSG_TRACE(("BcmNexus_StreamPlayer_Resources_Acquire: Already acquired!!"));
    return NULL;
  }

  // check and if already owns by the other process then returns. only when no
  // one owns it, go forward
  if( (BcmNexus_State.sharedMem->resource_pid != 0) && (BcmNexus_State.sharedMem->resource_pid != getpid()) )

  // set to say i owns it
  BcmNexus_State.sharedMem->resource_pid = getpid();
}

BcmNexus_StreamPlayer_Resources_Release()
{
  // set pid = 0
}

note: Q: the below is ONLY for humax and not used in inspect tool. Who's using it?

BcmNexus_StreamPlayer_Resources_Avaiable(void)
{
  if( (BcmNexus_State.sharedMem->resource_pid == 0) || (BcmNexus_State.sharedMem->resource_pid == getpid()) )
}


{hwei-mgr-modification}
<playpump>
note: The below is only for Humax and also has a pair for Init and Uninit for each audio and video.
BcmNexus_Platform_Init_Video(void);

For HWEI, the below do the work that Init_Audio and Init_Video do in HMAX case. Hence added playpump
open code in:
BcmNexus_Platform_Init_Audio(void);

However, no pair but instead uninit done in: 
BcmNexus_StreamPlayer_Resources_Release(const BcmNexus_StreamPlayer_Resources *resources_)

Added playpump in SHM structure and handles it in Init and Release.

<videoWindow>
note: do not use videoWindowSD in inspect tool so not shared in shm.

BcmNexus_State.sharedMem->videoWindow;

As with playpump, init and uninit done in Acquire and Release:

BcmNexus_StreamPlayer_Resources_Acquire
BcmNexus_StreamPlayer_Resources_Release

note: Unline HMAX, NO input connection on videoWindow in Acquire and so no handle in Release.

Added videoWindow in SHM structure and handles it in Acquire and Release.

This cause opps:
Code: 00000000  8fa20010  3c04e1bd <8c420000> 24848dbc  afa20010  8fa30010  8fa20014  0062001a
### 00:00:22.574 nexus_driver_callbacks: two apps can't register for the same callback for the same handle
*** 00:00:22.574 nexus_driver_callbacks: nexus_driver_callback_to_driver: (HDMI_OUTPUT:0xcf3a6c80) not enough resources to map callback 0xc04:0xe1d60064
*** 00:00:22.574 BHDM_EDID: Overriding 1366x768p/1360x768p to BFMT_VideoFmt_e720p
!!! Assert 'Bad object of expected type #NEXUS_VideoWindow:0xdeadda7a (0x0:0xe19f39b4)' Failed at /home/gejing/dn370tb37sp05/bcm7409/refsw6.5/nexus/modules/display/7420/src/nexus_video_window.c:1285
BKNI_Fail: forcing oops
CPU 0 Unable to handle kernel paging request at virtual address 00000000, epc == e178ec90, ra == e178ec88


{open-and-start}
<from-mgr-humax>

Q: nexusMgr already has Init and Uninit interface. Is it okay to use these rather than implementing
the proposed function? 

BcmNexus_Platform_Uninit(void);

A: NO. Since Init and Uninit pair do 'open' and close but inspect tool uses 'stop'. Interestingly, the
nexusMgr do not use 'start' interface. Does it mean that do start automatically when it is opened?


BcmNexus_State.sharedMem->ac3Encoder = NEXUS_Ac3Encode_Open(NULL);


{design} the suggested call
1. check manager's init state and the given pid.

if( !BcmNexus_State.initialized && pid != resource_pid )
   return;

2. set shm resource pid = 0 at the end of the call.


{tickets}
https://jira.youview.co.uk/browse/DEVARCH-8092
Provide a method in Huawei's nexusMgr to release resources acquired by a pid

<proposed-api>
The proposed interface in OEM nexusMgr code.
BcmNexus_Release_All_Resources_Acquired_By_Process(pid_t pid);

https://jira.youview.co.uk/browse/YVHUAWEI-6095
Kernel oops when killing w3cEngine or Netflix

Chris Dudding added a comment - Last Wednesday 15:34
B37SP05 is an engineering release, so the "kernel oops" fixes are not applied in the latest Huawei
FR13 release (B37SP11). We've asked them to apply the fix into their main FR13 branch. We will mark
this ticket as resolved when the fix is available in the next FR13 release.

Zegen Pei added a comment - Last Friday 02:25
fixed in 70.37.13

note: update. 2015.01.15. tried the eng. release and seen no kernel oops any more.


https://jira.youview.co.uk/browse/DEVARCH-8081
<TODO> 1
If we are to proceed with `nexus-inspect` as a solution, we separately need OEMs to move the struct
definition into the header file, but for now, we should identify which devices the current
implementation is compatible with. 

Device Works (Y/N)   Comments
Humax T1000          Y 
Humax T2100/T2000    Y 
Humax T2200          Y 
Huawei DN370T        N 
Huawei DN372T 
Huawei DN360T

note: before that need to verify #6095 first since it cause opps when kill apps.

1. this is function sets resource_pid in humax case
BcmNexus_StreamPlayer_Resources_Acquire(const BcmNexus_StreamPlayer_Resources_Config *)

2. We could perhaps make an initial implementation of this for each OEM and provide as a patch to
OEMs, or if that proves too problematic in the Huawei case, leave it as an empty "no-op", and let
them fill-in the implementation.

3. At the moment Humax saves the pid of the last process and Ideally we should know what process
acquired each resource so we can more safely release them. Some testing will tell us how necessary
it is for now.

https://jira.youview.co.uk/browse/DEVARCH-8080
<disable>
This can be disabled by removing either of the executables:
    /opt/zinc/bin/exec-then-cleanup-app.sh
    /opt/zinc/bin/nexus-inspect


{logs}
2015.01.16: 

1. able to build nexus mgr which has debug print mesg to see if it is loaded and used.  found the
problem which prevents me copying the built lib to a box since box has read-only fs. need to make it
rw fs.

2. managed to make a fs writable.

3. however, tried to use the lib built on my own, the box doesn't boot up but when use the original
lib works okay. why?

4. __FUNCTION__ macro seems to cause one problem. need to check.

5. there is the latest nexusMgr code from HWEI and tried that as well. But no success. The code from
https://jira.youview.co.uk/browse/YVHUAWEI-5895

6. three versions of nexus mgr: from uv git, from the gira, from the staging folder.

7. the log line
Error org.freedesktop.DBus.Error.NoMemory: Launcher could not run (out of memory)


2015.01.19, Mon:

1. Tried three variants of sources. None of them works. Asked Bomen(HWEI guy) to have a trace log
for a working case to compare.

2015.01.20, Tue:

1. Created a new ticket for an issue that cannot build a working nexusMgr. 
https://jira.youview.co.uk/browse/YVHUAWEI-6598

2. Ongoing discussion about features to implement.
https://jira.youview.co.uk/browse/YVHUAWEI-6095


2015.01.21, Wed:

1. Hack sources

HUAWEI_SHARED_RESOURCE        : defed in src

NEXUS_HAS_PICTURE_DECODER     : NO
_SC_DIRECT_NEXUS_             : NO
NEXUS_NUM_XXX                 : NO
DFB_PLATFORM_VERSION_MAJOR    : NO
DUAL_OUTPUT                         : defed in pkg config for hwei and hmax
NEXUS_HAS_DMA && NEXUS_HAS_SECURITY : defed in pkg config
BCMEXUS_STREAM_XXX                  : NO
USE_SIMPLE_DECODER                  : NO


2015.01.29, Thu:

Investigating shmget error.

" from nexusMgr log line
log-usb-Mon-Jan-26-12:01:40:1253:*** KT: 0121: NEW BcmNexus_Platform_Init_Audio: shm size(24) ***

" from proc device
305450176

cat /proc/sysvipc/shm
key         shmid    perms    size  cpid  lpid nattch uid   gid  cuid  cgid      atime      dtime      ctime
305450176   163844   666      24    1063  1395 4      504   504   504   504 1422517874 1422517866         33
 
504       1063 12.6  9.7 502416 31352 ?        Sl   07:50   8:03 /opt/cds/bin/huaweidaemon

However, inspect asks 28 bytes which is the cause of the error.


02.06:

kpark@wll1p04345:/opt/oem-staging/huawei-bcm7409$ find . -name nexusMgr.* 
./usr/local/include/nexusMgr/nexusMgr.h
./usr/local/include/nexusMgr/nexusMgr.c
./usr/local/lib/nexusMgr.h
./usr/local/lib/pkgconfig/nexusMgr.pc


# inspect build line:
#
-L/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/usr/local/lib -lnexusMgr
-ldirectfb -lfusion -ldirect -linit -lnexus -lz -lpthread -pthread nexus_inspect-nexus-inspect.o: In
function `main': /home/kpark/source/DEVARCH/Polonium/Polonium.NexusInspect/src/nexus-inspect.c:343:

02.09:
======

{shm-diff}

The handles are all pointers like:

typedef struct NEXUS_AudioMixer *NEXUS_AudioMixerHandle;


<proposed>
#define NEXUS_INSPECT_NUM_ADECS       (2)
#define NEXUS_INSPECT_NUM_PLAYBACKS   (2)
#define NEXUS_INSPECT_NUM_PLAYPUMPS   (1)

typedef struct {
  NEXUS_AudioMixerHandle      mixer;
  NEXUS_AudioPlaybackHandle   pcmPlayback[2];
  NEXUS_AudioDecoderHandle    audioDecoder[2];
  NEXUS_VideoDecoderHandle    videoDecoder;
  NEXUS_StcChannelHandle      stcChannel;
  NEXUS_Ac3EncodeHandle       ac3Encoder;
  NEXUS_DmaHandle             dmaHandle;
  NEXUS_VideoWindowHandle     videoWindow;
  NEXUS_PlaypumpHandle        playpump[1];
  pid_t                       resource_pid;
} NexusInspectCapsV0;


<humax> (from inspect.c)
#define NEXUS_NUM_AUDIO_PLAYBACKS 2
#define NEXUS_NUM_HDMI_OUTPUTS 1
#define MAX_PUMP_NUM	1

typedef struct {
  NEXUS_AudioMixerHandle              mixer;
  NEXUS_AudioPlaybackHandle           pcmPlayback[2];
  NEXUS_AudioDecoderHandle            audioDecoder[1];
  NEXUS_VideoDecoderHandle            videoDecoder;
  NEXUS_StcChannelHandle              stcChannel;
  NEXUS_Ac3EncodeHandle               ac3Encoder;
  NEXUS_DmaHandle                     dmaHandle;
  NEXUS_VideoWindowHandle             videoWindow;
  NEXUS_PlaypumpHandle                playpump[1];
  pid_t                               resource_pid;
} BcmNexus_Shared_Memory;

<huawei>

#define NEXUS_NUM_AUDIO_PLAYBACKS (1)

typedef struct {
    NEXUS_AudioMixerHandle              mixer;
    NEXUS_AudioPlaybackHandle           pcmPlayback[1];
    NEXUS_AudioDecoderHandle            audioDecoder[2];
    NEXUS_VideoDecoderHandle            videoDecoder;
    NEXUS_StcChannelHandle              stcChannel;
    pid_t                               resource_pid;
} BcmNexus_Shared_Memory;


   humax                                                                         hwei
--------------------------------------------------------------------          --------------------------------------------------------------------
typedef struct                                                                typedef struct 
{                                                                             {                                                                 
  NEXUS_AudioMixerHandle      mixer;                                            NEXUS_AudioMixerHandle              mixer;
  // 2 in mgr source                                                            // 1 in oem stage
  NEXUS_AudioPlaybackHandle   pcmPlayback[NEXUS_NUM_AUDIO_PLAYBACKS];           NEXUS_AudioPlaybackHandle           pcmPlayback[NEXUS_NUM_AUDIO_PLAYBACKS];
  NEXUS_AudioDecoderHandle    audioDecoder[1];           // used to stop        NEXUS_AudioDecoderHandle            audioDecoder[2];
  NEXUS_Ac3EncodeHandle       ac3Encoder;                // used in info        NEXUS_VideoDecoderHandle            videoDecoder;
  NEXUS_StcChannelHandle      stcChannel;                // used in info        NEXUS_StcChannelHandle              stcChannel;
  NEXUS_VideoDecoderHandle    videoDecoder;              // used in info        pid_t                               resource_pid;
  NEXUS_VideoWindowHandle     videoWindow;               // used in info      } BcmNexus_Shared_Memory;                                                        
  // 1 in mgr source
  NEXUS_PlaypumpHandle        playpump[MAX_PUMP_NUM];    // used to stop
  NEXUS_DmaHandle             dmaHandle;                 // used in info
  pid_t                       resource_pid;
} BcmNexus_Shared_Memory;


02.24: (logs changes to rewrite git commits and commit history)
======
1. OEM.Huawei/OEM.Huawei.3rdPartyStack/setvars-huawei-bcm7409.sh

For hwei, do comment out as below to inlcude this in the build.

# export ZINC_EXCLUDE_PROJECTS="Polonium.NexusInspect"

2. Polonium/Polonium.NexusInspect/src/exec-then-cleanup-app.c

change name nexus-inspect to nexus-release

3. Add nexus-release.c

4. Add nexus-inspect.[ch] 

5. Change Makefile.am to build both files.


02.25
======
as-needed option problem

<fail>
-O2 -pipe -rdynamic -Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-o nexus-release nexus_release-nexus-release.o -Wl,-rpath -Wl,/usr/local/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-Wl,--as-needed -L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/lib
-L/opt/oem-staging/huawei-bcm7409/usr/local/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/usr/local/lib
-lnexusMgr -ldirectfb -lfusion -ldirect -linit -lnexus -lz -lpthread -pthread

/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBSetOption' 
/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBCreate' 
/opt/oem-staging/huawei-bcm7409/usr/local/lib/libnexusMgr.so: undefined reference to `DirectFBInit' collect2: ld returned 1 exit status

<okay>
-O2 -pipe -Wl,-rpath -Wl,/usr/local/lib -Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-Wl,-rpath-link
-Wl,/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-o nexus-inspect nexus_inspect-nexus-inspect.o

-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/usr/local/lib
-lnexusMgr -ldirectfb -lfusion -ldirect -linit -lnexus -lz -lpthread
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/lib
-L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/oss/lib
-Wl,--as-needed -L/data/builds/DEVARCH-8092/huawei.370/zinc-install-root/release/huawei-bcm7409/lib
-L/opt/oem-staging/huawei-bcm7409/usr/local/lib -pthread


<runtime>
/data/builds/master/huawei.370/zinc-install-root/release/huawei-bcm7409/opt/zinc-trunk/bin$ readelf -d w3cEngine | grep NEED
(standard input):4: 0x00000001 (NEEDED)                     Shared library: [libstdc++.so.6]
(standard input):5: 0x00000001 (NEEDED)                     Shared library: [libsoup-2.4.so.1]
(standard input):6: 0x00000001 (NEEDED)                     Shared library: [libgobject-2.0.so.0]
(standard input):7: 0x00000001 (NEEDED)                     Shared library: [libglib-2.0.so.0]
(standard input):8: 0x00000001 (NEEDED)                     Shared library: [libNickelTunerSystemAPI.so.0]
(standard input):9: 0x00000001 (NEEDED)                     Shared library: [libQt5WebKitWidgets.so.5]
(standard input):10: 0x00000001 (NEEDED)                     Shared library: [libQt5Widgets.so.5]
(standard input):11: 0x00000001 (NEEDED)                     Shared library: [libZincJsCoreBindingRuntime.so.0]
(standard input):12: 0x00000001 (NEEDED)                     Shared library: [libZincCommon.so.0]
(standard input):13: 0x00000001 (NEEDED)                     Shared library: [libboost_thread.so.1.42.0]
(standard input):14: 0x00000001 (NEEDED)                     Shared library: [liblog4cplus-1.0.so.4]
(standard input):15: 0x00000001 (NEEDED)                     Shared library: [libboost_system.so.1.42.0]
(standard input):16: 0x00000001 (NEEDED)                     Shared library: [libQt5WebKit.so.5]
(standard input):17: 0x00000001 (NEEDED)                     Shared library: [libQt5Gui.so.5]
(standard input):18: 0x00000001 (NEEDED)                     Shared library: [libQt5Network.so.5]
(standard input):19: 0x00000001 (NEEDED)                     Shared library: [libQt5Core.so.5]
(standard input):20: 0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
(standard input):21: 0x00000001 (NEEDED)                     Shared library: [libpthread.so.0]
(standard input):22: 0x00000001 (NEEDED)                     Shared library: [libc.so.0]
(standard input):49: 0x6ffffffe (VERNEED)                    0x40bd3c
(standard input):50: 0x6fffffff (VERNEEDNUM)                 2



={============================================================================
*kt_dev_uv_task_002* task:02: DEVARCH-8869

02.16:
======
CANTST-15347: BBC iPlayer: app not fully functional following IP reconnect after IP disconnect error message shown
-> DEVARCH-8869: Investigate/Fix CANTST-15347 BBC iPlayer: app not fully functional following IP reconnect after IP disconnect error message shown

<net-manager>
this is oem comp which is based on open source and has some oem modification.
source will be provided by tar file in this folder.

/home/kpark/source/DEVARCH/OEM.Humax/NetworkManager/src/NetworkManager-0.8.5.92


<serial-log-when-plug-in-out>
eth0 Link DOWN.
Feb 16 16:51:52 syslog[793]: <info> (eth0): carrier now OFF (device state 8)
Feb 16 16:51:52 syslog[793]: <info> (eth0): device state change: 8 -> 2 (reason 40)
Feb 16 16:51:52 syslog[793]: <info> (eth0): deactivating device (reason: 40).
Feb 16 16:51:53 syslog[793]: <info> (eth0): canceled DHCP transaction, DHCP client pid 2516
eth0 cable unplugged, powering down



eth0 cable plugged in, powering up
eth0 Link UP.
Auto config phy
eth0: Link is up, 100 Mbps Full Duplex
Feb 16 16:52:09 syslog[793]: <info> (eth0): carrier now ON (device state 2)
Feb 16 16:52:09 syslog[793]: <info> (eth0): device state change: 2 -> 3 (reason 40)
Feb 16 16:52:09 syslog[793]: <info> Activation (eth0) starting connection 'bf2bf8f8-d3c5-43c9-806f-129a9f730cb6'
Feb 16 16:52:09 syslog[793]: <info> (eth0): device state change: 3 -> 4 (reason 0)

This matches to:

./src/nm-device-ethernet.c:243: nm_log_info (LOGD_HW | LOGD_ETHER, "(%s): carrier now %s (device state %d%s)",
./src/nm-device-ethernet.c:245:              carrier ? "ON" : "OFF",

<dbus>
793   :1.0                     /opt/zinc/oss/sbin/NetworkManager --no-daemon --log-level=INFO        
793   org.freedesktop.NetworkManager/opt/zinc/oss/sbin/NetworkManager --no-daemon --log-level=INFO        
793   org.freedesktop.NetworkManagerSystemSettings/opt/zinc/oss/sbin/NetworkManager --no-daemon --log-level=INFO        

dbus-send  --session --type=method_call --print-reply --dest='Zinc.ContentAcquisition' \
 /Zinc org.freedesktop.DBus.Introspectable.Introspect


02.18
======
1. https://jira.youview.co.uk/browse/DEVARCH-7941

Shows the requirement. The points to note:

1. about handling errors that happen during playback and not during tuning. If does when tuning,
kill CRB application.

From OIPF-DAE:

LAN connectivity problem (results in a YVM102 message being shown by the YouView UI) 	Presenting
Connecting 	PlayStateChange (playstate 1, errorState 9 - insufficient bandwidth)

LAN connectivity problem

This one is quite easy and should just consist in making ProductionVideoBroadcast listen to
Neon.Client.API / NetworkStatusChange.  The UI might need to be modified to show only a notification
instead of showing a dialogue in case the CRB app is running (TBC), and usage reporting need to be
preserved if there is any.

note: Given there is "LAN connectivity problem restored:", the above includes no connection and
timed-out one?

On demand UI req:
https://wiki.youview.co.uk/display/UXDWIP/FR+12+-+On+Demand+Playback

From CANTST-15347:
Test description:
1. Launch a piece of content from BBC application (tested with iPlayer,and iPlayer from CRB)

Actual result:
note: 4. When the app freezes and must be closed and restarted.

NB in all the above cases the YV box reports the loss of internet connection (YVM-102) when the
cable is pulled from the back of the box.

The scenarios in all cases are the same whether it is the ethernet or the WAN being disconnected.

<test-result>
The version used:
Humax DTR-T1000 T1000 H21.7.30

The version reported:
Box: Humax T1000 PRK
CDS: H20.9.0
Environment: Live

The observation:

1. run iplayer 
2. run one of contents
3. plug out a cable
4. YVM-102 is shown on tv.
5. video still runs for some time and shows waiting icon 
6. error 02100 from iplayer app saying "something are not working playing this program. ..."
7. plug it back
8. shows "youview is connected again" message on tv.
9. able to navigate iplayer app which is 'different' from the reported.

Tried 5 times and no problem. Tried once after a reboot, no problem.


02.19
======
Assigned back to the reporter to re-test.
Started on the new one, #7508, which is about runBrowser-test.sh


={============================================================================
*kt_dev_uv_task_003* task:02: DEVARCH-7508

02.20
======
kpark@wll1p04345:/data/builds/master/humax.1000/zinc-install-root/release/humax-dtr_t1000/opt/zinc-trunk$ find . -name runBrowser.sh
./bin/runBrowser.sh
kpark@wll1p04345:/data/builds/master/humax.1000/zinc-install-root/release/humax-dtr_t1000/opt/zinc-trunk$ find . -name runBrowser-test.sh
./tests/vanadium-w3c-engine/test/runBrowser-test.sh

[root@HUMAX zinc-trunk]# find . -name runBrowser* ./bin/runBrowser.sh
./devel/bin/runBrowserStandalone.sh
./tests/vanadium-w3c-engine/test/runBrowser-test.sh
[root@HUMAX zinc-trunk]# 


From runBrowser-test.sh log:

+ paramsContainStringAtPosition 0 3 -cache /tmp/client-cache -cache-size 50000000 -jar /tmp/cookies.sqlite -url 'http://youview.tv/test-player?launch_context.ui.youview.com=portal&some.test.param=some.test.param.value&test.param.spaces=param%20value%20with%20spaces' -src '
      http://youview.tv http://broadcast.example.com
      http://www.bbc.co.uk http://cdn.example.net:8080
    '
+ local stringToSearchFor=0
+ local positionToExpectStringAt=3
+ local 'stringToSearch=-cache /tmp/client-cache -cache-size 50000000 -jar /tmp/cookies.sqlite -url http://youview.tv/test-player?launch_context.ui.youview.com=portal&some.test.param=some.test.param.value&test.param.spaces=param%20value%20with%20spaces -src 
      http://youview.tv http://broadcast.example.com
      http://www.bbc.co.uk http://cdn.example.net:8080
    '
So expect to see 0 but 50000000. Why?

From runBrowser.sh

# Decide whether to turn on Qt's network cache + local storage.
cacheSize="$(lsr-config --int platform.settings.html-app-cache-size || echo 0)"

This cache size comes from external but the test script uses the 'fixed' value. mismatch.

that_generates_url_handler() {

    paramsContainStringAtPosition "0" 3 "$@"
    cacheSizeValueCorrectAtExpectedPosition=$?
}


related https://jira.youview.co.uk/browse/DEVARCH-7362 since about cache size.

The solution:

kpark@wll1p04345:~/jira/feb-7508$ diff runBrowser-test-old.sh runBrowser-test.sh 
--- runBrowser-test-old.sh	2015-02-20 14:23:37.978416274 +0000
+++ runBrowser-test.sh	2015-02-20 14:21:59.318417412 +0000
@@ -173,7 +173,8 @@ test.param.spaces=param%20value%20with%2
     paramsContainStringAtPosition "-cache-size" 2 "$@"
     cacheSizeOptionCorrectAtExpectedPosition=$?
 
-    paramsContainStringAtPosition "0" 3 "$@"
+    # paramsContainStringAtPosition "0" 3 "$@"
+    paramsContainStringAtPosition "$(lsr-config --int platform.settings.html-app-cache-size || echo 0)" 3 "$@"
     cacheSizeValueCorrectAtExpectedPosition=$?
 
     paramsContainStringAtPosition "-jar" 4 "$@"


02.23
======
DEVARCH-7508/0: runBrowser-test.sh fails on DTR-T1000

The cause of the problem is that the cache size is introduced in the runBrowser.sh but not in the
runBrowser-test.sh. Hence mismatch which cause this failure. 

This commit has the fix to have the same approach rumBrower.sh has to use the value from LSR. 

<review>
Please review the commits for [DEVARCH-7508] which on the branch [review/DEVARCH-7508/0].

1. [DEVARCH-7508: runBrowser-test.sh fails on DTR-T1000 [e4ac0e1]

[1]: https://jira.youview.co.uk/browse/DEVARCH-7508
[2]: https://git-dev.dev.youview.co.uk/?p=DEVARCH.git;a=shortlog;h=refs/heads/review/DEVARCH-7508/0
[e4ac0e1]: https://git-dev.dev.youview.co.uk/?p=DEVARCH.git;a=commit;h=e4ac0e157a900d55fa30b7c9c88a9f080b3767b1

==============================================================================
vim:tw=100:ts=3:ft=help:norl:
