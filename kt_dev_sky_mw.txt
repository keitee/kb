*kt_dev_sky_mw*                                                     tw=100, utf-8

/^[#=]{
Use #{ for a group and ={ for a item

Write what you know and konw what you write. - EXC++, Herb Sutter

An expert is a man who has made all the mistakes that can be made, in a very
narrow field. -Nils Bohr

TODO:
2. how to implement shared_ptr for multi-threaded without using locks?
3. how to solve when there are same symbols in different objects in the same namespace?

KT KB. SKYMW

*kt_dev_skymw_0000* skymw-setup
*kt_dev_skymw_0000* skymw-pages
*kt_dev_skymw_0000* skymw-commands
*kt_dev_skymw_0000* skymw-q-hardware
*kt_dev_skymw_0000* skymw-q-package
*kt_dev_skymw_0000* skymw-q-build
*kt_dev_skymw_0000* skymw-as
*kt_dev_skymw_0000* skymw-as-ap
*kt_dev_skymw_0000* skymw-as-ap-jira
*kt_dev_skymw_0000* skymw-android
*kt_dev_skymw_0000* skymw-android-doc
*kt_dev_skymw_0000* skymw-android-studio
*kt_dev_skymw_0000* skymw-android-bluetoothrcu

={============================================================================
*kt_dev_skymw_0000* skymw-setup

<ssh>
to register ssh keys
https://www.stb.bskyb.com/gosa/


<repos>
git clone dwngit@git.stb.bskyb.com:ethan-as-source-repo
git clone dwngit@git.stb.bskyb.com:ethan-as-source ethan-as-source-repo
git clone dwngit@git.stb.bskyb.com:ethan-mw-wrt
git clone dwngit@git.stb.bskyb.com:appinfrastructure


<ethan-as-source>
// needs to run git pull since no default branch?
// "develop" branch

git pull origin develop

keitee@keitee-mint:~/mw/ethan-as-source$ git checkout develop
Checking out files: 100% (25967/25967), done.

// update submodule

keitee@keitee-mint:~/mw/ethan-as-source$ git submodule update --init --force

git push -n --set-upstream origin kit-NGDEV-141186

<sdk>
keitee@keitee-mint:~/mw/ethan-as-source$ cd xSubmoduleDarwinSDK/
keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK$ ./getSdk.sh eu-q-titan-uk HQ000


<tftp>
sudo apt-get install tftpd-hpa

cat /etc/default/tftpd-hpa 

# /etc/default/tftpd-hpa

TFTP_USERNAME="tftp"
TFTP_DIRECTORY="/opt/tftpboot"
TFTP_ADDRESS=":69"
TFTP_OPTIONS="--secure"

<nfs>
sudo apt-get install nfs-kernel-server

<boot>

mount -o rw -t nfs 192.168.0.101:/home/keitee/mw/exports/titan/flash0 /mnt/x

// should be careful not to include the end of line when pasting it into bolt
// command line

setenv -p STARTUP "ifconfig eth0 -auto;boot 192.168.1.5:falcon_d1/zImage 'console=ttyS0,115200 ip=udhcp mesh=off vmalloc=334M brcm_cma_kern_rsv=416M remotedir=192.168.1.5:/export/flash0_falcon_d1'"

// shall have quote ""
// ok
setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.100:titan/zImage"
// ok
setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.101:/titan/zImage ‘remotedir=192.168.0.101:/home/keitee/mw/exports/titan/flash0'"
// setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.100:titan/zImage console=ttyS0,115200 ip=udhcp vmalloc=300M brcm_cma_kern_rsv=450M remotedir=192.168.0.100:/home/keitee/mw/exports/titan/flash0"

// error since copied from word document and found that dash(-) causes the
// issue when used on bolt bootloader
setenv -p STARTUP "ifconfig eth0 –auto; boot 192.168.0.100:/titan/zImage ‘remotedir=192.168.0.100:/home/keitee/mw/exports/titan/flash0'"


={============================================================================
*kt_dev_skymw_0000* skymw-pages

https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=2016&title=Application+Infrastructure+Architecture


={============================================================================
*kt_dev_skymw_0000* skymw-commands

ls -al /opt/airplay/audio.out.pcm
touch /opt/airplay/audio.out.pcm; chmod 777 /opt/airplay/audio.out.pcm
rm /mnt/nds/dev_13/part_0/FSN_DATA/LOG

cp /mnt/nds/dev_13/part_0/FSN_DATA/LOG /flash0/LOG_07; chmod 777 /flash0/LOG_07
cp /opt/airplay/audio.out.pcm /flash0/PCM_31; chmod 777 /flash0/PCM_31

tail -f /mnt/nds/dev_13/part_0/FSN_DATA/LOG | egrep "KT|AudioConverterDispose|AudioConverterNew"
tail -f /mnt/nds/dev_13/part_0/FSN_DATA/LOG | egrep "KEY_P|Progress|rtpSkew"

curl -v -X POST http://127.0.0.1:8008/pm/downloads/ --data http://192.168.0.105/spotify.wgt

curl -v -X DELETE http://192.168.0.102:8008/pm/packages/com.spotify.Spotify.TVv2
curl -v -X GET http://192.168.0.102:8008/pm/packages
 

={============================================================================
*kt_dev_skymw_0000* skymw-q-hardware

// q hardware
https://www.stb.bskyb.com/confluence/display/2016/Q+Platform+Hardware+Specifications


={============================================================================
*kt_dev_skymw_0000* skymw-q-package

// fusion mw
// Check the SI_TARBALL.tgz at the bottom of the page.
http://hudkinsartifactory.cisco.com:8081/artifactory/formal_builds/Q/formal/Q000/Q000.021.41.00/


={============================================================================
*kt_dev_skymw_0000* skymw-q-build

<to-fix-titan-build-error>
export LC_ALL=C

as: loadlocale.c:129: _nl_intern_locale_data: Assertion `cnt < (sizeof (_nl_value_type_LC_TIME) / sizeof (_nl_value_type_LC_TIME[0]))' failed.
arm-linux-gcc: internal compiler error: Aborted (program as)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://gcc.gnu.org/bugs.html> for instructions.


<build-sdk>
cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK
./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source/ clean
./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source/

keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK$ 

ll eu-q-titan-uk/SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

ll eu-q-titan-uk/SDK/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

// all points the same single file

ll eu-q-titan-uk/SDK/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage 
-rwxr-xr-x 1 keitee keitee 25M May 14 10:41 eu-q-titan-uk/SDK/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

ll eu-q-titan-uk/SDK/SKYOB_SKY7278_BCM7278_LNUX_01/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/SKYOB_SKY7278_BCM7278_LNUX_01/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*


<build-tool> *builc-gcc*
~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/deps/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01/bin/arm-linux-gcc

lrwxrwxrwx 1 keitee keitee 31 May 14 10:41 arm-linux-gcc -> arm-unknown-linux-gnueabihf-gcc*

/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01

<gcc>
export LC_ALL=C
cp /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/unstripped_bin/APP_Process .
/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/deps/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01/bin/arm-linux-gdb


<fsi-build>
svn ls svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/
svn ls svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/Q000.021.45.00/
svn checkout svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/Q000.021.45.00/

http://10.184.136.138:8081/view/SI%20build%20Jobs/job/FULL_STACK_SI_BUILD/69/consoleFull

+ cd FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/
+ ./make.sh --platform eu-q-titan-uk --profile sky_trials
+ ./make.sh --platform eu-q-titan-uk --profile sky_trials --baseline Q000.021.42.00

+ create_version_string_from_baseline
+ local VERSION_CFG=projects/bskybgen2/fs/NDS/config/overrides/version.cfg
+ local VERSION_H=projects/bskybgen2/inc/version.h
+ local 'VERSION_SECTION=[VERSION]'
+ local VERSION_TAG=NDS_SW_VERSION
+ local PLATFORM_TAG=PLATFORM
+ echo 'Checking & calculating Version string - '\''sky_trials'\'' '\'''\'''
Checking & calculating Version string - 'sky_trials' ''
python tools/nds/si/python/version_string_calculation.py ${PROFILE} ${BASELINE}
++ python tools/nds/si/python/version_string_calculation.py sky_trials
+ VERSION_STRING='~*~dev version~*~'
+ '[' 0 -ne 0 ']'
+ echo 'VERSION = ~*~dev version~*~'
VERSION = ~*~dev version~*~
+ echo '[VERSION]'
+ echo 'NDS_SW_VERSION="~*~dev version~*~"'
+ echo 'PLATFORM="eu-q-titan-uk"'


./build_mw_epg.sh --platform eu-q-titan-uk --variant debug --profile sky_trials --nomake
./make_image.sh --platform eu-q-titan-uk --variant debug --profile sky_trials --project bskybgen2


={============================================================================
*kt_dev_skymw_0000* skymw-as

https://www.stb.bskyb.com/confluence/pages/viewpage.action?pageId=9538192

<as-rest> <as-asda>
http://build01.mw.ethan.bskyb.com/asda/#

192.168.0.104:9005

curl -v -X GET http://192.168.0.102:9005/as/system/information

curl -v -X GET http://192.168.0.102:8008/pm/packages


={============================================================================
*kt_dev_skymw_0000* skymw-as-ap

<as-airplay>
/ethan-as-source/Components/AudioStreamer

<airplay-setting>
http://192.168.0.102:13579/index.html

<airplay-sdk-build>
/ethan-as-source/Components/AudioStreamer/AirplaySdk2

export LC_ALL=C
make libraries platform=Titan

<airplay-logging>

// from apple and prints two lines

acs_ulog(kLogLevelNotice, "KT: AudioConverterReset: ALAC: DO NOTHING \n");

NDS: ^0000000694.438133 !MIL   -AS           < p:00000e12 t:6e754dc0 T:no name M:AS_DMS_Writer.cpp F:AirplaySDKDiagLog L:00258 
  > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 1970-01-01 12:11:34.438098 AM [AirPlayACS] 
  KT: AudioConverterReset: ALAC: DO NOTHING 

// works by default and on MIL

at_app_ulog(kLogLevelNotice, "KT: kAirPlayProperty_NameIsFactoryDefault = %d\n", value);
  #define at_app_ulog(LEVEL, ...) ulog(at_app_ucat(), (LEVEL), __VA_ARGS__)

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/AccessorySDK/Support/LogUtils.c
int LogPrintF(LogCategory* inCategory, const char* inFunction, LogLevel inLevel, const char* inFormat, ...)
{
    int n;
    va_list args;

    va_start(args, inFormat);
    n = LogPrintV(inCategory, inFunction, inLevel, inFormat, args);
    va_end(args);
    return (n);
}


// print single line

TRACE("KT: integration::checkNameIsFactoryDefault:\n");
  #define TRACE(...) { LogInterfaceInToDiag(0,__VA_ARGS__);}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayPlayerImpl.cpp
void LogInterfaceInToDiag(int level,const char*format,...)
{
  char buffer[256];
  va_list args;
  va_start (args, format);
  vsnprintf (buffer,256,format, args);
  va_end (args);
  if (interfaceLoggingFunction != NULL)
    interfaceLoggingFunction(level,buffer);
}

AudioStreamer::AirPlayProtocol::AirPlayProtocol(uint8_t macAddress[6])
    : m_audioAvailable(true)
{
  AUD_LOG_ENTRY("AudioStreamer::AirPlayProtocol::AirPlayProtocol");
  ::memcpy (m_macAddress, macAddress, 6);
  AirPlay::Player::createInstance(this);
  AirPlay::Player::instance().registerAirplaySDKDiagLogFunction(AirplaySDKDiagLog);
  AirPlay::Player::instance().registerInterfaceDiagLogFunction(AirplayinterfaceDiagLog);
#ifdef ENABLE_AIRPLAY_2
  dobbyPTPLxc = std::make_shared<ptpdobbyfactory::PtpDobbyFactory>("PTPAirplay");
#endif

  AUD_LOG_EXIT("AudioStreamer::AirPlayProtocol::AirPlayProtocol");
}

void AirplayinterfaceDiagLog(int level ,const char* msg)
{
  (void) level;
  printf("2---%s \n ",msg);
}


// fusion diag
// home/keitee/mw/ethan-as-source/Components/AS/Diag/include/AS_DIAG_Macros.h

#define AS_LOG_FATAL(msg...)    do {do {AS_DECLARE_FUNCTION;DIAG_LOG_FATAL(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Fatal,writeFatal,handleFatal,msg);} while (0)
#define AS_LOG_MIL(msg...)      do {do {AS_DECLARE_FUNCTION;DIAG_LOG_MIL(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Mil,writeMil,handleMil,msg);} while (0)
#define AS_LOG_ERROR(msg...)    do {do {AS_DECLARE_FUNCTION;DIAG_LOG_ERROR(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Error,writeError,handleError,msg);} while (0)
#define AS_LOG_WARNING(msg...)  do {do {AS_DECLARE_FUNCTION;DIAG_LOG_WARN(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Warning,writeWarning,handleWarning,msg);} while (0)
#define AS_LOG_INFO(msg...)     do {do {AS_DECLARE_FUNCTION;DIAG_LOG_INFO(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Info,writeInfo,handleInfo,msg);} while (0)
#define AS_LOG_ENTRY(msg...)    AS_LOG_INFO(msg)
#define AS_LOG_EXIT(msg...)     AS_LOG_INFO(msg)

However, there seems to be an issue:
m_total shows 0. WHY?

    AUD_LOG_MIL("KT: get Data from buffer, sampleCount(%d), m_total(%d), dataToCopy(%d)", sampleCount, m_total, dataToCopy);
    AUD_LOG_MIL("KT: get Data from buffer, sampleCount(%d)", sampleCount);
    AUD_LOG_MIL("KT: get Data from buffer, m_total(%d)", m_total);

NDS: ^0000000222.561686 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(762) KT: get Data from buffer, sampleCount(0), m_total(0), dataToCopy(8820)
NDS: ^0000000222.561700 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(763) KT: get Data from buffer, sampleCount(0)
NDS: ^0000000222.561714 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(764) KT: get Data from buffer, m_total(8820)


<airplay-sdk>

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayMain.c

int AirPlayMain( int argc, const char **argv )
{
  AirPlayReceiverServerCreate( &sgReceiverServer );

  AirPlayReceiverServerDelegateInit(&delegate);

  // register delegate to APRS
  delegate.copyProperty_f = _AirPlayHandleServerCopyProperty;
  delegate.setProperty_f = _AirPlayHandleServerSetProperty;
  delegate.sessionCreated_f = _AirPlayHandleSessionCreated;
  AirPlayReceiverServerSetDelegate(sgReceiverServer, &delegate);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverServer.c

AirPlayReceiverServerCreateWithConfigFilePath(CFStringRef inConfigFilePath, AirPlayReceiverServerRef* outServer)
{
}


// setup path

static OSStatus _HandleHTTPConnectionMessage(HTTPConnectionRef inCnx, HTTPMessageRef inRequest, void* inContext)
{
  aprs_ulog(kLogLevelTrace, "method:'%.*s' path:'%.*s'\n", (int)methodLen, methodPtr, (int)pathLen, pathPtr);

  else if (strnicmpx(methodPtr, methodLen, "SETUP") == 0)
    status = _requestProcessSetup(cnx, inRequest);
}

static HTTPStatus _requestProcessSetup(AirPlayReceiverConnectionRef inCnx, HTTPMessageRef inRequest)
{
  status = _requestProcessSetupPlist(inCnx, inRequest);
}

static HTTPStatus _requestProcessSetupPlist(AirPlayReceiverConnectionRef inCnx, HTTPMessageRef inRequest)
{
    aprs_ulog(kAirPlayPhaseLogLevel, "Setup (%##a)\n", &inCnx->httpCnx->peerAddr);
}

_requestCreateSession()
{
  AirPlayReceiverSessionCreate();
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c
AirPlayReceiverSessionCreate()
{
  err = AirPlayReceiverSessionPlatformInitialize(me);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverPOSIX.c

OSStatus AirPlayReceiverServerPlatformInitialize(AirPlayReceiverServerRef inServer)
{}


// set audio stream

static OSStatus _UpdateStreams(AirPlayReceiverSessionRef inSession)
{
  atrp_ulog(kLogLevelNotice, "Main audio setting up %s for %@, input %s, loopback %s, volume:%f\n",
      AirPlayAudioFormatToString(streamCtx->format),
      streamCtx->audioType ? streamCtx->audioType : CFSTR(kAirPlayAudioType_Default),
      streamCtx->input ? "yes" : "no",
      streamCtx->loopback ? "yes" : "no",
      inSession->server->volume);

  // > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 1970-01-01 12:11:37.199742 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-8.374125

  AudioStreamSetOutputCallback(streamCtx->stream, _AudioOutputCallBack, streamCtx);

  void AudioStreamSetOutputCallback(AudioStreamRef inStream, AudioStreamOutputCallback_f inFunc, void* inContext)
  {
    AudioStreamImpRef const me = _AudioStreamGetImp(inStream);
    TRACE("AudioStreamSetAudioCallback\n");

    me->callback = inFunc;
    me->callbackContext = inContext;
  }

  err = AudioStreamStart(streamCtx->stream);
}

// Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AudioUtilsStub.c
OSStatus AudioStreamPrepare(AudioStreamRef inStream)
{
  Trace.cpp(25) 1970-01-01 12:06:46.573261 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-21.002514
  Trace.cpp(25) 1970-01-01 12:06:46.573261 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-21.002514
  _IMPL Trace.cpp(41) AudioStreamCreate
  _IMPL Trace.cpp(41) New AudioStreamPrivate=(nil)
  _IMPL Trace.cpp(41) AudioStreamSetAudioCallback
  _IMPL Trace.cpp(41) AudioStreamPrepare:
  _IMPL Trace.cpp(41) channels:      2
  _IMPL Trace.cpp(41) bits/channel:  16
  _IMPL Trace.cpp(41) sample rate:   44100
  _IMPL Trace.cpp(41) bytes/frame:   4
  _IMPL Trace.cpp(41) bytes/packet:  4
  _IMPL Trace.cpp(41) frames/packet: 1
  _IMPL Trace.cpp(41) format id:     6c70636d
  _IMPL Trace.cpp(41) format flags:  c
  _IMPL Trace.cpp(41) Signed
  _IMPL Trace.cpp(41) Little endian
  _IMPL Trace.cpp(41) audioSetFormat returning 1
}

OSStatus AudioStreamStart(AudioStreamRef inStream)
{
  // calls to intergration.cpp
  if( !sessionInitialize(inStream));
}


<airplay-config>

// AudioStreamer/config/audiostreamer.xml

 151   │    <!--NGDEV-140292:Update audiostreamer.xml to support Titan UK-->
 152   │    <profile name="EE_GW_UK_TITAN">
 153   │    <file name="audiostreamer.cfg">
 154   │    <section name="SYSTEM_DELAY_CONFIG">
 155   │     <key name="SYSTEM_DELAY" type="INTEGER" value="137">
 156   │         <comment date="2019/05/16 10:13:45" text="NGDEV-141515 The time in mS to provide system delay. This will be used in the calculation of inHostTime" />
 157   │     </key>
 158   │    </section>
 159   │    <section name="PCM_CONFIGURATION">
 160   │     <key name="PCM_BUFFERSIZE" type="INTEGER" value="100">
 161   │     <comment date="2017/01/19 01:23:45" text="The time in ms" />
 162   │     </key>
 163   │     <key name="PCM_THRESHOLD" type="INTEGER" value="50">
 164   │     <comment date="2017/01/19 01:23:45" text="The time in ms" />
 

<airplay-get-audio-data>

// AudioStreamer/source/AudioThread.cpp

case EVENT_SESSION_START:
{
  PLAYER_API_SessionHandle* sessionId = (PLAYER_API_SessionHandle*)t.data;

  string sourceUri = AsStringTool::stringf("audio/cisco.com_pcm;rate=%d;channels=%d;samplesize=%d;byteorder=%s;sign=%s", 
      m_format.sampleRate, m_format.channels, m_format.sampleSizeBytes*8, m_format.bigEndian?"be":"le", m_format.isSigned?"signed":"unsigned");
  AUD_LOG_MIL("AudioThread::EVENT_SESSION_START id=0x%08X, adding source='%s'", *sessionId, sourceUri.c_str());
  ret = PLAYER_API_AVControl_AddSourceBuffer(playerAvControl, sourceUri.c_str(), &m_avControlBufferHandle);
}

// CMS_MEDIA_SERVICES/MPM/inc/mpm_pres.h

/** @brief Structure that contains properties of a NEED_DATA callback for use in MPM_PRES_ES_EVENT_PROPERTIES */
typedef struct
{
    uint32_t    data_length;        /*!< @brief The amount of data that can be written to the device */
    uint32_t    current_level;      /*!< @brief The current buffer level on the output device */
    uint32_t    cumulative_bytes;   /*!< @brief The total amount of bytes written to this handle */
} MPM_PRES_ES_EVENT_NEED_DATA_PROPERTIES;

// DARWIN_PLATFORM/DARWIN_PLAYER/inc/player_api_events.h

#define PLAYER_EVENT_AUDIO_NEED_DATA                (0x22000000U)   
/**< Notification sent when the buffer created with PLAYER_API_AVControl_AddSourceBuffer needs more
 * data. Application should provide more data through PLAYER_API_AVControl_AppendToBuffer */

typedef struct
{
  uint32_t length;
  uint32_t buffer_level;
  uint32_t bytes_received;
} PLAYER_PRIV_EVENT_NEED_DATA;

ret = PLAYER_API_Session_RegisterEventListener(playerSession,PLAYER_EVENT_AUDIO_NEED_DATA,playerEventListener,PLAYER_API_TAG(this),&dataEventListenerHandle);

struct event_data_type
{
  uint32_t                 eventType;

  /* PLAYER_EVENT_AUDIO_NEED_DATA */
  uint32_t                 audioLength;
  uint32_t                 bufferLevel;
  uint32_t                 bytesReceived;

  /* PLAYER_EVENT_SESSION_START */
  PLAYER_API_SessionHandle sessionId;
};

handlePlayerEventNeedData(event_data, audioThread, event);

static void handlePlayerEventNeedData(event_data_type &event_data , AudioStreamer::AudioThread* audioThread,PLAYER_API_Event_Handle event)

audioThread->onPlayerNeedData(event_data.audioLength, event_data.bufferLevel, event_data.bytesReceived);

void AudioStreamer::AudioThread::onPlayerNeedData(uint32_t dataNeeded, uint32_t bufferLevel, uint32_t totalPlayed);

case EVENT_NEED_DATA:
  handlePlayerNeedData(arg->dataNeeded, arg->bufferLevel, arg->totalPlayed);

case EVENT_PUSH_DATA:
  pushDataToPlayer(arg->dataNeeded, arg->bufferLevel, arg->totalPlayed);

void AudioStreamer::AudioThread::pushDataToPlayer(uint32_t dataNeeded, uint32_t bufferLevel, uint32_t totalPlayed)
{
  currentInstance->audioBufferGet(sampleCount, UpTicks()+inHostTime, m_buffer, dataToCopy);
}

/*
 *AirPlayProtocol getAudioData
 *
 * inParam :
 *      sampleTime :- uint32_t , Time in terms of samples , mostly how many samples consumed till now indicate
 *                              how much time has elapsed. 4410 samples indicate 100ms
 *      hostTime      :- uint64_t , Approximate time when first sample will be played . Needs to as accurate as possible
 *                              and any variation of more than 5 ms will lead audio sync delay b/w apple devices
 *      buffer           :- void * , buffer memory allocated and managed by client
 *      bufferLen     :- size_t , length of buffer which also indicate the amount of data needs to be copied in bytes
 *
 * Function Breif :
 *       Get audio data from airplay SDK
 */
void AudioStreamer::AirPlayProtocol::getAudioData(uint32_t sampleTime, uint64_t hostTime, void *buffer, size_t bufferLen)

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/integration.cpp

void audioGetData(uint32_t sampleTime, uint64_t	hostTime, void *buffer, size_t bufferLen)
{
  TRACE("audioGetData(%d %llu %p %u)\n",  sampleTime, hostTime, buffer, bufferLen);

  s_audioStream->callback(sampleTime, hostTime, buffer, bufferLen, s_audioStream->callbackContext);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverPOSIX.c
// callback is

static void
_AudioOutputCallBack(
    uint32_t inSampleTime,          // sample time
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen,
    void* inContext)
{
  AirPlayAudioStreamPlatformContext* const streamCtx = (AirPlayAudioStreamPlatformContext*)inContext;
  OSStatus err;

  atrp_ulog(kLogLevelNotice, "KT: _AudioOutputCallBack: inLen(%d)\n", inLen);
  //  AM [AirPlay] KT: _AudioOutputCallBack: inLen(8820)

  err = AirPlayReceiverSessionReadAudio(streamCtx->session, streamCtx->activeType, 
      inSampleTime,                 // 3. sample time 
      inHostTime,
      inBuffer, 
      inLen);
  require_noerr(err, exit);

  if (streamCtx->input && streamCtx->loopback) {
    // not called in the log. use case?
    err = AirPlayReceiverSessionWriteAudio(streamCtx->session, streamCtx->activeType, inSampleTime, inHostTime,
        inBuffer, inLen);
    require_noerr(err, exit);
  }

exit:
  return;
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c

OSStatus
AirPlayReceiverSessionReadAudio(
    AirPlayReceiverSessionRef inSession,
    AirPlayStreamType inType,
    uint32_t inSampleTime,
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen)
{
  return AirPlayReceiverSessionReadAudio2(
      inSession, 
      inType, 
      inSampleTime, 
      inHostTime, 
      inBuffer, 
      inLen, 
      inLen,                  // 7
      NULL);
}

AirPlayReceiverSessionReadAudio2(
    AirPlayReceiverSessionRef inSession,
    AirPlayStreamType inType,
    uint32_t inSampleTime,
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen,
    size_t inMinLen,          // 7
    size_t* outSuppliedLen)
{
  suppliedLen = _GeneralAudioRender(inSession, inSampleTime, inBuffer, inLen, inMinLen);
}

static size_t _GeneralAudioRender(
    AirPlayReceiverSessionRef inSession, 
    uint32_t inRTPTime,             // sample time
    void* inBuffer, 
    size_t inSize, 
    size_t inMinFillSize)
{
  // o inMinLen is date bytes for 50ms 
  //
  // o ctx->sampleTimeOffset is 0 so has no effect
  //
  // o srcTS = pktTS. what's unit?
  //
  // o minTS == limTS

  nowTS = inRTPTime - ctx->sampleTimeOffset;
  limTS = nowTS + (uint32_t)(inSize / bytesPerUnit);
  minTS = nowTS + (uint32_t)(inMinFillSize / bytesPerUnit);
  maxTS = limTS + kAirTunesRTPOffsetApplyThreshold;
  pktSeq = 0;

  // sample time
  //
  // #define kAirTunesPlayoutDelay 11025 // 250 ms delay to sync with AirPort Express'es 250 ms buffer.
  // inCnx->minLatency = kAirTunesPlayoutDelay; // Default value for old clients.
  //
  // AirPlayReceiverSessionSetProperty()
  //  gAirTunesRelativeTimeOffset = offset;

  inSession->audioLatencyOffset = inSession->minLatency + gAirTunesRelativeTimeOffset;

  // uint32_t rtpOffsetActive; // RTP offset actively in use (different when deferring).
  //
  // static void AirPlayReceiverFlushPackets(AirPlayReceiverSessionRef inSession, AirPlayFlushPoint const* flushFrom, AirPlayFlushPoint flushUntil)
  //  uint32_t offsetActive = inSession->source.rtpOffsetActive;
}


// start path

// AudioStreamer/source/AirPlayProtocol.cpp

void AudioStreamer::AirPlayProtocol::enable(uint16_t port)
{
  AUD_LOG_ENTRY("AudioStreamer::AirPlayProtocol::enable");
  if( !AirPlay::Player::instance().supported() )
  {
    AUD_LOG_WARNING("Airplay not supported on this box, cannot enable");
    return;
  }
  AUD_LOG_INFO("Airplay supported, enabling");
  AirPlay::Player::instance().startAirPlay();
  AirPlay::Player::instance().registerHttpService("/index.html", port);
  AUD_LOG_MIL("Enable airplay done");
  AUD_LOG_EXIT("AudioStreamer::AirPlayProtocol::enable");
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayPlayerImpl.cpp

void AirPlay::PlayerImpl::startAirPlay()
{
  if( !m_airplayRunning )
  {
    TRACE("ASDK0218. AirPlayStartMain()\n");
    AirPlayStartMain();
    m_airplayRunning=true;
  }
}


<airplay-progress>
NDS: ^0000000452.250604 !MIL   -AS           < p:00000de7 t:7a3fedc0 T:no name M:AS_DMS_Writer.cpp F:AirplayinterfaceDiagLog L:00258 > 
  @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(41) Progress, duration 39 elapsed 9


={============================================================================
*kt_dev_skymw_0000* skymw-as-ap-jira

<NGDEV-141186>

// delegate if
else if (CFEqual(inProperty, CFSTR(kAirPlayKey_FirmwareRevision))) {

// [String] Firmware revision of the accessory.
#define kAirPlayKey_FirmwareRevision	"firmwareRevision"

have to use SPM_API_SYSINFO_PROPID_STB_SW_VER

// from http if
// [Boolean] Support sending UDP beacon as keep alive.
#define kAirPlayKey_KeepAliveLowPower "keepAliveLowPower"
need to change it to false

kAirPlayKey_KeepAliveSendStatsAsBody  387 AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverServer.c     CFDictionarySetValue(info, CFSTR(kAirPlayKey_KeepAliveSendStatsAsBody), kCFBooleanFalse); // Supports statistics as part of the keep alive body.

// from http if
// [Boolean] Whether the receiver supports statistics as part of the keep alive body.
#define kAirPlayKey_KeepAliveSendStatsAsBody "keepAliveSendStatsAsBody"
need to change it to false

// [Boolean] Returns true if the AirPlay name is the factory default name
#define kAirPlayProperty_NameIsFactoryDefault "nameIsFactoryDefault"

    else if (CFEqual(inProperty, CFSTR(kAirPlayKey_Name))) {

.654538 !MIL   -AS           < p:00000dec t:7a1fedc0 T:no name M:AS_DMS_Writer.cpp F:AirplaySDKDiagLog L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 2019-05-16 10:40:41.629209 AM [AirtuneDelegate] <- Name being set is Sky4027  

<git-message>
NGDEV-141186: TITAN SPECIFIC - AIRPLAY 2 - CODH:  Airplay Cerfication Assistant
- STB firmware version is not updated correctly on Get/info Automated Test
    
The AirPlay Certification Assistant reports wrong information which are reported
from a box and Product team clarify requirement about them. The keys in question
are:

firmwareRevision – This should be the current MW version eg Q100.XXX.XXX.XXX
keepAliveLowPower – Should this be 0 as we don't support WoL
keepAliveSendStatsAsBody - Should this be 0 as we don't support WoL
kAirPlayProperty_NameIsFactoryDefault

This commit fixes these values to report correct values and add support for
kAirPlayProperty_NameIsFactoryDefault to report correctly based on names of
AirPlay network. 

keitee@keitee-mint:~/mw/ethan-as-source/Components$ git diff --ignore-space-at-eol --stat origin/develop..HEAD
 // Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayDelegate.c | 112 ++--------------------------------------------------------------------------------------
 // Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/integration.cpp   |  12 ++++++++++
 // Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/integration.h     |   4 +---
 // Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverServer.c |   5 ++--
 // Components/AudioStreamer/AirplaySdk2/include/AirPlayPlayer.h                      |   5 +++-
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/daemon_cl                   | Bin 3284680 -> 3282536 bytes
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/libAirPlay.a                | Bin 1390526 -> 1388298 bytes
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/libAirPlayPlatform.a        | Bin 467130 -> 466692 bytes
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/libCoreUtils.a              | Bin 4036690 -> 4025966 bytes
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/libdns_sd.a                 | Bin 27338 -> 27338 bytes
 Components/AudioStreamer/AirplaySdk2/libs/bskyb-titan/mdnsd                       | Bin 326396 -> 326396 bytes
 // Components/AudioStreamer/source/AirPlayProtocol.cpp                               |  12 ++++++++++
 // Components/AudioStreamer/source/AirPlayProtocol.h                                 |   2 +-
 // Components/AudioStreamer/source/AudioStreamerPlayer.cpp                           |   6 ++---
 // Components/AudioStreamer/source/AudioStreamerPlayer.h                             |  11 +++++----
 Components/AudioStreamer/source/AudioStreamerProxy.cpp                            |   0
 Components/AudioStreamer/source/MwServices.cpp                                    |   8 +++----
 18 files changed, 53 insertions(+), 129 deletions(-)



<NGDEV-141186>

<decode>

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c


typedef struct
{
	UInt32		mNumberChannels;
	UInt32		mDataByteSize;
	void *		mData;
	
}	AudioBuffer;

typedef struct
{
	UInt32			mNumberBuffers;
	AudioBuffer		mBuffers[ 1 ];
	
}	AudioBufferList;

_AudioDecoderDecodeFrame()
{
  // note that it is local
  AudioBufferList							bufferList;

  packetCount									= inSession->samplesPerFrame;

  bufferList.mNumberBuffers					= 1;
  bufferList.mBuffers[ 0 ].mNumberChannels	= ctx->channels;
  bufferList.mBuffers[ 0 ].mDataByteSize		= (uint32_t) inDstMaxLen;
  bufferList.mBuffers[ 0 ].mData				= inDstPtr;

  AudioConverterFillComplexBuffer(
      inSession->audioConverter, 
      _AudioDecoderDecodeCallback,  // pass function pointer
      inSession,
      &packetCount,                 // samples per frame 
      &bufferList,                  // buffer list
      NULL );
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AudioConverterStub.c
// called as many as needed to decode chunk of audio

AudioConverterFillComplexBuffer()
OSStatus AudioConverterFillComplexBuffer(
    AudioConverterRef inConverter, 
    AudioConverterComplexInputDataProc inInputDataProc,
    void* inInputDataProcUserData,
    uint32_t* ioOutputDataPacketSize,   // samples per frame
    AudioBufferList* outOutputData,     // buffer list
    AudioStreamPacketDescription* outPacketDescription)
{
  switch (me->sourceFormatID) {

    // ALAC
    case kAudioFormatAppleLossless:
      return _AudioConverterFillComplexBufferALACDecode(
          inConverter, 
          inInputDataProc, 
          inInputDataProcUserData, 
          ioOutputDataPacketSize,   // in/out, size to decode and size that decoded
          outOutputData, 
          outPacketDescription);

    case kAudioFormatMPEG4AAC:
      // AAC LC to PCM
      return _AudioConverterFillComplexBufferAACDecode(inConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);

    default:
      return kUnsupportedErr;
  }
}

<flush>

static HTTPStatus _requestProcessFlushBuffered()
{
  err = AirPlayReceiverSessionFlushAudio(inCnx->session, flushFromP, flushUntil, &lastPlayedTS);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.h
// @abstract 
// Flush any queued audio until the specified timestamp or sequence number.

AirPlayReceiverSessionFlushAudio()
{
  err = AudioConverterReset(inSession->audioConverter);
}

// AP2 SDK

OSStatus AudioConverterReset(AudioConverterRef inConverter)
{
  (void)inConverter;

  // $$$ TODO: Discard any data buffered by the codec

  AudioConverterPrivateRef const me = (AudioConverterPrivateRef)inConverter;

  switch (me->sourceFormatID) {

    case kAudioFormatMPEG4AAC:
      _FlushAACDecoder(inConverter);
  }

  return (kNoErr);
}


// AP1 SDK

// AudioStreamer/AirplaySdk/AirPlayAudioPOSIXReceiver211.1.p8/Support/AudioConverterLite.c

OSStatus	AudioConverterReset_compat( AudioConverterRef me )
{
  (void) me;

  // Nothing to do here.

  return( kNoErr );
}

// from LOG

KT: audioGetData(0 230596533307 0x78f3597c 8820)
KT: audioGetData(2205 230646111351 0x78f3597c 8820)
KT: audioGetData(4410 230696437499 0x78f3597c 8820)
KT: audioGetData(6615 230746918462 0x78f3597c 8820)
KT: audioGetData(8820 230796348590 0x78f3597c 8820)
KT: audioGetData(11025 230846362117 0x78f3597c 8820)
KT: audioGetData(13230 230896336344 0x78f3597c 8820)
KT: audioGetData(15435 230946897891 0x78f3597c 8820)
KT: audioGetData(17640 230996312937 0x78f3597c 8820)
KT: audioGetData(19845 231046380775 0x78f3597c 8820)
KT: audioGetData(22050 231096312862 0x78f3597c 8820)

>>> 985635-983430
2205
>>> 2205-1595
610
>>> 610/44.1
13.83219954648526 ~~ 14ms but 26ms in PCM output?

985635, 22.350
18051:NDS: ^0000000252.850650 !MIL   -AS           < 1970-01-01 12:04:12.850632 AM [AirPlay] Concealed 1595 unit gap (985635 vs 987230), curr seq 26233
18052:NDS: ^0000000252.850667 !MIL   -AS           < 1970-01-01 12:04:12.850632 AM [AirPlay] Concealed 1595 unit gap (985635 vs 987230), curr seq 26233

25016:NDS: ^0000000264.298628 !MIL   -AS           < 1970-01-01 12:04:24.298610 AM [AirPlay] Concealed 2042 unit gap (1490580 vs 1492622), curr seq 27667
25017:NDS: ^0000000264.298645 !MIL   -AS           < 1970-01-01 12:04:24.298610 AM [AirPlay] Concealed 2042 unit gap (1490580 vs 1492622), curr seq 27667

31732:NDS: ^0000000275.496637 !MIL   -AS          < 1970-01-01 12:04:35.496619 AM [AirPlay] Concealed 1612 unit gap (1984500 vs 1986112), curr seq 29063
31733:NDS: ^0000000275.496655 !MIL   -AS          < 1970-01-01 12:04:35.496619 AM [AirPlay] Concealed 1612 unit gap (1984500 vs 1986112), curr seq 29063

37098:NDS: ^0000000284.702606 !MIL   -AS          < 1970-01-01 12:04:44.702588 AM [AirPlay] Concealed 727 unit gap (2390220 vs 2390947), curr seq 30209
37099:NDS: ^0000000284.702624 !MIL   -AS          < 1970-01-01 12:04:44.702588 AM [AirPlay] Concealed 727 unit gap (2390220 vs 2390947), curr seq 30209

43855:NDS: ^0000000295.902600 !MIL   -AS          < 1970-01-01 12:04:55.902582 AM [AirPlay] Concealed 302 unit gap (2884140 vs 2884442), curr seq 31608
43856:NDS: ^0000000295.902618 !MIL   -AS          < 1970-01-01 12:04:55.902582 AM [AirPlay] Concealed 302 unit gap (2884140 vs 2884442), curr seq 31608

3168585, 71.850
47357:NDS: ^0000000302.348641 !MIL   -AS          < 1970-01-01 12:05:02.348619 AM [AirPlay] Concealed 286 unit gap (3168585 vs 3168871), curr seq 32410
47358:NDS: ^0000000302.348659 !MIL   -AS          < 1970-01-01 12:05:02.348619 AM [AirPlay] Concealed 286 unit gap (3168585 vs 3168871), curr seq 32410

3318525, 75.250
48777:NDS: ^0000000305.746622 !MIL   -AS          < 1970-01-01 12:05:05.746564 AM [AirPlay] Concealed 1170 unit gap (3318525 vs 3319695), curr seq 32834
48778:NDS: ^0000000305.746644 !MIL   -AS          < 1970-01-01 12:05:05.746564 AM [AirPlay] Concealed 1170 unit gap (3318525 vs 3319695), curr seq 32834


>>> 985635/44100
22
>>> (985635%44100)/44.1
350.0


KT: nowTs=806326, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552521935, srcTS=806326
KT: nowTs=806326, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552521935, srcTS=806326
KT: pktTS=3552522287 src->rtpOffsetActive=743240662 inSession->audioLatencyOffset=11025
KT: pktTS=3552522287 src->rtpOffsetActive=743240662 inSession->audioLatencyOffset=11025
KT: nowTs=806678, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552522287, srcTS=806678
KT: nowTs=806678, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552522287, srcTS=806678


={============================================================================
*kt_dev_skymw_0000* skymw-android

1. android studio
https://developer.android.com/studio/install

2. adb, Android Debug Bridge

3. ninja-build, to build from android studio
Ninja is a small build system with a focus on speed. It differs from other
build systems in two major respects: it is designed to have its input files
generated by a higher-level build system, and it is designed to run builds as
fast as possible.

4. qt.


={============================================================================
*kt_dev_skymw_0000* skymw-android-doc

https://developer.android.com/reference
https://developer.android.com/reference/android/app/Activity.html


={============================================================================
*kt_dev_skymw_0000* skymw-android-studio

{navigation}

Here are some tips to help you move around Android Studio.

Recent Files

Switch between your recently accessed files using the Recent Files action. Press
`Control+E` (Command+E on a Mac) to bring up the Recent Files action. By
default, the last accessed file is selected. You can also access any tool window
through the left column in this action.


File Structure

View the structure of the current file using the File Structure action. Bring up
the File Structure action by pressing `Control+F12` (Command+F12 on a Mac).
Using this action, you can quickly navigate to any part of your current file.

Find all the pieces of code referencing the class, method, field, parameter, or
statement at the current cursor position by pressing Alt+F7 (Option+F7 on a
Mac).


Find in path

`Control + Shift + F`

<global-search>
Global Search

you can search across your source code, databases, actions, elements of the user
interface, and so on, by `double-pressing the Shift`, or clicking the magnifying
glass in the upper right-hand corner of the Android Studio window.

// (can select from global search)
//
// Search for and navigate to a specific class in your project using the
// Navigate to Class action. Bring up the action by pressing Control+N
// (Command+O on a Mac).  Navigate to Class supports sophisticated expressions,
// including camel humps, paths, line navigate to, middle name matching, and
// many more. If you call it twice in a row, it shows you the results out of the
// project classes.
//
// Navigate to a file or folder using the Navigate to File action. Bring up the
// Navigate to File action by pressing Control+Shift+N (Command+Shift+O on a
// Mac).  To search for folders rather than files, add a / at the end of your
// expression.
// 
// Navigate to a method or field by name using the Navigate to Symbol action.
// Bring up the Navigate to Symbol action by pressing Control+Shift+Alt+N
// (Command+Option+O on a Mac).


<build>
By employing the flexibility of Gradle, you can achieve all of this without
modifying your app's core source files. Android Studio build files are named
build.gradle. They are plain text files that use Groovy syntax to configure
the build with elements provided by the Android plugin for Gradle. Each
project has one top-level build file for the entire project and separate
module-level build files for each module. When you import an existing project,
Android Studio automatically generates the necessary build files.

To learn more about the build system and how to configure, see Configure your
build.

<adb>
https://developer.android.com/studio/command-line/adb.html

adb disable-verity
adb reboot

root	Restart adbd with root permissions.
adb root

adb remount
adb connect 192.168.0.104

You can verify that your device is connected by executing adb devices

$ adb devices
List of devices attached
192.168.0.104:5555      device

<run>
/home/keitee/Downloads/android/android-studio/bin
./studio.sh &


={============================================================================
*kt_dev_skymw_0000* skymw-android-bluetoothrcu

https://www.stb.bskyb.com/confluence/display/2016/Remote+Control+Architecture

The BT Manager component will act as a connector to the underlying Bluez stack,
and expose the interfaces in a specified API, for use with the main network
control and pairing system.

 5.3.3.2 Certificate Store

Pairing will generate CA certificate information, which must be placed in
persistent storage. An API to the wider system, or some knowledge of the final
persistent storage system is necessary to co-ordinate this.


SKY BLUEZ DEBUG CONSOLE
http://192.168.0.104:8180/index.html

   Select one of the following tools:
      1 - bluetoothctl
      2 - btmgmt
      3 - btmon
#>

#> 1
[NEW] Controller 38:A6:CE:7E:63:1A "sky-ip100" [default]
[NEW] Device D4:B8:FF:12:E1:A8 U122 SkyQ EC101
Agent registered
[bluetooth]# ?
Invalid command
[bluetooth]# help
Menu main:
Available commands:
-------------------
advertise                                         Advertise Options Submenu
scan                                              Scan Options Submenu
gatt                                              Generic Attribute Submenu
list                                              List available controllers
show [ctrl]                                       Controller information
select <ctrl>                                     Select default controller
devices                                           List available devices
paired-devices                                    List paired devices
system-alias <name>                               Set controller alias
reset-alias                                       Reset controller alias
power <on/off>                                    Set controller power
pairable <on/off>                                 Set controller pairable mode
discoverable <on/off>                             Set controller discoverable mode
agent <on/off/capability>                         Enable/disable agent with given capability
default-agent                                     Set agent as the default one
advertise <on/off/type>                           Enable/disable advertising with given type
set-alias <alias>                                 Set device alias
scan <on/off>                                     Scan for devices
info [dev]                                        Device information
pair [dev]                                        Pair with device
trust [dev]                                       Trust device
untrust [dev]                                     Untrust device
block [dev]                                       Block device
unblock [dev]                                     Unblock device
remove <dev>                                      Remove device
connect <dev>                                     Connect device
disconnect [dev]                                  Disconnect device
menu <name>                                       Select submenu
version                                           Display version
quit                                              Quit program
exit                                              Quit program
help                                              Display help about this program
[bluetooth]#

// check if "controller" is on and if not, run "power on"

[bluetooth]# show
Controller 38:A6:CE:7E:63:1A (public)
        Name: "sky-ip100"
        Alias: "sky-ip100"
        Class: 0x00000414
        Powered: yes
        Discoverable: no
        Pairable: no
        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)
        UUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)
        UUID: PnP Information           (00001200-0000-1000-8000-00805f9b34fb)
        UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)
        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)
        Modalias: usb:v1D6Bp0246d0530
        Discovering: no
[bluetooth]#


// check on "paired" and "connected"

[bluetooth]# info D4:B8:FF:12:E1:A8
Device D4:B8:FF:12:E1:A8 (public)
        Name: P199 SkyQ EC101
        Alias: P199 SkyQ EC101
        Appearance: 0x0180
        Paired: yes
        Trusted: no
        Blocked: no
        Connected: no
        LegacyPairing: no
        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)
        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)
        UUID: Immediate Alert           (00001802-0000-1000-8000-00805f9b34fb)
        UUID: Device Information        (0000180a-0000-1000-8000-00805f9b34fb)
        UUID: Battery Service           (0000180f-0000-1000-8000-00805f9b34fb)
        UUID: Human Interface Device    (00001812-0000-1000-8000-00805f9b34fb)
        UUID: Scan Parameters           (00001813-0000-1000-8000-00805f9b34fb)
        UUID: Vendor specific           (0000f800-bdf0-407c-aaff-d09967f31acd)
        UUID: Vendor specific           (0000f801-bdf0-407c-aaff-d09967f31acd)
        UUID: Vendor specific           (0000f802-bdf0-407c-aaff-d09967f31acd)
        Modalias: bluetooth:v057Ap0004d0100
[bluetooth]#

// remove

[bluetooth]# remove D4:B8:FF:12:E1:A8
[DEL] Primary Service
...
Device has been removed
[bluetooth]#

//

[bluetooth]# scan on

... press "1+3"

[bluetooth]# pair D4:B8:FF:12:E1:A8

[bluetooth]# info D4:B8:FF:12:E1:A8

[U162 SkyQ EC101]# devices
Device D4:B8:FF:12:E1:A8 P215 SkyQ EC101


<bt-remote-pairing>
https://docs.ubuntu.com/core/en/stacks/bluetooth/bluez/docs/reference/pairing/introduction

What is Pairing

In Bluetooth terminology pairing is the process of making two devices know about
each other. The key concept is about exchanging so called link-keys that are
used to secure the communication. The pairing process involves authentication
however due to the nature and variety of Bluetooth devices there will be
different ways of confirming the pairing attempt:

Devices such as keyboards or car-kits will require authentication by PIN/passkey
code

Other devices will provide a yes/no choice to the pairing attempt

Devices without an input interface such as headsets or speakers will not require
the user to confirm the pairing attempt at all

Bluetooth RCU Pairing
http://192.168.0.104:8280/index.html

https://www.stb.bskyb.com/confluence/display/2016/RCU%3A+Pairing+steps+by+steps


<bt-remote-evnets>
1+3 key triggers two things:

o do advertisement from rcu
o do paring process from a box

// note that "service/android"
// app/src/main/cpp/service/android/blercuservice.cpp

QSharedPointer<BleRcuController> m_controller;

BleRcuService::BleRcuService(QObject *parent)
	: QObject(parent)
	, m_inputDeviceManager(InputDeviceManager::create())
  {
    QObject::connect(m_irInputDevice.data(), &LinuxInputDevice::keyPress,
        this, &BleRcuService::onIrKeyPress);
  }

void BleRcuService::onIrKeyPress(quint16 keyCode, qint32 scanCode)
{
  // check for the pairing keyCode F13 which is the new format
  if (keyCode == KEY_F13) {
    const quint8 filterByte = quint8((scanCode >> 16) & 0xff);
    const quint8 pairingCode = quint8((scanCode >> 0) & 0xff);

    // kick off pairing using supplied pairing code
    m_controller->startPairing(filterByte, pairingCode);
  }
}


// app/src/main/cpp/blercu/blercucontroller.cpp

bool BleRcuControllerImpl::startPairing(quint8 filterByte, quint8 pairingCode)
{
  // start the pairing process
  m_pairingStateMachine.start(filterByte, pairingCode);
}

void BleRcuPairingStateMachine::start(quint8 filterByte, quint8 pairingCode)
{
  // start the state machine
  m_stateMachine.start();
}

// app/src/main/cpp/blercu/blercupairingstatemachine.cpp

void BleRcuPairingStateMachine::setupStateMachine()
{
  // connect to the state entry and exit signals
  QObject::connect(&m_stateMachine, &StateMachine::entered,
      this, &BleRcuPairingStateMachine::onStateEntry);
}


//
// app/src/main/cpp/blercu/bluez/interfaces/bluezadapterinterface.h

#include <QtDBus>

class BluezAdapterInterface : public DBusAbstractInterface
{
  // ??
  Q_PROPERTY(bool Discovering READ discovering NOTIFY `discoveringChanged`)
    inline bool discovering() const
    { return qvariant_cast< bool >(property("Discovering")); }

signals:
  void aliasChanged(const QString& newAlias);
  void deviceClassChanged(quint32 deviceClass);
  void discoverableChanged(bool discoverable);
  void discoverableTimeoutChanged(uint newDiscoverableTimeout);
  void `discoveringChanged`(bool discovering);
  ...
};

// dbus -> adapter
// app/src/main/cpp/blercu/blercuadapter.h

class BleRcuAdapter : public QObject
{
signals:
  void poweredChanged(bool powered, QPrivateSignal);

  void `discoveryChanged`(bool discovering, QPrivateSignal);
  void pairableChanged(bool pairable, QPrivateSignal);

  void deviceFound(const BleAddress &address, const QString &name, QPrivateSignal);
  void deviceRemoved(const BleAddress &address, QPrivateSignal);

  void deviceNameChanged(const BleAddress &address, const QString &name, QPrivateSignal);
  void devicePairingChanged(const BleAddress &address, bool paired, QPrivateSignal);
  void deviceReadyChanged(const BleAddress &address, bool ready, QPrivateSignal);
};

// app/src/main/cpp/blercu/bluez/blercuadapter_p.h

class BleRcuAdapterBluez : public BleRcuAdapter
{
  private slots:
    void onAdapterDiscoveringChanged(bool discovering);
};

// app/src/main/cpp/blercu/bluez/blercuadapter.cpp

bool BleRcuAdapterBluez::attachAdapter(const QDBusObjectPath &adapterPath)
{
  // install handlers for the interesting adapter notifications
  QObject::connect(m_adapterProxy.data(), &BluezAdapterInterface::`discoveringChanged`,
      this, &BleRcuAdapterBluez::`onAdapterDiscoveringChanged`);
}

void BleRcuAdapterBluez::`onAdapterDiscoveringChanged`(bool discovering)
{
  emit `discoveryChanged`(m_discovering, BleRcuAdapter::privateSignal());
}

// adapter -> state machine
// app/src/main/cpp/blercu/blercupairingstatemachine.cpp

class BleRcuPairingStateMachine : public QObject {}

BleRcuPairingStateMachine::BleRcuPairingStateMachine()
{
  QObject::connect(m_adapter.data(), `&BleRcuAdapter::discoveryChanged`,
      this, &BleRcuPairingStateMachine::`onDiscoveryChanged`);
}

void BleRcuPairingStateMachine::`onDiscoveryChanged`(bool discovering)
{
  if (discovering)
    m_stateMachine.postEvent(DiscoveryStartedEvent);
  else
    m_stateMachine.postEvent(DiscoveryStoppedEvent);
}



app/src/main/java/com/sky/bluetooth/SkyBroadcastReceiver.java
124:            filter.addAction(BluetoothDevice.ACTION_PAIRING_REQUEST);
1


/home/keitee/ip/SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
/home/keitee/ip/SkyBluetoothRcu/app/src/main/java/com/sky/blercu/BleRcuService.java
/home/keitee/ip/SkyBluetoothRcu/app/src/main/cpp/blercu/blercuadapter.h
/home/keitee/ip/SkyBluetoothRcu/app/src/main/cpp/blercu/android/blercuadapter_p.h


<log>

	// log the start-up
	qMilestone("====================");
	qMilestone("KT:");
	qMilestone("====================");

2019-06-11 10:24:20.782 15453-15472/? I/BleRcuQt: < M:main.cpp F:doMain L:214 > starting native code
2019-06-11 10:24:20.782 15453-15472/? I/BleRcuQt: < M:main.cpp F:doMain L:217 > ====================
2019-06-11 10:24:20.782 15453-15472/? I/BleRcuQt: < M:main.cpp F:doMain L:218 > KT:
2019-06-11 10:24:20.782 15453-15472/? I/BleRcuQt: < M:main.cpp F:doMain L:219 > ====================

<bt-remote-as-api>
/peripherals/btremotes/status 197

pairinginprogress
remotes
bdaddr
connected
name
deviceid
model
hwrev
serialno
rcuswver
btlswver
batterylevel


/peripherals/btremotes/edidinfo 199
/peripherals/btremotes/edidbasedcodes 200
/peripherals/btremotes/ircodes/manualcodes 201
/peripherals/btremotes/ircodes/manufacturers 202
/peripherals/btremotes/ircodes/models 203
/peripherals/btremotes/ircodes/action/setcode 204
/peripherals/btremotes/ircodes/action/clear 205


<api-getdevicename>
as/iWedia_AS_service/QtRESTService/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
24:     String getDeviceName(in String address);

as/iWedia_AS_service/QtRESTService/app/src/main/java/com/iwedia/comedia/qtrestservice/as/services/ServicePeripherals.java
245:                newDevice.name = BleRcuService.get().getDeviceName(address);

        public void addNewDevice(String address) {
            BtRemoteDeviceSettings newDevice = new BtRemoteDeviceSettings(address);
            try {
                newDevice.connected = BleRcuService.get().isDeviceConnected(address);
                newDevice.name = BleRcuService.get().getDeviceName(address);
                newDevice.deviceid = BleRcuService.get().getDeviceId(address);
                newDevice.make = BleRcuService.get().getDeviceMake(address);
                newDevice.model = BleRcuService.get().getDeviceModel(address);
                newDevice.hwrev = BleRcuService.get().getDeviceHardwareVersion(address);
                newDevice.serialno = BleRcuService.get().getDeviceSerialNumber(address);
                newDevice.rcuswver = BleRcuService.get().getDeviceSoftwareVersion(address);
                newDevice.btlswver = BleRcuService.get().getDeviceBootloaderVersion(address);
                newDevice.batterylevel = BleRcuService.get().getDeviceBatteryLevel(address);
                mBtRemoteDeviceList.add(newDevice);
            } catch (RuntimeException | RemoteException | UnknownServiceException e) {
                e.printStackTrace();
            }
        }

<aidl>
interface IBleRcuService {
	void registerClient(in ParcelUuid appId, in IBleRcuServiceCallback callback);
	void unregisterClient(in int clientIf);

	boolean isPairing();

	String[] getDevices();

	++++ boolean isDevicePaired(in String address);
	++++ boolean isDeviceConnected(in String address);
	++++ int getDeviceId(in String address);
	++++ int getDeviceBatteryLevel(in String address);
	++++ String getDeviceName(in String address);
	++++ String getDeviceMake(in String address);
	++++ String getDeviceModel(in String address);
	++++ String getDeviceSerialNumber(in String address);
	++++ String getDeviceHardwareVersion(in String address);
	++++ String getDeviceSoftwareVersion(in String address);
	++++ String getDeviceBootloaderVersion(in String address);
	++ boolean setDeviceFindMe(in String address, in boolean enable);

	++ boolean setDeviceTouchMode(in String address, in int mode);
	++ int getDeviceTouchMode(in String address);

	++ boolean programDeviceIrCode(in String address, in int type, in int code);
	++ boolean eraseDeviceIrCodes(in String address);

	++ ParcelFileDescriptor startDeviceVoiceRecording(in String address);
	++ VoiceRecordingStats getDeviceVoiceRecordingStats(in String address);

	String[] getManufacturers(in String search, in int flags, in int offset, in int limit);
	String[] getModels(in String manufacturer, in String search, in int flags, in int offset, in int limit);
	int[] getCodes(in String manufacturer, in String model, in int flags);
	int[] getCodesFromEDID(in byte[] edid);

	++ boolean startDeviceUpgrade(in String address, in byte[] firmware);
	++ void cancelDeviceUpgrade(in String address);
}

    @Override
    public String toString() {
        StringBuilder description = new StringBuilder();

        try {
            // isDeviceConnected
            final boolean connected = isConnected();

            // getDeviceId, getDeviceName
            description.append("BleRcu Device ").append(getDeviceId()).append(": ").append(getName()).append("\n");

            description.append("  bdaddr: ").append(getAddress()).append("\n");
            description.append("  connected: ").append(connected);
            if (connected) {
                description.append("\n");
                description.append("  name: ").append(getName()).append("\n");
                description.append("  deviceid: ").append(getDeviceId()).append("\n");

                // getDeviceMake, 
                description.append("  make: ").append(getMake()).append("\n");

                // getDeviceModel
                description.append("  model: ").append(getModel()).append("\n");

                // getDeviceHardwareVersion
                description.append("  hwrev: ").append(getHardwareVersion()).append("\n");

                // getDeviceSerialNumber
                description.append("  serialno: ").append(getSerialNumber()).append("\n");

                // getDeviceSoftwareVersion
                description.append("  rcuswver: ").append(getSoftwareVersion()).append("\n");

                // getDeviceBootloaderVersion
                description.append("  btlswver: ").append(getBootloaderVersion()).append("\n");

                // getDeviceBatteryLevel
                description.append("  batterylevel: ").append(getBatteryLevel());
            }

        } catch (RemoteException e) {
            description.append("Error: ...");
        }
  }


#{============================================================================
Copyright: see |ktkb|  vim:tw=100:ts=3:ft=help:norl:
