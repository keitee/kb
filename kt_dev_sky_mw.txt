*kt_dev_sky_mw*                                                     tw=100, utf-8

/^[#=]{
Use #{ for a group and ={ for a item

Write what you know and konw what you write. - EXC++, Herb Sutter

An expert is a man who has made all the mistakes that can be made, in a very
narrow field. -Nils Bohr

TODO:
2. how to implement shared_ptr for multi-threaded without using locks?
3. how to solve when there are same symbols in different objects in the same namespace?

KT KB. SKYMW

*kt_dev_skymw_0000* skymw-setup
*kt_dev_skymw_0000* skymw-pages
*kt_dev_skymw_0000* skymw-commands
*kt_dev_skymw_0000* skymw-git
*kt_dev_skymw_0000* skymw-q-hardware
*kt_dev_skymw_0000* skymw-q-package
*kt_dev_skymw_0000* skymw-build
*kt_dev_skymw_0000* skymw-build-component
*kt_dev_skymw_0000* skymw-build-appliaction
*kt_dev_skymw_0000* skymw-epg
*kt_dev_skymw_0000* skymw-as
*kt_dev_skymw_0000* skymw-as-airplay
*kt_dev_skymw_0000* skymw-ai-input-handler
*kt_dev_skymw_0000* skymw-bluez
*kt_dev_skymw_0000* skymw-bluez-as
*kt_dev_skymw_0000* skymw-bluez-dbus
*kt_dev_skymw_0000* skymw-bluez-q
*kt_dev_skymw_0000* skymw-audio skymw-bluez-audio-stream
*kt_dev_skymw_0000* skymw-android
*kt_dev_skymw_0000* skymw-android-service
*kt_dev_skymw_0000* skymw-android-studio
*kt_dev_skymw_0000* skymw-android-skybluez
*kt_dev_skymw_0000* skymw-android-bluetoothrcu skymw-ip100
*kt_dev_skymw_0000* skymw-android-ip150
*kt_dev_skymw_0000* skymw-luna
*kt_dev_skymw_0000* skymw-rdk
*kt_dev_skymw_0000* skymw-rdk-bitbake-build
*kt_dev_skymw_0000* skymw-rdk-refsw
*kt_dev_skymw_0000* skymw-rdk-bitbake
*kt_dev_skymw_0000* skymw-rdk-video
*kt_dev_skymw_0000* skymw-rdk-nexus
*kt_dev_skymw_0000* skymw-rdk-nexus-virtual-display
*kt_dev_skymw_0000* skymw-rdk-westeros
*kt_dev_skymw_0000* skymw-rdk-git
*kt_dev_skymw_0000* skymw-rdk-xione
*kt_dev_skymw_0000* skymw-rdk-llama
*kt_dev_skymw_0000* skymw-rdk-as
*kt_dev_skymw_0000* skymw-rdk-dtt
*kt_dev_skymw_0000* skymw-rdk-as-windowmanager
*kt_dev_skymw_0000* skymw-jira-airplay
*kt_dev_skymw_0000* skymw-jira-android
*kt_dev_skymw_0000* skymw-jira-q
*kt_dev_skymw_0000* skymw-jira-luna
*kt_dev_skymw_0000* skymw-todo


={============================================================================
*kt_dev_skymw_0000* skymw-setup
<router>
admin/admin

<skymw-setup-falconv2>
/home/keitee/mw/tftproot/falconv2

// printenv
autoload=no
baudrate=115200
board=gemini
bootcmd=run bootm
bootdelay=3
bootm=dhcp;tftp 0x42008000 192.168.0.100:eu-q-falconv2-uk/zImage;tftp 0x54000000 192.168.0.100:eu-q-falconv2-uk/sdk2_stih419-gemini.dtb;dcache off;bootz 0x42008000 - 0x54000000
dtb=192.168.0.100:eu-q-falconv2-uk/sdk2_stih419-gemini.dtb
ethact=stmac-1
ethaddr=0c:f9:c0:f2:24:a8
fdt_addr=0x54000000
kernel=192.168.0.100:eu-q-falconv2-uk/zImage
load_addr=0x42008000
serverip=192.168.0.100
stderr=serial
stdin=serial
stdout=serial
tftp_dir=eu-q-falconv2-uk
tftp_path=192.168.0.100:eu-q-falconv2-uk

setenv tftp_path 192.168.0.101:falconv2
setenv bootm dhcp\;tftp 0x42008000 192.168.0.101:falconv2/zImage\;tftp 0x54000000 192.168.0.101:falconv2/sdk2_stih419-gemini.dtb\;dcache off\;bootz 0x42008000 - 0x54000000


// gabriel

env default -a
setenv autoload no
setenv ethaddr 0c:f9:c0:f2:24:a8

setenv serverip 192.168.0.101
setenv tftp_dir falconv2
setenv tftp_path "$serverip:$tftp_dir"

setenv kernel "$tftp_path/zImage"
setenv dtb "$tftp_path/sdk2_stih419-gemini.dtb"
setenv load_addr "0x42008000"
setenv fdt_addr "0x54000000"
// setenv bootargs "mesh=off full_screen_opacity=50 console=ttyAS0,115200 CONSOLE=/dev/ttyAS0"
setenv bootargs "root=/dev/nfs nfsroot=192.168.0.101:/home/keitee/mw/exports/falconv2/flash0,tcp,nfsvers=3 remotedir=192.168.0.101:/home/keitee/mw/exports/falconv2/flash0 mesh=off wifi=off earlyprintk=serial,full_screen_opacity=50 console=ttyAS0,115200 CONSOLE=/dev/ttyAS0"
setenv bootm "dhcp\;tftp $load_addr $kernel\;tftp $fdt_addr $dtb\;dcache off\;bootz $load_addr - $fdt_addr"
setenv bootcmd "run bootm"
setenv bootdelay 2

setenv stderr serial;
setenv stdin serial;
setenv stdout serial
saveenv


2.4.2         Write zImage from USB to EMMC and boot

Without external DTB:

setenv autoload no
setenv load_addr 42008000

setenv bootm "mmc read $load_addr 4000 40000; dcache off; go $load_addr" 
setenv bootcmd "usbupgrade; run bootm" 

setenv bootdelay 2
saveenv


// boot image
xSubmoduleDarwinSDK/eu-q-falconv2-uk/SDK_Q120.000.51.00_bskybgen2_SKYH419/deps/ETHAN_SKYH419_FALCONV2_LNUX_01/KERN_ETHAN_SKYH419_FALCONV2_LNUX_01/LittleEndian/debug/debug/BootImage/zImage
xSubmoduleDarwinSDK/eu-q-falconv2-uk/SDK_Q120.000.51.00_bskybgen2_SKYH419/deps/ETHAN_SKYH419_FALCONV2_LNUX_01/KERN_ETHAN_SKYH419_FALCONV2_LNUX_01/LittleEndian/debug/debug/BootImage/sdk2_stih419-gemini.dtb


<skymw-setup-amidala>
// copy boot image
cp ~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-amidala-de/SDK/SKYEU_SKYH418_AMIDALA_LNUX_01/KERN_SKYEU_SKYH418_AMIDALA_LNUX_01/LittleEndian/debug/debug/BootImage/zImage .

/home/keitee/mw/tftproot/amidala

192.168.0.101:titan/zImage"

setenv serverip 192.168.0.101
setenv tftp_dir amidala
setenv autoload no
setenv tftp_path "$serverip:$user_name/$tftp_dir"
setenv kernel "$tftp_path/zImage"
setenv dtb "$tftp_path/sdk2_stih418-amidala.dtb"
setenv load_addr "0x82008000"
setenv fdt_addr "0x94000000"
setenv bootm "dhcp;tftp $load_addr $kernel;tftp $fdt_addr $dtb;dcache off;bootz $load_addr - $fdt_addr"
setenv bootcmd "run bootm"
setenv bootargs "remotedir=192.168.0.101:/home/keitee/mw/exports/amidala/flash0"
setenv bootdelay 2
saveenv
reset

bootm=dhcp;tftp 0x82008001 192.168.0.101:/amidala/zImage;tftp 0x94000000 192.168.0.101:/amidala/sdk2_stih418-amidala.dtb;dcache off;bootz 0x82008000 - 0x94000000

<skymw-setup-tftp>
sudo apt-get install tftpd-hpa

cat /etc/default/tftpd-hpa 

# /etc/default/tftpd-hpa

TFTP_USERNAME="tftp"
TFTP_DIRECTORY="/home/keitee/mw/tftproot"
TFTP_ADDRESS=":69"
TFTP_OPTIONS="--secure"

systemctl status tftpd-hpa.service
systemctl restart tftpd-hpa.service


<skymw-setup-nfs>
sudo apt-get install nfs-kernel-server
systemctl status nfs-server.service

$ cat /etc/exports
/home/keitee/mw/exports   *(rw,sync,no_root_squash,no_all_squash,sync,insecure)

AUTO-MOUNTING 192.168.0.101:/home/keitee/mw/exports/titan/flash0

<mount>
mount -o nolock -t nfs 192.168.0.101:/home/keitee/mw/exports/titan/flash0 /tmp/data/x
mount -o nolock -t nfs 172.18.200.185:/mnt ./
m

<skymw-setup-titan-boot>

// copy boot image
cp ~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/
/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage /home/keitee/mw/tftproot/titan


/home/keitee/mw/tftproot/titan

mount -o rw -t nfs 192.168.0.101:/home/keitee/mw/exports/titan/flash0 /mnt/x

mount -o rw -t nfs 192.168.0.101:/home/keitee/mw/exports/titan/flash0 /mnt/x

mount -o tcp,nolock,vers=2 192.168.0.101:/home/keitee/mw/exports/titan/flash0 /flash0

// should be careful not to include the end of line when pasting it into bolt
// command line

// shall have quote ""
// ok
setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.100:titan/zImage"

// ok
setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.101:/titan/zImage ‘remotedir=192.168.0.101:/home/keitee/mw/exports/titan/flash0'"

// setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.101:titan/zImage 'console=ttyS0,115200 ip=udhcp vmalloc=300M brcm_cma_kern_rsv=450M remotedir=192.168.0.101:/home/keitee/mw/exports/titan/flash0'"
//                   "ifconfig eth0 -auto; boot 192.168.0.104:/n-uk/zImage 'console=ttyS0,115200 ip=udhcp vmalloc=300M brcm_cma_kern_rsv=450M remotedir=192.168.0.104:/mnt/nfs/eu-q-titan-uk/flash0'

// error since copied from word document and found that dash(-) causes the
// issue when used on bolt bootloader
setenv -p STARTUP "ifconfig eth0 –auto; boot 192.168.0.100:/titan/zImage ‘remotedir=192.168.0.100:/home/keitee/mw/exports/titan/flash0'"

BOLT> printenv

STARTUP ifconfig eth0 -auto; boot 192.168.0.101:/titan/zImage ‘remotedir=192.168.0.101:/home/keitee/mw/exports/titan/flash0'
ETH0_HWADDR 20:47:ED:FF:E0:D8
setenv -p STARTUP "ifconfig eth0 -auto; boot 192.168.0.101:/titan/zImage ‘remotedir=192.168.0.101:/home/keitee/mw/exports/titan/flash0'"


2.5.2         Booting image through USB

This configuration sets Bolt to load zImage from USB and boot it up

setenv -p STARTUP "boot usbdisk0:zImage" 


*titan-flash-full*
https://zork.ethan.bskyb.com/release-notes/Q000.023.37.00/ReleaseNotes/SKYOB_SKY7278_BCM7278_LNUX_01.html#_Toc11764079

2.5.3.2     Flashing image on emmc from USB
flash usbdisk0:zImage emmcflash0.kernel

2.5.3.3     Boot argument to boot from emmc flash.
setenv -p STARTUP "boot emmcflash0.kernel" 


<ai-build-for-pc>
sudo apt-get install automake
sudo apt-get install libxslt-dev


={============================================================================
*kt_dev_skymw_0000* skymw-mw

https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=2016&title=Application+Infrastructure+Architecture


={============================================================================
*kt_dev_skymw_0000* skymw-commands

ls -al /opt/airplay/audio.out.pcm
touch /opt/airplay/audio.out.pcm; chmod 777 /opt/airplay/audio.out.pcm
rm /mnt/nds/dev_13/part_0/FSN_DATA/LOG

cp /mnt/nds/dev_13/part_0/FSN_DATA/LOG /flash0/LOG_07; chmod 777 /flash0/LOG_07
cp /opt/airplay/audio.out.pcm /flash0/PCM_31; chmod 777 /flash0/PCM_31

tail -f /mnt/nds/dev_13/part_0/FSN_DATA/LOG | egrep "KT|AudioConverterDispose|AudioConverterNew"
tail -f /mnt/nds/dev_13/part_0/FSN_DATA/LOG | egrep "KEY_P|Progress|rtpSkew"

curl -v -X POST http://127.0.0.1:8008/pm/downloads/ --data http://192.168.0.105/spotify.wgt

curl -v -X DELETE http://192.168.0.102:8008/pm/packages/com.spotify.Spotify.TVv2
curl -v -X GET http://192.168.0.102:8008/pm/packages
 
// to see ip
cat /proc/net/fib_trie


={============================================================================
*kt_dev_skymw_0000* skymw-git

<ssh>
to register ssh keys
https://www.stb.bskyb.com/gosa/

<git-repos>
git clone dwngit@git.stb.bskyb.com:ethan-as-source-repo
git clone dwngit@git.stb.bskyb.com:ethan-as-source ethan-as-source-repo
git clone dwngit@git.stb.bskyb.com:ethan-mw-wrt
git clone dwngit@git.stb.bskyb.com:appinfrastructure

*skymw-ip100*
git clone ssh://kyoupark@mgt-ip100-gerrit.skyqstbbuild.com:29418/sky/platform/packages/apps/SkyBluetoothRcu


<ethan-as-source>
// needs to run git pull since no default branch?
// "develop" branch

git pull origin develop

keitee@keitee-mint:~/mw/ethan-as-source$ git checkout develop
Checking out files: 100% (25967/25967), done.

// update submodule

keitee@keitee-mint:~/mw/ethan-as-source$ git submodule update --init --force

git push -n --set-upstream origin kit-NGDEV-141186

<git>
tag: NGDEV-141186_Delivered_Develop_07062019_1057
branch NGDEV-143556_IP100_Support_RCU_pairing_without_infrared

git checkout -b NGDEV-143556_review_03 develop
git push -n origin NGDEV-143556_IP100_Support_RCU_pairing_without_infrared
git push -f origin NGDEV-143556_review:NGDEV-143556_IP100_Support_RCU_pairing_without_infrared_2
git push origin NGDEV-143556_review_03:NGDEV-143556_IP100_Support_RCU_pairing_without_infrared
NGDEV-143556_IP100_Support_RCU_pairing_without_infrared

// no permission to do
// git push origin --delete NGDEV-143556_IP100_Support_RCU_pairing_without_infrared_2

// check the pushed branch
git diff origin/NGDEV-143556_IP100_Support_RCU_pairing_without_infrared_3 HEAD

// check update
git pull --rebase origin develop

// check difference
git log develop..HEAD

git rebase develop
git rebase --onto develop <topic>

git push -n origin HEAD:refs/for/release/2.2.0

git diff --ignore-space-at-eol --stat origin/develop..HEAD


<skymw-git-flow-bluez-android> *skymw-git-flow*

sudo apt-get install git-flow

git checkout -b NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared

meld /home/keitee/ip/SkyBluetoothRcu-clean/app/src/main/cpp/blercu /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/blercu &
gvim /home/keitee/ip/SkyBluetoothRcu-clean/app/src/main/cpp/blercu/blercupairingstatemachine.cpp /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercupairingstatemachine.cpp

// this will create a branch
git flow feature start NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared

$ git flow feature start --help
usage: git flow feature start [-h] [-F] <name> [<base>]

    Start new feature <name>, optionally basing it on <base> instead of <develop>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation


git branch --set-upstream-to=origin/develop

git branch -vv
* feature/NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared d27b0d10e Increment Telemetria App version to 2.0.2

// change codes

// for a review (web)
// https://pv-jbt001.uk2.scp.bskyb.com:8443/ethan-as-source
// 
// origin:
// *git-repo-ai* To git.stb.bskyb.com:appinfrastructure

git diff origin/develop..HEAD

git push --set-upstream origin feature/NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared

// since uses diffrent branch name 
git push -n origin `feature`/NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared

// Someone else might have changed something
git pull --rebase

// see what to push *git-two-dot*
git log origin/develop..HEAD


$ git flow feature finish --help
usage: git flow feature finish [-h] [-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] <name|nameprefix>

    Finish feature <name>

    -h, --help            Show this help
    `--showcommands`        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -r, --[no]rebase      Rebase before merging
    -p, --[no]preserve-merges
                          Preserve merges while rebasing
    --[no]push            Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --keepremote          Keep the remote branch
    `--keeplocal`           Keep the local branch
    -D, --[no]force_delete
                          Force delete feature branch after finish
    -S, --[no]squash      Squash feature during merge
    --no-ff               Never fast-forward during the merge

// see no `feature` in the name
git flow feature finish -S NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared_compatibility_fix
git flow feature finish NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared_compatibility_fix

git push

// sky genkins step to make release note

git tag NGDEV-149450_Delivered_Develop
git tag NGDEV-152601_Delivered_Develop


*skymw-git-when-not-use-flow*
git branch -m NGDEV-152804-WIP NGDEV-152804_CODH_Bluetooth_Intermittently_unable_to_push_audio_via_BT


<git-flow-release>

git flow release start 1.0.7
git flow release publish 1.0.7

git flow release finish 1.0.7
git push
 
git checkout master
git push
 
git push origin --tags
git checkout develop


={============================================================================
*kt_dev_skymw_0000* skymw-q-hardware

// q hardware
https://www.stb.bskyb.com/confluence/display/2016/Q+Platform+Hardware+Specifications


={============================================================================
*kt_dev_skymw_0000* skymw-q-package

// fusion mw
// Check the SI_TARBALL.tgz at the bottom of the page.
http://hudkinsartifactory.cisco.com:8081/artifactory/formal_builds/Q/formal/Q000/Q000.021.41.00/


={============================================================================
*kt_dev_skymw_0000* skymw-build

<to-fix-titan-build-error>
export LC_ALL=C

as: loadlocale.c:129: _nl_intern_locale_data: Assertion `cnt < (sizeof (_nl_value_type_LC_TIME) / sizeof (_nl_value_type_LC_TIME[0]))' failed.
arm-linux-gcc: internal compiler error: Aborted (program as)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://gcc.gnu.org/bugs.html> for instructions.


<skymw-build-falconv2>

cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-falconv2-uk

./compile_sdkv2.0.sh eu-q-falconv2-uk /home/keitee/mw/ethan-as-source/ clean

sudo cp -r /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-falconv2-uk/SDK/flash0 /home/keitee/mw/exports/falconv2

<skymw-build-amidala>

cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-amidala-de

get sdk from zork
https://zork.ethan.bskyb.com/de/sdk/Q000.022.76.00/
https://zork.ethan.bskyb.com/de/sdk/Q000.022.76.00/Q__formal__Q000__Q000.022.76.00__SDK__eu-q-amidala-de__release_dbg__S__unsigned.tgz

./compile_sdkv2.0.sh eu-q-amidala-de /home/keitee/mw/ethan-as-source/ clean
./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source

or

cd ~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-amidala-de/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build
./make.sh --platform bskyb-falcon-d1-uhd --project bskybgen2 --profile nds_si_devel
./utils/bskybgen2_flash_H1.sh -b bskyb-falcon-d1-uhd


sudo cp -r /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-amidala-de/SDK/flash0 /home/keitee/mw/exports/amidala


<skymw-build-as> *build-from-as-pov*

export LC_ALL=C

# download sdk from zork. latest?
./getSdk.sh eu-q-titan-uk HQ000

# type username/password for darwin intranet. kyoupark/

# where it gets downloaded
keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/bskybgen$ ll
  Q__formal__Q000__Q000.022.04.00__SDK__eu-q-titan-uk__release_dbg__S__unsigned.tgz

// + cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/
// ++ pwd
// + dir=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk
// + echo 'copy new SDK'
//
// keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK$ cat SDK_TAG
// 22.62.00 HQ000
// 00.04.00 X063
//
// tar -xzf ${SDK_FILE_NAME}


cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk

# downlaod SDK and untar it
ln -s SDK_Q120.000.51.00_bskybgen2_SKY7278/ SDK


// `sdk_release_dbg` is same as nds si devel?

cd /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK
./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source/ clean

+ ./make.sh --platform eu-q-titan-uk `--profile sdk_release_dbg`
+ ./make.sh --platform eu-q-titan-uk --profile sdk_release_dbg --baseline ENG_KT

python eu-q-titan-uk/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/tools/nds/si/python/version_string_calculation.py sdk_release_dbg ENG_KT_BT_AUDIO_


*skymw-build-output* Creating object 
/home/keitee/mw/`ethan-as-source`/xSubmoduleDarwinSDK/eu-q-titan-uk/
  SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg/
  /components/bskybgen2/appinfrastructure/


// all points the same single file

ll eu-q-titan-uk/SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

ll eu-q-titan-uk/SDK/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

ll eu-q-titan-uk/SDK/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage 
-rwxr-xr-x 1 keitee keitee 25M May 14 10:41 eu-q-titan-uk/SDK/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*

ll eu-q-titan-uk/SDK/SKYOB_SKY7278_BCM7278_LNUX_01/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage 
lrwxrwxrwx 1 keitee keitee 129 May 14 10:41 eu-q-titan-uk/SDK/SKYOB_SKY7278_BCM7278_LNUX_01/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/debug/BootImage/zImage -> ../../../../../../deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage*


// SDK has AI and overwrites it when updates but when want to use own/differnt 
// AI from repo

*to-use-git-repo-ai* git-repo-ai
keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/
  SDK/`THIRD_PARTY_LIBS_2`/BSKYB_GEN2_APP_INFRASTRUCTURE$ ll


ln -s /home/keitee/mw/appinfrastructure/AppInfrastructure/ AppInfrastructure
ln -s /home/keitee/mw/appinfrastructure/AppInfrastructure

-rw-r--r--  1 keitee keitee   63 May 14 10:41 BSKYB_GEN2_APP_INFRASTRUCTURE_tag.txt
drwxr-xr-x 66 keitee keitee 4.0K May 14 10:41 AppInfrastructure_org/
lrwxrwxrwx  1 keitee keitee   51 Jul  9 15:41 AppInfrastructure -> /home/keitee/mw/appinfrastructure/AppInfrastructure/

// do not use submodule
// keitee@keitee-mint:~/mw/ethan-as-source$ git submodule
// 76d9c62d463b35364aa7b9bd5b18b18b0f5acc04 xSubmoduleAppInfrastructure (9.38.0-10-g76d9c62d4)


*to-use-git-repo-as*
// NOTE this is NOT necessary since 
// ./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source 
// wll create a sym link to the second arg given.

keitee@keitee-mint:~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/
  SDK/`THIRD_PARTY_LIBRARIES`/BSKYB_GEN2_AMS$ ll

ln -s /home/keitee/mw/ethan-as-source/Components/ Components
ln -s /home/keitee/mw/ethan-as-source/Components

total 12K
-rw-r--r--  1 keitee keitee   48 Sep 17 10:37 BSKYB_GEN2_AMS_tag.txt
lrwxrwxrwx  1 keitee keitee   42 Sep 17 10:40 Components -> /home/keitee/mw/ethan-as-source/Components/

// to-use-as-from-sdk
ln -s /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.04.00_bskybgen2_SKY7278/THIRD_PARTY_LIBRARIES/BSKYB_GEN2_AMS 
  /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/THIRD_PARTY_LIBRARIES/BSKYB_GEN2_AMS/Components
`

<skymw-build-ai> *build-from-ai-pov*
// build full under AS but use ai from ai-repo

keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK$ pwd
/home/keitee/mw/appinfrastructure/xSubmoduleDarwinSDK

// see that use as
keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK$ ll
lrwxrwxrwx  1 keitee keitee   66 Jul  1 15:53 eu-q-titan-uk -> 
  /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk//

// build command
cd /home/keitee/mw/appinfrastructure/Tools/Jenkins
~/mw/appinfrastructure/Tools/Jenkins$ build-AI-fromSDKv2.sh eu-q-titan-uk /home/keitee/mw/appinfrastructure NO | tee build.log

// where can see compile outputs ??

Creating object /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg/
/components/bskybgen2/appinfrastructure/BluetoothRcu/client/lib/source/BleRcuVoiceStreamSimDelegate.o

/home/keitee/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg/
components/bskybgen2/appinfrastructure

keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk$ ls SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage
SDK/FUSIONOS_OUTPUT_DEL_BSKYB_2/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/debug/BootImage/zImage


keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk$ pwd
/home/keitee/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk
keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk$ ll
total 24K
lrwxrwxrwx  1 keitee keitee   73 May 14 10:41 BSKYB_INTEGRATION_BLD.txt -> SDK/ReleaseNotes/BSKYB_INTEGRATION_BLD_21.35.00_BSKYB_HQ000_ETHAN_Int.txt
lrwxrwxrwx  1 keitee keitee   24 May 14 10:41 baseline_reasons.txt -> SDK/baseline_reasons.txt
drwxr-xr-x  5 keitee keitee 4.0K May 20 15:57 flash0/
drwxr-xr-x  2 keitee keitee 4.0K May 20 15:58 unstripped_bin/
drwxr-xr-x  5 keitee keitee 4.0K Jul  1 14:57 ./
drwxr-xr-x  3 keitee keitee 4.0K Jul  1 15:35 ../
drwxr-xr-x 35 keitee keitee 4.0K Jul  2 09:38 SDK/

// same
keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK$
lrwxrwxrwx  1 keitee keitee   66 Jul  1 15:53 
eu-q-titan-uk -> /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk//

// to use `git-repo-as`
keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk/
  SDK/THIRD_PARTY_LIBRARIES/BSKYB_GEN2_AMS$ ll
-rw-r--r--  1 keitee keitee   47 May 14 10:41 BSKYB_GEN2_AMS_tag.txt
lrwxrwxrwx  1 keitee keitee   42 Jul  1 15:35 Components_org -> /home/keitee/mw/ethan-as-source/Components/
lrwxrwxrwx  1 keitee keitee   42 Jul 17 11:54 Components -> /home/keitee/mw/ethan-as-source/Components/

keitee@keitee-mint:~/mw/appinfrastructure/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK$ ls -al flash0
flash0/                  flash0_sky_TITAN.tar.gz  flash0.tar.gz

cp -r flash0/ ~/mw/exports/titan/
cp -r /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/flash0 /home/keitee/mw/exports/titan


<build-tool> *builc-gcc*
~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/deps/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01/bin/arm-linux-gcc

lrwxrwxrwx 1 keitee keitee 31 May 14 10:41 arm-linux-gcc -> arm-unknown-linux-gnueabihf-gcc*

/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01

<skymw-build-gcc>
export LC_ALL=C
cp /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/unstripped_bin/APP_Process .
/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/deps/SYSTEM_BIN_4/brcm_gcc_arm_x86_linux_01/bin/arm-linux-gdb


<skymw-full-stack-build>
svn ls svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/
svn ls svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/Q000.023.37.00/
svn checkout svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/Q000.023.37.00/
svn checkout svn+ssh://dwnsvn@git.stb.bskyb.com/2016_middleware/tags/Q000/Q000.021.45.00/

// fsi-build-when-use-jenkins
// sky ldap KPA34,
// kyoupark/ for new jenkins


+ cd FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/
+ ./make.sh --platform eu-q-titan-uk --profile sky_trials
+ ./make.sh --platform eu-q-titan-uk --profile sky_trials --baseline Q000.021.42.00

+ create_version_string_from_baseline
+ local VERSION_CFG=projects/bskybgen2/fs/NDS/config/overrides/version.cfg
+ local VERSION_H=projects/bskybgen2/inc/version.h
+ local 'VERSION_SECTION=[VERSION]'
+ local VERSION_TAG=NDS_SW_VERSION
+ local PLATFORM_TAG=PLATFORM
+ echo 'Checking & calculating Version string - '\''sky_trials'\'' '\'''\'''
Checking & calculating Version string - 'sky_trials' ''
python tools/nds/si/python/version_string_calculation.py ${PROFILE} ${BASELINE}
++ python tools/nds/si/python/version_string_calculation.py sky_trials
+ VERSION_STRING='~*~dev version~*~'
+ '[' 0 -ne 0 ']'
+ echo 'VERSION = ~*~dev version~*~'
VERSION = ~*~dev version~*~
+ echo '[VERSION]'
+ echo 'NDS_SW_VERSION="~*~dev version~*~"'
+ echo 'PLATFORM="eu-q-titan-uk"'


./make.sh --platform eu-q-titan-uk --profile sky_trials --baseline ENG_NGDEV-152804

./build_mw_epg.sh --platform eu-q-titan-uk --variant debug --profile sky_trials --nomake --baseline ENG_NGDEV-152804
./make_image.sh --platform eu-q-titan-uk --variant debug --profile sky_trials --project bskybgen2


={============================================================================
*kt_dev_skymw_0000* skymw-build-component

$ ./compile_sdkv2.0.sh eu-q-titan-uk /home/keitee/mw/ethan-as-source

+ START_DIR=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK
++ cd ./../
++ pwd
+ SKY_ROOT=/home/keitee/mw/ethan-as-source

// this NDS_ROOT
+ cd FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build

+ ./make.sh --platform eu-q-titan-uk --profile sdk_release_dbg

  // run make on top level makefile
  // which is a sym link FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/makefile 
  //  -> BUILD_SYSTEM/COMMON_MAKEFILES/makefile

  $(LOCAL_GOALS):
    $(MAKE) --debug -$(CCASE_MAKEFLAGS) --directory=projects/$(NDS_BUILD_PROJECT) --print-directory $(LOCAL_MAKE_ARGS) $(TOP_LEVEL_PARALLEL_SWITCH) NDS_TARGET:=$@ $@

  ‘--directory=dir’
  Change to directory dir before reading the makefiles. If multiple ‘-C’ options
  are specified, each is interpreted relative to the previous one: ‘-C / -C etc’
  is equivalent to ‘-C /etc’. This is typically used with recursive invocations
  of make (see Recursive Use of make).

  makefile:229:
  + make -s BUILD_EPG:=YES BUILD_DUMMY_EPG:=NO BUILD_MW:=YES BUILD_AS:=NO
  NO_LAE:=YES NO_JVM:=YES NDS_MW_PROJECT:=BSKYB_GATEWAY_
SI MEMMAN_TIMINGS:=0
  MEMMAN_OUTPUT_ONCE:=YES
  NDS_BUILD_ROOT:=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2
  NDS_BUILD_PROJECT:=bskybgen2 NDS_PLATFORM:=SKYOB_SKY7278_BCM7278_LNUX_01
  SQLITE_WANT_PROFILING:=YES NDS_PLATFORM_ENDIAN:=LittleEndian
  NDS_FUSIONOS:=FUSIONOS_BSKYB_2 NDS_USE_CPP:=YES NDS_LOCATION:=ST
  NDS_BUILD_TYPE_DEFAULT:=release_dbg NDS_OS_BUILD_TYPE:=release
  NDS_USE_REL_PATHS:=NO NDS_USE_CCACHE:=NO NDS_CHECK_DEF:=NO
  SQL_MEMMAN:=MEMOTHER3 NDS_CAROUSEL:=OTV NDS_PROFILE:=XSI
  DMS_ROOT:=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/DARWIN_PLATFORM/dms/build/integration/dms
  VOB_ROOT:=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278
  NDS_INTERNAL_BUILD:=NO IEX:=NO NDS_VGV_MOCK:= DIAG_BINARY_MODE:=
  DIAG_PERFORMANCE_MODE:= DIAG_ENABLE_ALL_LEVELS:= DIAG_RELEASE_MIL:=
  DIAG_PROD_LOGS:= USE_SYSINIT_CFG:=NO BUILD_CARANGE_LIB_ONLY:=NO MEMPROF:=NO
  TIMEDOCTOR:=NO MEMBUSTER:=NO AS_TIME_OVERRIDE:=NO QT_PLATFORM:=sky_qt5
  FILLDISK:=NO NDS_TOOLS_FILLDISK:= STANDALONE_UI:=YES FROM_SDK:=YES
  SKY_USE_PREBUILT_EPG:=YES CRASHREPORT:=NO BUILD_PROFILE:=sdk_release_dbg
  USE_CCACHE_WITH_DIAG:=YES NDS_CCACHE_EXE:=ccache
  VOB_ROOT_UNIX:=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278
  SKY_PLATFORM:=eu-q-titan-uk
  PLATFORMS_TOOLS_ROOT:=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278
  TOP_LEVEL_PARALLEL_SWITCH:= DIAG_PROCESSES_PROJECT_EXCLUDE:=

  mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/platform.mk:246: ----------------------------------------------------------------------

  this reads makefiles from project:

    /SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/projects/bskybgen2$ ll *.mk
    rwxr-xr-x 1 keitee keitee  25K Sep 23 16:28 makefile*
    -rwxr-xr-x 1 keitee keitee 2.2K Sep 23 16:28 libraries.mk*
    -rwxr-xr-x 1 keitee keitee  563 Sep 23 16:28 HIP_AMI_IT_SI.mk*
    -rwxr-xr-x 1 keitee keitee  305 Sep 23 16:28 EE_IPCLIENT_SI.mk*
    -rwxr-xr-x 1 keitee keitee  477 Sep 23 16:28 EE_GATEWAY_SI.mk*
    -rwxr-xr-x 1 keitee keitee  473 Sep 23 16:28 EE_AMI_IT_SI.mk*
    -rwxr-xr-x 1 keitee keitee  715 Sep 23 16:28 EE_AMI_DE_SI.mk*
    -rwxr-xr-x 1 keitee keitee   60 Sep 23 16:28 build_options_prod_logs.mk*
    -rwxr-xr-x 1 keitee keitee  419 Sep 23 16:28 build_options.mk*
    -rwxr-xr-x 1 keitee keitee  440 Sep 23 16:28 BSKYB_IPCLIENT_SI.mk*
    -rwxr-xr-x 1 keitee keitee  613 Sep 23 16:28 BSKYB_HIP_GATEWAY_SI.mk*
    -rwxr-xr-x 1 keitee keitee  609 Sep 23 16:28 BSKYB_GATEWAY_SI.mk*

    // run make on LOCAL_COMPONENTS

    .PHONY: $(LOCAL_COMPONENTS)
    $(LOCAL_COMPONENTS):
    	@echo "KT: run $(LOCAL_COMPONENTS)"
    	/usr/bin/time -o ${WORKSPACE}/bfi_stats -a -f "%C,R=%E,K=%S,U=%U" $(MAKE) $(PARALLELISM) -C $(NDS_ROOT)/components/$@ $(MAKE_ARGS)

  KT: run  ../components/bskybgen2/appinfrastructure/AppLogger/client
  ../components/bskybgen2/appinfrastructure/Hamiltron/client
  ../components/bskybgen2/appinfrastructure/HamiltronQPA
  ../components/bskybgen2/appinfrastructure/XmlDSigVerifier/standalone/process
  ../components/bskybgen2/appinfrastructure/Crypto/standalone/process
  ../components/bskybgen2/appinfrastructure/Jumper/daemon/process
  ../components/bskybgen2/appinfrastructure/WebSocketMediator/daemon/process
  ../components/bskybgen2/appinfrastructure/CrlCache/CrlCacheRpc/process
  ../components/bskybgen2/appinfrastructure/ASAP/AsapServerDaemon/process
  ../components/bskybgen2/appinfrastructure/ProxyServer/ProxyServerDaemon/process
  ../components/bskybgen2/appinfrastructure/CredentialsManager/daemon/process
  ../components/bskybgen2/appinfrastructure/CredentialsManager/engine/sharedlib
  ../components/bskybgen2/appinfrastructure/CredentialsManager/engine/qtplugin
  ../components/bskybgen2/appinfrastructure/UPnPDiscovery/daemon/process
  ../components/bskybgen2/appinfrastructure/BluetoothRcu/daemon
  ../components/bskybgen2/appinfrastructure/3rdParty/mongoose
  ../components/bskybgen2/appinfrastructure/3rdParty/runC
  ../components/bskybgen2/appinfrastructure/Dobby/daemon/process
  ../components/bskybgen2/appinfrastructure/Dobby/daemon/init
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/Jumper
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/LocalTime
  ../components/bskybgen2/appinfrastructure/Dobby/plugin
s/CookiesMount
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/WebSocketMediator
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/CredentialsManager
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/UPnPDiscovery
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/EthanLog
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/ASAP
  ../components/bskybgen2/appinfrastructure/GlesTracker
  ../components/bskybgen2/appinfrastructure/Jumper/client/tool
  ../components/bskybgen2/appinfrastructure/WebSocketMediator/client/tool
  ../components/bskybgen2/appinfrastructure/CredentialsManager/client/tool
  ../components/bskybgen2/appinfrastructure/Dobby/client/tool
  ../components/bskybgen2/appinfrastructure/Dobby/plugins/HolePuncher
  ../components/bskybgen2/appinfrastructure/UPnPDiscovery/client/tool
  ../components/bskybgen2/appinfrastructure/WebSocketDbusBridge/daemon/process
  ../components/bskybgen2/appinfrastructure/BluetoothRcu/console
  ../components/bskybgen2/appinfrastructure/Logger/tools/TailBinaryLog
  ../components/bskybgen2/appinfrastructure/MiniDumper/ThreadDumper/tool
  ../components/bskybgen2/appinfrastructure/MiniDumper/Barnacle
  ../components/bskybgen2/appinfrastructure/MiniDumper/CoreDumper
  ../components/bskybgen2/qt5_libs_bskyb
  ../components/bskybgen2/appservices/AS_Polipo
  ../components/bskybgen2/preinstalledapps ../processes/bskybgen2/Luna
  ../processes/APP_Process ../applications/bskybgen2/EpgUI


  # AS maintains its own list of local components to minimise SI changes
  include $(NDS_ROOT)/components/bskybgen2/appservices/makefile.localcomponents

+ ./utils/bskybgen2_flash_H1.sh -b eu-q-titan-uk


+ FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/projects
./fusion2/build_options.mk
./bskybgen2/build_options.mk
  set NDS_BUILD_TYPE_xxx
  set GLOBAL_DEFINES


each components

NDS_ROOT=~/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build

include $(NDS_ROOT)/projects/$(NDS_PROJECT)/build_options.mk
include src.mk

COMPONENT_CC_DEFINES += CAPTIONS_SUBTITLES

#  COMPONENT_C_FILES    Exported list of ".c" files to be compiled,
#                       including relative path

COMPONENT_C_FILES :=	  player_api_session.c \
                        player_api.c \


={============================================================================
*kt_dev_skymw_0000* skymw-build-appliaction

makefile to build standalone applicaton without fusion make/build system:

CXX = /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/compiler/brcm_gcc_arm_x86_linux_01//bin/arm-linux-g++

CXXFLAGS = -funwind-tables -fasynchronous-unwind-tables -D__DATE__="Oct 02 2019" -D__TIME__="14:19:46" -Wno-builtin-macro-redefined  -g -Os -fno-strict-aliasing -Wall -fno-builtin -DNeedFunctioPrototypes=1 \
	-Wmissing-prototypes -Wshadow -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations   -DAUTHENTICATION_NDS_SAC -DBLUETOOTH_DISABLE_MW -DBSKYB_SUPPORT_HEP_WITH_OIG -DCAROUSEL_MHC -DCAROUSEL_MHC_CACHE \
	-DCA_VIDEOGUARD_NDS_SECURE_RETURN_PATH -DCA_VIDEOGUARD_PARENTAL_RESTRICT -DCA_VIDEOGUARD_WATERSHED -DDRM_NDS -DDRM_USE_DSAM -DDRM_VIDEOGUARD -DFRONT_END_SAT -DFRONT_END_SAT_SCR -DFUSION_AUTHENTICATION_SUPPORTED \
	-DFUSION_BDL_SUPPORTED -DFUSION_BLUETOOTH_SUPPORTED -DFUSION_CA_VIDEOGUARD_SUPPORTED -DFUSION_DRM_SUPPORTED -DFUSION_DYNAMIC_TSA_SUPPORTED -DFUSION_HEADEND_METADATA_SUPPORTED -DFUSION_HOME_NETWORK_SUPPORTED \
	-DFUSION_LEGACY_SUPPORTED -DFUSION_METADATA_SUPPORTED -DFUSION_OSS_USE_DYNAMIC_LIB_SUPPORTED -DFUSION_PDL_SUPPORTED -DFUSION_PVOD_SUPPORTED -DFUSION_PVR_SUPPORTED -DFUSION_SAFEC_SUPPORTED \
	-DFUSION_TARGETED_MESSAGING_SERVICE_SUPPORTED -DFUSION_UPSTART_SUPPORTED -DFUSION_USER_ACTIVITY_SUPPORTED -DFUSION_VIDEOGUARD_NOTIFY_SUPPORTED -DFUSION_WATERMARKING_SUPPORTED \
	-DGRAPHICS_OPENGL_EGL -DGUIDE_BSKYB_SUBSCRIBER_PROPERTIES_USED -DHEADEND_METADATA_OIGC -DHOME_NETWORK_ABR_STREAMING -DHOME_NETWORK_GUIDE_SERVER \
	-DHOME_NETWORK_HORIZONTAL_CONTENT_CLIENT -DHOME_NETWORK_MEDIA_RENDERER -DHOME_NETWORK_MEDIA_SERVER -DHOME_NETWORK_PLANNER_SERVER \
	-DHOME_NETWORK_PROXY_PROTOCOL_COMMUNICATION -DHOME_NETWORK_REMOTE_UI -DHOME_NETWORK_SEGMENTED_SERVER \
	-DHOME_NETWORK_SIDELOADING -DHOME_NETWORK_STREAMING_SERVER -DHOME_NETWORK_TRANSCODING -DHOTPLUG_SUPPORT \
	-DIPPV -DIP_SECURE_SOCKETS -DIP_SECURE_SOCKETS_CONFIG_3 -DMCM_PVR_RECORD_CA_HOLES -DMETADATA_SI_MHSI \
	-DMETADATA_SI_XSI_SSR -DNETWORK_GATEWAY_INTERFACE -DPDL_DPL_REPORTING_PTS -DPDL_NDS_SECURE_AUTH -DPVOD_LINEAR_TRANSPORT \
	-DPVR_CHECK_XTV_STATUS -DPVR_SIMPLE_REVIEW_BUFFER -DSAFEC_CISCOSAFEC -DSERIES_SYNCHRONIZE_BOOKINGS_WITH_SIGNUPS \
	-DSI_SERVICE_SCAN_XSI -DSOFTWARE_DOWNLOAD_IP -DSOFTWARE_DOWNLOAD_NETWORK -DSRM_ELEMENTARY_STREAMS_SELECTION_A \
	-DSRM_USE_PI_SCHEDULE_FLAG_FOR_AVAILABILITY -DUSB_SUPPORTED -DUSER_ACTIVITY_AMS -DUSER_ACTIVITY_BARB \
	-DUSER_ACTIVITY_SSP -DWATERMARKING_ASID_FIZZY -DWATERMARKING_NOISE -DRELEASE_DBG -DDIAG_RELEASE_DBG \
	-DOTV_CAROUSEL_SUPPORTED -DXSI_SUPPORTED -DLINT_ERRORS_ONLY= -DLINT_RESTORE= -DGFX_INPUT_COMPANION_ENABLE \
	-DSTANDALONE_UI -DPROFILE_A -DDIAG_LOG_NDEBUG -DNDEBUG -DMEMMAN_TRUSTED_CLIENT -DGFX_NO_SHAPE \
	-DGFX_IMAGE_NO_DITHERING -DGFX_PAINTER_NO_ARGB16_4444 -DGFX_PAINTER_NO_ARGB16_4444_PREMULT \
	-DGFX_PAINTER_NO_RGB16_565 -DGFX_PAINTER_NO_SURFACE_RW -DSUPPORT_SETPIPE_SIZE -DMSCQ775664_SERIAL_SUPPORT_WORKAROUND \
	-DUSER_INPUT_WRAPPED_CDI_INPUT_DEVICE -DMEMMAN_FORCE_USE_MALLOC_DIRECTLY -DCSCuy06880_WATERMARKING \
	-DNGDEV_134156_ENABLE_MSYNC -DCQ171339 -DLEGACY_MIGRATION_SUPPORT -DNDS_APP_TYPE_BSKYBGEN2 -D_XOPEN_SOURCE=600 \
	-DSKYOB_SKY7278_BCM7278_LNUX_01 -DFUSION_PROFILE -DMEMMAN_TRUSTED_CLIENT -DNO_LAE_INCLUDED -DNO_JVM_INCLUDED -DMSCQ775664_SERIAL_SUPPORT_WORKAROUND -DMSCQ856970_ENABLE_SEARCH_COMPONENT \
	-DPOWER_SAVING_AUTO_POWER_DOWN -DCQ1853385_LIVE_TO_HTTP_SCSI_HANDLING -DCQ380004_USE_STB_SW_01 -DCQ174804 -DMEMMAN_FORCE_USE_MALLOC_DIRECTLY -DUSER_INPUT_WRAPPED_CDI_INPUT_DEVICE \
	-DSKY_QT5_PLATFORM  -DCDI_IOCTL_DEFINITIONS="ioctl_magic.h" -DCDI -DIS_LITTLE_ENDIAN -D__LITTLE_ENDIAN -D_XOPEN_SOURCE=600 \
	-D_GNU_SOURCE -I. \
	-DENABLE_MEDIA \
	-I/home/keitee/mw/ethan-as-source/Components/Bluetooth/common/include \
	-I/home/keitee/mw/ethan-as-source/Components/Bluetooth/reader/include \
	-I/home/keitee/mw/ethan-as-source/Components/Bluetooth/dbusitf/include \
	-I/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/inc/CDI_INC/include \
	-I/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/inc \
	-I/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/inc/nds \
	-I/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/inc/KHRONOS \
	-I/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/inc/SPK_INC \
	-Wno-error=unused-but-set-variable -Wno-error=maybe-uninitialized \
	-Wno-date-time -Wno-error=logical-not-parentheses

DIAGLIB= /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg/components/bskybgen2/appservices/AS/Diag/libASDiag.a
BTLIB = /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg//components/bskybgen2/appservices/Bluetooth/libBluetooth.a
# cp /home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSION_SYSTEM_INTEGRATION/BSKYB_ETHAN/build/bskybgen2/SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/release_dbg//components/bskybgen2/appservices/Bluetooth/libBluetooth.a .
# BTLIB = libBluetooth.a

LIBPATH = -L/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/FUSIONOS_BSKYB_2/BLD_SKYOB_SKY7278_BCM7278_LNUX_01/platform_cfg/linux/LittleEndian/release_dbg/lib
# DBUSLIB=/home/keitee/mw/ethan-as-source/xSubmoduleDarwinSDK/eu-q-titan-uk/SDK_Q000.022.79.00_bskybgen2_SKY7278/deps/SKYOB_SKY7278_BCM7278_LNUX_01/KERN_SKYOB_SKY7278_BCM7278_LNUX_01/LittleEndian/debug/release_dbg/lib/libdbus-1.so.3.14.13


TARGET = blue

all : $(TARGET)

main.o : main.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c main.cpp -o main.o

$(TARGET) : main.o $(BTLIB)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LIBPATH) -lpthread -ldbus-1 -lsbc $^ $(BTLIB) $(DIAGLIB) -o $@


={============================================================================
*kt_dev_skymw_0000* skymw-epg

git clone -b master ssh://dwngit@git.stb.bskyb.com/ethan-qt-epg-app epg

epg/source/prod_epg/epg_ui/src/ui_models/BTRemoteModel.cpp


={============================================================================
*kt_dev_skymw_0000* skymw-as

// as-spec
https://www.stb.bskyb.com/confluence/pages/viewpage.action?pageId=9538192

<as-rest> <comp-asda>
http://build01.mw.ethan.bskyb.com/asda/#

192.168.0.104:9005

curl -v -X GET http://192.168.0.102:9005/as/system/information
curl -v -X GET http://192.168.0.103:9005/as/system/information
curl -v -X GET http://localhost:9005/as/system/information

curl -v -X GET http://192.168.0.102:8008/pm/packages

curl -v -X GET http://192.168.0.102:9005/peripherals/btremotes/edidinfo

curl -i -N -H "Connection: Upgrade" -H "Upgrade: websocket" -H "Host: 192.168.0.102:9005" -H "Origin:" http://192.168.0.102:9005/as/peripherals/btremotes/status

// from curl
curl -v -X POST http://192.168.0.103:9005/as/peripherals/btremotes/action/startsearching?timeout=30

// from asda
peripherals/btremotes/action/startsearching?timeout=30

curl 192.168.0.102:9005/as/test/preferences -X POST --data '{"enableirinput":"false"}'

// 
{
   "remotes" : [
      {
         "batterylevel" : 90,
         "bdaddr" : "70:91:F3:22:6E:22",
         "btlswver" : "BL 195",
         "connected" : true,
         "deviceid" : 2387,
         "hwrev" : "102.0.0.1",
         "make" : "Universal Electronics, Inc.",
         "model" : "Sky EC102",
         "name" : "P047 SkyQ EC102",
         "rcuswver" : "7007.02.09",
         "serialno" : "226E22F39170"
      }
   ],
   "status" : "COMPLETE"
}

// 
{
   "remotes" : [
      {
         "batterylevel" : 73,
         "bdaddr" : "D4:B8:FF:12:E1:A8",
         "btlswver" : "2.0",
         "connected" : false,
         "deviceid" : 2615,
         "hwrev" : "101.2.0.0",
         "make" : "Omni Remotes",
         "model" : "EC101",
         "name" : "P236 SkyQ EC101",
         "rcuswver" : "1.0.5",
         "serialno" : "D4B8FF12E1A8"
      }
   ],
   "status" : "PAIRING"
}

={============================================================================
*kt_dev_skymw_0000* skymw-as-log

NDS: ^0000000208.838051 !MIL   -AS           < p:00000e00 t:75390dc0 T:AS_MAIN_TH_9001 M:AS_DMS_Writer.cpp F:LogReceivedRequest L:00258 > 
  @ctx:AS_WEBSERVER AS_WEB_SERVER_RequestResponseLogger.cpp(205) HTTP Request received. 
  httpRequestHandle: 235, httpMethod: 1, Port: 9001, URI: /as/audiostreamer/bluetooth/action/startvisibility?timeout=105
NDS: ^0000000208.840607 !MIL   -AS           < p:00000e00 t:31d0bdc0 T:AS_BTAUDIO_CTL M:AS_DMS_Writer.cpp F:SetCurrentHCIVisible L:00258 > @ctx:AS_BTAUDIO AS_BTAUDIO_PlatformItf.cpp(466) SetCurrentHCIVisible() entry: timeout=110


!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:virtual bool RestfulRequestHandler::sendEventHandlerRequest(JsonEventsRequest*) L:00423 > 
  Web Socket URL Scheme:  ws ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status
!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:void RestfulRequestHandler::onWebSocketConnected() L:00092 > Websocket connected QUrl("ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status")
!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:void RestfulRequestHandler::onWebSocketConnected() L:00096 > Connected Socket URI: QUrl("ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status")


<as-log-on-fusion>
so `level` is managed by fusion diag

#include "AS_Diag.h"
extern AS_DIAG::Context *dbusitf_logging_ctx;
#undef AS_DIAG_CONTEXT_DEFAULT
#define AS_DIAG_CONTEXT_DEFAULT (dbusitf_logging_ctx)

// #undef AS_LOG_INFO
// #define AS_LOG_INFO AS_LOG_MIL

NDS: ^0000000431.114917 
       !MIL   -AS           < p:00000e02 t:321fedc0 T:no name 
       M:AS_DMS_Writer.cpp F:entered_ L:00258 
       > @ctx:dbusitf bleaudiostreamer.cpp(1035) fsm entered: (PlayerStopState)
       >
// fusion diag
// home/keitee/mw/ethan-as-source/Components/AS/Diag/include/AS_DIAG_Macros.h

#define AS_LOG_FATAL(msg...)    do {do {AS_DECLARE_FUNCTION;DIAG_LOG_FATAL(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,
    AS_DIAG::Fatal,writeFatal,handleFatal,msg);} while (0)

#define AS_LOG_MIL(msg...)      do {do {AS_DECLARE_FUNCTION;DIAG_LOG_MIL(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Mil,writeMil,handleMil,msg);} while (0)
#define AS_LOG_ERROR(msg...)    do {do {AS_DECLARE_FUNCTION;DIAG_LOG_ERROR(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Error,writeError,handleError,msg);} while (0)
#define AS_LOG_WARNING(msg...)  do {do {AS_DECLARE_FUNCTION;DIAG_LOG_WARN(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Warning,writeWarning,handleWarning,msg);} while (0)
#define AS_LOG_INFO(msg...)     do {do {AS_DECLARE_FUNCTION;DIAG_LOG_INFO(AS_DIAG_SEG_ID,(msg));} while (0); AS_DIAG_CONTEXT_TEST(AS_DIAG_CONTEXT_DEFAULT,AS_DIAG::Info,writeInfo,handleInfo,msg);} while (0)
#define AS_LOG_ENTRY(msg...)    AS_LOG_INFO(msg)
#define AS_LOG_EXIT(msg...)     AS_LOG_INFO(msg)


<as-log-on-rdk>

// set `level` in main
        __ai_debug_log_level = AI_DEBUG_LEVEL_INFO;


// asappsserviced/RDK/Logging/include/Logging.h

#define __AI_LOG_PRINTF(level, fmt, ...) \
    do {  \
        if (__builtin_expect(((level) <= __ai_debug_log_level),0)) \
            __ai_debug_log_printf((level), __FILE__, __FUNCTION__, __LINE__, fmt, ##__VA_ARGS__); \
    } while(0)

#else /* (AI_BUILD_TYPE == AI_RELEASE) */

#   define AI_LOG_FN_ENTRY() \
        __AI_LOG_PRINTF(AI_DEBUG_LEVEL_DEBUG, "entry")
#   define AI_LOG_FN_EXIT() \
        __AI_LOG_PRINTF(AI_DEBUG_LEVEL_DEBUG, "exit")
#   define AI_LOG_DEBUG(fmt,...) \
        __AI_LOG_PRINTF(AI_DEBUG_LEVEL_DEBUG, fmt, ##__VA_ARGS__)
#   define AI_LOG_INFO(fmt,...) \
        __AI_LOG_PRINTF(AI_DEBUG_LEVEL_INFO, fmt, ##__VA_ARGS__)
#   define AI_LOG_MILESTONE(fmt,...) \
        __AI_LOG_PRINTF(AI_DEBUG_LEVEL_MILESTONE, fmt, ##__VA_ARGS__)


={============================================================================
*kt_dev_skymw_0000* skymw-as-airplay

<as-airplay>
/ethan-as-source/Components/AudioStreamer

<airplay-setting>
http://192.168.0.102:13579/index.html

<airplay-sdk-build>
/ethan-as-source/Components/AudioStreamer/AirplaySdk2

export LC_ALL=C
make libraries platform=Titan

<airplay-logging>

// from apple and prints two lines

acs_ulog(kLogLevelNotice, "KT: AudioConverterReset: ALAC: DO NOTHING \n");

NDS: ^0000000694.438133 !MIL   -AS           < p:00000e12 t:6e754dc0 T:no name M:AS_DMS_Writer.cpp F:AirplaySDKDiagLog L:00258 
  > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 1970-01-01 12:11:34.438098 AM [AirPlayACS] 
  KT: AudioConverterReset: ALAC: DO NOTHING 

// works by default and on MIL

at_app_ulog(kLogLevelNotice, "KT: kAirPlayProperty_NameIsFactoryDefault = %d\n", value);
  #define at_app_ulog(LEVEL, ...) ulog(at_app_ucat(), (LEVEL), __VA_ARGS__)

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/AccessorySDK/Support/LogUtils.c
int LogPrintF(LogCategory* inCategory, const char* inFunction, LogLevel inLevel, const char* inFormat, ...)
{
    int n;
    va_list args;

    va_start(args, inFormat);
    n = LogPrintV(inCategory, inFunction, inLevel, inFormat, args);
    va_end(args);
    return (n);
}


// print single line

TRACE("KT: integration::checkNameIsFactoryDefault:\n");
  #define TRACE(...) { LogInterfaceInToDiag(0,__VA_ARGS__);}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayPlayerImpl.cpp
void LogInterfaceInToDiag(int level,const char*format,...)
{
  char buffer[256];
  va_list args;
  va_start (args, format);
  vsnprintf (buffer,256,format, args);
  va_end (args);
  if (interfaceLoggingFunction != NULL)
    interfaceLoggingFunction(level,buffer);
}

AudioStreamer::AirPlayProtocol::AirPlayProtocol(uint8_t macAddress[6])
    : m_audioAvailable(true)
{
  AUD_LOG_ENTRY("AudioStreamer::AirPlayProtocol::AirPlayProtocol");
  ::memcpy (m_macAddress, macAddress, 6);
  AirPlay::Player::createInstance(this);
  AirPlay::Player::instance().registerAirplaySDKDiagLogFunction(AirplaySDKDiagLog);
  AirPlay::Player::instance().registerInterfaceDiagLogFunction(AirplayinterfaceDiagLog);
#ifdef ENABLE_AIRPLAY_2
  dobbyPTPLxc = std::make_shared<ptpdobbyfactory::PtpDobbyFactory>("PTPAirplay");
#endif

  AUD_LOG_EXIT("AudioStreamer::AirPlayProtocol::AirPlayProtocol");
}

void AirplayinterfaceDiagLog(int level ,const char* msg)
{
  (void) level;
  printf("2---%s \n ",msg);
}


as-log-issue ?

However, there seems to be an issue:
m_total shows 0. WHY?

    AUD_LOG_MIL("KT: get Data from buffer, sampleCount(%d), m_total(%d), dataToCopy(%d)", sampleCount, m_total, dataToCopy);
    AUD_LOG_MIL("KT: get Data from buffer, sampleCount(%d)", sampleCount);
    AUD_LOG_MIL("KT: get Data from buffer, m_total(%d)", m_total);

NDS: ^0000000222.561686 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(762) KT: get Data from buffer, sampleCount(0), m_total(0), dataToCopy(8820)
NDS: ^0000000222.561700 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(763) KT: get Data from buffer, sampleCount(0)
NDS: ^0000000222.561714 !MIL   -AS           < p:00000f6f t:7ae99dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:pushDataToPlayer L:00258 > @ctx:fallback AudioThread.cpp(764) KT: get Data from buffer, m_total(8820)


<airplay-sdk>

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayMain.c

int AirPlayMain( int argc, const char **argv )
{
  AirPlayReceiverServerCreate( &sgReceiverServer );

  AirPlayReceiverServerDelegateInit(&delegate);

  // register delegate to APRS
  delegate.copyProperty_f = _AirPlayHandleServerCopyProperty;
  delegate.setProperty_f = _AirPlayHandleServerSetProperty;
  delegate.sessionCreated_f = _AirPlayHandleSessionCreated;
  AirPlayReceiverServerSetDelegate(sgReceiverServer, &delegate);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverServer.c

AirPlayReceiverServerCreateWithConfigFilePath(CFStringRef inConfigFilePath, AirPlayReceiverServerRef* outServer)
{
}


// setup path

static OSStatus _HandleHTTPConnectionMessage(HTTPConnectionRef inCnx, HTTPMessageRef inRequest, void* inContext)
{
  aprs_ulog(kLogLevelTrace, "method:'%.*s' path:'%.*s'\n", (int)methodLen, methodPtr, (int)pathLen, pathPtr);

  else if (strnicmpx(methodPtr, methodLen, "SETUP") == 0)
    status = _requestProcessSetup(cnx, inRequest);
}

static HTTPStatus _requestProcessSetup(AirPlayReceiverConnectionRef inCnx, HTTPMessageRef inRequest)
{
  status = _requestProcessSetupPlist(inCnx, inRequest);
}

static HTTPStatus _requestProcessSetupPlist(AirPlayReceiverConnectionRef inCnx, HTTPMessageRef inRequest)
{
    aprs_ulog(kAirPlayPhaseLogLevel, "Setup (%##a)\n", &inCnx->httpCnx->peerAddr);
}

_requestCreateSession()
{
  AirPlayReceiverSessionCreate();
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c
AirPlayReceiverSessionCreate()
{
  err = AirPlayReceiverSessionPlatformInitialize(me);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverPOSIX.c

OSStatus AirPlayReceiverServerPlatformInitialize(AirPlayReceiverServerRef inServer)
{}


// set audio stream

static OSStatus _UpdateStreams(AirPlayReceiverSessionRef inSession)
{
  atrp_ulog(kLogLevelNotice, "Main audio setting up %s for %@, input %s, loopback %s, volume:%f\n",
      AirPlayAudioFormatToString(streamCtx->format),
      streamCtx->audioType ? streamCtx->audioType : CFSTR(kAirPlayAudioType_Default),
      streamCtx->input ? "yes" : "no",
      streamCtx->loopback ? "yes" : "no",
      inSession->server->volume);

  // > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 1970-01-01 12:11:37.199742 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-8.374125

  AudioStreamSetOutputCallback(streamCtx->stream, _AudioOutputCallBack, streamCtx);

  void AudioStreamSetOutputCallback(AudioStreamRef inStream, AudioStreamOutputCallback_f inFunc, void* inContext)
  {
    AudioStreamImpRef const me = _AudioStreamGetImp(inStream);
    TRACE("AudioStreamSetAudioCallback\n");

    me->callback = inFunc;
    me->callbackContext = inContext;
  }

  err = AudioStreamStart(streamCtx->stream);
}

// Components/AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AudioUtilsStub.c
OSStatus AudioStreamPrepare(AudioStreamRef inStream)
{
  Trace.cpp(25) 1970-01-01 12:06:46.573261 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-21.002514
  Trace.cpp(25) 1970-01-01 12:06:46.573261 AM [AirPlay] Main audio setting up ALAC/44100/16/2 for default, input no, loopback no, volume:-21.002514
  _IMPL Trace.cpp(41) AudioStreamCreate
  _IMPL Trace.cpp(41) New AudioStreamPrivate=(nil)
  _IMPL Trace.cpp(41) AudioStreamSetAudioCallback
  _IMPL Trace.cpp(41) AudioStreamPrepare:
  _IMPL Trace.cpp(41) channels:      2
  _IMPL Trace.cpp(41) bits/channel:  16
  _IMPL Trace.cpp(41) sample rate:   44100
  _IMPL Trace.cpp(41) bytes/frame:   4
  _IMPL Trace.cpp(41) bytes/packet:  4
  _IMPL Trace.cpp(41) frames/packet: 1
  _IMPL Trace.cpp(41) format id:     6c70636d
  _IMPL Trace.cpp(41) format flags:  c
  _IMPL Trace.cpp(41) Signed
  _IMPL Trace.cpp(41) Little endian
  _IMPL Trace.cpp(41) audioSetFormat returning 1
}

OSStatus AudioStreamStart(AudioStreamRef inStream)
{
  // calls to intergration.cpp
  if( !sessionInitialize(inStream));
}


<airplay-config>

// AudioStreamer/config/audiostreamer.xml

 151   │    <!--NGDEV-140292:Update audiostreamer.xml to support Titan UK-->
 152   │    <profile name="EE_GW_UK_TITAN">
 153   │    <file name="audiostreamer.cfg">
 154   │    <section name="SYSTEM_DELAY_CONFIG">
 155   │     <key name="SYSTEM_DELAY" type="INTEGER" value="137">
 156   │         <comment date="2019/05/16 10:13:45" text="NGDEV-141515 The time in mS to provide system delay. This will be used in the calculation of inHostTime" />
 157   │     </key>
 158   │    </section>
 159   │    <section name="PCM_CONFIGURATION">
 160   │     <key name="PCM_BUFFERSIZE" type="INTEGER" value="100">
 161   │     <comment date="2017/01/19 01:23:45" text="The time in ms" />
 162   │     </key>
 163   │     <key name="PCM_THRESHOLD" type="INTEGER" value="50">
 164   │     <comment date="2017/01/19 01:23:45" text="The time in ms" />
 

<airplay-get-audio-data>

// AudioStreamer/source/AudioThread.cpp

case EVENT_SESSION_START:
{
  PLAYER_API_SessionHandle* sessionId = (PLAYER_API_SessionHandle*)t.data;

  string sourceUri = AsStringTool::stringf("audio/cisco.com_pcm;rate=%d;channels=%d;samplesize=%d;byteorder=%s;sign=%s", 
      m_format.sampleRate, m_format.channels, m_format.sampleSizeBytes*8, m_format.bigEndian?"be":"le", m_format.isSigned?"signed":"unsigned");
  AUD_LOG_MIL("AudioThread::EVENT_SESSION_START id=0x%08X, adding source='%s'", *sessionId, sourceUri.c_str());
  ret = PLAYER_API_AVControl_AddSourceBuffer(playerAvControl, sourceUri.c_str(), &m_avControlBufferHandle);
}

// CMS_MEDIA_SERVICES/MPM/inc/mpm_pres.h

/** @brief Structure that contains properties of a NEED_DATA callback for use in MPM_PRES_ES_EVENT_PROPERTIES */
typedef struct
{
    uint32_t    data_length;        /*!< @brief The amount of data that can be written to the device */
    uint32_t    current_level;      /*!< @brief The current buffer level on the output device */
    uint32_t    cumulative_bytes;   /*!< @brief The total amount of bytes written to this handle */
} MPM_PRES_ES_EVENT_NEED_DATA_PROPERTIES;

// DARWIN_PLATFORM/DARWIN_PLAYER/inc/player_api_events.h

#define PLAYER_EVENT_AUDIO_NEED_DATA                (0x22000000U)   
/**< Notification sent when the buffer created with PLAYER_API_AVControl_AddSourceBuffer needs more
 * data. Application should provide more data through PLAYER_API_AVControl_AppendToBuffer */

typedef struct
{
  uint32_t length;
  uint32_t buffer_level;
  uint32_t bytes_received;
} PLAYER_PRIV_EVENT_NEED_DATA;

ret = PLAYER_API_Session_RegisterEventListener(playerSession,PLAYER_EVENT_AUDIO_NEED_DATA,playerEventListener,PLAYER_API_TAG(this),&dataEventListenerHandle);

struct event_data_type
{
  uint32_t                 eventType;

  /* PLAYER_EVENT_AUDIO_NEED_DATA */
  uint32_t                 audioLength;
  uint32_t                 bufferLevel;
  uint32_t                 bytesReceived;

  /* PLAYER_EVENT_SESSION_START */
  PLAYER_API_SessionHandle sessionId;
};

handlePlayerEventNeedData(event_data, audioThread, event);

static void handlePlayerEventNeedData(event_data_type &event_data , AudioStreamer::AudioThread* audioThread,PLAYER_API_Event_Handle event)

audioThread->onPlayerNeedData(event_data.audioLength, event_data.bufferLevel, event_data.bytesReceived);

void AudioStreamer::AudioThread::onPlayerNeedData(uint32_t dataNeeded, uint32_t bufferLevel, uint32_t totalPlayed);

case EVENT_NEED_DATA:
  handlePlayerNeedData(arg->dataNeeded, arg->bufferLevel, arg->totalPlayed);

case EVENT_PUSH_DATA:
  pushDataToPlayer(arg->dataNeeded, arg->bufferLevel, arg->totalPlayed);

void AudioStreamer::AudioThread::pushDataToPlayer(uint32_t dataNeeded, uint32_t bufferLevel, uint32_t totalPlayed)
{
  currentInstance->audioBufferGet(sampleCount, UpTicks()+inHostTime, m_buffer, dataToCopy);
}

/*
 *AirPlayProtocol getAudioData
 *
 * inParam :
 *      sampleTime :- uint32_t , Time in terms of samples , mostly how many samples consumed till now indicate
 *                              how much time has elapsed. 4410 samples indicate 100ms
 *      hostTime      :- uint64_t , Approximate time when first sample will be played . Needs to as accurate as possible
 *                              and any variation of more than 5 ms will lead audio sync delay b/w apple devices
 *      buffer           :- void * , buffer memory allocated and managed by client
 *      bufferLen     :- size_t , length of buffer which also indicate the amount of data needs to be copied in bytes
 *
 * Function Breif :
 *       Get audio data from airplay SDK
 */
void AudioStreamer::AirPlayProtocol::getAudioData(uint32_t sampleTime, uint64_t hostTime, void *buffer, size_t bufferLen)

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/integration.cpp

void audioGetData(uint32_t sampleTime, uint64_t	hostTime, void *buffer, size_t bufferLen)
{
  TRACE("audioGetData(%d %llu %p %u)\n",  sampleTime, hostTime, buffer, bufferLen);

  s_audioStream->callback(sampleTime, hostTime, buffer, bufferLen, s_audioStream->callbackContext);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverPOSIX.c
// callback is

static void
_AudioOutputCallBack(
    uint32_t inSampleTime,          // sample time
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen,
    void* inContext)
{
  AirPlayAudioStreamPlatformContext* const streamCtx = (AirPlayAudioStreamPlatformContext*)inContext;
  OSStatus err;

  atrp_ulog(kLogLevelNotice, "KT: _AudioOutputCallBack: inLen(%d)\n", inLen);
  //  AM [AirPlay] KT: _AudioOutputCallBack: inLen(8820)

  err = AirPlayReceiverSessionReadAudio(streamCtx->session, streamCtx->activeType, 
      inSampleTime,                 // 3. sample time 
      inHostTime,
      inBuffer, 
      inLen);
  require_noerr(err, exit);

  if (streamCtx->input && streamCtx->loopback) {
    // not called in the log. use case?
    err = AirPlayReceiverSessionWriteAudio(streamCtx->session, streamCtx->activeType, inSampleTime, inHostTime,
        inBuffer, inLen);
    require_noerr(err, exit);
  }

exit:
  return;
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c

OSStatus
AirPlayReceiverSessionReadAudio(
    AirPlayReceiverSessionRef inSession,
    AirPlayStreamType inType,
    uint32_t inSampleTime,
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen)
{
  return AirPlayReceiverSessionReadAudio2(
      inSession, 
      inType, 
      inSampleTime, 
      inHostTime, 
      inBuffer, 
      inLen, 
      inLen,                  // 7
      NULL);
}

AirPlayReceiverSessionReadAudio2(
    AirPlayReceiverSessionRef inSession,
    AirPlayStreamType inType,
    uint32_t inSampleTime,
    uint64_t inHostTime,
    void* inBuffer,
    size_t inLen,
    size_t inMinLen,          // 7
    size_t* outSuppliedLen)
{
  suppliedLen = _GeneralAudioRender(inSession, inSampleTime, inBuffer, inLen, inMinLen);
}

static size_t _GeneralAudioRender(
    AirPlayReceiverSessionRef inSession, 
    uint32_t inRTPTime,             // sample time
    void* inBuffer, 
    size_t inSize, 
    size_t inMinFillSize)
{
  // o inMinLen is date bytes for 50ms 
  //
  // o ctx->sampleTimeOffset is 0 so has no effect
  //
  // o srcTS = pktTS. what's unit?
  //
  // o minTS == limTS

  nowTS = inRTPTime - ctx->sampleTimeOffset;
  limTS = nowTS + (uint32_t)(inSize / bytesPerUnit);
  minTS = nowTS + (uint32_t)(inMinFillSize / bytesPerUnit);
  maxTS = limTS + kAirTunesRTPOffsetApplyThreshold;
  pktSeq = 0;

  // sample time
  //
  // #define kAirTunesPlayoutDelay 11025 // 250 ms delay to sync with AirPort Express'es 250 ms buffer.
  // inCnx->minLatency = kAirTunesPlayoutDelay; // Default value for old clients.
  //
  // AirPlayReceiverSessionSetProperty()
  //  gAirTunesRelativeTimeOffset = offset;

  inSession->audioLatencyOffset = inSession->minLatency + gAirTunesRelativeTimeOffset;

  // uint32_t rtpOffsetActive; // RTP offset actively in use (different when deferring).
  //
  // static void AirPlayReceiverFlushPackets(AirPlayReceiverSessionRef inSession, AirPlayFlushPoint const* flushFrom, AirPlayFlushPoint flushUntil)
  //  uint32_t offsetActive = inSession->source.rtpOffsetActive;
}


// start path

// AudioStreamer/source/AirPlayProtocol.cpp

void AudioStreamer::AirPlayProtocol::enable(uint16_t port)
{
  AUD_LOG_ENTRY("AudioStreamer::AirPlayProtocol::enable");
  if( !AirPlay::Player::instance().supported() )
  {
    AUD_LOG_WARNING("Airplay not supported on this box, cannot enable");
    return;
  }
  AUD_LOG_INFO("Airplay supported, enabling");
  AirPlay::Player::instance().startAirPlay();
  AirPlay::Player::instance().registerHttpService("/index.html", port);
  AUD_LOG_MIL("Enable airplay done");
  AUD_LOG_EXIT("AudioStreamer::AirPlayProtocol::enable");
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AirPlayPlayerImpl.cpp

void AirPlay::PlayerImpl::startAirPlay()
{
  if( !m_airplayRunning )
  {
    TRACE("ASDK0218. AirPlayStartMain()\n");
    AirPlayStartMain();
    m_airplayRunning=true;
  }
}


<airplay-progress>
NDS: ^0000000452.250604 !MIL   -AS           < p:00000de7 t:7a3fedc0 T:no name M:AS_DMS_Writer.cpp F:AirplayinterfaceDiagLog L:00258 > 
  @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(41) Progress, duration 39 elapsed 9


={============================================================================
*kt_dev_skymw_0000* skymw-ai-input-handler

https://www.stb.bskyb.com/confluence/display/~grayb/Input+Handling+In+AI

FactoryContainer::FactoryContainer()
{
  // input handler creation
  inputHandler = std::make_shared<InputHandler>();
}

InputHandler::InputHandler()
    *create-queue*
    : mInputQueue(std::make_shared<InputQueue>())
    , mFusionHandler(std::make_shared<FusionInputHandler>(mInputQueue))
    *create-linux-input-handler*
    , mLinuxHandler(std::make_shared<LinuxInputHandler>(mInputQueue))
    , mCdiHandler(std::make_shared<CdiInputHandler>(mInputQueue))
{
  mFusionHandler->start();
  mLinuxHandler->start();
  mCdiHandler->start();
}

int InputHandler::registerKeyListener(unsigned eventSources,
                                      const IInputHandler::KeyListener& listener,
                                      const IInputHandler::KeyListenerPredicate& predicate)
{
  return mInputQueue->registerKeyListener(eventSources, listener, predicate);
}


// observers

ethan-as-source/Components/AS/Services/Controllers/KeyEventController/source/
  AS_KEYEVENT_KeyEventControllerImplementation.cpp

void KeyEventControllerImplementation::KeyControllerMainListener
  (IInputHandler::EventSource eventSource, uint17_t keyCode, bool keyState);


// source (observee)

    typedef std::function<void (EventSource, uint16_t, bool)> KeyListener;

    struct Listener
    {
        unsigned eventSources;
        IInputHandler::KeyListener handler;
        IInputHandler::KeyListenerPredicate predicate;
        IInputHandler::KeyListenerV2 handlerV2;
        IInputHandler::KeyListenerPredicateV2 predicateV2;
    };

class InputQueue
{
  std::queue<KeyEvent> mKeyQueue;

  int registerKeyListener(unsigned eventSources,
      const IInputHandler::KeyListener& listener,
      const IInputHandler::KeyListenerPredicate& predicate);
};


    const std::shared_ptr<InputQueue> mInputQueue;

void LinuxInputHandler::addNewInputDevice(dev_t devNumber, const std::string &devPath)
{
  // try and create the new device based
  std::shared_ptr<LinuxInputDevice> device =
    LinuxInputDevice::create(devNumber, m_modeSetting, devPath, `mInputQueue`, mDeviceIDManager);

  // add the device to the poll loop
  EPollLoop::Handler handler = std::bind(`&LinuxInputDevice::process`, device,
      std::placeholders::_1, std::placeholders::_2);

  int64_t id = mPollLoop->addFileDescriptor(device->fd(), EPollLoop::Readable, handler);

  mInputDevices[devNumber] = std::make_pair(id, device);

  AI_LOG_MILESTONE("added device node %u:%u (%s) with fd %d and id %hu to input loop ",
      major(devNumber), minor(devNumber), device->toString().c_str(),
      device->fd(), device->deviceId());
}


59351:NDS: ^0000000247.989785 !MIL   -APPINFRA     < p:00000e1e t:46910dc0 T:no name 
M:LinuxInputHandler.cpp F:addNewInputDevice L:00497 > 
added device node 13:64 (bluetooth vendor:0x057a product:0x0004 'D4:B8:FF:12:E1:A8') with fd 549 and id 4039 to input loop


// appinfrastructure/AppInfrastructure/InputHandler/lib/include/InputHandler.h

class InputSource
{
  void sendKey(uint16_t keyCode, bool down);
  const std::shared_ptr<InputQueue> mQueue;
};


class LinuxInputDevice : public InputSource
{
    LinuxInputEventProcessor *mEventProcessor;
};


std::shared_ptr<LinuxInputDevice> LinuxInputDevice::create(dev_t devNumber,
                                                           uint8_t devMode,
                                                           const std::string &devPath,
                                                           const std::shared_ptr<InputQueue> &queue,
                                                           const std::shared_ptr<InputDeviceIDManager> &idManager)
{
  // gift the device fd with all the other data to an LinuxInputDevice object
  std::shared_ptr<LinuxInputDevice> device =
    std::shared_ptr<LinuxInputDevice>
    (new LinuxInputDevice(devFd, devNumber, devMode, devType,
                          busType, id.vendor, id.product,
                          id.version, physAddress, idToken, queue));
}


LinuxInputDevice::LinuxInputDevice(int deviceFd, dev_t devNumber,
  const std::shared_ptr<InputQueue> &queue)
    : InputSource(devType, devMode, idToken->value(), queue,
                  std::chrono::milliseconds(RCU_LONG_STANDBY_MS),
                  RCU_SHORT_STANDBY_KEYCODE, RCU_LONG_STANDBY_KEYCODE)

{
  // create either a default event processor or one specific for the BT RCU
  // depending on the product id
  if (devType != IInputHandler::DeviceType::GenericLinuxInputDev)
  {
    // BLE RCU
    mEventProcessor = new BleRcuInputEventProcessor(this);
  }
}

void LinuxInputDevice::process(int devFd, unsigned events)
{
  ssize_t amount = TEMP_FAILURE_RETRY(readv(devFd, iov, maxInputEvents));

  // process the events based on input type
  mEventProcessor->processEvents(inputEvents, nEvents);
}

protected:
    InputSource * const mOutput;

LinuxInputEventProcessor::LinuxInputEventProcessor(InputSource *output)
    : mOutput(output)

class BleRcuInputEventProcessor : public LinuxInputEventProcessor

BleRcuInputEventProcessor::BleRcuInputEventProcessor(InputSource *output)
    : LinuxInputEventProcessor(output)


// appinfrastructure/AppInfrastructure/InputHandler/lib/source/BleRcuInputEventProcessor.cpp
void BleRcuInputEventProcessor::processEvents(const struct input_event *events);

void BleRcuInputEventProcessor::processKeyEvents(uint16_t keyCode, int32_t state)
{
  // send the up / down state of the key
  mOutput->sendKey(hidKeyCode, (state == LNX_KEY_UP) ? false : true);
}

// ir keys

-APPINFRA     < M:InputQueue.cpp F:sendKey L:00110 > KT: InputQueue::sendKey(filterByte(20), keyCode(61022), down(0)
-APPINFRA     < M:InputQueue.cpp F:listenerThread L:00288 > KT: InputQueue::listner.handler(event{source(2), keyCode(61022), down(0)}
-AS           < M:AS_DMS_Writer.cpp F:KeyControllerMainListener L:00258 > @ctx:AS_KEYEVENT AS_KEYEVENT_KeyEventControllerImplementation.cpp(223) KT: KeyControllerMainListener acquired deviceType: 2, keyCode: 0xee5e, keyState: 0
-APPINFRA     < M:BleRcuController.cpp F:isIrPairingCode L:00801 > KT: isIrPairingCode filterByte(0x14), keyCode(0xee5e)
-APPINFRA     < M:InputQueue.cpp F:listenerThread L:00288 > KT: InputQueue::listner.handler(event{source(2), keyCode(61022), down(0)}
-APPINFRA     < M:BleRcuController.cpp F:onIrPairingCode L:00850 > KT: received IR pairing code 094

-APPINFRA     < M:LinuxInputDevice.cpp F:create L:00169 > KT LinuxInputDevice(devPath(/dev/input/event0) busType(2) devType(3)
-APPINFRA     < M:LinuxInputDevice.cpp F:LinuxInputDevice L:00210 > KT LinuxInputDevice creates BleRcuInputEventProcessor
-APPINFRA     < M:LinuxInputHandler.cpp F:addNewInputDevice L:00497 > KT: added device node 13:64 (bluetooth vendor:0x057a product:0x0004 'D4:B8:FF:12:E1:A8') with fd 508 and id 1418 to input loop 

// bluetooth keys
-APPINFRA     < M:LinuxInputDevice.cpp F:process L:00419 > KT: read 48 bytes (3 events) from device node
-APPINFRA     < M:BleRcuInputEventProcessor.cpp F:processEvents L:00188 > KT: ble rcu input { type=EV_MSC, code=4, value=458810 }
-APPINFRA     < M:BleRcuInputEventProcessor.cpp F:processEvents L:00188 > KT: ble rcu input { type=EV_KEY, code=59, value=1 }
-APPINFRA     < M:BleRcuInputEventProcessor.cpp F:processKeyEvents L:00124 > KT: sendKey(58, 1)
-APPINFRA     < M:InputQueue.cpp F:sendKey L:00110 > KT: InputQueue::sendKey(filterByte(0), keyCode(57344), down(1)
-APPINFRA     < M:BleRcuInputEventProcessor.cpp F:processEvents L:00188 > KT: ble rcu input { type=EV_SYN, code=0, value=0 }
-APPINFRA     < M:InputQueue.cpp F:listenerThread L:00288 > KT: InputQueue::listner.handler(event{source(4), keyCode(57344), down(1)}
-AS           < M:AS_DMS_Writer.cpp F:KeyControllerMainListener L:00258 > @ctx:AS_KEYEVENT AS_KEYEVENT_KeyEventControllerImplementation.cpp(223) KT: KeyControllerMainListener acquired deviceType: 4, keyCode: 0xe000, keyState: 1


={============================================================================
*kt_dev_skymw_0000* skymw-bluez

TODO:

1. Q version do not supports filtering byte on:
bool startPairing(quint8 pairingCode) override;

2. Q version calls BleRcuManager and Android version calls BleRcuAdapter.

<compare-both> between bluez ip and bluez DTH(Q)
meld /home/keitee/ip/repo/SkyBluetoothRcu/app/src/main/cpp/blercu /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/blercu


<bluez-usb>
do everytime when bluetooth usb is plugged or reboot machine

keitee@keitee-mint:~/mw/ethan-as-source-repo$ sudo dmesg | tail

[393789.742167] IPv6: ADDRCONF(NETDEV_UP): eno1: link is not ready
[393789.931065] IPv6: ADDRCONF(NETDEV_UP): eno1: link is not ready
[393791.433703] e1000e: eno1 NIC Link is Up 100 Mbps Full Duplex, Flow Control: Rx/Tx
[393791.433705] e1000e 0000:00:1f.6 eno1: 10/100 speed: disabling TSO
[393791.433753] IPv6: ADDRCONF(NETDEV_CHANGE): eno1: link becomes ready
[421360.738270] usb 1-10: new full-speed USB device number 18 using xhci_hcd
[421361.311131] usb 1-10: New USB device found, idVendor=1d5a, idProduct=c080
[421361.311137] usb 1-10: New USB device strings: Mfr=0, Product=0, SerialNumber=0
[421361.337102] input: HID 1d5a:c080 as /devices/pci0000:00/0000:00:14.0/usb1/1-10/1-10:1.0/0003:1D5A:C080.000E/input/input53
[421361.395548] hid-generic 0003:1D5A:C080.000E: input,hiddev2,hidraw4: USB HID v1.11 Keyboard [HID 1d5a:c080] on usb-0000:00:14.0-10/input0
keitee@keitee-mint:~/mw/ethan-as-source-repo$ /lib/udev/hid2hci --mode=hci --method=csr2 --devpath=
error: could not find usb_device for ''
keitee@keitee-mint:~/mw/ethan-as-source-repo$
keitee@keitee-mint:~/mw/ethan-as-source-repo$
keitee@keitee-mint:~/mw/ethan-as-source-repo$
keitee@keitee-mint:~/mw/ethan-as-source-repo$ /lib/udev/hid2hci --mode=hci --method=csr2 --devpath=/devices/pci0000:00/0000:00:14.0/usb1/1-10/1-10:1.0
Can't open device: Permission denied (13)
error: unable to handle '/sys//devices/pci0000:00/0000:00:14.0/usb1/1-10'
keitee@keitee-mint:~/mw/ethan-as-source-repo$ sudo /lib/udev/hid2hci --mode=hci --method=csr2 --devpath=/devices/pci0000:00/0000:00:14.0/usb1/1-10/1-10:1.0
keitee@keitee-mint:~/mw/ethan-as-source-repo$ sudo dmesg | tail
[421535.138520] Bluetooth: HCI socket layer initialized
[421535.138521] Bluetooth: L2CAP socket layer initialized
[421535.138523] Bluetooth: SCO socket layer initialized
[421535.142951] usbcore: registered new interface driver btusb
[421535.271614] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[421535.271616] Bluetooth: BNEP filters: protocol multicast
[421535.271622] Bluetooth: BNEP socket layer initialized
[421535.324115] Bluetooth: RFCOMM TTY layer initialized
[421535.324124] Bluetooth: RFCOMM socket layer initialized
[421535.324132] Bluetooth: RFCOMM ver 1.11

$ sudo /lib/udev/hid2hci --mode=hci --method=csr2 --devpath=/devices/pci0000:00/0000:00:14.0/usb1/1-10/1-10:1.0


Bluez

The Bluez project provides a Bluetooth stack for Linux.  It consists of
kernel-space drivers as well as a userspace daemon, and it provides DBus APIs
for other system components to drive Bluetooth interactions.

Bluez's DBus API changed considerably between bluez4.x and bluez5.x.  Be sure
  when referring to any online documentation that you're looking at docs for
  bluez5, which is what we're using in dbusitf. 

The bluez project website provides some high-level details about what it does:
http://www.bluez.org/about/

The best description of the bluez5 APIs (sadly!) is in the source code tarball
under doc/*-api.txt

/bluez-5.51/doc$ ls -al *.txt
-rw-r--r-- 1 keitee keitee   9166 Sep 19 19:51 `adapter-api.txt`
-rw-r--r-- 1 keitee keitee   6063 Sep 19 19:51 advertising-api.txt
-rw-r--r-- 1 keitee keitee   5659 Dec 26  2017 agent-api.txt
-rw-r--r-- 1 keitee keitee    406 Dec 24  2012 assigned-numbers.txt
-rw-r--r-- 1 keitee keitee    488 Aug  6  2014 btmon.txt
-rw-r--r-- 1 keitee keitee   3612 May 26  2016 btsnoop.txt
-rw-r--r-- 1 keitee keitee   7723 Jun  1  2018 `device-api.txt`
-rw-r--r-- 1 keitee keitee  15560 Sep 19 19:51 gatt-api.txt
-rw-r--r-- 1 keitee keitee   4005 Dec 24  2012 health-api.txt
-rw-r--r-- 1 keitee keitee    928 May 14  2013 input-api.txt
-rw-r--r-- 1 keitee keitee  14436 Sep 19 19:51 `media-api.txt`
-rw-r--r-- 1 keitee keitee 118142 Sep 19 19:51 mgmt-api.txt
-rw-r--r-- 1 keitee keitee   1970 Dec 24  2012 network-api.txt
-rw-r--r-- 1 keitee keitee   1717 Dec 24  2012 obex-agent-api.txt
-rw-r--r-- 1 keitee keitee  21998 Dec 12  2014 obex-api.txt
-rw-r--r-- 1 keitee keitee   9477 Sep  4  2015 pics-opp.txt
-rw-r--r-- 1 keitee keitee    882 Sep  4  2015 pixit-opp.txt
-rw-r--r-- 1 keitee keitee   3530 Sep 16  2013 profile-api.txt
-rw-r--r-- 1 keitee keitee   3279 Sep  4  2015 pts-opp.txt
-rw-r--r-- 1 keitee keitee    448 Dec 24  2012 sap-api.txt
-rw-r--r-- 1 keitee keitee   8400 Sep 19 19:51 settings-storage.txt
-rw-r--r-- 1 keitee keitee   1045 Jul 17  2016 supported-features.txt
-rw-r--r-- 1 keitee keitee   2284 Oct 28  2016 test-coverage.txt
-rw-r--r-- 1 keitee keitee   1417 Feb 25  2017 test-runner.txt


This confluence document provides some good description of what bluez's
interfaces look like: Bluez Interfaces (D-Bus)


={============================================================================
*kt_dev_skymw_0000* skymw-bluez-as

/peripherals/btremotes/status

curl -i -N -H "Connection: Upgrade" -H "Upgrade: websocket" -H "Host: 192.168.0.102:9005" -H "Origin:" http://192.168.0.102:9005/as/peripherals/btremotes/status

// works on Q box
keitee@keitee-mint:~$ curl -i -N -H "Connection: Upgrade" -H "Upgrade: websocket" -H "Host: 192.168.0.102:9005" -H "Origin:" http://192.168.0.102:9005/as/peripherals/btremotes/status
~{
   "remotes" : [
      {
         "batterylevel" : 255,
         "bdaddr" : "D4:B8:FF:66:D6:25",
         "btlswver" : "Unknown",
         "connected" : false,
         "deviceid" : 3164,
         "hwrev" : "Unknown",
         "make" : "Unknown",
         "model" : "Unknown",
         "name" : "P235 SkyQ EC201",
         "rcuswver" : "Unknown",
         "serialno" : "Unknown"
      }
   ],
   "status" : "IDLE"
}

^C
keitee@keitee-mint:~$


={============================================================================
*kt_dev_skymw_0000* skymw-bluez-dbus

-sh-3.2# 
dbus-send  --system --type=method_call --print-reply --dest='org.freedesktop.DBus' / org.freedesktop.DBus.ListNames
method return time=1567148533.424057 sender=org.freedesktop.DBus -> destination=:1.18 serial=3 reply_serial=2
   array [
      string "org.freedesktop.DBus"
      string ":1.7"
      string ":1.8"
      string ":1.9"
      string "com.sky.rhad"
      string "com.ruwido.rcu"
      string "com.sky.dobby"
      string "com.sky.ai.app_process"
      string ":1.10"
      string "org.bluez"
      string "com.uei.userver"
      string ":1.11"
      string ":1.12"
      string ":1.13"
      string ":1.0"
      string "com.sky.maid"
      string "com.sky.as2bluez"
      string ":1.1"
      string ":1.2"
      string ":1.3"
      string "com.ubuntu.Upstart"
      string ":1.4"
      string ":1.18"
      string ":1.5"
      string ":1.6"
   ]


-sh-3.2# dbus-send  --system --type=method_call --print-reply --dest='org.bluez' / org.freedesktop.DBus.Introspectable.Introspect
method return time=1567148503.833966 sender=:1.4 -> destination=:1.17 serial=43 reply_serial=2
   string "<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node><interface name="org.freedesktop.DBus.Introspectable"><method name="Introspect"><arg name="xml" type="s" direction="out"/>
</method></interface><interface name="org.freedesktop.DBus.ObjectManager"><method name="GetManagedObjects"><arg name="objects" type="a{oa{sa{sv}}}" direction="out"/>
</method><signal name="InterfacesAdded"><arg name="object" type="o"/>
<arg name="interfaces" type="a{sa{sv}}"/>
</signal>
<signal name="InterfacesRemoved"><arg name="object" type="o"/>
<arg name="interfaces" type="as"/>
</signal>
</interface><node name="org"/></node>"


// type="a{oa{sa{sv}}}"
// dict<path, <dict<string, variant>>>

dbus-send --system --type=method_call --print-reply --dest='org.bluez' / org.freedesktop.DBus.ObjectManager.GetManagedObjects

method return time=1567161890.415580 sender=:1.4 -> destination=:1.20 serial=45 reply_serial=2
   array [
      dict entry(
         object path "/org/bluez"
         array [
            dict entry(
               string "org.freedesktop.DBus.Introspectable"
               array [
               ]
            )
            dict entry(
               string "org.bluez.AgentManager1"
               array [
               ]
            )
            dict entry(
               string "org.bluez.ProfileManager1"
               array [
               ]
            )
         ]
      )
      dict entry(
         object path "/org/bluez/hci0"
         array [
            dict entry(
               string "org.freedesktop.DBus.Introspectable"
               array [
               ]
            )
            dict entry(
               string "org.bluez.Adapter1"
               array [
                  dict entry(
                     string "Address"
                     variant                         string "FF:FF:FF:FF:FF:FF"
                  )
                  dict entry(
                     string "AddressType"
                     variant                         string "public"
                  )
                  dict entry(
                     string "Name"
                     variant                         string ""sky-one-box""
                  )
                  dict entry(
                     string "Alias"
                     variant                         string "Sky Q 1TB Box4027"
                  )
                  dict entry(
                     string "Class"
                     variant                         uint32 263188
                  )
                  dict entry(
                     string "Powered"
                     variant                         boolean true
                  )
                  dict entry(
                     string "Discoverable"
                     variant                         boolean false
                  )
                  dict entry(
                     string "DiscoverableTimeout"
                     variant                         uint32 0
                  )
                  dict entry(
                     string "Pairable"
                     variant                         boolean false
                  )
                  dict entry(
                     string "PairableTimeout"
                     variant                         uint32 0
                  )
                  dict entry(
                     string "Discovering"
                     variant                         boolean false
                  )
                  dict entry(
                     string "UUIDs"
                     variant                         array [
                           string "0000110b-0000-1000-8000-00805f9b34fb"
                           string "00001801-0000-1000-8000-00805f9b34fb"
                           string "0000110e-0000-1000-8000-00805f9b34fb"
                           string "00001200-0000-1000-8000-00805f9b34fb"
                           string "0000110c-0000-1000-8000-00805f9b34fb"
                           string "00001800-0000-1000-8000-00805f9b34fb"
                        ]
                  )
                  dict entry(
                     string "Modalias"
                     variant                         string "usb:v1D6Bp0246d0530"
                  )
               ]
            )
            dict entry(
               string "org.freedesktop.DBus.Properties"
               array [
               ]
            )
            dict entry(
               string "org.bluez.GattManager1"
               array [
               ]
            )
            dict entry(
               string "org.bluez.Media1"
               array [
               ]
            )
            dict entry(
               string "org.bluez.LEAdvertisingManager1"
               array [
                  dict entry(
                     string "ActiveInstances"
                     variant                         byte 0
                  )
                  dict entry(
                     string "SupportedInstances"
                     variant                         byte 5
                  )
                  dict entry(
                     string "SupportedIncludes"
                     variant                         array [
                           string "tx-power"
                           string "appearance"
                           string "local-name"
                        ]
                  )
               ]
            )
         ]
      )
      dict entry(
         object path "/org/bluez/hci0/dev_D4_B8_FF_12_E1_A8"
         array [
            dict entry(
               string "org.freedesktop.DBus.Introspectable"
               array [
               ]
            )
            dict entry(
               string "org.bluez.Device1"
               array [
                  dict entry(
                     string "Address"
                     variant                         string "D4:B8:FF:12:E1:A8"
                  )
                  dict entry(
                     string "AddressType"
                     variant                         string "public"
                  )
                  dict entry(
                     string "Name"
                     variant                         string "P210 SkyQ EC101"
                  )
                  dict entry(
                     string "Alias"
                     variant                         string "P210 SkyQ EC101"
                  )
                  dict entry(
                     string "Appearance"
                     variant                         uint16 384
                  )
                  dict entry(
                     string "Paired"
                     variant                         boolean true
                  )
                  dict entry(
                     string "Trusted"
                     variant                         boolean false
                  )
                  dict entry(
                     string "Blocked"
                     variant                         boolean false
                  )
                  dict entry(
                     string "LegacyPairing"
                     variant                         boolean false
                  )
                  dict entry(
                     string "Connected"
                     variant                         boolean false
                  )
                  dict entry(
                     string "UUIDs"
                     variant                         array [
                           string "00001800-0000-1000-8000-00805f9b34fb"
                           string "00001801-0000-1000-8000-00805f9b34fb"
                           string "00001802-0000-1000-8000-00805f9b34fb"
                           string "0000180a-0000-1000-8000-00805f9b34fb"
                           string "0000180f-0000-1000-8000-00805f9b34fb"
                           string "00001812-0000-1000-8000-00805f9b34fb"
                           string "00001813-0000-1000-8000-00805f9b34fb"
                           string "0000f800-bdf0-407c-aaff-d09967f31acd"
                           string "0000f801-bdf0-407c-aaff-d09967f31acd"
                           string "0000f802-bdf0-407c-aaff-d09967f31acd"
                        ]
                  )
                  dict entry(
                     string "Modalias"
                     variant                         string "bluetooth:v057Ap0004d0100"
                  )
                  dict entry(
                     string "Adapter"
                     variant                         object path "/org/bluez/hci0"
                  )
                  dict entry(
                     string "ServicesResolved"
                     variant                         boolean false
                  )
               ]
            )
            dict entry(
               string "org.freedesktop.DBus.Properties"
               array [
               ]
            )
         ]
      )
      dict entry(
         object path "/org/bluez/hci0/dev_88_9F_6F_88_6A_7B"
         array [
            dict entry(
               string "org.freedesktop.DBus.Introspectable"
               array [
               ]
            )
            dict entry(
               string "org.bluez.Device1"
               array [
                  dict entry(
                     string "Address"
                     variant                         string "88:9F:6F:88:6A:7B"
                  )
                  dict entry(
                     string "AddressType"
                     variant                         string "public"
                  )
                  dict entry(
                     string "Name"
                     variant                         string "Galaxy J6"
                  )
                  dict entry(
                     string "Alias"
                     variant                         string "Galaxy J6"
                  )
                  dict entry(
                     string "Class"
                     variant                         uint32 5898764
                  )
                  dict entry(
                     string "Icon"
                     variant                         string "phone"
                  )
                  dict entry(
                     string "Paired"
                     variant                         boolean true
                  )
                  dict entry(
                     string "Trusted"
                     variant                         boolean false
                  )
                  dict entry(
                     string "Blocked"
                     variant                         boolean false
                  )
                  dict entry(
                     string "LegacyPairing"
                     variant                         boolean false
                  )
                  dict entry(
                     string "Connected"
                     variant                         boolean false
                  )
                  dict entry(
                     string "UUIDs"
                     variant                         array [
                           string "00001105-0000-1000-8000-00805f9b34fb"
                           string "0000110a-0000-1000-8000-00805f9b34fb"
                           string "0000110c-0000-1000-8000-00805f9b34fb"
                           string "0000110d-0000-1000-8000-00805f9b34fb"
                           string "0000110e-0000-1000-8000-00805f9b34fb"
                           string "00001112-0000-1000-8000-00805f9b34fb"
                           string "00001115-0000-1000-8000-00805f9b34fb"
                           string "00001116-0000-1000-8000-00805f9b34fb"
                           string "0000111f-0000-1000-8000-00805f9b34fb"
                           string "0000112f-0000-1000-8000-00805f9b34fb"
                           string "00001132-0000-1000-8000-00805f9b34fb"
                           string "00001200-0000-1000-8000-00805f9b34fb"
                           string "00001800-0000-1000-8000-00805f9b34fb"
                           string "00001801-0000-1000-8000-00805f9b34fb"
                        ]
                  )
                  dict entry(
                     string "Modalias"
                     variant                         string "bluetooth:v0075p0100d0201"
                  )
                  dict entry(
                     string "Adapter"
                     variant                         object path "/org/bluez/hci0"
                  )
                  dict entry(
                     string "ServicesResolved"
                     variant                         boolean false
                  )
               ]
            )
            dict entry(
               string "org.freedesktop.DBus.Properties"
               array [
               ]
            )
            dict entry(
               string "org.bluez.MediaControl1"
               array [
                  dict entry(
                     string "Connected"
                     variant                         boolean false
                  )
               ]
            )
         ]
      )
   ]


={============================================================================
*kt_dev_skymw_0000* skymw-bluez-q

<bluez-factory>

// Singletons/lib/source/FactoryContainer.cpp

std::shared_ptr<AI_BLERCU::IBleRcuContoller> FactoryContainer::getRcuControllerProxy() const
{
    return blercuFactory->createBleRcuControllerProxy();
}

FactoryContainer::FactoryContainer()
    : aiDmsFactory(AIDms::Factory::getSharedInstance())
    , aiConfig(std::make_shared<AppInfrastructureConfig>(aiDmsFactory))
    , sysInfo(new SystemInfo())
    , wsMediatorFactory(new WebSocketMediator::WebSocketMediatorFactory(SkyDefinitions::getWebsocketMediatorPorts()))
    , rmFactory(new RuntimeManagerFactory(aiConfig, sysInfo))
    , pmFactory(new PackageManagerFactory(aiConfig))
    , ampFactory(new ApplicationManagerProxy::Factory(aiConfig))
    , verifierFactory( new xmldsigverifier::Factory(aiConfig))
    , webServerFactory(new AppWebServerFactory())
    , softCatFactory(new SoftCatFactory(aiConfig))
    , applicationLaunchPolicyFactory(new ApplicationLaunchPolicyFactory(aiConfig))
    , jumperFactory(new jumper::JumperFactory())
    , dbusServerFactory(new AI_DBUS::DbusServerFactory())
    , aiDiagnosticsFactory(new AIDiagnostics::DiagnosticsFactory(aiConfig))
    , credentialsManagerFactory(new CredentialsManagerFactory())
    , upnpDiscoveryFactory(new UPnPDiscoveryFactory())

    , `blercuFactory(std::make_shared<AI_BLERCU::BleRcuFactory>())`

    , irrcuFactory(std::make_shared<AI_IRRCU::IrRcuFactory>())
    , netflixProxyFactory(std::make_shared<Netflix::Factory>())
    , terminalProxy(std::make_shared<AIDms::TerminalProxy>())
    {

      // setup the dbus daemon for apps to use
      std::shared_ptr<AI_DBUS::IDbusServer> dbusServerPublic =
        initAndStartDbusServer(AI_DBUS::DbusServerId::AI_PUBLIC);

      dbusServers[AI_DBUS::DbusServerId::AI_PRIVATE] = dbusServerPrivate;
      std::shared_ptr<AI_IPC::IIpcService> ipcServicePrivate =
        AI_IPC::createIpcService(dbusServerPrivate, IPC_SERVICE_APP_PROCESS);
      ipcServices[AI_DBUS::DbusServerId::AI_PRIVATE] = ipcServicePrivate;

      AI_LOG_MILESTONE("runtime manager and package manager set up completed");

      // create the BleRcu factory, which just launches the daemon (requires the system IPC service)
      blercuFactory->setLocale(aiDmsFactory->createLocale());

      `blercuFactory->setIpcService(ipcServicePrivate);`

      blercuFactory->setInputHandler(inputHandler);
      `blercuFactory->startDaemon(dobbyProxy);`

      // -APPINFRA     < M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready

      // creates BleRcuContollerProxy
      blercuFactory->`createBleRcuControllerProxy`();

      AI_LOG_MILESTONE("ble rcu service system started successfully");

      // -APPINFRA     < M:FactoryContainer.cpp F:FactoryContainer L:00559 > ble rcu service system started successfully
    }

// appinfrastructure/AppInfrastructure/BluetoothRcu/client/lib/source/BleRcuFactory.cpp
// -----------------------------------------------------------------------------
/**
 * @brief Create RCU controller proxy object
 *
 *
 * @return the RCU controller proxy object, or null pointer in case of failure
 */
std::shared_ptr<IBleRcuContoller> BleRcuFactory::createBleRcuControllerProxy()
{
  mController = std::make_shared<BleRcuContollerProxy>(mIpcService, mInputHandler);
}


*sync-between-as-and-daemon*

// AppInfrastructure/Singletons/lib/source/Singletons.cpp

std::shared_ptr<AI_BLERCU::IBleRcuContoller> getBleRcuControllerProxyInstance()
{
  return FactoryContainer::getInstance().`getRcuControllerProxy`();
}


!MIL   -DOBBY        < M:Dobby.cpp F:onContainerStarted L:01129 > container 'ai.blercu'(91) started
!MIL   -APPINFRA     < M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready
!MIL   -BLERCU       < M:main.cpp F:main L:00478 > BleRcuDaemon started
!MIL   -APPINFRA     < M:FactoryContainer.cpp F:FactoryContainer L:00559 > ble rcu service system started successfully
!MIL   -APPINFRA     < M:FactoryContainer.cpp F:FactoryContainer L:00573 > softcat factory object set up done
!MIL   -BLERCU       < M:blercumanager.cpp F:onAdapterPowerChanged L:00871 > BT adapter powered on
!MIL   -BLERCU       < M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )
!MIL   -APPINFRA     < M:BleRcuController.cpp F:signalHandlerPropertiesChanged L:00770 > BleRcu status change: 1

# means got "Ready" signal from blercu deamon
!MIL   -APPINFRA     < M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready

bool DaemonController::waitTillReady(const std::chrono::milliseconds& timeout)


bool BleRcuControllerImpl::registerOnBus(const QDBusConnection &dbusConn)
{
  // we are now ready so emit a 'Ready' signal over dbus letting everyone know
  BleRcuController1Adaptor *adaptor = findChild<BleRcuController1Adaptor*>();
  if (!adaptor)
    qWarning("failed to find BleRcuController1Adaptor child");
  else
    emit adaptor->Ready();

  return true;
}

appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/main.cpp

static QSharedPointer<BleRcuController> setupBleRcuController()
{
  // create the manager object
  QSharedPointer<BleRcuManager> manager =
    QSharedPointer<BleRcuManagerImpl>::create(config,
        deviceFactory,
        QDBusConnection::systemBus());

  // create the controller object
  QSharedPointer<BleRcuController> controller =
    QSharedPointer<BleRcuControllerImpl>::create(config, manager,
        options->networkNamespace());

  // register on the controller on dbus
  controller->registerOnBus(*dbusConn);
}


<bluetooth-as-observer> *state-change*

// Components/AS/Services/Controllers/RcuController/source/AS_RCU_RcuControllerImplementation.h
// Components/AS/Services/Controllers/RcuController/source/AS_RCU_RcuControllerImplementation.cpp

RcuControllerImplementation::RcuControllerImplementation()
        : m_nextRegistrationHandle( RCU_REGISTRATION_HANDLE_BEGIN_INDEX ),
          m_keyEventController( AS_CONTROLLERS::GetController<AS_KEYEVENT::KeyEventController>() )
{
  m_bluetoothRcuDeviceObserver = AS::make_shared < BluetoothRcuDeviceEventObserver > (m_queue);

  m_bluetoothRcuController = getBleRcuControllerProxyInstance();

  if ( m_bluetoothRcuController.get() != NULL )
  {
    m_bluetoothRcuController->addObserver( m_bluetoothRcuDeviceObserver );
  }
}

int RcuControllerImplementation::Exec()
{
  btRcuEventData.pairingState = m_bluetoothRcuController->getState();
  // T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > 
  //  @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(178) Pairing state: 0
}

void BluetoothRcuDeviceEventObserver::stateChanged( AI_BLERCU::PairingState state )
{
    AS_LOG_ENTRY( "%s state: %u", __func__, state );

    RcuControllerEventData eventData;

    AS_LOG_INFO( "Received pairing state changed event, state: %u", state );

    eventData.pairingState = state;

    size_t bytesSend = m_queue->Send( AS_RCU_CONTROLLER_EVENT_PAIRING_STATE_CHANGED, &eventData, sizeof(eventData) );
    if ( bytesSend != sizeof(eventData) )
    {
        AS_LOG_ERROR( "Not enough bytes sent in queue send: %d expected: %u", bytesSend, sizeof(eventData) );
    }

    AS_LOG_EXIT( "%s", __func__ );
}

// handle signal/notificaiton from AS

class BluetoothRcuDeviceEventObserver : 
  public AICommon::Observer<AI_BLERCU::IBleRcuDeviceEvent>
{
  public:
    /**
     * @brief Constructor
     *
     * @param[in] queue      : Pointer to queue
     */
    BluetoothRcuDeviceEventObserver( AS_WORKER::Queue *queue );

    /**
     * @brief Listener to be invoked when pairing state has changed
     *
     * @param[in] pairingInProgress      : Pairing state
     */
    void pairingStatusChanged( bool pairingInProgress );

    /**
     * @brief Listener to be invoked when rcu device properties has changed
     */
    void deviceListChanged();

  private:
    AS_WORKER::Queue *m_queue;                                ///< Pointer to queue
};


m_bluetoothRcuDeviceObserver = std::make_shared < BluetoothRcuDeviceEventObserver > (m_queue);

m_bluetoothRcuController = `getBleRcuControllerProxyInstance`();

m_bluetoothRcuController->addObserver( m_bluetoothRcuDeviceObserver );

std::pair<bool, std::vector<std::string>> manufacturers = 
`m_bluetoothRcuController->getDeviceManufacturers`( macaddress, manufacturer, searchFlags, (int64_t) 0, (int64_t) RCU_TOTAL_MANUFACTURER_TO_RETRIEVE, totalEntries );

// ethan-as-source/Components/AS/Services/Controllers/RcuController/source/AS_RCU_RcuControllerImplementation.cpp
void BluetoothRcuDeviceEventObserver::pairingStatusChanged( bool pairingInProgress )
{ 
}

// *state-change*
// appinfrastructure/AppInfrastructure/BluetoothRcu/client/lib/source/BleRcuController.cpp
void BleRcuContollerProxy::signalHandlerPropertiesChanged(const AI_IPC::VariantList& args)
{
  AI_LOG_INFO("Status change: %u", mStatus.load());
  // F:signalHandlerPropertiesChanged L:00770 > BleRcu status change: 1

  mDispatcher->post(std::bind(&BleRcuContollerProxy::notifyPairingStatusChanged, this, mPairing.load()));
}

void BleRcuContollerProxy::notifyPairingStatusChanged(bool pairing)
{
  `notify`( std::bind(&IBleRcuDeviceEvent::pairingStatusChanged, std::placeholders::_1, pairing) );
}


<bluez-q-client-proxy>

COMPONENT_NAME := BleRcuClientLib

// BluetoothRcu/client/lib/include/BleRcuFactory.h

    std::map<std::string, std::shared_ptr<BleRcuDevice>> mRcuDevices;


// AppInfrastructure/Public/Common/Notifier.h

template<typename T>
class Notifier : virtual public Polymorphic
{
  /**
   * @brief Register interest in receiving updates.
   */
  void addObserver(const std::shared_ptr<T>& observer)
  {
    std::lock_guard<std::mutex> lock(m);
    observers.push_back(observer);
  }
}

// AppInfrastructure/Public/BluetoothRcu/IBluetoothRcu.h

class `IBleRcuDeviceEvent` : Interface
{
public:

    /**
     * @brief Pairing status changed notification
     *
     * @param pairingInProgress Pairing in progress or not.
     */
    virtual void pairingStatusChanged(bool pairingInProgress) = 0;

    /**
     * @brief Device list changed notification
     */
    virtual void deviceListChanged() = 0;
};

class IBleRcuContoller : public AICommon::`Notifier`<IBleRcuDeviceEvent>
{
public:

    /**
    * @brief Get JSON as defined in the AS spec
    */
    virtual Json::Value GetJsonRcuDeviceList() const = 0;

    /**
     * @brief Get information about the RCU devices
     */
    virtual std::vector<BleRcuDeviceProperties> getRcuDevices() const = 0;

    /**
     * @brief Start audio steaming
     *
     * @param rcuAddress    [in]    The address of the RCU to use for audio streaming
     * @param type          [in]    Streaming type such as ADPCM or PCM
     *
     * @return If successful then the fd to read the audio data, otherwise a negative value to indicate error
     */
    virtual int startAudioStreaming(const std::string& rcuAddress, StreamAudioRequestType type) = 0;

    /**
     * @brief Stop audio steaming
     *
     * @param rcuAddress    [in]    The address of the RCU to use for audio streaming
     *
     * @return If successful then true otherwise false
     */
    virtual bool stopAudioStreaming(const std::string& rcuAddress) = 0;


    /**
     * @brief Get audio streaming status
     *
     * @param rcuAddress     [in]     The address of the RCU to use for audio streaming
     *
     * @return It returns a pair. pair.first indicates whether the method can is successful or not
     *         and pair.second gives us the audio streaming if the method call is successful.
     */
    virtual std::pair<bool, BleRcuAudioStatus> getAudioStreamingStatus(const std::string& rcuAddress) = 0;

    /**
     * @brief Set IR codes
     *
     * @param rcuAddress    [in]    The address of the RCU to use for audio streaming
     * @param deviceType    [in]    Device type such as TV or AMP
     * @param irCode        [in]    IR code to set
     *
     * @return If successful then true otherwise false
     */
    virtual bool setIRCode(const std::string& rcuAddress, IrSignalProfile deviceType, int32_t irCode ) = 0;

    /**
     * @brief Clear IR codes
     *
     * @param rcuAddress    [in]    The address of the RCU to use for audio streaming
     *
     * @return If successful then true otherwise false
     */
    virtual bool clearIRCode(const std::string& rcuAddress) = 0;

    /**
     * @brief Set RCU mode
     *
     * @param rcuAddress    The address of the RCU to use for audio streaming
     * @param modesBitMask  Flags representing different RCU modes, see RcuMode
     *
     * @return If successful then true otherwise false
     */
    virtual bool setRcuMode(const std::string& rcuAddress, uint32_t modesBitMask) = 0;

    /**
     * @brief Get device models
     *
     * @param rcuAddress            [in]     The address of the RCU to use for audio streaming
     * @param deviceManufacturer    [in]     Name of the device manufacturer
     * @param deviceModelSearchText [in]     Search text indicating the hints about the model
     * @param searchFlagsBitMask    [in]     Search flags - see RcuDeviceSearchFlags
     * @param offset                [in]     Offset value in the search result
     * @param count                 [in]     Maximum number of entries requested
     * @param totalEntries          [out]    Maximum number of entries available
     *
     * @return It returns a pair. pair.first indicates whether the method can is successful or not
     *         and pair.second gives us the result set (models) if the method call is successful.
     */
    virtual std::pair<bool, std::vector<std::string>> getDeviceModels(
            const std::string& rcuAddress,
            const std::string &deviceManufacturer,
            const std::string &deviceModelSearchText,
            uint32_t searchFlagsBitMask,
            int64_t offset,
            int64_t count,
            uint64_t& totalEntries) = 0;

    /**
     * @brief Get device manufacturers
     *
     * @param rcuAddress                    [in]     The address of the RCU to use for audio streaming
     * @param deviceManufacturerSearchText  [in]     Search text indicating the hints about the model
     * @param searchFlagsBitMask            [in]     Search flags - see RcuDeviceSearchFlags
     * @param offset                        [in]     Offset value in the search result
     * @param count                         [in]     Maximum number of entries requested
     * @param totalEntries                  [out]    Maximum number of entries available
     *
     * @return It returns a pair. pair.first indicates whether the method can is successful or not
     *         and pair.second gives us the result set (manufacturers) if the method call is successful.
     */
    virtual std::pair<bool, std::vector<std::string>> getDeviceManufacturers(
            const std::string& rcuAddress,
            const std::string &deviceManufacturerSearchText,
            uint32_t searchFlagsBitMask,
            int64_t offset,
            int64_t count,
            uint64_t& totalEntries) = 0;

    /**
     * @brief Get manual input based IR codes
     *
     * @param rcuAddress          [in]     The address of the RCU to use for audio streaming
     * @param deviceManufacturer  [in]     Name of the device manufacturer
     * @param deviceModel         [in]     Name of the device model
     * @param searchFlagsBitMask  [in]     Search flags - see RcuDeviceSearchFlags
     *
     * @return It returns a pair. pair.first indicates whether the method can is successful or not
     *         and pair.second gives us the result set (IR codes) if the method call is successful.
     */
    virtual std::pair<bool, std::vector<int32_t>> getManualInputBasedIRCodes(
            const std::string& rcuAddress,
            const std::string &deviceManufacturer,
            const std::string &deviceModel,
            uint32_t searchFlagsBitMask ) = 0;

    /**
     * @brief Get manual input based IR codes
     *
     * @param rcuAddress     [in]     The address of the RCU to use for audio streaming
     * @param Edit           [in]     EDID data
     *
     * @return It returns a pair. pair.first indicates whether the method can is successful or not
     *         and pair.second gives us the result set (IR codes) if the method call is successful.
     */
    virtual std::pair<bool, std::vector<int32_t>> getEdidBasedIRCodes(
            const std::string& rcuAddress,
            const std::vector<uint8_t>& edit ) = 0;

    /**
     * @brief This method triggers the 'find me' beeping on the RCU.
     *
     * @param rcuAddress     [in]     The address of the RCU to use for audio streaming
     * @param beepLevel      [in]     Beep level
     * @param duration       [in]     Beep duration
     *
     * @return if successful then true else false. We need to check the validity of the future object prior to invoke its get method.
     **/
    virtual std::future<bool> findMe(const std::string& rcuAddress, FindMeBeepLevel beepLevel, int32_t duration) = 0;

    // *start-scanning* added
    /**
     * @brief Start scanning
     *
     * @param timeout       [in]    scanning timeout in ms
     *
     * @return void
     */
    virtual void startScanning(const uint32_t timeout) = 0;
};


// appinfrastructure/AppInfrastructure/BluetoothRcu/client/lib/source/BleRcuFactory.cpp
std::shared_ptr<IBleRcuContoller> BleRcuFactory::createBleRcuControllerProxy()
{
  try
  {
    mController = std::make_shared<BleRcuContollerProxy>(mIpcService, mInputHandler);
  }
}


// client/lib/source/BleRcuController.h

class `BleRcuContollerProxy` : public IBleRcuContoller
{
  /**
   * @brief Get information about the RCU devices
   */
  virtual std::vector<BleRcuDeviceProperties> getRcuDevices() const final;
};


// AppInfrastructure/BluetoothRcu/`client/lib/source/BleRcuController.cpp`

BleRcuContollerProxy::BleRcuContollerProxy(
    const std::shared_ptr<AI_IPC::IIpcService>& ipcService, const std::shared_ptr<IInputHandler>& inputHandler)

    : `mDispatcher(std::make_shared<AICommon::ThreadedDispatcher>("AI_BLERCU_PROXY"))`

  , mIpcService(ipcService)

{
  `setDispatcher(mDispatcher);`

  // #define BLE_RCU_CONTROLLER_OBJECT               "/com/sky/blercu/controller"
  // #define BLE_RCU_CONTROLLER_INTERFACE            "com.sky.blercu.Controller1"

  // for signals
  std::string handle = mIpcService->registerSignalHandler(
      AI_IPC::Signal(BLE_RCU_CONTROLLER_OBJECT, BLE_RCU_CONTROLLER_INTERFACE, "DeviceAdded"),
      std::bind(`&BleRcuContollerProxy::signalHandlerDeviceAdded`, this, std::placeholders::_1));

  // for properties
  handle = mIpcService->registerSignalHandler(
      AI_IPC::Signal(BLE_RCU_CONTROLLER_OBJECT, ORG_FREEDESKTOP_DBUS_PROPERTIES, "PropertiesChanged"),
      std::bind(`&BleRcuContollerProxy::signalHandlerPropertiesChanged`, this, std::placeholders::_1));
 
  //
  IInputHandler::KeyListenerV2 irListener = std::bind(
      `&BleRcuContollerProxy::onIrPairingCode`, this,
      std::placeholders::_1,  // event source
      std::placeholders::_2,  // filter byte
      std::placeholders::_3,  // key code
      std::placeholders::_4); // up/down state

  mIrListenerId = inputHandler->registerKeyListener
    (unsigned(IInputHandler::EventSource::Infrared), irListener, irPredicate);
}


BleRcuContollerProxy::~BleRcuContollerProxy()
{
  // can now safely stop the dispatcher
  mDispatcher->stop();
}


void BleRcuContollerProxy::signalHandlerDeviceAdded(const AI_IPC::VariantList& args)
{
  {
    std::string objectPath = boost::get<std::string>(args[0]);
    std::string address = boost::get<std::string>(args[1]);

    AI_LOG_INFO("Device added [object path: %s] [address: %s]", objectPath.c_str(), address.c_str());

    `mDispatcher->post`(std::bind(`&BleRcuContollerProxy::updateDeviceList`, this));
  }
}

void BleRcuContollerProxy::updateDeviceList()
{
  const AI_IPC::Method method(BLE_RCU_SERVICE, BLE_RCU_CONTROLLER_OBJECT, BLE_RCU_CONTROLLER_INTERFACE, 
      "GetDevices");

  AI_IPC::VariantList methodParams;
  AI_IPC::VariantList methodReturnValue;

  AI_LOG_INFO("Updating device list");

  if (mIpcService->invokeMethod(method, methodParams, methodReturnValue))
}

void BleRcuContollerProxy::addDevicesToDeviceList(const std::set<std::string>& objectPaths)
{
  for (const auto& objectPath : objectPaths)
  {
    AI_LOG_INFO("Add new device [object path: %s]", objectPath.c_str());

    try
    {
      mRcuDevices[objectPath] = std::make_shared<AI_BLERCU::BleRcuDevice>(
          mIpcService,
          mInputHandler,
          std::bind(`&BleRcuContollerProxy::notifyDevicePropertyChanged`, this),
          objectPath);
    }
    catch(const std::exception& e)
    {
      AI_LOG_ERROR("Failed to create device object [object path: %s]", objectPath.c_str());
    }
  }
}


*start-pairing* *old-way*
// get input key and kicks off pairing request

void `BleRcuContollerProxy::onIrPairingCode`(
    IInputHandler::EventSource eventSource,
    uint8_t filterByte, 
    uint16_t keyCode, bool keyState)
{
  // unused - filter byte is used in the predicate before we get here
  (void)filterByte;

  // sanity check
  if ((keyCode & 0xff00) != (USER_INPUT_KEY_PAIRING_000 & 0xff00))
  {
    AI_LOG_ERROR_EXIT("odd, received non-pairing key code in callback");
    return;
  }

  *pairing-code*
  const uint8_t pairingCode = (keyCode & 0x00ff);

  AI_LOG_MILESTONE("received IR pairing code %03hhu", pairingCode);

  mDispatcher->post(std::bind(
        &`BleRcuContollerProxy::triggerPairing`, this, pairingCode));
}

void `BleRcuContollerProxy::triggerPairing`(uint8_t pairingCode)
{
  // if the daemon is already signalling that pairing is running don't bother
  // trying to start it again
  if (mPairing)
  {
    AI_LOG_INFO("ignoring pairing request as already in pairing state");
    AI_LOG_FN_EXIT();
    return;
  }

  // #define BLE_RCU_SERVICE                         "com.sky.blercu"
  // #define BLE_RCU_CONTROLLER_OBJECT               "/com/sky/blercu/controller"
  // #define BLE_RCU_CONTROLLER_INTERFACE            "com.sky.blercu.Controller1"
  // #define ORG_FREEDESKTOP_DBUS_PROPERTIES         "org.freedesktop.DBus.Properties"
  // #define BLE_RCU_DEVICE_INTERFACE_DEVICE1        "com.sky.blercu.Device1"
  // #define BLE_RCU_DEVICE_INTERFACE_INFRARED1      "com.sky.blercu.Infrared1"

  const AI_IPC::Method method(
      BLE_RCU_SERVICE, 
      BLE_RCU_CONTROLLER_OBJECT, 
      BLE_RCU_CONTROLLER_INTERFACE, 
      `"StartPairing"`);

  AI_IPC::VariantList methodParams = {pairingCode};
  AI_IPC::VariantList methodReturnValue;

  `if (!mIpcService->invokeMethod(method, methodParams, methodReturnValue))`
  {
    AI_LOG_ERROR("Failed to invoke '%s.%s'", method.interface.c_str(), method.name.c_str());
  }
}


// BluetoothRcu/client/lib/source/BleRcuDevice.cpp
// each device also registers functions to dbus

  std::function<void(void)> mNotifyPropertyChanged;

BleRcuDevice::BleRcuDevice(const std::shared_ptr<AI_IPC::IIpcService>& ipcService,
                 const std::shared_ptr<IInputHandler>& inputHandler,
                 const std::function<void(void)>& notifyPropertyChanged,
                 const std::string& objectPath)
    : mIpcService(ipcService), 
    `mNotifyPropertyChanged(notifyPropertyChanged)`, 
    mObjectPath(objectPath)
{
  // #define ORG_FREEDESKTOP_DBUS_PROPERTIES         "org.freedesktop.DBus.Properties"

  mPropertyChangedSignalHandler = mIpcService->registerSignalHandler(
      AI_IPC::Signal(
        objectPath, 
        ORG_FREEDESKTOP_DBUS_PROPERTIES, 
        "PropertiesChanged"),
      std::bind(`&BleRcuDevice::signalHandlerPropertyChanged`, this, std::placeholders::_1));

  // and more
}

void BleRcuDevice::signalHandlerPropertyChanged(const AI_IPC::VariantList& args)
{
  /*org.freedesktop.DBus.Properties.PropertiesChanged (STRING interface_name,
    DICT<STRING,VARIANT> changed_properties,
    ARRAY<STRING> invalidated_properties)*/

  if (args.size() >= 2)
  {
    try
    {
      std::string interface = boost::get<std::string>(args[0]); //STRING interface_name
      if (interface == BLE_RCU_DEVICE_INTERFACE_DEVICE1)
      {
        std::map<std::string, AI_IPC::DictDataType> changedProperties = boost::get<std::map<std::string, AI_IPC::DictDataType>>(args[1]); //DICT<STRING,VARIANT> changed_properties,

        if ((!changedProperties.empty()) || (!invalidatedProperties.empty()))
        {
          updateDeviceProperties(changedProperties, invalidatedProperties);
          `mNotifyPropertyChanged();`
        }
      }
    }
  }
}

void BleRcuContollerProxy::notifyDevicePropertyChanged()
{
  `mDispatcher->post`(std::bind(&BleRcuContollerProxy::notifyDeviceListChanged, this));
}

void BleRcuContollerProxy::notifyDeviceListChanged()
{
  `notify`( std::bind(&IBleRcuDeviceEvent::deviceListChanged, std::placeholders::_1) );
}


<bluez-q-console-side> *bluez-tool*

qWarning() << "KT: Console: dbusName: " << dbusName << ", serviceName: " << serviceName;

-sh-3.2# BleRcuConsole
KT: Console: 
  dbusName:  "com.sky.blercuconsole.pid6932" , 
  serviceName:  "com.sky.blercu"

[blercu]#


// console/source/main.cpp

int main(int argc, char *argv[])
{
  cmdHandler = QSharedPointer<BleRcuCmdHandler>::create(dbus, serviceName);
}

BleRcuCmdHandler::BleRcuCmdHandler(const QDBusConnection &bus,
                                   const QString &service,
                                   QObject *parent)
	: BaseCmdHandler(parent)
	, m_bus(bus)
	, m_serviceName(service)
{
  // initalise the dbus interfaces
  initBleRcuInterfaces(m_bus, m_serviceName,
      QStringLiteral("/com/sky/blercu/controller"));
}

void BleRcuCmdHandler::initBleRcuInterfaces(const QDBusConnection &bus,
                                            const QString &service,
                                            const QString &path)
{
  // get the controller interface which do the same as *bluez-controller-proxy*
  m_blercuController1 = 
    QSharedPointer<ComSkyBleRcuController1Interface>::create(service, path, bus);
}

void BleRcuCmdHandler::startPairing(quint8 pairingCode)
{
  if (!m_blercuController1 || !m_blercuController1->isValid()) {
    qWarning("Missing one or more required dbus interfaces");
    return;
  }

  // send the request to the daemon
  QDBusPendingReply<> reply = m_blercuController1->StartPairing(pairingCode);
  reply.waitForFinished();
  if (reply.isError())
    showDBusError(reply.error());
}


[blercu]# help
Available commands:
  connected-devices                                  List connected devices
  devices                                            List available devices
  exit                                               Quit program (same as quit)
  help                                               Display this text
  info <dev>                                         Device information
  ir-erase <dev>                                     Erases IR code(s) programmed into the rcu
  ir-get-codes <dev> <any/amp/tv> <manuf> <model>    Retreives a list of IR codes
  ir-get-manuf <dev> <any/amp/tv> <search> [sort]    Retreives a list of manufacturers
  ir-get-model <dev> <any/amp/tv> <manuf> <search>   Retreives a list of models
  ir-parse-edid <dev> [async] [edid]                 Parses the EDID sending back code list. If [edid] is supplied it should be hex string of 128 bytes
  ir-program <dev> <code> [signals...]               Programs the IR code(s) into the rcu
  ir-send <dev> <signal>                             Asks the RCU to send a given IR signal
  log-ethanlog [<on/off>]                            Gets / sets logging to ethan DIAG log
  log-level [fatal/error/warning/milestone/info/debug] Gets / sets the daemon log level
  log-syslog [<on/off>]                              Gets / sets logging to syslog
  pair <on/off> <code>                               Start/stop pairing using pairing byte code
  quit                                               Quit program


[blercu]# devices
Device 70:91:F3:22:BC:75 P039 SkyQ EC102
[blercu]# connected-devices
Device 70:91:F3:22:BC:75 P039 SkyQ EC102

[blercu]# connected-devices
Device D4:B8:FF:12:E1:A8 P066 SkyQ EC101

*dbus-monitor*
dbus-monitor "interface=com.sky.BleRcuDevice1"


void Console::initReadLine()
{
  m_readLine.setPrompt(m_cmdHandler->prompt());

  m_readLine.addCommand("devices", { }, "List available devices",
      this, &Console::onListDevicesCommand);

  // void BleRcuCmdHandler::listDevices()

  m_readLine.addCommand("connected-devices", { }, "List connected devices",
      this, &Console::onListConnectedDevicesCommand);
  // m_cmdHandler->listConnectedDevices();

  m_readLine.addCommand("pair", { "<on/off>", "<code>" }, "Start/stop pairing using pairing byte code",
      this, &Console::onStartPairingCommand);

  *start-pairing*
  // if (on)
  // 	m_cmdHandler->startPairing(pairingCode);
  //  { 
  //    QDBusPendingReply<> reply = m_blercuController1->StartPairing(pairingCode);
  //  }
  // else
  // 	m_cmdHandler->cancelPairing();

  // m_readLine.addCommand("unpair", { "<dev>" }, "Unpair device",
  //     this, &Console::onUnpairCommand);
  //
  // // m_cmdHandler->unPairDevice(address);
  // // qWarning("Not implemented on BLERCU interface");

  m_readLine.addCommand("info", { "<dev>" }, "Device information",
      this, &Console::onInfoCommand);

  // m_cmdHandler->deviceInfo(address);

  m_readLine.addCommand("log-level", { "[fatal/error/warning/milestone/info/debug]" }, "Gets / sets the daemon log level",
      this, &Console::onLogLevelCommand);

  // m_cmdHandler->setLogLevel(level);

  m_readLine.addCommand("log-syslog", { "[<on/off>]" }, "Gets / sets logging to syslog",
      this, &Console::onLogSyslogCommand);
  m_readLine.addCommand("log-ethanlog", { "[<on/off>]" }, "Gets / sets logging to ethan DIAG log",
      this, &Console::onLogEthanlogCommand);

  m_readLine.addCommand("hci-capture", { "[<on/off/clear/dump>] [file]" }, "Enables / disables / clear or dumps the HCI packet capture",
      this, &Console::onHciCaptureCommand);
}


void BleRcuCmdHandler::startPairing(quint8 pairingCode)
{
	if (!m_blercuController1 || !m_blercuController1->isValid()) {
		qWarning("Missing one or more required dbus interfaces");
		return;
	}

	// send the request to the daemon
	QDBusPendingReply<> reply = m_blercuController1->StartPairing(pairingCode);
	reply.waitForFinished();
	if (reply.isError())
		showDBusError(reply.error());
}


<bluez-q-daemon>

RCU_USR   5022  0.0  0.0   3224   548 ?        Ss   06:31   0:00 \
  /opt/libexec/DobbyInit /opt/sbin/BleRcuDaemon --noconsole --session --netns=3 --audio-fifo-dir=/tmp/blercu/
RCU_USR   5056  0.0  0.2  48860  7036 ?        Sl   06:31   0:00 \
  BleRcuDaemon --noconsole --session --netns=3 --audio-fifo-dir=/tmp/blercu/

// BleRcuDaemon started. address: , servicename: com.sky.blercu

// BluetoothRcu/daemon/source/main.cpp

int main(int argc, char *argv[])
{
  QCoreApplication app(argc, argv);
  QCoreApplication::setApplicationName("BleRcuDaemon");
  QCoreApplication::setApplicationVersion("2.0");

  // connect dbus
  QSharedPointer<QDBusConnection> dbusConn = 
    setupDBus(options->dbusType(),
      options->dbusAddress(),
      options->dbusServiceName());

  // setup and start the blercu controller object
  QSharedPointer<BleRcuController> controller =
    setupBleRcuController(options, config, irDatabase, dbusConn, debugDBusConn);
}

static QSharedPointer<QDBusConnection> setupDBus(CmdLineOptions::DBusType dbusType,
                                                 const QString &dbusAddress,
                                                 const QString &dbusServiceName)
{}

static QSharedPointer<BleRcuController> setupBleRcuController(const QSharedPointer<CmdLineOptions> &options,
                                                              const QSharedPointer<ConfigSettings> &config,
                                                              const QSharedPointer<IrDatabase> &irDatabase,
                                                              const QSharedPointer<QDBusConnection> &dbusConn,
                                                              const QSharedPointer<QDBusConnection> &debugDBusConn)
{
  *ai-bluetooth-ipc-service*
  // create the factory for generating BleRcuServices using the vendor
  // supplied IPC service
  QSharedPointer<IpcServicesFactory> ipcServicesFactory =
    QSharedPointer<IpcServicesFactory>::create(config,
        hidrawDevManager,
        QDBusConnection::systemBus(),
        options->audioFifoDirectory());

  *ai-bluetooth-device*
  // create the factory for generating BleRcuDevices
  QSharedPointer<BleRcuDeviceFactory> deviceFactory =
    QSharedPointer<BleRcuDeviceFactory>::create(*dbusConn, config,
        ipcServicesFactory,
        gattServicesFactory);

  *ai-bluetooth-manager*
  // create the manager object
  QSharedPointer<BleRcuManager> manager =
    QSharedPointer<BleRcuManagerImpl>::create(config,
        deviceFactory,
        QDBusConnection::systemBus());

  *bleruc-controller*
  // create the controller object
  QSharedPointer<BleRcuController> controller =
    QSharedPointer<BleRcuControllerImpl>::create(config, `manager`,
        options->networkNamespace());
  if (!controller || !controller->isValid()) {
    controller.reset();
    qFatal("failed to setup the BLE RCU controller");
  }

  *bleruc-controller-register*
  // register on the controller on dbus
  controller->registerOnBus(*dbusConn);

  return controller;
}


<ai-bluetooth-daemon-controller>
// BluetoothRcu/daemon/source/blercu/blercucontroller.cpp

class BleRcuControllerImpl : public BleRcuController
                           , public QDBusContext
{}

// BluetoothRcu/daemon/source/blercu/blercucontroller_p.h

BleRcuPairingStateMachine m_pairingStateMachine;

BleRcuControllerImpl::BleRcuControllerImpl(const QSharedPointer<const ConfigSettings> &config,
                                           const QSharedPointer<BleRcuManager> &manager,
                                           int networkNamespaceFd,
                                           QObject *parent)

  , m_dbusObjectPath(QStringLiteral("`/com/sky/blercu/controller`"))
{
  *create-bluez-daemon-controller-adaptor*
  // create and attach the dbus adaptor for the controller interface to
  // ourselves.

  m_dbusAdaptors.append(new `BleRcuController1Adaptor`(
        this // *pass-bluez-controller*
        , `m_dbusObjectPath`));
}

bool BleRcuControllerImpl::registerOnBus(const QDBusConnection &dbusConn)
{
  // strip the const'ness off the connection (bit of a hack)
  QDBusConnection dbusConn_(dbusConn);

  if (!dbusConn_.`registerObject`(`m_dbusObjectPath`.path(), this)) {
    qError("failed to register blercudevice adaptor object(s)");
    return false;
  }

  // tell all the adaptors that they're now registered on the bus, this is
  // used for property change notifications
  for (DBusAbstractAdaptor *adaptor : m_dbusAdaptors)
    adaptor->registerConnection(dbusConn);

  // we are now ready so emit a 'Ready' signal over dbus letting everyone know
  BleRcuController1Adaptor *adaptor = findChild<BleRcuController1Adaptor*>();
  if (!adaptor)
    qWarning("failed to find BleRcuController1Adaptor child");
  else
    emit adaptor->Ready();

  return true;
}


<ai-bluetooth-daemon-controller-adaptor>

dbusxml/com.sky.blercu.Controller1.xml

{
  <interface name="com.sky.blercu.Controller1">

    <method name="StartPairing">
    <arg name="pairing_code" type="y" direction="in"/>
    </method>

    <method name="CancelPairing">
    </method>

    <method name="GetDevices">
    <arg name="devices" type="ao" direction="out"/>
    </method>

    <method name="IsReady">
    <annotation name="org.freedesktop.DBus.Method.NoReply" value="true"/>
    </method>

    <signal name="DeviceAdded">
    <arg name="path" type="o"/>
    <arg name="address" type="s"/>
    </signal>

    <signal name="DeviceRemoved">
    <arg name="path" type="o"/>
    <arg name="address" type="s"/>
    </signal>

    <signal name="Ready">
    </signal>

    <property name="Pairing" type="b" access="read"/>
    <property name="PairingCode" type="y" access="read"/>

    </interface>
}

// BluetoothRcu/daemon/source/blercu/adaptors/blercucontroller1_adaptor.h

class BleRcuController1Adaptor : public DBusAbstractAdaptor
{
  Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.sky.blercu.Controller1")
    Q_CLASSINFO("D-Bus Introspection", ""
        "  <interface name=\"com.sky.blercu.Controller1\">\n"
        "    <method name=\"Shutdown\"/>\n"
        "    <method name=\"StartPairing\">\n"
        "      <arg direction=\"in\" type=\"y\" name=\"pairing_code\"/>\n"
        "    </method>\n"
        "    <method name=\"CancelPairing\"/>\n"
        "    <method name=\"GetDevices\">\n"
        "      <arg direction=\"out\" type=\"ao\" name=\"devices\"/>\n"
        "    </method>\n"
        "    <method name=\"IsReady\">\n"
        "      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\"/>\n"
        "    </method>\n"
        "    <signal name=\"DeviceAdded\">\n"
        "      <arg type=\"o\" name=\"path\"/>\n"
        "      <arg type=\"s\" name=\"address\"/>\n"
        "    </signal>\n"
        "    <signal name=\"DeviceRemoved\">\n"
        "      <arg type=\"o\" name=\"path\"/>\n"
        "      <arg type=\"s\" name=\"address\"/>\n"
        "    </signal>\n"
        "    <signal name=\"Ready\"/>\n"
        "    <property access=\"read\" type=\"b\" name=\"Pairing\"/>\n"
        "    <property access=\"read\" type=\"y\" name=\"PairingCode\"/>\n"
        "  </interface>\n"
        "")
  public:
        Q_PROPERTY(bool Pairing READ pairing)
          Q_PROPERTY(quint8 PairingCode READ pairingCode)

          ...
};


// BluetoothRcu/daemon/source/blercu/adaptors/blercucontroller1_adaptor.cpp

BleRcuController1Adaptor::BleRcuController1Adaptor(BleRcuController *parent,
                                                   const QDBusObjectPath &objPath)
  : DBusAbstractAdaptor(parent)
  , `m_controller(parent)` // *pass-bluez-controller* 
  , m_dbusObjPath(objPath)
{
  // don't auto relay signals, we do this manually
  setAutoRelaySignals(false);

  // connect to the device added and removed signals
  QObject::connect(m_controller, &BleRcuController::managedDeviceAdded,
      this, &BleRcuController1Adaptor::onDeviceAdded);
  QObject::connect(m_controller, &BleRcuController::managedDeviceRemoved,
      this, &BleRcuController1Adaptor::onDeviceRemoved);

  // connect to the pairing state change signals
  QObject::connect(m_controller, &BleRcuController::pairingStateChanged,
      this, &BleRcuController1Adaptor::onPairingStateChanged);
}

*start-pairing* *pairing-code*

Attempts to start the pairing procedure looking for devices that identify
with the given \a filterByte and \a pairingCode.  Both these byte values
are sent in the IR pairing signal and are used `to help identify` the RCU
model and unique name.

void BleRcuController1Adaptor::`StartPairing`(quint8 pairingCode,
                                            const QDBusMessage &message)
{
  // sanity check we're not already in the pairing state
  if (m_controller->isPairing()) {
    sendErrorReply(message, BleRcuError::errorString(BleRcuError::Busy),
        QStringLiteral("Already in pairing state"));
    return;
  }

  // attempt to start pairing using the supplied code
  if (!`m_controller->startPairing`(pairingCode)) {

    const BleRcuError error = m_controller->lastError();
    sendErrorReply(message, error.name(), error.message());

  }
}

bool BleRcuControllerImpl::startPairing(quint8 pairingCode)
{
  // start the pairing process
  m_pairingStateMachine.start(pairingCode);
  return true;
}


<bluez-q-controller-property-change> *state-change*

path : "`/com/sky/blercu/controller`"
iface: "com.sky.blercu.Controller1"

void BleRcuPairingStateMachine::onEnteredFinishedState()
{
  // finally just emit a finished signal to the BleRcuManagerImpl object
  emit finished();
}

BleRcuControllerImpl::BleRcuControllerImpl()
{
  QObject::connect(&m_pairingStateMachine, &BleRcuPairingStateMachine::finished,
      this, &BleRcuControllerImpl::onFinishedPairing,
      Qt::QueuedConnection);
}

void BleRcuControllerImpl::onFinishedPairing()
{
  // tell clients that the pairing state is changed
  emit pairingStateChanged(pairing);
}

BleRcuController1Adaptor::BleRcuController1Adaptor(BleRcuController *parent)
{
	// connect to the pairing state change signals
	QObject::connect(m_controller, &BleRcuController::pairingStateChanged,
	                 this, &BleRcuController1Adaptor::onPairingStateChanged);
}

// daemon/source/blercu/adaptors/blercucontroller1_adaptor.cpp

void BleRcuController1Adaptor::onPairingStateChanged(bool pairing)
{
  `emitPropertyChanged(QStringLiteral("Pairing"), pairing);`
}

template <typename T>
void BleRcuController1Adaptor::emitPropertyChanged(const QString &propName,
    const T &propValue) const
{
  sendPropertyChangeNotification<T>(m_dbusObjPath.path(), propName, propValue);
}

// daemon/source/dbus/dbusabstractadaptor.h

class DBusAbstractAdaptor : public QDBusAbstractAdaptor
{
  bool sendPropertyChangeNotification(const QString &objectPath,
      const QString &propertyName,
      const T1 &propertyValue) const
  {
    // send the signal on all dbus connections
    for (const QDBusConnection &dbusConn : `m_dbusConnections`) {
      if (!dbusConn.send(propChangeSignal))
        qWarning("failed to send property change notification signal");
    }
  }
}

/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p blercucontroller1_interface.h: ../dbusxml/com.sky.BleRcuController1.xml
 *
 * Proxy class for interface com.sky.BleRcuController1
 */
class ComSkyBleRcuController1Interface: public DBusAbstractInterface
{
  Q_PROPERTY(bool Pairing READ pairing NOTIFY pairingChanged)
    inline bool pairing() const
    { return qvariant_cast< bool >(property("Pairing")); }
};

void BleRcuCmdHandler::initBleRcuInterfaces()
{
  QObject::connect(m_blercuController1.data(), &ComSkyBleRcuController1Interface::pairingChanged,
      this, &BleRcuCmdHandler::onPairingStateChanged);
}


$ ag "emit stateChanged\("

daemon/source/blercu/blercucontroller.cpp
369:    emit stateChanged(PairingState::Searching);
550:    emit stateChanged(PairingState::Pairing);
572:    emit stateChanged(PairingState::Complete);
594:    emit stateChanged(PairingState::Failed);

606:    emit stateChanged(PairingState::Idle);

	m_stateMachine.addTransition(AdapterPoweredOffState,
       AdapterPoweredOnEvent, 
       AdapterPoweredOnState);

	// connect to the manager's initialised signal
	QObject::connect(manager.data(), &BleRcuManager::poweredInitialised,
	                 this, &BleRcuControllerImpl::onInitialised,
	                 Qt::QueuedConnection);

694:    emit stateChanged(PairingState::Failed);

*state-change-to-idle*

	enum PairingState
	{
		Initialsing,
		Idle,
		Searching,
		Pairing,
		Complete,
		Failed
	};
} // namespace

-sh-3.2# grep -an "BLERCU" /mnt/nds/dev_13/part_0/FSN_DATA/LOG
436:NDS: ^0000000114.579030 !MIL   -APPINFRA     < p:00000dfb t:42f52dc0 T:no name M:DiagService.cpp F:createLogPipe L:00137 > CreateLogPipe created pipe for app BLERCU with inode 24614
437:NDS: ^0000000114.580355 !MIL   -DOBBY        < p:00000dfb t:49afcdc0 T:no name M:EthanLogPlugin.cpp F:postConstruction L:00255 > Received pipe to BLERCU with inode 24614
443:NDS: ^0000000114.667217 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:.  L:00000 > Logging pipe inode is 24614
444:NDS: ^0000000114.693299 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:hcisocket.cpp F:create L:00311 > creating new socket for HciSocket object
445:NDS: ^0000000114.693485 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:hcisocket.cpp F:setSocketFilter L:00435 > setting hci filter to [ type=0x0010 events={0x00000020, 0x40000000} ]
446:NDS: ^0000000114.693867 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:qtvfs.cpp F:qtvfsRegister L:00704 > registered sqlite VFS for QT
447:NDS: ^0000000114.694251 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:irdatabase.cpp F:init L:00253 > opened ir database @ ':irdb.sqlite'
448:NDS: ^0000000114.700529 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/ruwido/rcu" on service "com.ruwido.rcu"
449:NDS: ^0000000114.701628 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/uei/userver" on service "com.uei.userver"
450:NDS: ^0000000114.701728 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercudevicefactory.cpp F:BleRcuDeviceFactory L:00047 > models with OUI 0x48d0cf are disabled
451:NDS: ^0000000114.705605 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercumanager.cpp F:findAdapter L:00703 > found bluez adapter at "/org/bluez/hci0" with address FF:FF:FF:FF:FF:FF
452:NDS: ^0000000114.706830 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOffState L:00456 > adapter is not powered, attempting to power on now
453:NDS: ^0000000114.707987 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:hcimonitor.cpp F:run L:00645 > entering hci monitor thread
456:NDS: ^0000000114.715370 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started
457:NDS: ^0000000114.715420 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:main.cpp F:main L:00479 > ========================
458:NDS: ^0000000114.715449 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:main.cpp F:main L:00480 > KT: BleRcuDaemon started
626:NDS: ^0000000114.923988 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00864 > BT adapter powered on
675:NDS: ^0000000114.936800 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercumanager.cpp F:disablePairable L:01142 > disabling pairable mode
676:NDS: ^0000000114.941246 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOnState L:00552 > KT: onEnteredAdapterPoweredOnState: emit poweredInitialised
677:NDS: ^0000000114.941297 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercucontroller.cpp F:onInitialised L:00605 > KT: onInitialised: emit stateChanged(idle)
678:NDS: ^0000000114.941318 !MIL   -BLERCU       < p:00000dfb t:49afcdc0 T:no name M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )

void BleRcuManagerImpl::onEnteredAdapterPoweredOffState()
{
  // cancel any pending delayed retry event
  if (m_retryEventId >= 0) {
    m_stateMachine.cancelDelayedEvent(m_retryEventId);
    m_retryEventId = -1;
  }

  // skip out early if already powered
  // NGDEV-146407: the powered comes early than the usual for some RCU and
  // platforms and the timeout value is choosen to make sure all objects and
  // clients are up and running and is within FUSION sysint INITIALISED level.
  if (m_adapterProxy->powered()) {
    qMilestone("skip out early and adapter is powered");
    m_adapterPowered.setSingleShot(true);
    m_adapterPowered.setInterval(5000);
    QObject::connect(&m_adapterPowered, &QTimer::timeout,
        this, &BleRcuManagerImpl::onAdapterPoweredSkipped);
    m_adapterPowered.start();
    m_stateMachine.postEvent(`AdapterPoweredOnEvent`);
    return;
  }
}

void BleRcuManagerImpl::onAdapterPowerChanged(bool powered)
{
  if (powered) {
    qMilestone("BT adapter powered on");
    m_stateMachine.postDelayedEvent(`AdapterPoweredOnEvent`, 10);

  } else {
    qMilestone("odd, someone has powered down the BT adapter unexpectedly");
    m_stateMachine.postDelayedEvent(AdapterPoweredOffEvent, 100);
  }
}

void BleRcuManagerImpl::onEnteredAdapterPoweredOnState()
{
  // signal that the adapter is powered and we got the list of paired devices
  emit poweredInitialised(BleRcuManager::privateSignal());
}

QObject::connect(manager.data(), &BleRcuManager::poweredInitialised,
    this, &BleRcuControllerImpl::onInitialised,
    Qt::QueuedConnection);

void BleRcuControllerImpl::onInitialised()
{
  // tell clients that the pairing state is changed
  emit stateChanged(PairingState::Idle);
}

<bluez-q-manager>

// BluetoothRcu/daemon/source/blercu/blercumanager.cpp

class BleRcuManager : public QObject
{}

bool BleRcuManagerImpl::attachAdapter(const QDBusObjectPath &adapterPath)
{
  *bluez-proxy*
  // create a proxy to the 'org.bluez.Adapter1' interface on the adapter object
  m_adapterProxy = QSharedPointer<BluezAdapterInterface>::create(m_bluezService,
      adapterPath.path(),
      m_bluezDBusConn);

  // connect proxy to manager
  QObject::connect(m_adapterProxy.data(), &BluezAdapterInterface::discoveringChanged,
      this, &BleRcuManagerImpl::onAdapterDiscoveringChanged);
}


// BluetoothRcu/daemon/source/blercu/blercumanager_p.h

	StateMachine m_stateMachine;

BleRcuManagerImpl::BleRcuManagerImpl(const QSharedPointer<const ConfigSettings> &config,
                                     const QSharedPointer<IBleRcuDeviceFactory> &deviceFactory,
                                     const QDBusConnection &bluezBusConn,
                                     QObject *parent)


<bluez-q-controller>
// BluetoothRcu/daemon/source/blercu/blercupairingstatemachine.cpp

void BleRcuPairingStateMachine::setupStateMachine()
{
}


void BleRcuManagerImpl::onDeviceAdded(const QDBusObjectPath &path,
                                      const QVariantMap &properties)
{
  // so we now have all the params we need, create a device object to manage
  // the (RCU) device
  QSharedPointer<BleRcuDevice> device = `m_deviceFactory->create`(bdaddr, name,
      m_bluezDBusConn,
      path);

  // connect device to manager
  QObject::connect(device.data(), &BleRcuDevice::nameChanged,
      this, nameChangedFunctor);
  ...
}

QSharedPointer<BleRcuDevice> BleRcuDeviceFactory::create(const BleAddress &address,
  const QString &name,
  const QDBusConnection &bluezBusConn,
  const QDBusObjectPath &bluezObjPath,
  QObject *parent) const
{
  *ai-bluetooth-device*
  QSharedPointer<BleRcuDevice> device =

    serviceFactory is *ai-bluetooth-ipc-service*
    QSharedPointer<BleRcuDeviceImpl>::create(serviceFactory,
        bluezBusConn,
        bluezObjPath,
        address,
        name,
        parent);

  // FIXME: the registration of the device on dbus should really be handled
  // in the BleRcuController object as that handles the master list of
  // managed devices we expose to clients.
  if (!device || !device->isValid() || !device->registerOnBus(m_dbusConn))
    device.reset();

  return device;
}


<bluez-q-device>

// appinfrastructure/AppInfrastructure/BluetoothRcu/
// daemon/source/blercu/blercudevice_p.h
// daemon/source/blercu/blercudevice.cpp

QSharedPointer<BluezDeviceInterface> m_deviceProxy;

QSharedPointer<BleRcuServices> m_services;

QList<DBusAbstractAdaptor*> m_blercuAdaptors;

BleRcuDeviceImpl::BleRcuDeviceImpl(const QSharedPointer<IBleRcuServicesFactory> &servicesFactory)
{
  // initialise the dbus interface to bluez
  (!init(bluezDBusConn, bluezDBusPath))
  {
    *ai-bluez-device-proxy*
    // create a proxy to the 'org.bluez.Device1' interface on the device object
    m_deviceProxy =
      QSharedPointer<BluezDeviceInterface>::create(QStringLiteral("org.bluez"),
          bluezDBusPath.path(),
          bluezDBusConn);

    // connect to the property change notifications from the daemon
    QObject::connect(m_deviceProxy.data(), &BluezDeviceInterface::connectedChanged,
        this, &BleRcuDeviceImpl::onDeviceConnectedChanged);
    QObject::connect(m_deviceProxy.data(), &BluezDeviceInterface::pairedChanged,
        this, &BleRcuDeviceImpl::onDevicePairedChanged);
    QObject::connect(m_deviceProxy.data(), &BluezDeviceInterface::servicesResolvedChanged,
        this, &BleRcuDeviceImpl::onDeviceServicesResolvedChanged);
    QObject::connect(m_deviceProxy.data(), &BluezDeviceInterface::nameChanged,
        this, &BleRcuDeviceImpl::onDeviceNameChanged);
  }

  *ai-bluez-device*
  // create ourselves a dbus object path
  const QString objPath = 
    QString::asprintf("/com/sky/blercu/device_%02hhX_%02hhX_%02hhX_%02hhX_%02hhX_%02hhX",
        m_address[0], m_address[1], m_address[2],
        m_address[3], m_address[4], m_address[5]);

  // register this on dbus
  `m_blercuObjectPath.setPath(objPath);`

  m_blercuAdaptors.append( new BleRcuDevice1Adaptor(this, m_blercuObjectPath) );
}

bool BleRcuDeviceImpl::registerOnBus(const QDBusConnection &dbusConn)
{
  if (!dbusConn_.`registerObject`(m_blercuObjectPath.path(), this)) {
    qError("failed to register blercudevice adaptor object(s)");
    return false;
  }

  // tell all the adaptors that they're now registered on the bus, this is
  // used for property change notifications
  for (DBusAbstractAdaptor *adaptor : m_blercuAdaptors)
    adaptor->registerConnection(dbusConn);
}

// daemon/source/blercu/adaptors/blercudevice1_adaptor.h

/*
 * Adaptor class for interface com.sky.BleRcuDevice1
 */
class BleRcuDevice1Adaptor : public DBusAbstractAdaptor
{
	Q_OBJECT
	Q_CLASSINFO("D-Bus Interface", "com.sky.blercu.Device1")
	Q_CLASSINFO("D-Bus Introspection", "")
};


// daemon/source/dbus/dbusabstractadaptor.cpp

class DBusAbstractAdaptor : public QDBusAbstractAdaptor

void DBusAbstractAdaptor::registerConnection(const QDBusConnection &connection)
{
  `m_dbusConnections`.append(connection);
}


<skymw-bluez-q-test-client>

// AppInfrastructure/BluetoothRcu/client/test/source/BlueRcuProxyTest.cpp


<skymw-bluez-q-test-daemon>

// for udev
sudo apt-get install libudev-dev

~/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/test/out$ 
  /home/keitee/Qt/5.12.3/gcc_64/bin/qmake ../BleRcuTests.pro


BleRcuController(Mock)  | BleRcuController1Adaptor      | DBus | Proxy
                        | "com.sky.blercu.Controller1"
                        | OUT(Object Under Test)

// AppInfrastructure/BluetoothRcu/daemon/test/source/mck_blercucontroller.h

class MockBleRcuController : public BleRcuController
                           , public QDBusContext
{
  MOCK_METHOD1(startPairing, bool(quint8));
};


// AppInfrastructure/BluetoothRcu/daemon/test/source/tst_blercucontrolleradaptor.cpp

class BleRcuControllerAdaptorTest : public ::testing::Test
{
  public:
    void SetUp()
    {
      m_mockController = QSharedPointer<MockBleRcuController>::create();
    }
};


// Therefore, it is to test dbus interface exposed by daemon

TEST_F(BleRcuControllerAdaptorTest, testStartPairing)
{
  // check happy case
  const QList<quint8> values = { 0, 123, 255 };
  for (const quint8 &value : values) {

    // construct the request
    QDBusMessage request = QDBusMessage::createMethodCall("", m_deviceObjPath, m_interfaceName, "StartPairing");
    request << QVariant::fromValue(value);

    // expect the the controller will be called to start pairing
    // return success
    EXPECT_CALL(*m_mockController, isPairing())
      .WillOnce(::testing::Return(false));
    EXPECT_CALL(*m_mockController, startPairing(value))
      .WillOnce(::testing::Return(true));

    // check for a positive reply
    QDBusMessage reply = m_dbusConn->call(request, QDBus::BlockWithGui);
    EXPECT_EQ(reply.type(), QDBusMessage::ReplyMessage);
  }
}


<bluz-q-bluez-logging> *bluez-log-milestone*
appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/utils/logging.cpp

// to have info logging

static void messageOutput(QtMsgType type, const QMessageLogContext &context,
                          const QString &msg)
{
	if (context.category == milestone().categoryName()) {
		level = LoggingLevel::Milestone;

	} else {
		// not in the milestone category so use the qt message type
		switch (type) {
			case QtFatalMsg:    level = LoggingLevel::Fatal;    break;
			case QtCriticalMsg: level = LoggingLevel::Error;    break;
			case QtWarningMsg:  level = LoggingLevel::Warning;  break;
			case QtInfoMsg:     level = LoggingLevel::Milestone;     break;
			// case QtInfoMsg:     level = LoggingLevel::Info;     break;
			case QtDebugMsg:    level = LoggingLevel::Debug;    break;
			default:            level = LoggingLevel::Debug;    break;
		}
	}
}

18685:NDS: ^0000000141.602695 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00856 > BT adapter powered on
18687:NDS: ^0000000141.617348 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving to state Idle(0)"
18688:NDS: ^0000000141.618547 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercumanager.cpp F:onDeviceAdded L:01459 > added device 70:91:F3:22:BC:75 named "P039 SkyQ EC102" (connected: false paired: true)
18689:NDS: ^0000000141.618594 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercudevice.cpp F:name L:00878 > KT: BleRcuDeviceImpl: name  P039 SkyQ EC102
18690:NDS: ^0000000141.620675 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercudevice.cpp F:onDevicePairedChanged L:00482 > 70:91:F3:22:BC:75 paired
18691:NDS: ^0000000141.620833 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state Idle(0) to Paired(1)"
21866:NDS: ^0000000157.009252 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercudevice.cpp F:onDeviceConnectedChanged L:00456 > 70:91:F3:22:BC:75 connected
21867:NDS: ^0000000157.009296 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state Paired(1) to ResolvingServices(3)"
21886:NDS: ^0000000157.854269 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:hidrawdevicemanager.cpp F:syncHidRawDeviceMap L:00293 > hidraw device @ "/hostdev/hidraw0" with physical address "70:91:f3:22:bc:75" has been added
22356:NDS: ^0000000158.154419 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercudevice.cpp F:onDeviceServicesResolvedChanged L:00511 > 70:91:F3:22:BC:75 services resolved
22357:NDS: ^0000000158.154459 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state ResolvingServices(3) to StartingServices(8)"
22359:NDS: ^0000000158.590546 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:.  L:00000 > bluetooth rcu device info [ Universal Electronics, Inc. / Sky EC102 / hw:102.0.0.1 / fw:BL 195 / sw:7007.02.09 ]
22360:NDS: ^0000000158.791891 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state StartingServices(8) to ReadyState(9)"
22361:NDS: ^0000000158.792324 !MIL   -BLERCU       < p:00000de4 t:89cbadc0 T:no name M:blercumanager.cpp F:onDeviceReadyChanged L:01685 > device with address 70:91:F3:22:BC:75 is  ready


={============================================================================
*kt_dev_skymw_0000* skymw-audio skymw-bluez-audio-stream

<skymw-jira-q> *skymw-as* *skymw-git*

// since AS do not use gitflow
// git flow feature start NGDEV-149715_Refactor_the_current_BT_audio_implementation

git co -b NGDEV-149715_Refactor_the_current_BT_audio_implementation

NGDEV-149715: Refactor the current BT audio implementation

This commit is to refactor the current Bluetooth Audio streaming component,
which is too complicated and showed issues such as deadlock on certain cases.
The aim of refactoring is to have clear and maintanable base for further
development on future platforms and maintain other dependencies to others in
the current stack so that it can minimise changes and impact to it.

git push -n origin NGDEV-149715_Refactor_the_current_BT_audio_implementation


git co -b NGDEV-150278_Fix_to_int64_type_printf_issue_for_AS_unit_test_build

NGDEV-150278: Fix to int64 type printf issue for AS unit test build

NGDEV-149715 introduces a new code which uses int64_t and which raises a warning
when build unit tests of AS for both builds and this is flagged up an error.
This is to have portable code for the both than using # defines. 


*refs*
https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=2016&title=Qt+WebRuntime+Documentation
Bluetooth Audio: ETHAN Bluetooth AUdio Streaming Theory Of Ops.pdf

*refs*
dbusitf usage in AS
https://www.stb.bskyb.com/confluence/display/~partom1/dbusitf+usage+in+AS

BluetoothAudio

BluetoothAudio provides a pairing mechanism for devices which may stream audio
to the STB.  It exports http APIs for enabling and disabling STB visibility, and
managing incoming pairing requests.  It also provides a status websocket with
information about paired devices as well as information about a pairing request
when pairing is in progress.

The pairing process for audio devices consists of the following steps:

1. BluetoothAudio's startvisibility API is used to make the STB visible
(discoverable) and pairable

2. The user initiates a scan on their device, and when the STB is discovered
makes a pairing request "from the device to the STB"

3. When the pairing request is received by the STB, BluetoothAudio generates a
status update with details of the device MAC and name, and pairing code (if any)

4. If the pairing request should be accepted, BluetoothAudio's acceptpairing API
is used to accept the request

5. Once pairing is completed, BluetoothAudio updates its websocket status to
reflect the pairing status of the device

Device updates
BluetoothAudio encapsulates all dbusitf interactions within a "platform
interface" class PlatformItf.  This provides listener interfaces for device
updates, as well as listener interfaces for the bluez pairing agent (see below).
When device updates are received, PlatformItf calls methods on the
BluetoothAudio Controller object.

Initial bringup
Similar to RcuController, on initialisation BluetoothAudio populates its own
internal list of devices based on the dbusitf device object population.  This
process is handled by PlatformItf::PopulateStatusDb(), called early on by
Controller::exec().  Again similar to RcuController, PlatformItf registers
itself as a dbusitf device listener during construction, so by the time
PopulateStatusDb() is called it is already listening for device updates.

The pairing agent
While RcuController drives pairing requests from the STB, in the BluetoothAudio
case pairing requests originate with the user's device. Handling of this is
significantly different.

Bluez has the concept of a "pairing agent", which is essentially a DBus endpoint
that client code can register in order to take responsibility for accepting or
rejecting incoming pairing requests.  dbusitf provides this functionality as
BluetoothPairingAgent, which has its own listener interface and methods for
accepting and rejecting pairing requests.

BluetoothAudio registers a listener with BluetoothPairingAgent, and uses the
callbacks on this interface to populate its websocket with pairing request
information.


The architecture of the dbusitf code
*refs*
https://www.stb.bskyb.com/confluence/display/~partom1/The+architecture+of+the+dbusitf+code

Bluetooth media streaming
*refs*
https://www.stb.bskyb.com/confluence/display/~partom1/Bluetooth+media+streaming


<test-app>
https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=~partom1&title=The+dbusitf+test_app

 s : show bluetooth objects

:> s
1 host interface(s):
   /org/bluez/hci0
      /org/bluez/hci0 : FF:FF:FF:FF:FF:FF
      name / alias / modalias : "sky-one-box" / Sky Q 1TB Box4027 / usb:v1D6Bp0246d0530
      class : 263188
      powered : 1
      discoverable / timeout : 0 / 0
      pairable / timeout : 0 / 20
      discovering : 0
      6 uuids:
          0000110b-0000-1000-8000-00805f9b34fb : AudioSink
          00001801-0000-1000-8000-00805f9b34fb : Generic Attribute Profile
          0000110e-0000-1000-8000-00805f9b34fb : A/V_RemoteControl
          00001200-0000-1000-8000-00805f9b34fb : PnPInformation
          0000110c-0000-1000-8000-00805f9b34fb : A/V_RemoteControlTarget
          00001800-0000-1000-8000-00805f9b34fb : Generic Access Profile
2 device(s):
   /org/bluez/hci0/dev_D4_B8_FF_12_E1_A8
      /org/bluez/hci0/dev_D4_B8_FF_12_E1_A8 : D4:B8:FF:12:E1:A8 (/org/bluez/hci0)
      name / alias / modalias : P094 SkyQ EC101 / P094 SkyQ EC101 / bluetooth:v057Ap0004d0100
      icon :
      class : 0
      blocked : 0
      connected : 0
      legacy_pairing : 0
      paired : 0
      trusted : 0
      appearance : 384
      rssi : 0
      1 uuids:
          00001812-0000-1000-8000-00805f9b34fb : (unknown service ID)
   /org/bluez/hci0/dev_88_9F_6F_88_6A_7B
      /org/bluez/hci0/dev_88_9F_6F_88_6A_7B : 88:9F:6F:88:6A:7B (/org/bluez/hci0)
      name / alias / modalias : Galaxy J6 / Galaxy J6 / bluetooth:v0075p0100d0201
      icon : phone
      class : 5898764
      blocked : 0
      connected : 0
      legacy_pairing : 0
      paired : 1
      trusted : 0
      appearance : 0
      rssi : 0
      14 uuids:
          00001105-0000-1000-8000-00805f9b34fb : OBEXObjectPush
          0000110a-0000-1000-8000-00805f9b34fb : AudioSource
          0000110c-0000-1000-8000-00805f9b34fb : A/V_RemoteControlTarget
          0000110d-0000-1000-8000-00805f9b34fb : AdvancedAudioDistribution
          0000110e-0000-1000-8000-00805f9b34fb : A/V_RemoteControl
          00001112-0000-1000-8000-00805f9b34fb : HeadsetAudioGateway
          00001115-0000-1000-8000-00805f9b34fb : PANU
          00001116-0000-1000-8000-00805f9b34fb : NAP
          0000111f-0000-1000-8000-00805f9b34fb : HandsfreeAudioGateway
          0000112f-0000-1000-8000-00805f9b34fb : Phonebook Access - PSE
          00001132-0000-1000-8000-00805f9b34fb : Message Access Server
          00001200-0000-1000-8000-00805f9b34fb : PnPInformation
          00001800-0000-1000-8000-00805f9b34fb : Generic Access Profile
          00001801-0000-1000-8000-00805f9b34fb : Generic Attribute Profile
0 media endpoint(s):
0 media transport(s):
0 media player(s):


    ei : enable current host interface

// connect from a phone

// when connected from a phone

:> DEVICE object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B property "Connected" updated
:> TRANSPORT added object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0
:> PLAYER added object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Repeat" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Shuffle" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Type" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Subtype" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Status" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Name" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Track" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Position" updated
:> PLAYER object /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0 property "Position" updated


    dd : set current device to <string>
 
:> dd /org/bluez/hci0/dev_88_9F_6F_88_6A_7B
update /org/bluez/hci0/dev_D4_B8_FF_12_E1_A8 to /org/bluez/hci0/dev_88_9F_6F_88_6A_7B


    sd : show current device

:> sd
      /org/bluez/hci0/dev_88_9F_6F_88_6A_7B : 88:9F:6F:88:6A:7B (/org/bluez/hci0)
      name / alias / modalias : Galaxy J6 / Galaxy J6 / bluetooth:v0075p0100d0201
      icon : phone
      class : 5898764
      blocked : 0
      connected : 1
      legacy_pairing : 0
      paired : 1
      trusted : 0
      appearance : 0
      rssi : 0
      14 uuids:
          00001105-0000-1000-8000-00805f9b34fb : OBEXObjectPush
          0000110a-0000-1000-8000-00805f9b34fb : AudioSource
          0000110c-0000-1000-8000-00805f9b34fb : A/V_RemoteControlTarget
          0000110d-0000-1000-8000-00805f9b34fb : AdvancedAudioDistribution
          0000110e-0000-1000-8000-00805f9b34fb : A/V_RemoteControl
          00001112-0000-1000-8000-00805f9b34fb : HeadsetAudioGateway
          00001115-0000-1000-8000-00805f9b34fb : PANU
          00001116-0000-1000-8000-00805f9b34fb : NAP
          0000111f-0000-1000-8000-00805f9b34fb : HandsfreeAudioGateway
          0000112f-0000-1000-8000-00805f9b34fb : Phonebook Access - PSE
          00001132-0000-1000-8000-00805f9b34fb : Message Access Server
          00001200-0000-1000-8000-00805f9b34fb : PnPInformation
          00001800-0000-1000-8000-00805f9b34fb : Generic Access Profile
          00001801-0000-1000-8000-00805f9b34fb : Generic Attribute Profile


#ifdef ENABLE_MEDIA
  handler.addCommand("mc", "create media instance", mediaCreateCommand, &app);
  handler.addCommand("md", "destroy media instance", mediaDestroyCommand, &app);
  handler.addCommand("mp", "stop media playback", mediaStopCommand, &app);
  handler.addCommand("ms", "stream media to output file", mediaStreamCommand, NULL);
#endif /* ENABLE_MEDIA */

boolTestAppCmd(mediaCreateCommand, createMediaStreamer());
boolTestAppCmd(mediaDestroyCommand, destroyMediaStreamer());
boolTestAppCmd(mediaStopCommand, stopMediaStreamer());

<diag-logging>
NDS: ^0000000336.330585 !MIL   -AS           < p:00000df9 t:6e8c4dc0 T:no name M:AS_DMS_Writer.cpp 
  F:BluetoothA2DPTransport L:00258 > @ctx:dbusitf bluetooth_a2dp_transport.cpp(32) new a2dp transport /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0


<player-switch-protocols>

// 1. m_ptrBluetoothProtocol is enabled as long as Player runs
// 2. set m_nextProtocol and use `startStreamingFromProtocol(m_nextProtocol);`

// Components/AudioStreamer/source/AudioStreamerPlayer.cpp
void AudioStreamer::Player::run()
{
  m_ptrBluetoothProtocol = new BluetoothProtocol();

  while()
  {
    case TASK_TYPE_SET_OPERATING_MODE:
      {
        case PREFS_API_TERMINAL_OPERATING_MODE_ON:

          if( m_nextProtocol!=NULL )
          {
            AUD_LOG_INFO("PREFS_API_TERMINAL_OPERATING_MODE_ON: Starting next protocol %p", m_nextProtocol);
            `startStreamingFromProtocol(m_nextProtocol);`
            m_nextProtocol=NULL;
          }
          break;
      }

    case TASK_TYPE_STREAMING_STATE_UPDATE:
      {
        bool streamingBlocked = s_applicationLaunchPolicy->canLaunchApplication(s_appId);
        AUD_LOG_MIL("Can Launch app returned %x",streamingBlocked);
        if (streamingBlocked != m_streamingAllowed)
        {
          m_streamingAllowed = streamingBlocked;
          if( m_streamingAllowed )
          {
            `handleEnableStreaming();`
          }
        }
      }
  }

  if( m_ptrBluetoothProtocol!=NULL )
  {
    m_ptrBluetoothProtocol->disable();
    delete m_ptrBluetoothProtocol;
    m_ptrBluetoothProtocol=NULL;
  }

  if( m_ptrAirplayProtocol!=NULL )
  {
    m_ptrAirplayProtocol->disable();
    delete m_ptrAirplayProtocol;
    m_ptrAirplayProtocol=NULL;
  }
}

void AudioStreamer::Player::handleEnableStreaming()
{
  /*
   * Start MDNSD before enabling Airplay
   */
  if (m_networkAvailable )
  {

    if (configureAndStartMdnsd())
    {
      m_ptrAirplayProtocol->enable(m_webServer->getPort());
    }
    else
    {
      AUD_LOG_FATAL("Airplay is not enabled as Audiostreamer failed to start MDNSD in a container");
    }
    m_airplayEnabled = true;
  }
  else
  {
    AUD_LOG_WARNING("Airplay is Not enabled due to Network UnAvailability");
  }

  *bluetooth-audio-enable*
  m_ptrBluetoothProtocol->enable();
}

// Components/AudioStreamer/source/BluetoothProtocol.cpp

namespace AudioStreamer
{
  class BluetoothProtocol : public Protocol, public Base
  {
    BluetoothApi::Streamer*                 m_btInstance;
  };
}

*bluetooth-audio-enable*
void AudioStreamer::BluetoothProtocol::enable()
{
    AUD_LOG_MIL("Starting bluetooth");

    BluetoothApi::Streamer::createInstance();
    m_btInstance = BluetoothApi::Streamer::instance();
    m_btInstance->setMessageHandler(&s_bluetoothEventListener,this);    
    uint32_t timeout = MwServices::instance().getDevDisconnectionTimeout();
    m_btInstance->setBluetoothTimeout(timeout);
}

void AudioStreamer::BluetoothProtocol::disable()
{
  if( m_btInstance==NULL )
  {
    AUD_LOG_WARNING("Bluetooth already stopped, nothing to stop");
    return;
  }
  AUD_LOG_MIL("Stopping bluetooth");
  *bluetooth-audio-stop*
  m_btInstance->stop();
  m_wa_stopSent=true;
  BluetoothApi::Streamer::destroyInstance();
  m_btInstance=NULL;
}

void AudioStreamer::BluetoothProtocol::getAudioData(uint32_t sampleTime, uint64_t hostTime, void *buffer, size_t bufferLen)
{
}


int AudioStreamer::Player::startUp()
{
  //start check launch policy
  Task t;
  t.type=TASK_TYPE_STREAMING_STATE_UPDATE;
}

int AUDIO_STREAMER::Proxy::StartUp()
{
  return AudioStreamer::Player::instance().startUp();
}


// switch between protocols

void AudioStreamer::Player::handleProtocolMessage(Task &task)
{
  switch(msg->type)
  {
    case Protocol::MESSAGE_TYPE_SESSION_INITIALIZE:
      {
        // stop current protocol first that session has and then save it for next

        AUD_LOG_INFO("Stop protocol %p first",m_session.getProtocol());
        m_nextProtocol=msg->protocol;
        handleStopStreaming(); // calls m_protocol->stop();
      }

    case Protocol::MESSAGE_TYPE_SESSION_FINALIZE_BEGIN:

  }
}

// Components/AudioStreamer/source/AirPlayProtocol.cpp

bool AudioStreamer::AirPlayProtocol::sessionInitialize()
{
  Message msg;
  postProtocolMessage(MESSAGE_TYPE_SESSION_INITIALIZE, msg);
  AUD_LOG_EXIT("AudioStreamer::AirPlayProtocol::sessionInitialize");
  return msg.success;
}

// Components/AudioStreamer/source/BluetoothProtocol.cpp

void AudioStreamer::BluetoothProtocol::bluetoothEventListener(const BluetoothApi::Streamer::Message& message)
{
  case BluetoothApi::Streamer::MESSAGE_TYPE_SESSION_START:
    {
      AudioThread::Format atf = s_convertBtFormat(message.audioFormat);            
      if( !AudioThread::validateFormat(atf) )
      {
        AUD_LOG_WARNING("Cannot validate audio format");
        break;
      }

      m_audioFormat=atf;
      AUD_LOG_INFO("AudioFormat: sampleSize %d channels %d sampleRate %d", m_audioFormat.sampleSizeBytes, m_audioFormat.channels, m_audioFormat.sampleRate);

      Message msg;
      postProtocolMessage(MESSAGE_TYPE_SESSION_INITIALIZE, msg);

      break;
    }
}

void AudioStreamer::Player::startStreamingFromProtocol(Protocol *protocol)
{
  if( !m_audioThread.threadStart() ) { AUD_LOG_FATAL("Failed to start audio thread"); }
  m_session.start(protocol);
}

void AudioStreamer::Player::Session::`start`(Protocol *protocol)
{
  m_protocol=protocol;
  AUD_LOG_MIL("Session::start protocol %p type %d", m_protocol, m_protocol->getProtocolType());
  m_playerStatus.protocol=protocol->getProtocolType();
  setState(AUDIO_STREAMER::STREAMING);
}


<bluetooth-streamer> *bluetooth-audio-enable*

// ethan-as-source/Components/AudioStreamer/source/BluetoothProtocol.cpp

BluetoothApi::Streamer*                 m_btInstance;

void AudioStreamer::BluetoothProtocol::s_bluetoothEventListener
  (const BluetoothApi::Streamer::Message& message, void *user);

void AudioStreamer::BluetoothProtocol::enable()
{
  AUD_LOG_MIL("Starting bluetooth");
  `BluetoothApi::Streamer::createInstance();`
  m_btInstance = BluetoothApi::Streamer::instance();

  // it is actually BluetoothMediaStreamer
  // register callback to `BluetoothMediaStreamer`
  `m_btInstance->setMessageHandler(&s_bluetoothEventListener,this);`
}

// Components/Bluetooth/reader/include/BluetoothStreamer.h
namespace BluetoothApi
{
  class Streamer
  {
  };
}


// Components/Bluetooth/reader/source/bluetooth_media.h
// Components/Bluetooth/reader/source/bluetooth_media.cpp

class BluetoothMediaStreamer : 
  public BluetoothApi::Streamer, 
  public BluetoothA2DPTransportListener, public TimerListener
{
};


/** @brief Creates the object which manages the bluetooth streamer
 *
 * Creates internal state for managing the bluetooth streamer. If already
 * created, this function does nothing. Thread safe.
 */
void BluetoothApi::Streamer::createInstance()
{
  pthread_rwlock_wrlock(&singleton_lock);
  if (!singleton) singleton = `new BluetoothMediaStreamer();`
  pthread_rwlock_unlock(&singleton_lock);
}


*dbus-device-added*

F:onPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(78) BluetoothDeviceListener::onPropertyChange received connection status Connected
F:onDeviceState L:00258 > @ctx:dbusitf bluetooth_media.cpp(366) KT: BluetoothMediaStreamer::onDeviceState received for 
  path /org/bluez/hci0/dev_D4_B8_FF_66_D6_25 connection status 1

*dbus-transport-added* which fire up listener chain

// Components/Bluetooth/dbusitf/source/bluez_parser.cpp
// Handle interface addition, either from signals or from GetManagedObjects responses

class BluezInterfaceAdditionAdapter : public BluezParserAdapter
{
  case BluezParserEvent::PROPERTYBAG_END:
    if (m_listener && m_object) m_listener->onBluezObjectAdded(m_interface, *m_object);
}

// Components/Bluetooth/dbusitf/source/bluetooth.cpp

std::vector<BluezProxy*> m_bluez_proxies;

/**
 * @brief BluezParser callback.
 * Not for external use.
 */
void Bluetooth::onBluezObjectAdded(const std::string &interface, const BluezObject &obj)
{
  Locker lock(&m_bus_lock);
  BluezProxy *proxy = NULL;
  if (lookupProxy(interface, &proxy)) `proxy->add(obj);`
  else AS_LOG_ERROR("no proxy for %s %s", interface.c_str(), obj.getPath().c_str());
}

*dbus-property-update*
void Bluetooth::onBluezProperty(const std::string &object_path, const std::string &interface, const DBusProperty &property)
{
  Locker lock(&m_bus_lock);
  BluezProxy *proxy = NULL;
  if (lookupProxy(interface, &proxy)) {
    if (!`proxy->update`(object_path, property))
  }
}

void BluetoothMediaTransport::add(const BluezObject &object)
{
  BluezObject o = object;
  o += m_prototype_object;
  BluezProxy::add(o);
}

/**
 * @brief Add a new BluezObject to the proxy
 * @param object reference to the BluezObject to add
 */

#define notify(_what) do { \
    std::vector<BluezProxyListener*> listeners; \
    { \
        Locker lock(&m_listener_lock); \
        listeners = m_listeners; \
    } \
    for (std::vector<BluezProxyListener*>::iterator it = listeners.begin(); it != listeners.end(); ++it) if (*it) (*it)->_what; \
} while(0)

void BluezProxy::add(const BluezObject &object)
{
  /* Adding a duplicated object is probably a sign that bluetoothd restarted
   * without cleanly shutting down first.
   * Since we'd like to keep our cached information up-to-date, we need to replace
   * our BluezObject with the new one.
   * And since we'd like any client code to be able to do required magic on object
   * re-registration, generate a fake "removed" event before re-adding.
   */
  if (lookup(object.getPath())) {
    drop(object.getPath());
  }

  *notify*
  `if (addObject(object)) notify(onObjectAdded(object.getPath()));`
}

class MediaTransportListener : public BluezProxyListener
{
  public:
    MediaTransportListener(BluetoothMediaStreamer *streamer) : m_streamer(streamer) {};

  private:
    void onObjectAdded(const std::string &path) {
      if (m_streamer) `m_streamer->onTransportAdded(path);`
    };

    void onPropertyChange(const std::string &path, const DBusProperty &property) {
      if (property.getName() == BLUEZ_MEDIATRANSPORT_PROP_STATE) {
        if (m_streamer) m_streamer->`onTransportState`(path, property.getValue().asString());
      }
    };

    BluetoothMediaStreamer *m_streamer;
};


class BluetoothMediaStreamer : 
  public BluetoothApi::Streamer, 
  `public BluetoothA2DPTransportListener`, 
  public TimerListener
{
  BluetoothMediaTransport *m_transport;
};

/** @brief Constructs the BluetoothMediaStreamer object.
 *
 * Creates locks used for thread safety. Registers for Bluez MediaPlayer events
 * and starts a thread to handle Bluez events. Blocks until the media thread is
 * running.
 */
BluetoothMediaStreamer::BluetoothMediaStreamer()
{
  // `register to dbus`

  std::vector<std::string> endpoints = media_endpoint->getObjectPaths();

  // BluetoothMediaTransport *m_transport;

  m_transport = Bluetooth::getInstance()->getMediaTransports();
  if (m_transport) {
    `m_transport_listener = new MediaTransportListener(this);`
    if (m_transport_listener) m_transport->addListener(m_transport_listener);
    else AS_LOG_ERROR("failed to create MediaTransportListener");
  } else {
    AS_LOG_ERROR("failed to obtain BluetoothMediaTransport");
  }
}


*dbus-transport-added*
/** @brief Handles Bluez MediaTransport1 addition
 */
void BluetoothMediaStreamer::onTransportAdded(const std::string &path)
{
  m_evq.push(BTStreamerMessage
      (BTStreamerMessage::MSG_TYPE_TRANSPORT_ADDED, path));
}


F:onTransportAdded L:00258 > @ctx:dbusitf bluetooth_media.cpp(293) 
  KT: BluetoothMediaStreamer::onTransportAdded: path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0

// thread

void BluetoothMediaStreamer::eventHandler(void)
{
  case BTStreamerMessage::MSG_TYPE_TRANSPORT_ADDED:
    // Create a new session for this transport
    if (`createSession(m.object_path)`) 
      current_transport = m.object_path;
    break;
}


// Components/Bluetooth/reader/source/bluetooth_media.h

class PlaybackSession {
  public:
    PlaybackSession(
        const std::string &bluez_xport_path, 
        BluetoothA2DPTransportListener *listener)

      : xport(NULL)
        , xport_listener(listener)
        , halt_timer(TIMER_ID_UNSET) 
        {
          xport = `new BluetoothA2DPTransport(bluez_xport_path);`
          if (xport) xport->addListener(xport_listener);
        };
};

bool BluetoothMediaStreamer::createSession(const std::string &xport_path)
{
  PlaybackSession *session = findSessionByXport(xport_path);
  if (!session) {
    `session = new PlaybackSession(xport_path, this);`
  }
  return false;
}


*dbus-property-update*

/** @brief Handles Bluez MediaTransport1 state change
 */
void BluetoothMediaStreamer::onTransportState(const std::string &path, const std::string &state)
{
  m_evq.push(BTStreamerMessage(BTStreamerMessage::MSG_TYPE_TRANSPORT_STATE, path));
}

void BluetoothMediaStreamer::eventHandler(void)
{
  case BTStreamerMessage::MSG_TYPE_TRANSPORT_STATE:
    {
      PlaybackSession *session = findSessionByXport(m.object_path);
      if (session) {
        std::string state;

        // get state from bluez dbuf
        // #define BLUEZ_MEDIATRANSPORT_STATE_ACTIVE           "active"
        // bool BluetoothMediaTransport::getState(const std::string &object_path, std::string &state) const
        
        if (m_transport->getState(session->xport->m_transport_path, state))
          session->xport->`update`(state);
      }
    }
    break;
}


// Components/Bluetooth/reader/source/bluetooth_a2dp_transport.cpp

BluetoothA2DPTransport::BluetoothA2DPTransport(const std::string &transport_path)
    : m_transport_path(transport_path)
    , m_fsm(NULL)
    , m_reader(NULL)
    , m_got_media_format(false)
{
  pthread_mutex_init(&m_listener_lock, NULL);
  *create-media-fsm*
  `m_fsm = new BluetoothMediaFsm(transport_path);`
  if (m_fsm) {
    `m_fsm->addListener(this);`
    AS_LOG_MIL("new a2dp transport %s", transport_path.c_str());
  } else AS_LOG_ERROR("failed to create fsm instance");
}


*dbus-property-update* drive fsm

void BluetoothA2DPTransport::update(const std::string &u)
{
  if (m_fsm) {
    BluetoothMediaFsm::FsmEvent ev;
    if (u == BLUEZ_MEDIATRANSPORT_STATE_IDLE)          ev = BluetoothMediaFsm::FSM_EVENT_TRANSPORT_IDLE;
    else if (u == BLUEZ_MEDIATRANSPORT_STATE_PENDING)  ev = BluetoothMediaFsm::FSM_EVENT_TRANSPORT_PENDING;
    `else if (u == BLUEZ_MEDIATRANSPORT_STATE_ACTIVE)   ev = BluetoothMediaFsm::FSM_EVENT_TRANSPORT_ACTIVE;`
    else {
      AS_LOG_ERROR("unhandled state string %s", u.c_str());
      return; // early, we don't want to inject the event if we don't map it
    }
    m_fsm->injectEvent(ev);
  }
}


// Components/Bluetooth/reader/source/bluetooth_media_fsm.h
*use-thread*
ret = pthread_create(&m_thread, NULL, threadFn, (void*)this);

class BluetoothMediaFsm
{
public:
    enum FsmEvent {
        FSM_EVENT_TRANSPORT_IDLE,
        FSM_EVENT_TRANSPORT_PENDING,
        FSM_EVENT_TRANSPORT_ACTIVE,
        FSM_EVENT_TRANSPORT_DEAD,
        FSM_EVENT_QUIT,
    };

    BluetoothMediaFsm(std::string transport_path);
    ~BluetoothMediaFsm();

    bool addListener(BluetoothMediaFsmListener *listener);
    bool removeListener(BluetoothMediaFsmListener *listener);

    bool getFd(int &fd, uint16_t &wmtu, uint16_t &rmtu) {
        if (m_fd < 0) return false;
        fd = m_fd;
        wmtu = m_wmtu;
        rmtu = m_rmtu;
        return true;
    };

    BluetoothMediaTransport *m_transport;
};

void BluetoothMediaFsm::run()
{
  bool running = true;

  // obtain BT proxy handles
  if (!m_transport && !m_endpoint) {
    *get-bluetooth-singleton*
    Bluetooth *bt = Bluetooth::getInstance();
    DBusProperty property("");
    if (bt) {
      m_endpoint = bt->getMediaEndpoints();
      m_transport = bt->getMediaTransports();
    }
  }

  *dbus-transport-aquire-fd*
  case FSM_EVENT_TRANSPORT_PENDING:
    if (!acquireTransport()) {
    }

  *dbus-property-update* *calls-transport-up*
  case FSM_EVENT_TRANSPORT_ACTIVE:
    setState(Connected);
}

bool BluetoothMediaFsm::acquireTransport()
{
  m_transport->tryAcquire(m_transport_path, m_fd, m_rmtu, m_wmtu);
}


/**
 * @brief Attempt to acquire a file descriptor for a media transport.
 * This relies on the transport being in the pending state, the call will fail
 * if the transport is idle.
 *
 * @param object_path the bluez entity path of the transport
 *
 * @param fd reference to an integer to be assigned with the tranport file
 * descriptor on success 
 *
 * @param readMTU reference to an integer to be assigned with the transport
 * read MTU on success 
 *
 * @param writeMTU reference to an integer to be assigned with the transport
 * write MTU on success 
 *
 * @return true on success, false otherwise
 */

bool BluetoothMediaTransport::tryAcquire
  (const std::string &object_path, int &fd, uint16_t &readMTU, uint16_t &writeMTU)
{
  if (!lookup(object_path)) {
    AS_LOG_ERROR("no such path %s", object_path.c_str());
    return false;
  }

  bool ret = false;
  DBusMessage *response = NULL;
  DBusMessage *msg = 
    dbus_message_new_method_call("org.bluez", object_path.c_str(), 
        "org.bluez.MediaTransport1", "TryAcquire");

  if (msg) {
    if (blockingSend(msg, &response)) {
      int fdesc;
      uint16_t rmtu, wmtu;
      DBusError error;
      dbus_error_init(&error);
      if (!dbus_message_get_args(response, &error, DBUS_TYPE_UNIX_FD, &fdesc, DBUS_TYPE_UINT16, &rmtu, DBUS_TYPE_UINT16, &wmtu, DBUS_TYPE_INVALID)) {
        AS_LOG_ERROR("failed to parse TryAcquire response: %s", error.message);
        dbus_error_free(&error);
      } else {

        `fd = fdesc;`

        readMTU = rmtu;
        writeMTU = wmtu;
        ret = true;
      }
    } else {
      AS_LOG_ERROR("dbus send failed");
      ret = false;
    }
    dbus_message_unref(msg);
    if (response) dbus_message_unref(response);
  } else AS_LOG_ERROR("failed to create dbus message");
  return ret;
}


*dbus-property-update* *dbus-transport-aquire-read-fd*

void BluetoothMediaFsm::setState(BluetoothMediaFsmState s)
{
  AS_LOG_MIL("%s -> %s", fsmStateString(m_state), fsmStateString(s));
  if (s != m_state) {
    if (s == Connected) notify(onTransportUp(true));
    else if (s == Disconnected) notify(onTransportUp(false));
  }
  m_state = s;
}

void BluetoothA2DPTransport::transportUp()
{
  if (!m_reader) {
    int fd;
    uint16_t wmtu, rmtu;
    a2dp_sbc_t config;
    if (`m_fsm->getFd`(fd, wmtu, rmtu) && m_fsm->getConfig(config)) {
      `m_reader = new BluetoothMediaReader(fd, config);`
      if (m_reader) {
        `m_reader->addListener(this);`
      } else AS_LOG_ERROR("failed to instantiate media reader");
    } else AS_LOG_ERROR("failed to obtain transport fd and config");
  } else {
    if (m_got_media_format) notify(onMediaTransportUp(this, m_format, m_samplerate, m_channels));
    else {
      /* stale reader, create a new one */
      delete m_reader;
      m_reader = NULL;
      transportUp();
    }
  }
}


// Components/Bluetooth/reader/source/bluetooth_media_reader.cpp

BluetoothMediaReader::BluetoothMediaReader(int fd, a2dp_sbc_t &config)
{
  *use-thread*
  ret = pthread_create(&m_thread, &attr, readerThreadFn, this);
}


*dbus-transport-aquire-read-ready*
ssize_t BluetoothMediaReader::decode(const uint8_t *data, int sz)
{
  if (decoded_len > 0) {
    `notify(onBufferReady((char*)m_buf, decoded_len, m_sample));`
    return offset + sizeof(struct rtp_header) + sizeof(*payload);
  }
}

void BluetoothA2DPTransport::onBufferReady(char *buffer, size_t nbytes, size_t sampleno)
{
  notify(onBufferReady(this, buffer, nbytes, sampleno));
}

void BluetoothMediaStreamer::onBufferReady(BluetoothA2DPTransport *xport, void *buffer, size_t nbytes, size_t samplenum)
{
  // Copy buffer data; we'll release it later when the player app has finished with it

  `char *copy = new char[nbytes];`
  if (copy) {

    *use-memcpy*
    memcpy(copy, buffer, nbytes);

    m_evq.push(
        BTStreamerMessage(BTStreamerMessage::MSG_TYPE_MEDIA_BUFFER_READY, 
          xport, 
          AudioBuffer(copy, nbytes, samplenum))
        );
  }
}


*use-thread*
void BluetoothMediaStreamer::eventHandler(void)
{
  case BTStreamerMessage::MSG_TYPE_MEDIA_BUFFER_READY:
    if (sessionIsCurrent(session) && sessionIsActive(session)) 
      sendBufferFilled(m.audio_buffer);
}

void BluetoothMediaStreamer::sendBufferFilled(AudioBuffer &buf)
{
  if (buf.isValid()) {
    Message msg;
    msg.type = MESSAGE_TYPE_BUFFER_FILLED;
    msg.buffer = buf.buffer;
    msg.bufferLevel = buf.nbytes;
    msg.sampleNumber = buf.samplenum;
    sendMessage(msg);
  }
}


*send-message-back*
// actually a call
void BluetoothMediaStreamer::sendMessage(Message &m)
{
    Locker lock(&m_handler_lock);
    m_handler(m, m_handler_arg);
}


// Components/Bluetooth/reader/include/BluetoothStreamer.h

namespace BluetoothApi
{
  class Streamer;

  typedef enum _MessageType {} MessageType;
};

// registered to BluetoothMediaStreamer
// BluetoothMediaStreamer
// `m_btInstance->setMessageHandler(&s_bluetoothEventListener,this);`

// Components/AudioStreamer/source/BluetoothProtocol.cpp

void AudioStreamer::BluetoothProtocol::
  `bluetoothEventListener`(const BluetoothApi::Streamer::Message& message)


// Components/AudioStreamer/source/AudioBuffer.h

*use-pointers-and-no-copy*

`AudioBuffer                             m_audioBuffer;`

void AudioStreamer::BluetoothProtocol::`bluetoothEventListener`
  (const BluetoothApi::Streamer::Message& message)
{
  switch(message.type)
  {
    case BluetoothApi::Streamer::MESSAGE_TYPE_BUFFER_FILLED:
      {
        Guard lock(m_audBufferSync);

        //accept data
        size_t bufferLevelBytes = 
          m_audioBuffer.add(message.buffer, message.bufferLevel, message.sampleNumber);
      }
  }
}

class AudioBuffer
{
public:
    struct Packet
    {
        Packet(void *buffer, size_t bufferSize, size_t sampleNumber) 
          : start(buffer), startSample(sampleNumber), size(bufferSize), used(0) {}

        void *start;
        size_t startSample;
        size_t size;
        size_t used;
    };
public:
    AudioBuffer();
    ~AudioBuffer();
    
    // add and popFront returns the total buffersize in bytes held by the audio buffer after the operation
    size_t  add(void *buffer, size_t bufferSize, size_t sampleNumber);

private:
    list<Packet>    m_packets;
    volatile size_t m_bufferLevel;
};

size_t AudioStreamer::AudioBuffer::add(void *buffer, size_t bufferSize, size_t sampleNumber)
{
  AUD_LOG_ENTRY("AudioStreamer::AudioBuffer::add");
  Guard lock(m_mutex);
  AUD_LOG_INFO("Adding buffer %p size %u", buffer, bufferSize);
  m_bufferLevel += bufferSize;
  m_packets.push_back(Packet(buffer, bufferSize, sampleNumber));
  //It's only expected the first packet will have used up any data
  AUD_LOG_EXIT("AudioStreamer::AudioBuffer::add");
  return m_bufferLevel-m_packets.front().used;
}


*dbus-flows*
F:onPlayerAdded L:00258 > @ctx:dbusitf bluetooth_media.cpp(318) 
  KT: BluetoothMediaStreamer::onPlayerAdded: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0

F:findSessionByPlayer L:00258 > @ctx:dbusitf bluetooth_media.cpp(1195) 
  KT: BluetoothMediaStreamer::findSessionByPlayer: 
  player_path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, xport_path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0

F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(337) 
  KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Status

F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(337) 
  KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Track

F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(337) 
  KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Position

F:onTransportState L:00258 > @ctx:dbusitf bluetooth_media.cpp(302) 
  KT: BluetoothMediaStreamer::onTransportState: path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0, state pending

F:onTransportState L:00258 > @ctx:dbusitf bluetooth_media.cpp(302) 
  KT: BluetoothMediaStreamer::onTransportState: path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0, state active


F:decode L:00258 > @ctx:dbusitf bluetooth_media_reader.cpp(400) KT: onBufferReady(decoded_len 2560, samples 10240
F:readMediaFd L:00258 > @ctx:dbusitf bluetooth_media_reader.cpp(156) KT: decoded 608 bytes
F:findSessionByXport L:00258 > @ctx:dbusitf bluetooth_media.cpp(1174) KT: BluetoothMediaStreamer::findSessionByXport: found path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0, size 1
F:add L:00258 > @ctx:fallback AudioBuffer.cpp(52) Adding buffer 0x7a122788 size 2560


// timeout that comes from config
F:MwServices L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL MwServices.cpp(203) 
  AudioStreamer Bluetooth device inactivity timeout is 300 sec


*dbus-proxies*

// Components/Bluetooth/dbusitf/include/bluetooth.h
// 
// The Bluetooth singleton class is the toplevel object for accessing the
// bluetooth stack. It provides a set of proxy classes mirroring objects held by
// Bluez's bluetoothd.

class Bluetooth
    : public IDBusTransportListener
    , public BluezParserListener
{
  public:
    static Bluetooth *getInstance();

    // returns a heap-allocated pointer with the same lifetime 
    // as the Bluetooth object itself
    BluetoothMediaTransport *getMediaTransports();
};

Bluetooth::Bluetooth()
    : m_bus_connection(NULL)
    , m_bus_transport(NULL)
{
  pthread_mutex_init(&m_bus_lock, NULL);
  pthread_mutex_init(&m_msghdlr_lock, NULL);

  // use system bus and "com.sky.as2bluez"

  if (connectToBus()) {

    // DBusTransport handles dbus bindings
    m_bus_transport = new DBusTransport(m_bus_connection, this);

    if (m_bus_transport) {

      // add a proxy to m_bluez_proxies and register interest to dbus
      
      // #define BLUEZ_ADAPTER_INTERFACE                     "org.bluez.Adapter1"
      if (!initProxy("BluetoothHCI", new BluetoothHCI(m_bus_transport)))

      // #define BLUEZ_DEVICE_INTERFACE                      "org.bluez.Device1"
      if (!initProxy("BluetoothDevice", new BluetoothDevice(m_bus_transport)))

      // #define BLUEZ_MEDIA_INTERFACE                       "org.bluez.Media1"
      if (!initProxy("MediaEndpoint", new BluetoothMediaEndpoint(m_bus_transport)))

      // #define `BLUEZ_MEDIATRANSPORT_INTERFACE`             "org.bluez.MediaTransport1"
      if (!initProxy("BluetoothMediaTransport",
            `new BluetoothMediaTransport`(m_bus_transport)))

      // #define BLUEZ_MEDIAPLAYER_INTERFACE                 "org.bluez.MediaPlayer1"
      if (!initProxy("BluetoothMediaPlayer", new BluetoothMediaPlayer(m_bus_transport)))

      // #define BLUEZ_AGENT_MANAGER_INTERFACE               "org.bluez.AgentManager1"
      if (!initProxy("BluetoothPairingAgent", new BluetoothPairingAgent(m_bus_transport)))

      if (!addBusMatch(BUS_MATCH_NAME_OWNER_CHANGED)) AS_LOG_ERROR("failed to add NameOwnerChanged bus match");
      if (!addBusMatch(BUS_MATCH_INTERFACES_ADDED)) AS_LOG_ERROR("failed to add InterfacesAdded bus match");
      if (!addBusMatch(BUS_MATCH_INTERFACES_REMOVED)) AS_LOG_ERROR("failed to add InterfacesRemoved bus match");

    } else AS_LOG_ERROR("failed to allocate dbus transport");
  } else AS_LOG_ERROR("failed to initialise dbus connection");
}

/**
 * @brief Obtain a pointer to the media transport proxy
 *
 * This method will always return a valid pointer with the same lifetime
   as the Bluetooth singleton.
 */
BluetoothMediaTransport *Bluetooth::getMediaTransports()
{
  if (lookupProxy(`BLUEZ_MEDIATRANSPORT_INTERFACE`, &proxy)) {
    return static_cast<BluetoothMediaTransport*>(proxy);
}


/**
 * @class BluetoothMediaTransport
 *
 * The BluetoothMediaTransport class is a proxy for bluez entities exposing
 * the org.bluez.MediaTransport1 interface.
 */

class BluetoothMediaTransport : public BluezProxy {
};


// Components/Bluetooth/dbusitf/include/bluez_proxy.h

class BluezProxy
{
  public:
    bool addListener(BluezProxyListener *listener);
};


<stream-audio-as-access>

// ethan-as-source/Components/AS/Services/Controllers/BTAudioController/include/AS_BTAUDIO_ControllerImplementation.h

ControllerImplementation(AS_WORKER::Environment *env, const char *deviceName = nullptr,
    uint32_t           maxPaired = 12 // Default max 12 paired, 0 = no limit
    )
{
  pthread_mutexattr_init   (&(m_dataLockAttr));
  pthread_mutexattr_settype(&(m_dataLockAttr),PTHREAD_MUTEX_RECURSIVE);

  pthread_mutex_init       (&(m_dataLock),&(m_dataLockAttr));

  // Create event queue
  m_queue        = env->CreateQueue();

  // TODO: There is no further use for the environment after queue is created. There is little point in storing the pointer in the object and delete later.
  // Hence delete the environment. Revisit for a better implementation later. Not deleting here will cause a leak on STB, there is no impact on utests and hence will not be caught using valgrind.
  delete env;

  `m_platformItf  = new AS_BTAUDIO::PlatformItf( deviceName );`

  `m_platformItf->BindController(this);`

  m_btaudioControllerThread = new AS_DMS::Thread( this, "AS_BTAUDIO_CTL" );
}

// Components/AS/Services/Controllers/BTAudioController/source/AS_BTAUDIO_PlatformItf.cpp

class AS_BTAUDIO::PlatformItfListener :
    public BluetoothPairingAgentListener ,
    public BluezProxyListener;

PlatformItf::PlatformItf(const char *platformDeviceName,
                         const char *bluezRoot,
                         bool active) : m_currentHci("")
{
  m_bluezPathRoot = bluezRoot;
  m_active        = active;
  m_platformDeviceName = platformDeviceName;

  `m_bluetooth = Bluetooth::getInstance();`
  m_pairingAgent = m_bluetooth->getPairingAgent();
  std::vector<std::string> hciNames = m_bluetooth->getHostInterfaces()->getObjectPaths();
}

m_bluetooth->getMediaEndpoints()->enableEndpoints();

// adapter
m_bluetooth->getHostInterfaces()->getAlias( m_currentHci, bluetoothIdStd ) );

m_bluetooth->getDevices()->getPaired(path, isPaired);

m_pairingAgent = m_bluetooth->getPairingAgent();
m_pairingAgent->setListener(m_listener);
m_pairingAgent->pairingResponse(addr, accepted);

// add listener to BTDevice
m_bluetooth->getDevices()->addListener(m_listener);


// device connect / disconnet comes from AS

void PlatformItf::onPropertyChange(const std::string &path, const DBusProperty &property)
{
  AS_LOG_ENTRY("%s() entry: path=%s property = %s",
      __func__,path.c_str(),property.getName().c_str());

  // Note code assumes a direct mapping between device path and device address
  if (m_controller && property.getName() == BLUEZ_DEVICE_PROP_CONNECTED)
  {
    AS::string bdaddr,asPath;
    bool    connected = property.getValue().asBool();

    asPath.assign(path.c_str());
    bdaddr = Util::PathToBdaddr(asPath);

    AS_LOG_INFO("Controller bound, passing on connection state %d",(int)connected);
    m_controller->ProcessConnectionState(bdaddr,connected);
  }

  AS_LOG_EXIT("%s() exit",__func__);
}

ethan-as-source/Components/AS/Services/Controllers/BTAudioController/source/AS_BTAUDIO_ControllerImplementation.cpp

void ControllerImplementation::ProcessConnectionState(AS::string bdaddr,
                                        bool       connected)
{
  AS_LOG_ENTRY("%s() bdaddr=%s,connected=%d",
      __func__,bdaddr.c_str(),(int)connected);

  ControllerMessage *msg = new ControllerMessage(ControllerMessage::ConnectionState);

  msg->m_bdaddr    = bdaddr;
  msg->m_connected = connected;

  // Send ptr, delete upon reception
  m_queue->SendPayload(&(msg),sizeof(msg));

  AS_LOG_EXIT("%s() exit",__func__);
}


<when-change-track>
ag "MSG_TYPE|title:|onPlayer"

!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(360) KT::onPlayerChanged: state stopped
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(709) KT::MSG_TYPE_PLAYER_STATE
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(719) KT::MSG_TYPE_FAKE_STATE
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(728) KT::MSG_TYPE_PLAYER_STATE: send player state
!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(340) KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Position

!MIL   -AS           < p:00000e11 t:3ba46dc0 T:AUS_AudioThread M:AS_DMS_Writer.cpp F:handleFusionPlayerSessionDestroy L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL AudioStreamerPlayer.cpp(822) Deleting Audiostreamer Fusion player session
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(693) KT::MSG_TYPE_PLAYER_POSITION, update POS
!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(340) KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Position

!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(703) KT::MSG_TYPE_PLAYER_POSITION, same POS
!MIL   -AS           < p:00000e11 t:3bc4ddc0 T:AUS_Player M:AS_DMS_Writer.cpp F:printMetadata L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL AudioStreamerPlayer.cpp(2350) title:    
!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(340) KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Status

!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(360) KT::onPlayerChanged: state playing
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(709) KT::MSG_TYPE_PLAYER_STATE
!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(719) KT::MSG_TYPE_FAKE_STATE

F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(913) KT::loop: sendSessionStartMessage: stop bringup_timer, start refresh_timer
F:sendSessionStart L:00258 > @ctx:dbusitf bluetooth_media.cpp(987) KT: BluetoothMediaStreamer::sendSessionStart: stop disc timer from previous session
F:stopDisconnectTimer L:00258 > @ctx:dbusitf bluetooth_media.cpp(1439) Device disconnection timer stopped for device /org/bluez/hci0/dev_88_9F_6F_88_6A_7B

!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(340) KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Track

!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(674) KT::MSG_TYPE_PLAYER_METADATA, update TRACK
!MIL   -AS           < p:00000e11 t:328fedc0 T:no name M:AS_DMS_Writer.cpp F:onPlayerPropertyChange L:00258 > @ctx:dbusitf bluetooth_media.cpp(340) KT: BluetoothMediaStreamer::onPlayerChanged: 
  path /org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0, property Position

!MIL   -AS           < p:00000e11 t:31efedc0 T:no name M:AS_DMS_Writer.cpp F:eventHandler L:00258 > @ctx:dbusitf bluetooth_media.cpp(693) KT::MSG_TYPE_PLAYER_POSITION, update POS
!MIL   -AS           < p:00000e11 t:75407dc0 T:PLAYER_EVENT M:AS_DMS_Writer.cpp F:handlePlayerEventNeedData L:00270 > @ctx:fallback AudioThread.cpp(87) calling onPlayerNeedData
!ERROR -AS           < p:00000e11 t:75407dc0 T:PLAYER_EVENT M:AS_DMS_Writer.cpp F:onPlayerNeedData L:00254 > @ctx:fallback AudioThread.cpp(589) onPlayerNeedData
!ERROR -AS           < p:00000e11 t:75407dc0 T:PLAYER_EVENT M:AS_DMS_Writer.cpp F:onPlayerNeedData L:00254 > @ctx:fallback AudioThread.cpp(593) raising Need Data
!MIL   -AS           < p:00000e11 t:3bc4ddc0 T:AUS_Player M:AS_DMS_Writer.cpp F:printMetadata L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL AudioStreamerPlayer.cpp(2350) title:    Track 2


={============================================================================
*kt_dev_skymw_0000* skymw-android

1. android studio
*refs*
https://developer.android.com/studio/install

2. adb, Android Debug Bridge

3. ninja-build, to build from android studio
Ninja is a small build system with a focus on speed. It differs from other
build systems in two major respects: it is designed to have its input files
generated by a higher-level build system, and it is designed to run builds as
fast as possible.

4. qt.


<skymw-android-doc>

https://developer.android.com/reference
https://developer.android.com/reference/android/app/Activity.html


={============================================================================
*kt_dev_skymw_0000* skymw-android-service

https://developer.android.com/guide/components/services.html

A Service is an application component that can perform long-running operations
in the background, and it doesn't provide a user interface. Another application
component can start a service, and it continues to run in the background even if
the user switches to another application. Additionally, a component can bind to
a service to interact with it and even perform interprocess communication (IPC).
For example, a service can handle network transactions, play music, perform file
I/O, or interact with a content provider, all from the background.

Bound

A service is bound when an application component binds to it by calling
bindService(). A bound service offers a client-server interface that allows
components to interact with the service, send requests, receive results, and
even do so across processes with interprocess communication (IPC). A bound
service runs only as long as another application component is bound to it.
Multiple components can bind to the service at once, but when all of them
unbind, the service is destroyed.


https://developer.android.com/guide/components/bound-services.html#Binder

Creating a bound service

When creating a service that provides binding, you must provide an IBinder that
provides the programming interface that clients can use to interact with the
service. There are three ways you can define the interface:

Using AIDL

Android Interface Definition Language (AIDL) decomposes objects into primitives
that the operating system can understand and marshals them across processes to
perform IPC. The previous technique, using a Messenger, is actually based on
AIDL as its underlying structure. As mentioned above, the Messenger creates a
queue of all the client requests in a single thread, so the service receives
requests one at a time. If, however, you want your service to handle multiple
requests simultaneously, then you can use AIDL directly. In this case, your
service must be thread-safe and capable of multi-threading.  To use AIDL
directly, you must create an .aidl file that defines the programming interface.
The Android SDK tools use this file to generate an abstract class that
implements the interface and handles IPC, which you can then extend within your
service.

Note: Most applications shouldn't use AIDL to create a bound service, because it
may require multithreading capabilities and can result in a more complicated
implementation. As such, AIDL is not suitable for most applications and this
document does not discuss how to use it for your service. If you're certain that
you need to use AIDL directly, see the AIDL document.


https://developer.android.com/guide/components/aidl#java

Defining an AIDL interface

You must define your AIDL interface in an .aidl file using the Java programming
language syntax, then save it in the source code (in the src/ directory) of both
the application hosting the service and any other application that binds to the
service.

When you build each application that contains the .aidl file, the Android SDK
tools generate an IBinder interface based on the .aidl file and save it in the
project's gen/ directory. The service must implement the IBinder interface as
appropriate. The client applications can then bind to the service and call
methods from the IBinder to perform IPC.

Implement the interface

The Android SDK tools generate an interface in the Java programming language,
based on your .aidl file. This interface has an inner abstract class named Stub
  that extends Binder and implements methods from your AIDL interface. You must
  extend the `Stub class and implement the methods`

Expose the interface to clients

Implement a Service and override onBind() to return your implementation of the
Stub class.

public class BleRcuService extends Service {

	public boolean registerService() {

		final String serviceName = "com.sky.blercuservice";

		Method method = null;
		try {
			method = Class.forName("android.os.ServiceManager").getMethod("addService", String.class, IBinder.class);

			method.invoke(null, serviceName, new BleRcuServiceBinder(this));
      }
   }

	private static class BleRcuServiceBinder extends IBleRcuService.Stub {
  }
}

When you build your application, the Android SDK tools generate a .java
interface file named after your .aidl file. The generated interface includes a
subclass named Stub that is an abstract implementation of its parent interface
(for example, YourInterface.Stub) and declares all the methods from the .aidl
file.

Note: Stub also defines a few helper methods, most notably asInterface(), which
takes an IBinder (usually the one passed to a client's onServiceConnected()
    callback method) and returns an instance of the stub interface. See the
section Calling an IPC Method for more details on how to make this cast.

To implement the interface generated from the .aidl, extend the generated Binder
interface (for example, YourInterface.Stub) and implement the methods inherited
from the .aidl file.

Here is an example implementation of an interface called IRemoteService (defined
    by the IRemoteService.aidl example, above) using an anonymous instance:


<android-surface>
https://developer.android.com/reference/android/view/SurfaceView.html


={============================================================================
*kt_dev_skymw_0000* skymw-android-studio

https://developer.android.com/training/basics/firstapp/creating-project

{navigation}

Here are some tips to help you move around Android Studio.

Recent Files

Switch between your recently accessed files using the Recent Files action. Press
`Control+E` (Command+E on a Mac) to bring up the Recent Files action. By
default, the last accessed file is selected. You can also access any tool window
through the left column in this action.


File Structure

View the structure of the current file using the File Structure action. Bring up
the File Structure action by pressing `Control+F12` (Command+F12 on a Mac).
Using this action, you can quickly navigate to any part of your current file.

Find all the pieces of code referencing the class, method, field, parameter, or
statement at the current cursor position by pressing Alt+F7 (Option+F7 on a
Mac).


Find in path

`Control + Shift + F`

<global-search>
Global Search

you can search across your source code, databases, actions, elements of the user
interface, and so on, by `double-pressing the Shift`, or clicking the magnifying
glass in the upper right-hand corner of the Android Studio window.

// (can select from global search)
//
// Search for and navigate to a specific class in your project using the
// Navigate to Class action. Bring up the action by pressing Control+N
// (Command+O on a Mac).  Navigate to Class supports sophisticated expressions,
// including camel humps, paths, line navigate to, middle name matching, and
// many more. If you call it twice in a row, it shows you the results out of the
// project classes.
//
// Navigate to a file or folder using the Navigate to File action. Bring up the
// Navigate to File action by pressing Control+Shift+N (Command+Shift+O on a
// Mac).  To search for folders rather than files, add a / at the end of your
// expression.
// 
// Navigate to a method or field by name using the Navigate to Symbol action.
// Bring up the Navigate to Symbol action by pressing Control+Shift+Alt+N
// (Command+Option+O on a Mac).


<build>
By employing the flexibility of Gradle, you can achieve all of this without
modifying your app's core source files. Android Studio build files are named
build.gradle. They are plain text files that use Groovy syntax to configure
the build with elements provided by the Android plugin for Gradle. Each
project has one top-level build file for the entire project and separate
module-level build files for each module. When you import an existing project,
Android Studio automatically generates the necessary build files.

To learn more about the build system and how to configure, see Configure your
build.

<run>
/home/keitee/Downloads/android/android-studio/bin
./studio.sh &


={============================================================================
*kt_dev_skymw_0000* skymw-android-skybluez

<things-to-check-to-build>

1. set QT setting

app/CMakeLists.txt

# Sets the path to the Qt5 libraries and headers.
# You'll need to modify the QT5_SDK path below to point to your Qt5 SDK install

set( QT5_SDK "/home/keitee/Qt/5.12.3" )


<output>
keitee@keitee-mint:~/ip/SkyBluez$ find . -name *.apk | xargs ls -al
-rw-rw-r-- 1 keitee keitee 5844787 Sep 26 11:15 ./app/debug/SkyBluez-armeabi-v7a-debug.apk
-rw-rw-r-- 1 keitee keitee 4109972 Sep 26 11:20 ./app/release/SkyBluez-armeabi-v7a-release.apk


<signing>
keitee@keitee-mint:~/ip/SkyBluez$ find . -name *.keystore
./app/platform.keystore

key store password: android
key alias: platform
key password: android


={============================================================================
*kt_dev_skymw_0000* skymw-android-bluetoothrcu skymw-ip100

<skymw-ip100>
*refs*
https://www.stb.bskyb.com/confluence/display/~grayb/Android+Bluez+Stack

<ip100-adb>
https://developer.android.com/studio/command-line/adb.html
https://www.stb.bskyb.com/confluence/display/~grayb/Android+Bluez+Stack

// run command from host

adb disable-verity
adb reboot

root	Restart adbd with root permissions.
adb root

adb remount
adb connect 192.168.0.104

You can verify that your device is connected by executing adb devices

$ adb devices
List of devices attached
192.168.0.104:5555      device


<ip100-update>
http://ip100-download-manager.s3-website.eu-central-1.amazonaws.com/software-management
kit.park@sky.uk, tegI3301!!


<comp-adb-logcat> <logging>

https://developer.android.com/studio/debug/am-logcat.html

keitee@keitee-mint:~/ip$ adb logcat --help
Usage: logcat [options] [filterspecs]
options include:
  -s              Set default filter to silent. Equivalent to filterspec '*:S'
  -f <file>, --file=<file>               Log to file. Default is stdout

   -e <expr>, --regex=<expr>
                  Only print lines where the log message matches <expr>
                  where <expr> is a regular expression
 
https://www.stb.bskyb.com/confluence/display/2016/Useful+code+snippets

// capture all
adb logcat | tee log.log

adb logcat --pid=2208 | tee log.log

06-14 09:36:56.292  2208  2226 I BleRcuQt: < M:blercuadapter.cpp F:onDeviceAdded L:1494 > added device D4:B8:FF:12:E1:A8 named "P215 SkyQ EC101" (connected: false paired: false)
06-14 09:53:21.869  2208  2226 I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for 18:46:44:xx:xx:xx is 'U104 SkyQ EC201'
06-14 09:53:21.869  2208  2226 I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for 70:91:F3:xx:xx:xx is 'U104 SkyQ EC102'
06-14 09:53:21.870  2208  2226 I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for D4:B8:FF:xx:xx:xx is 'U104 SkyQ EC[12]01'
06-14 09:53:21.871  2208  2226 I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for E8:0F:C8:xx:xx:xx is 'U104 SkyQ EC202'


<things-to-check-to-build>

1. set QT setting

app/CMakeLists.txt

# Sets the path to the Qt5 libraries and headers.
# You'll need to modify the QT5_SDK path below to point to your Qt5 SDK install

set( QT5_SDK "/home/keitee/Qt/5.12.3" )

// copy qt bins
drwxr-xr-x 11 keitee keitee     4096 Jun 10 16:52 android_bens_armv7


<skymw-bluez-release> signing *release-process*

/home/keitee/ip/repo/SkyBluetoothRcu/app/platform.keystore
pass for key:
android
platform
android

https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=~grayb&title=Android+-+HowTo+Release+Components

Hi all,

A new release of the SkyBluetoothRcu service - version 2.1.1 - has been tagged
and pushed to git master.

Gerrit merge requests have been created for sky/QIP100 branch.

Release notes attached, highlights are:
- Added feature to put the bluetooth code in 'searching' mode for 30 seconds. 


<bt-remote-pairing> *bluez-pairing*
https://docs.ubuntu.com/core/en/stacks/bluetooth/bluez/docs/reference/pairing/introduction

What is Pairing

In Bluetooth terminology pairing is the process of making two devices know about
each other. The key concept is about exchanging so called link-keys that are
used to secure the communication. The pairing process involves authentication
however due to the nature and variety of Bluetooth devices there will be
different ways of confirming the pairing attempt:

Devices such as keyboards or car-kits will require authentication by PIN/passkey
code

Other devices will provide a yes/no choice to the pairing attempt

Devices without an input interface such as headsets or speakers will not require
the user to confirm the pairing attempt at all

https://www.stb.bskyb.com/confluence/display/~grayb/BLERCU+%3A+State+Diagrams+for+EC10x+Bluetooth+RCUS
https://www.stb.bskyb.com/confluence/display/2016/Remote+Control+Architecture

The BT Manager component will act as a connector to the underlying Bluez stack,
and expose the interfaces in a specified API, for use with the main network
control and pairing system.

 5.3.3.2 Certificate Store

Pairing will generate CA certificate information, which must be placed in
persistent storage. An API to the wider system, or some knowledge of the final
persistent storage system is necessary to co-ordinate this.


<bluez-tool-bluetoothctl> *only-for-android* bluez-tool
https://www.stb.bskyb.com/confluence/display/2016/RCU%3A+Pairing+steps+by+steps

Pairing from Ubuntu Core
https://docs.ubuntu.com/core/en/stacks/bluetooth/bluez/docs/reference/pairing/outbound.html

(web)
SKY BLUEZ DEBUG CONSOLE
http://192.168.0.102:8180/index.html

(cli)
telnet 192.168.0.102 8123
telnet <stb-ip-address> 8123

   Select one of the following tools:
      1 - bluetoothctl
      2 - btmgmt
      3 - btmon
#>

#> 1
[NEW] Controller 38:A6:CE:7E:63:1A "sky-ip100" [default]
[NEW] Device D4:B8:FF:12:E1:A8 U122 SkyQ EC101
Agent registered

[bluetooth]# ?
Invalid command
[bluetooth]# help
Menu main:
Available commands:
-------------------
advertise                                         Advertise Options Submenu
scan                                              Scan Options Submenu
gatt                                              Generic Attribute Submenu
list                                              List available controllers
show [ctrl]                                       Controller information
select <ctrl>                                     Select default controller
devices                                           List available devices
paired-devices                                    List paired devices
system-alias <name>                               Set controller alias
reset-alias                                       Reset controller alias
power <on/off>                                    Set controller power
pairable <on/off>                                 Set controller pairable mode
discoverable <on/off>                             Set controller discoverable mode
agent <on/off/capability>                         Enable/disable agent with given capability
default-agent                                     Set agent as the default one
advertise <on/off/type>                           Enable/disable advertising with given type
set-alias <alias>                                 Set device alias
scan <on/off>                                     Scan for devices
info [dev]                                        Device information
pair [dev]                                        Pair with device
trust [dev]                                       Trust device
untrust [dev]                                     Untrust device
block [dev]                                       Block device
unblock [dev]                                     Unblock device
remove <dev>                                      Remove device
connect <dev>                                     Connect device
disconnect [dev]                                  Disconnect device
menu <name>                                       Select submenu
version                                           Display version
quit                                              Quit program
exit                                              Quit program
help                                              Display help about this program
[bluetooth]#

// check if "controller" is on and if not, run "power on"

[bluetooth]# show
Controller 38:A6:CE:7E:63:1A (public)
        Name: "sky-ip100"
        Alias: "sky-ip100"
        Class: 0x00000414
        Powered: yes
        Discoverable: no
        Pairable: no
        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)
        UUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)
        UUID: PnP Information           (00001200-0000-1000-8000-00805f9b34fb)
        UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)
        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)
        Modalias: usb:v1D6Bp0246d0530
        Discovering: no
[bluetooth]#


// check on "paired" and "connected"

[bluetooth]# info D4:B8:FF:12:E1:A8
Device D4:B8:FF:12:E1:A8 (public)
        Name: P199 SkyQ EC101
        Alias: P199 SkyQ EC101
        Appearance: 0x0180
        Paired: yes
        Trusted: no
        Blocked: no
        Connected: no
        LegacyPairing: no
        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)
        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)
        UUID: Immediate Alert           (00001802-0000-1000-8000-00805f9b34fb)
        UUID: Device Information        (0000180a-0000-1000-8000-00805f9b34fb)
        UUID: Battery Service           (0000180f-0000-1000-8000-00805f9b34fb)
        UUID: Human Interface Device    (00001812-0000-1000-8000-00805f9b34fb)
        UUID: Scan Parameters           (00001813-0000-1000-8000-00805f9b34fb)
        UUID: Vendor specific           (0000f800-bdf0-407c-aaff-d09967f31acd)
        UUID: Vendor specific           (0000f801-bdf0-407c-aaff-d09967f31acd)
        UUID: Vendor specific           (0000f802-bdf0-407c-aaff-d09967f31acd)
        Modalias: bluetooth:v057Ap0004d0100
[bluetooth]#

// remove

[bluetooth]# remove D4:B8:FF:12:E1:A8
[DEL] Primary Service
...
Device has been removed
[bluetooth]#


// *start-pairing*
[bluetooth]# scan on

// while scan is going
[bluetooth]# pair D4:B8:FF:12:E1:A8
Attempting to pair with D4:B8:FF:12:E1:A8

... press "1+3"

[CHG] Device D4:B8:FF:12:E1:A8 Connected: yes
[CHG] Device D4:B8:FF:12:E1:A8 Name: U032 SkyQ EC101
[CHG] Device D4:B8:FF:12:E1:A8 Alias: U032 SkyQ EC101
[U187 SkyQ EC101]#

// see the change on [name] and no need to scan off if paired?
// [bluetooth]# scan off
// [bluetooth]# info D4:B8:FF:12:E1:A8

*bluez-rcu*
[U162 SkyQ EC101]# devices
Device D4:B8:FF:12:E1:A8 P215 SkyQ EC101


<bluez-android-logging>

// the log levels we support
typedef enum {
  Fatal = 0x01,
  Error = 0x02,
  Warning = 0x04,
  Milestone = 0x08,
  Info = 0x10,
  Debug = 0x20
} LoggingLevel;

note: use bit flag but not <, >

// check this level should be logged
const LoggingLevels::Int allowedLevels = g_logLevels.load();
if (!(allowedLevels & level))
  return;

static int doMain()
{
#if (AI_BUILD_TYPE == AI_DEBUG)
  setupLogging(LoggingTarget::AndroidLog,
      LoggingLevel::Fatal    | LoggingLevel::Error |
      LoggingLevel::Warning  | LoggingLevel::Milestone);

  // TODO: remove
  setLogLevels(getLogLevels() | LoggingLevel::Info);
  // setLogLevels(getLogLevels() | LoggingLevel::Debug);

#elif (AI_BUILD_TYPE == AI_RELEASE)
  setupLogging(LoggingTarget::AndroidLog,
      LoggingLevel::Fatal | LoggingLevel::Error);

#else
#	error "Unknown AI_BUILD_TYPE, expected AI_DEBUG or AI_RELEASE"
#endif
}


<java-logging>
// SkyBluetoothRcu/app/src/main/java/com/sky/blercu/BleRcuService.java

public class BleRcuService extends Service {

  private static boolean DBG = true;

  if (DBG) Log.d(TAG, "created BleRcuService object with qtObject " + mQtObject);
}


<bluez-sky> *start-pairing*
1+3 key triggers two things:

o do advertisement from rcu
o do paring process from a box


// app/src/main/cpp/main.cpp

/*
Called from the java MainApplication class when it's created.  This is the
entry point that kicks of the Qt main loop thread.

 */
extern "C"
JNIEXPORT jboolean JNICALL 
Java_com_sky_skybluetoothrcu_MainApplication_startQApplication(JNIEnv *env, 
    jobject /* this */)
{
  __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, "launching QApplication");

  pthread_t qtThread;

  int rc = pthread_create(&qtThread, nullptr, mainThread, nullptr);
}

static int doMain()
{
  QCoreApplication a(argc, argv);

  // log the start-up
  qMilestone("====================");
  qMilestone("KT:");
  qMilestone("====================");

  // first thing we do is start the Android AIDL service, it has no controller
  // so won't be useful, but means other clients can connect to it (the controller
  // is added later)
  QSharedPointer<BleRcuService> service =
    QSharedPointer<BleRcuService>::create();

  // create the config options, read from the config.json file
  QSharedPointer<const ConfigSettings> config = ConfigSettings::defaults();

  // create the factory for creating the BleRcu services for each device
  QSharedPointer<BleRcuServicesFactory> servicesFactory =
    QSharedPointer<BleRcuServicesFactory>::create(config);

  // store the backend type
  g_backend.store(Backend::Bluez);

  // attempt to connect to the android dbus-broker
  QDBusConnection dbusConn = connectToDBus();
  if (!dbusConn.isConnected()) {
    qError() << "failed to connect to dbus due to" << dbusConn.lastError();
  }

  *when-use-bluez*
  // and then create the adapter talking to bluez over dbus
  adapter = QSharedPointer<BleRcuAdapterBluez>::create(config,
      servicesFactory,
      dbusConn);

  // create the controller that manages the adapter and paired devices
  QSharedPointer<BleRcuController> controller =
    QSharedPointer<BleRcuControllerImpl>::create(config, adapter);

  // give the controller to the Android service, the service is now useful
  service->setController(controller);
}


<bluez-config>

daemon/resources/resources.default.qrc
3:      <file alias="defaultconfig.json">config.default.json</file>
keitee@keitee-mint:~/mw/appinfrastructure/AppInfrastructure/BluetoothRcu$

gvimdiff /home/keitee/ip/repo/SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json
cdiff /home/keitee/ip/repo/SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json
cp /home/keitee/ip/repo/SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json
mv /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json /home/keitee/mw/appinfrastructure/AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json.kt
cdiff /home/keitee/ip/SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json /home/keitee/ip/repo/SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json
meld /home/keitee/ip/SkyBluetoothRcu/app/src/ /home/keitee/ip/repo/SkyBluetoothRcu/app/src/

// right config file used?
// SkyBluetoothRcu/app/src/main/cpp/resources/config.android.json

	"models": [
		{
			"name": "ECx01",
			"manufacturer": "Omni",
			"oui": "D4:B8:FF",
			"pairingNameFormat": "U%03hhu SkyQ EC[12]01",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC[12]01",
			"filterByte": 20,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC201",
			"manufacturer": "Omni",
			"oui": "18:46:44",
			"pairingNameFormat": "U%03hhu SkyQ EC201",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC201",
			"filterByte": 20,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC102",
			"manufacturer": "UEI",
			"oui": "70:91:F3",
			"pairingNameFormat": "U%03hhu SkyQ EC102",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC102",
			"filterByte": 19,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC202",
			"manufacturer": "UEI",
			"oui": "E8:0F:C8",
			"pairingNameFormat": "U%03hhu SkyQ EC202",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC202",
			"filterByte": 19,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC05x",
			"manufacturer": "Ruwido",
			"disabled": true,
			"oui": "1C:A2:B1",
			"pairingNameFormat": "U%03hhuruwido Sky Remote",
			"scanNameFormat": "U[0-9][0-9][0-9]ruwido Sky Remote",
			"filterByte": 27,
			"connectionParams": {
				"maxInterval": 15.0,
				"minInterval": 15.0,
				"latency": 332,
				"supervisionTimeout": 15000
			},
			"services": {
				"type": "rci",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"touch"
				]
			}
		}

	]
	"models": [
		{
			"name": "ECx01",
			"manufacturer": "Omni",
			"oui": "D4:B8:FF",
			"pairingNameFormat": "U%03hhu SkyQ EC[12]01",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC[12]01",
			"filterByte": 20,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC201",
			"manufacturer": "Omni",
			"oui": "18:46:44",
			"pairingNameFormat": "U%03hhu SkyQ EC201",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC201",
			"filterByte": 20,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC102",
			"manufacturer": "UEI",
			"oui": "70:91:F3",
			"pairingNameFormat": "U%03hhu SkyQ EC102",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC102",
			"filterByte": 19,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC202",
			"manufacturer": "UEI",
			"oui": "E8:0F:C8",
			"pairingNameFormat": "U%03hhu SkyQ EC202",
			"scanNameFormat": "U[0-9][0-9][0-9] SkyQ EC202",
			"filterByte": 19,
			"services": {
				"type": "gatt",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"upgrade"
				]
			}
		},
		{
			"name": "EC05x",
			"manufacturer": "Ruwido",
			"disabled": true,
			"oui": "1C:A2:B1",
			"pairingNameFormat": "U%03hhuruwido Sky Remote",
			"scanNameFormat": "U[0-9][0-9][0-9]ruwido Sky Remote",
			"filterByte": 27,
			"connectionParams": {
				"maxInterval": 15.0,
				"minInterval": 15.0,
				"latency": 332,
				"supervisionTimeout": 15000
			},
			"services": {
				"type": "rci",
				"supported": [
					"audio",
					"battery",
					"deviceInfo",
					"findMe",
					"infrared",
					"touch"
				]
			}
		}
	]


// app/src/main/cpp/utils/linuxinputdevice.cpp

signals:
	void keyPress(quint16 keyCode, qint32 scanCode);
	void keyRelease(quint16 keyCode, qint32 scanCode);

void LinuxInputDevice::processEvents(const struct input_event *events, size_t nevents)
{
  switch (event->type) {
    case EV_SYN:
      m_scanCode = 0;
      break;
    case EV_KEY:
      if (event->value)
        `emit keyPress(event->code, m_scanCode);`
      else
        emit keyRelease(event->code, m_scanCode);
      m_scanCode = 0;
      break;
    case EV_MSC:
      if (event->code == MSC_SCAN)
        m_scanCode = event->value;
      break;

    default:
      break;
  }
}


// note that "service/android"
// app/src/main/cpp/service/android/blercuservice.cpp
// app/src/main/cpp/service/android/blercuservice.h

class BleRcuService : public QObject
                    , public QEnableSharedFromThis<BleRcuService>
{
  const QSharedPointer<InputDeviceManager> m_inputDeviceManager;

  QSharedPointer<BleRcuController> m_controller;

  *call-from-c-to-java*
  QSharedPointer<QAndroidJniObject> m_javaBleRcuService;

  QSharedPointer<LinuxInputDevice> m_irInputDevice;

  QMap<BleAddress, int> m_deviceIdMap;
}

{
  // create the SkyBluetoothLE java object
  m_javaBleRcuService = QSharedPointer<QAndroidJniObject>::create(
      "com/sky/blercu/BleRcuService",
      "(J)V");
}

BleRcuService::BleRcuService(QObject *parent)
	: QObject(parent)
	, m_inputDeviceManager(InputDeviceManager::create())
  {
    QObject::connect(m_irInputDevice.data(), `&LinuxInputDevice::keyPress`,
        this, &BleRcuService::onIrKeyPress);
  }

*pairing-code*
void BleRcuService::onIrKeyPress(quint16 keyCode, qint32 scanCode)
{
  // check for the pairing keyCode F13 which is the new format
  if (keyCode == KEY_F13) {

    // 03th byte
    const quint8 filterByte = quint8((scanCode >> 16) & 0xff);

    // 01st byte
    const quint8 pairingCode = quint8((scanCode >> 0) & 0xff);

    // kick off pairing using supplied pairing code
    `m_controller->startPairing`(filterByte, pairingCode);
  }
}


// app/src/main/cpp/blercu/blercucontroller.cpp
*start-pairing-android*
bool BleRcuControllerImpl::startPairing(quint8 filterByte, quint8 pairingCode)
{
  // start the pairing process
  m_pairingStateMachine.start(filterByte, pairingCode);
}


// app/src/main/cpp/blercu/blercupairingstatemachine.cpp

class BleRcuControllerImpl : public BleRcuController
{
	const QSharedPointer<BleRcuAdapter> m_adapter;

	BleRcuPairingStateMachine m_pairingStateMachine;
	BleRcuScannerStateMachine m_scannerStateMachine;
}

//   QObject::connect(m_adapter.data(), &BleRcuAdapter::deviceNameChanged,
//     this, &BleRcuPairingStateMachine::onDeviceNameChanged);
// 
// void BleRcuPairingStateMachine::onDeviceNameChanged(const BleAddress &address,
//                                                     const QString &name)
// {
//   qDebug() << "device name changed" << address << name
//     << "(target" << m_targetAddress << ")";
// 
//   `processDevice`(address, name);
// }
// 
// /*!
// 	\internal
// 
// 	Called when entering the 'discovering' state.  At this point we query the
// 	manager for `the current list of devices and their names`  We use this to
// 	determine if any existing devices match the pairing prefix.
// 
//  */
// void BleRcuPairingStateMachine::onEnteredDiscoveringState()
// {
//    *start-pairing-get-devices-from-adapter*
// 	// get the current list of devices
// 	const QMap<BleAddress, QString> deviceNames = m_adapter->deviceNames();
// 
// 	// process each existing device
// 	QMap<BleAddress, QString>::const_iterator it = deviceNames.begin();
// 	for (; it != deviceNames.end(); ++it)
// 		`processDevice`(it.key(), it.value());
// }
//
// 
// // -----------------------------------------------------------------------------
// /*!
// 	\internal
// 
// 	Called when the an outside object has called either deviceAdded() or
// 	deviceNameChanged(), it then checks if the \a name matches our expected
// 	pairing prefix.  If it does then we check if we already have a pairing
// 	target, if not we use this new device.
// 
//  */
// void BleRcuPairingStateMachine::processDevice(const BleAddress &address,
//                                               const QString &name)
// {
//    *pairing-code-match-devices-from-rcu-to-scanned-devices*
//    QMap<quint32, QRegExp>::const_iterator it = 
//      m_pairingPrefixes.find(address.oui());
// }
// 
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:processDevice L:781 > 
//  found target device D4:B8:FF:12:E1:A8


// *pairing-code-regex*
//
// m_pairingPrefixFormats is built from *config* when fsm starts and is used to
// check if current devices does match up with expected pattern in
// `processDevice()` which gets called when device found and added
//
// "pairingNameFormat": "U%03hhu SkyQ EC202",
//
// BleRcuPairingStateMachine::BleRcuPairingStateMachine(const QSharedPointer<const ConfigSettings> &config)
// {
//   // constructs a map of name printf style formats for searching for device
//   // names that match
//   const QList<ConfigModelSettings> models = config->modelSettings();
//   for (const ConfigModelSettings &model : models) {
//     `m_pairingPrefixFormats`[model.oui()] = model.pairingNameFormat();
//   }
// }
//

!MIL   -APPINFRA     < M:InputQueue.cpp F:sendKey L:00110 > KT: InputQueue::sendKey(filterByte(20), keyCode(61022), down(1)
!MIL   -APPINFRA     < M:InputQueue.cpp F:listenerThread L:00288 > KT: InputQueue::listner.handler(event{source(2), keyCode(61022), down(1)}
!MIL   -AS           < M:AS_DMS_Writer.cpp F:KeyControllerMainListener L:00258 > @ctx:AS_KEYEVENT AS_KEYEVENT_KeyEventControllerImplementation.cpp(223) KT: KeyControllerMainListener acquired deviceType: 2, keyCode: 0xee5e, keyState: 1
!MIL   -APPINFRA     < M:BleRcuController.cpp F:isIrPairingCode L:00801 > KT: isIrPairingCode filterByte(0x14), keyCode(0xee5e)
!MIL   -APPINFRA     < M:InputQueue.cpp F:listenerThread L:00288 > KT: InputQueue::listner.handler(event{source(2), keyCode(61022), down(1)}
!MIL   -APPINFRA     < M:BleRcuController.cpp F:onIrPairingCode L:00850 > KT: received IR pairing code 094
!INFO  -BLERCU       < M:blercupairingstatemachine.cpp F:start L:00209 > pairing regex for 18:46:44:xx:xx:xx is 'U094 SkyQ EC201'
!INFO  -BLERCU       < M:blercupairingstatemachine.cpp F:start L:00209 > pairing regex for 1C:A2:B1:xx:xx:xx is 'U094ruwido Sky Remote'
!INFO  -BLERCU       < M:blercupairingstatemachine.cpp F:start L:00209 > pairing regex for 70:91:F3:xx:xx:xx is 'U094 SkyQ EC102'
!INFO  -BLERCU       < M:blercupairingstatemachine.cpp F:start L:00209 > pairing regex for D4:B8:FF:xx:xx:xx is 'U094 SkyQ EC[12]01'
!INFO  -BLERCU       < M:blercupairingstatemachine.cpp F:start L:00209 > pairing regex for E8:0F:C8:xx:xx:xx is 'U094 SkyQ EC202'

// "130" is *paring-code*
// 
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for 18:46:44:xx:xx:xx is 'U130 SkyQ EC201'
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for 70:91:F3:xx:xx:xx is 'U130 SkyQ EC102'
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for D4:B8:FF:xx:xx:xx is 'U130 SkyQ EC[12]01'
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:236 > pairing regex for E8:0F:C8:xx:xx:xx is 'U130 SkyQ EC202'
// I BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving to state StartingDiscoveryState(2)"
//
// I BleRcuQt: < M:blercudevice.cpp F:onEnteredResolvingServicesState L:547 > D4:B8:FF:12:E1:A8 entered RESOLVING_SERVICES state
// I BleRcuQt: < M:blercudevice.cpp F:onDeviceNameChanged L:352 > D4:B8:FF:12:E1:A8 device name changed from "P138 SkyQ EC101" to "U130 SkyQ EC101"
// I BleRcuQt: < M:blercuadapter.cpp F:onDeviceNameChanged L:1692 > renamed device D4:B8:FF:12:E1:A8 to "U130 SkyQ EC101"
// I BleRcuQt: < M:blercupairingstatemachine.cpp F:processDevice L:773 > found target device D4:B8:FF:12:E1:A8 but it's currently paired, will unpair and wait till it shows up in a scan again
//

void BleRcuPairingStateMachine::start(quint8 filterByte, quint8 pairingCode)
{
  // FIXME: use the filterByte to narrow the search to a certain RCU model
  Q_UNUSED(filterByte);

  // create a map of OUI (first 3 bytes of mac address) to a regex to match to
  // the name of the device
  m_pairingPrefixes.clear();
  QMap<quint32, QByteArray>::const_iterator it = m_pairingPrefixFormats.begin();
  for (; it != m_pairingPrefixFormats.end(); ++it) {

    // construct the wildcard match
    QRegExp regEx(QString::asprintf(it.value().constData(), `pairingCode`));

    regEx.setPatternSyntax(QRegExp::WildcardUnix);

    qInfo("pairing regex for %02hhX:%02hhX:%02hhX:xx:xx:xx is '%s'",
        quint8(it.key() >> 16), quint8(it.key() >> 8), quint8(it.key() >> 0),
        regEx.pattern().toLatin1().constData());

    // add to the map to use for compare when a device is found
    `m_pairingPrefixes`.insert(it.key(), std::move(regEx));
  }

  // start the state machine
  m_stateMachine.start();
}

bool StateMachine::start()
{
  m_currentState = m_initialState;
  m_running = true;

  logTransition(-1, m_currentState);

  emit entered(m_currentState);
  return true;
}

void BleRcuPairingStateMachine::setupStateMachine()
{
  // connect to the state entry and exit signals
  QObject::connect(&m_stateMachine, &StateMachine::`entered`,
      this, &BleRcuPairingStateMachine::`onStateEntry`);

  QObject::connect(&m_stateMachine, &StateMachine::`exited`,
      this, &BleRcuPairingStateMachine::`onStateExit`);
}

void BleRcuPairingStateMachine::onStateEntry(int state)
{
  switch (state) {

    case StartingDiscoveryState:
      onEnteredStartDiscoveryState()
      {
        // *emit-started*
        // tell anyone who cares that pairing has started
        `emit started();`
      }

      break;

    case FinishedState:
      onEnteredFinishedState()
      {
        // finally just emit a finished signal to the BleRcuManagerImpl object
        `emit finished();`
      }
      break;
  }
}

void BleRcuPairingStateMachine::onStateExit(int state)
{
  switch (state) {}
}


< M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving to state StartingDiscoveryState(2)"
< M:blercupairingstatemachine.cpp F:onStateEntry L:306 > KT: state: 2
< M:blercupairingstatemachine.cpp F:onEnteredStartDiscoveryState L:379 > KT: BleRcuPairingStateMachine::onEnteredStartDiscoveryState


*start-pairing-device-pair*

void BleRcuPairingStateMachine::onEnteredPairingState()
{
  // note:
  // m_targetAddress comes when device is found in processDevice()
  //
  // request the manager to pair with the device
  m_manager->pairDevice(m_targetAddress);
}

bool BleRcuManagerImpl::pairDevice(const BleAddress &address)
{
	qInfo() << "requesting bluez pair" << device->address();
	device->pair(0);
	return true;
}

void BleRcuDeviceImpl::pair(int timeout)
{
  QDBusPendingReply<> reply = `m_deviceProxy->Pair();`
  QDBusPendingCallWatcher *watcher = new QDBusPendingCallWatcher(reply, this);

  QObject::connect(watcher, &QDBusPendingCallWatcher::finished,
      this, &BleRcuDeviceImpl::onPairRequestReply);

  // set the flag, it may be cleared if the call fails
  m_isPairing = true;
}

void BleRcuDeviceImpl::onPairRequestReply(QDBusPendingCallWatcher *call)
{
	QDBusPendingReply<> reply = *call;

	if (Q_UNLIKELY(reply.isError())) {

		m_isPairing = false;

		// an error occurred so log it, however from bluez 5.47 the bluez daemon
		// doesn't seem to send a reply on success, so ignore that error
		QDBusError error = reply.error();
		if (error.type() != QDBusError::NoReply)
			qError() << m_address << "pairing request failed with error" << error;

		// emit pairingError(m_address, error.message());

	} else {

		qDebug() << m_address << "pairing request successful";

		// TODO: start the timer to cancel the pairing after a certain amount of time

	}
	// free the pending reply object
	call->deleteLater();
}


// from adaptor signal

< M:blercuadapter.cpp F:onAdapterDiscoveringChanged L:1297 > adapter started discovering
bool BleRcuControllerImpl::startScanning(int timeoutMs)
{
	// check we're not currently pairing
	if (m_pairingStateMachine.isRunning()) {
		qWarning("currently performing pairing, cannot start new scan");
		return false;
	}

	// check we're not already scanning
	if (m_scannerStateMachine.isRunning()) {
		qWarning("already scanning, new scan request aborted");
		return false;
	}

	// check that the manager has powered on the adapter, without this we
	// obviously can't scan. The only time the adaptor should (legitimately) be
	// unavailable is right at start-up
	if (!m_adapter->isAvailable() || !m_adapter->isPowered()) {
		m_lastError = BleRcuError(BleRcuError::General,
		                          QStringLiteral("Adaptor not available or not powered"));
		return false;
	}

	// start the pairing process
	emit stateChanged(PairingState::Searching);
	m_scannerStateMachine.start(timeoutMs);
	return true;
}
< M:blercupairingstatemachine.cpp F:onDiscoveryChanged L:422 > KT: postEvent(DiscoveryStartedEvent)
< M:statemachine.cpp F:postEvent L:766 > KT: event type (1001)
< M:statemachine.cpp F:moveToState L:193 > KT: set current state (3)
< M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving from state StartingDiscoveryState(2) to DiscoveringState(3)"

< M:blercupairingstatemachine.cpp F:processDevice L:781 > found target device D4:B8:FF:12:E1:A8
< M:blercupairingstatemachine.cpp F:processDevice L:799 > KT: postEvent(DeviceFoundEvent)
< M:statemachine.cpp F:postEvent L:766 > KT: event type (1009)
< M:statemachine.cpp F:shouldMoveState L:310 > KT: really happen?? state (1)
< M:statemachine.cpp F:moveToState L:193 > KT: set current state (5)
< M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving from state DiscoveringState(3) to StoppingDiscoveryState(5)"

< M:blercuadapter.cpp F:onAdapterDiscoveringChanged L:1297 > adapter stopped discovering
< M:blercupairingstatemachine.cpp F:onDiscoveryChanged L:427 > KT: postEvent(DiscoveryStoppedEvent)
< M:statemachine.cpp F:postEvent L:766 > KT: event type (1002)
< M:statemachine.cpp F:moveToState L:193 > KT: set current state (6)
< M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving from state StoppingDiscoveryState(5) to EnablePairableState(6)"


//
// app/src/main/cpp/blercu/bluez/interfaces/bluezadapterinterface.h

#include <QtDBus>

class BluezAdapterInterface : public DBusAbstractInterface
{
  // ??
  Q_PROPERTY(bool Discovering READ discovering NOTIFY `discoveringChanged`)
    inline bool discovering() const
    { return qvariant_cast< bool >(property("Discovering")); }

signals:
  void aliasChanged(const QString& newAlias);
  void deviceClassChanged(quint32 deviceClass);
  void discoverableChanged(bool discoverable);
  void discoverableTimeoutChanged(uint newDiscoverableTimeout);
  void `discoveringChanged`(bool discovering);
  ...
};

// dbus -> adapter
// app/src/main/cpp/blercu/blercuadapter.h

class BleRcuAdapter : public QObject
{
signals:
  void poweredChanged(bool powered, QPrivateSignal);

  void `discoveryChanged`(bool discovering, QPrivateSignal);
  void pairableChanged(bool pairable, QPrivateSignal);

  void deviceFound(const BleAddress &address, const QString &name, QPrivateSignal);
  void deviceRemoved(const BleAddress &address, QPrivateSignal);

  void deviceNameChanged(const BleAddress &address, const QString &name, QPrivateSignal);
  void devicePairingChanged(const BleAddress &address, bool paired, QPrivateSignal);
  void deviceReadyChanged(const BleAddress &address, bool ready, QPrivateSignal);
};

// app/src/main/cpp/blercu/bluez/blercuadapter_p.h

class BleRcuAdapterBluez : public BleRcuAdapter
{
  private slots:
    void onAdapterDiscoveringChanged(bool discovering);
};

// app/src/main/cpp/blercu/bluez/blercuadapter.cpp

bool BleRcuAdapterBluez::attachAdapter(const QDBusObjectPath &adapterPath)
{
  // install handlers for the interesting adapter notifications
  QObject::connect(m_adapterProxy.data(), &BluezAdapterInterface::`discoveringChanged`,
      this, &BleRcuAdapterBluez::`onAdapterDiscoveringChanged`);
}

void BleRcuAdapterBluez::`onAdapterDiscoveringChanged`(bool discovering)
{
  emit `discoveryChanged`(m_discovering, BleRcuAdapter::privateSignal());
}

// adapter -> state machine
// app/src/main/cpp/blercu/blercupairingstatemachine.cpp

class BleRcuPairingStateMachine : public QObject {}

BleRcuPairingStateMachine::BleRcuPairingStateMachine()
{
  QObject::connect(m_adapter.data(), `&BleRcuAdapter::discoveryChanged`,
      this, &BleRcuPairingStateMachine::`onDiscoveryChanged`);
}

void BleRcuPairingStateMachine::`onDiscoveryChanged`(bool discovering)
{
  if (discovering)
    m_stateMachine.postEvent(DiscoveryStartedEvent);
  else
    m_stateMachine.postEvent(DiscoveryStoppedEvent);
}

app/src/main/java/com/sky/bluetooth/SkyBroadcastReceiver.java
124:            filter.addAction(BluetoothDevice.ACTION_PAIRING_REQUEST);
1


SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
SkyBluetoothRcu/app/src/main/java/com/sky/blercu/BleRcuService.java
SkyBluetoothRcu/app/src/main/cpp/blercu/blercuadapter.h
SkyBluetoothRcu/app/src/main/cpp/blercu/android/blercuadapter_p.h


<bluez-sky-aidl>
https://developer.android.com/guide/components/aidl#java

Defining an AIDL interface

You must define your AIDL interface in an .aidl file using the Java programming
language syntax, then save it in the source code (in the src/ directory) of 
`both the application` hosting the service and any other application that binds
to the service.

When you build each application that contains the .aidl file, the Android SDK
tools `generate` an IBinder interface based on the .aidl file and save it in the
project's gen/ directory. The service must implement the IBinder interface as
appropriate. The client applications can then bind to the service and call
methods from the IBinder to perform IPC.

Implement the interface

The Android SDK tools generate an interface in the Java programming language,
based on your .aidl file. This interface has an inner abstract class named Stub
that extends Binder and implements methods from your AIDL interface.  You must
extend the Stub class and implement the methods.


as api to support

/peripherals/btremotes/status
/peripherals/btremotes/action/startsearching


as/iWedia_AS_service/QtRESTService/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl

// are the same files

keitee@keitee-mint:~/ip$ find . -name IBleRcuService.aidl
./SkyBluetoothRcu/example/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
./SkyBluetoothRcu/tests/IrDatabaseTest/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
./SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
./iwedia/as/iWedia_AS_service/QtRESTService/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
./BleRcuExample/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl


// app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl

interface IBleRcuService {
	void registerClient(in ParcelUuid appId, in IBleRcuServiceCallback callback);
	void unregisterClient(in int clientIf);

	boolean isPairing();

	String[] getDevices();

	++++ boolean isDevicePaired(in String address);
	++++ boolean isDeviceConnected(in String address);
	++++ int getDeviceId(in String address);
	++++ int getDeviceBatteryLevel(in String address);
	++++ String getDeviceName(in String address);
	++++ String getDeviceMake(in String address);
	++++ String getDeviceModel(in String address);
	++++ String getDeviceSerialNumber(in String address);
	++++ String getDeviceHardwareVersion(in String address);
	++++ String getDeviceSoftwareVersion(in String address);
	++++ String getDeviceBootloaderVersion(in String address);
	++ boolean setDeviceFindMe(in String address, in boolean enable);

	++ boolean setDeviceTouchMode(in String address, in int mode);
	++ int getDeviceTouchMode(in String address);

	++ boolean programDeviceIrCode(in String address, in int type, in int code);
	++ boolean eraseDeviceIrCodes(in String address);

	++ ParcelFileDescriptor startDeviceVoiceRecording(in String address);
	++ VoiceRecordingStats getDeviceVoiceRecordingStats(in String address);

	String[] getManufacturers(in String search, in int flags, in int offset, in int limit);
	String[] getModels(in String manufacturer, in String search, in int flags, in int offset, in int limit);
	int[] getCodes(in String manufacturer, in String model, in int flags);
	int[] getCodesFromEDID(in byte[] edid);

	++ boolean startDeviceUpgrade(in String address, in byte[] firmware);
	++ void cancelDeviceUpgrade(in String address);
}


*from-java-to-bluez-c*

Expose the interface to clients

Implement a Service and override onBind() to return your implementation of the
Stub class.

// app/src/main/java/com/sky/blercu/BleRcuService.java

public class BleRcuService extends Service {

  private static class BleRcuServiceBinder extends IBleRcuService.Stub {
    // ...

    @Override
      public String getDeviceMake(String address) {
        if (!checkAddress(address))
          return null;

        BleRcuService service = getService();

        if (service == null) return null;

        // use of JNI ifs
        return `service.jniGetDeviceMake`(service.mQtObject, address);
      }

  } // IBleRcuService

  // JNI ifs
  private native String jniGetDeviceMake(long qtObject, String address);
  // ...

} // end of service


// app/src/main/cpp/service/android/blercuservice.cpp

bool `BleRcuService::registerNatives`()
{
  JNI_ENTRY(`jniGetDeviceMake`,               "(JLjava/lang/String;)Ljava/lang/String;"),
  JNI_ENTRY(jniGetDeviceModel,              "(JLjava/lang/String;)Ljava/lang/String;"),
  ...
}

jstring BleRcuService::jniGetDeviceMake(JNIEnv *env, jobject, jlong qtObject,
                                        jstring address)
{
  return jniGetDeviceInfo(env, qtObject, address, DeviceMake);
}

// -----------------------------------------------------------------------------
/*!
	Returns the given info string for the device with \a address.

	Called from the java / android BleRcuService object in response to a remote
	client request.

 */
jstring BleRcuService::jniGetDeviceInfo(JNIEnv *env, jlong qtObject, jstring address,
                                        DeviceInfoType type)
{
  // convert the address string
  const BleAddress bdaddr(env, address);
  if (Q_UNLIKELY(bdaddr.isNull()))
    return env->NewStringUTF("");

  // get a pointer back to ourselves (set in the constructor when the Java
  // class is created)
  QSharedPointer<BleRcuService> self = fromJniQtObject(qtObject);
  if (Q_UNLIKELY(!self))
    return env->NewStringUTF("");

  QString result;
  self->invokeInMainThread(`&BleRcuService::getDeviceInfoString`, self, bdaddr, type, &result);
  return env->NewString(reinterpret_cast<const jchar*>(result.constData()),
      static_cast<jsize>(result.size()));
}

void BleRcuService::`getDeviceInfoString`(const BleAddress &address,
                                        DeviceInfoType type, QString *value) const
{
}


void BleRcuService::onPairingStateChanged(bool pairing)
{
  *call-from-c-to-java*
  m_javaBleRcuService->callMethod<void>("onPairingStateChanged",
      "(Z)V",
      static_cast<jboolean>(pairing ? JNI_TRUE : JNI_FALSE));
}


<bluez-android-state-change> *state-change*
After implemented new way of pairing and status report:

// from AS spec
INITIALISING: starting up, no paired remotes
IDLE: no activity
SEARCHING: device is searching for RCUs
PAIRING: device is pairing to an RCU
COMPLETE: device successfully paired to an RCU
FAILED: device failed to find or pair to an RCU

app/src/main/cpp/blercu/blercucontroller.cpp
338:    emit stateChanged(PairingState::Searching);
519:    emit stateChanged(PairingState::Pairing);
541:    emit stateChanged(PairingState::Complete);
562:    emit stateChanged(PairingState::Failed);
574:    emit stateChanged(PairingState::Idle);

void BleRcuAdapterBluez::onEnteredAdapterPoweredOffState()
{
  // skip out early if already powered
  if (m_adapterProxy->powered()) {
    m_stateMachine.postEvent(`AdapterPoweredOnEvent`);
    return;
  }
}

void BleRcuAdapterBluez::onAdapterPowerChanged(bool powered)
{
  if (powered) {
    qMilestone("BT adapter powered on");
    m_stateMachine.postDelayedEvent(`AdapterPoweredOnEvent`, 10);

  } else {
    qMilestone("odd, someone has powered down the BT adapter unexpectedly");
    m_stateMachine.postDelayedEvent(AdapterPoweredOffEvent, 100);
  }
}

void BleRcuAdapterBluez::onStateEntry(int state)
{
  case AdapterPoweredOnState:
    onEnteredAdapterPoweredOnState();
    break;
}

void BleRcuAdapterBluez::onEnteredAdapterPoweredOnState()
{
  // signal that the adapter is powered and we got the list of paired devices
  emit poweredInitialised(BleRcuAdapter::privateSignal());
}

// connect to the manager's initialised signal
QObject::connect(adapter.data(), &BleRcuAdapter::poweredInitialised,
    this, &BleRcuControllerImpl::onInitialised,
    Qt::QueuedConnection);


void BleRcuControllerImpl::onInitialised()
{
  // tell clients that the pairing state is changed
  emit stateChanged(PairingState::Idle);
}

662:    emit stateChanged(PairingState::Failed);

app/src/main/cpp/blercu/blercucontroller.h
71:     void stateChanged(int status);

app/src/main/cpp/service/android/blercuservice.h
62:     void onStateChanged(int status);

app/src/main/cpp/service/android/blercuservice.cpp
339:    QObject::connect(controller.data(), &BleRcuController::stateChanged,
340:                     this, &BleRcuService::onStateChanged);
413:void BleRcuService::onStateChanged(int status)
420:    m_javaBleRcuService->callMethod<void>("onStateChanged",
544:            m_javaBleRcuService->callMethod<void>("onDeviceConnectionStateChanged",

app/src/main/aidl/com/sky/blercu/IBleRcuServiceCallback.aidl
12:     void onDeviceConnectionStateChanged(in String address, in boolean connected);
21:     void onStateChanged(in int status);

app/src/main/java/com/sky/blercu/BleRcuService.java
406:    public void onStateChanged(final int status) {
420:                                            mCallbacks.getBroadcastItem(i).onStateChanged(status);

app/src/main/java/com/sky/bluetooth/SkyBroadcastReceiver.java
177:                                    onStateChanged(intent);
237:    private void onStateChanged(final Intent intent) {


<bluez-http-server-start-scanning> *bluez-web-scan* *start-scanning*
Bluetooth RCU Pairing(scan)

https://www.stb.bskyb.com/confluence/display/~grayb/Bluetooth+RCU+Pairing+Without+Infrared
http://192.168.0.100:8280/index.html

app/src/main/cpp/debug/www/index.html

app/src/main/cpp/debug/www/main.dart.js
1796:i5:function(){W.eS("http://"+H.e($.b9)+":"+$.bY+"/bs/peripherals/btremotes/action/scanstart?timeoutms=30000","POST").aa(new F.e1(),null)},
3652:P.eA("post scanstart request finished")},

// SkyBluetoothRcu/app/src/main/cpp/debug/httpserver.cpp

HttpServer::HttpServer(const QSharedPointer<BleRcuController> &controller,
      QObject *parent)
 : QObject(parent)
 , m_httpHandler(new HttpHandler(controller, this))
 , m_wsHandler(new WsHandler(controller, m_httpHandler))
 , m_server(new QHttpServer(m_httpHandler, this))
{}

// app/src/main/cpp/debug/3rdparty/qhttpengine/src/qhttpserver.cpp

  d->process(socket);

// app/src/main/cpp/debug/httphandler.cpp

void HttpHandler::process(QHttpSocket *socket, const QString &path)
{}

void HttpHandler::handlePostRequest(QHttpSocket *socket, const QString &path)
{
  // ask the controller to start the scan
  m_controller->startScanning(timeoutMs);
}


see *bluez-config* for m_deviceNameMatchers

*start-pairing-start-scanning*
bool BleRcuControllerImpl::startScanning(int timeoutMs)
{
  // start the pairing process
  m_scannerStateMachine.start(timeoutMs);
  return true;
}


// app/src/main/cpp/blercu/blercuscannerstatemachine.cpp

void BleRcuScannerStateMachine::`onEnteredFinishedState`()
{
  // if we found a device then tell any clients
  if (!m_foundDevice.address.isNull()) {
    `emit foundPairableDevice(m_foundDevice.address, m_foundDevice.name);`
    m_foundDevice.clear();
  }

  // and we're done
  emit finished();
}

// BleRcuControllerImpl::BleRcuControllerImpl()
//
// // connect to the scanner signals
// QObject::connect(&m_scannerStateMachine,
//                  &BleRcuScannerStateMachine::started,
//                  this,
//                  &BleRcuControllerImpl::onStartedScanning,
//                  Qt::QueuedConnection);
// QObject::connect(&m_scannerStateMachine,
//                  &BleRcuScannerStateMachine::finished,
//                  this,
//                  &BleRcuControllerImpl::onFinishedScanning,
//                  Qt::QueuedConnection);
//
// void
// BleRcuControllerImpl::onStartedScanning()
// {
// 	emit scanningStateChanged(true);
// }
// 
// void
// BleRcuControllerImpl::onFinishedScanning()
// {
// 	emit scanningStateChanged(false);
// }
//
// WsHandler::WsHandler(const QSharedPointer<BleRcuController>& controller,
//                      QObject* parent)
//   : QHttpHandler(parent)
//   , m_controller(controller)
// {
// 	// connect to changes in the controller scanning or pairing status
// 	QObject::connect(controller.data(),
// 	                 &BleRcuController::scanningStateChanged,
// 	                 this,
// 	                 &WsHandler::onBleScanningStateChanged,
// 	                 Qt::QueuedConnection);
// }


BleRcuControllerImpl::BleRcuControllerImpl()
{
  // connect to the signal emitted when the scanner found an RCU device in
  // pairing mode
  QObject::connect(&m_scannerStateMachine, 
      `&BleRcuScannerStateMachine::foundPairableDevice`,
      this, &BleRcuControllerImpl::onFoundPairableDevice,
      Qt::QueuedConnection);
}

void BleRcuControllerImpl::onFoundPairableDevice(const BleAddress &address,
                                                 const QString &name)
{
  qInfo() << "found" << address << "RCU device in pairing mode,"
    << "kicking off the pairing state machine";

  // sanity check (needed?)
  if (m_pairingStateMachine.isRunning()) {
    qWarning("found target device in scan but pairing state machine "
        "already running?");
    return;
  }

*start-pairing-android-from-scan*
  // start pairing the device
  m_pairingStateMachine.start(address, name);

}

// note: this is different start() from pairing mode
// void BleRcuPairingStateMachine::start(const BleAddress &target, const QString &name)
// add "single entry"

void BleRcuPairingStateMachine::start(const BleAddress &target, const QString &name)
{
  m_pairingPrefixes.insert(target.oui(),
      QRegExp(name, Qt::CaseInsensitive, QRegExp::FixedString));
}

I BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[ScannerStateMachine] moving from state StoppingDiscoveryState(3) 
  to FinishedState(4)"
W BleRcuQt: < M:statemachine.cpp F:moveToState L:206 > new states:  (4)
W BleRcuQt: < M:statemachine.cpp F:moveToState L:207 > old states:  (3, 0)
W BleRcuQt: < M:statemachine.cpp F:moveToState L:214 > KT: fire exit only for old state which is not in new states from child to parent state (3)
W BleRcuQt: < M:statemachine.cpp F:moveToState L:214 > KT: fire exit only for old state which is not in new states from child to parent state (0)
W BleRcuQt: < M:statemachine.cpp F:moveToState L:227 > KT: fire enter only for new state which is not in old states from parent to child state (4)
W BleRcuQt: < M:statemachine.cpp F:moveToState L:248 > KT: cleanup events?
W BleRcuQt: < M:statemachine.cpp F:moveToState L:253 > KT: emit finished?

I BleRcuQt: < M:blercucontroller.cpp F:onFoundPairableDevice L:617 
  > found D4:B8:FF:12:E1:A8 RCU device in pairing mode, kicking off the pairing state machine

I BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[PairingStateMachine] moving to state StartingDiscoveryState(2)"
I BleRcuQt: < M:blercupairingstatemachine.cpp F:onStateEntry L:306 > KT: state: 2
I BleRcuQt: < M:blercupairingstatemachine.cpp F:onEnteredStartDiscoveryState L:379 > KT: BleRcuPairingStateMachine::onEnteredStartDiscoveryState
I BleRcuQt: < M:blercupairingstatemachine.cpp F:start L:280 > started pairing targeting D4:B8:FF:12:E1:A8
I BleRcuQt: < M:? F:? L:0 > started bluetooth RCU pairing procedure
I BleRcuQt: < M:blercuadapter.cpp F:onAdapterDiscoveringChanged L:1297 > adapter started discovering
I BleRcuQt: < M:blercupairingstatemachine.cpp F:onDiscoveryChanged L:422 > KT: postEvent(DiscoveryStartedEvent)

	bool startPairing(quint8 pairingCode) override;


<bluez-android-client-example>
/home/keitee/ip/BleRcuExample

// copy-aidl
cp SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl BleRcuExample/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
cp SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuServiceCallback.aidl BleRcuExample/app/src/main/aidl/com/sky/blercu/IBleRcuServiceCallback.aidl

// app/build/generated/aidl_source_output_dir/debug/compileDebugAidl/out/com/sky/blercu/IBleRcuService.java

@Override public boolean isDevicePaired(java.lang.String address) throws android.os.RemoteException
{
  android.os.Parcel _data = android.os.Parcel.obtain();
  android.os.Parcel _reply = android.os.Parcel.obtain();
  boolean _result;
  try {
    _data.writeInterfaceToken(DESCRIPTOR);
    _data.writeString(address);
    mRemote.transact(Stub.TRANSACTION_isDevicePaired, _data, _reply, 0);
    _reply.readException();
    _result = (0!=_reply.readInt());
  }
  finally {
    _reply.recycle();
    _data.recycle();
  }
  return _result;
}


// BleRcuExample/app/src/main/java/com/sky/blercuexample/MainActivity.java

public class MainActivity extends Activity {

  protected void onCreate(Bundle savedInstanceState) {

    // get the blercu service
    mManager = new BleRcuManager(mBleRcuCallback);

    // get the sidebar that displays the device details
    mSideBar = new SideBar(this,
        mManager,
        (TextView)findViewById(R.id.sidebar_heading),
        (ListView)findViewById(R.id.sidebar_list), mLogView);

    *pass-device*
    if (!devices.isEmpty())
      mSideBar.setDeviceDetails(devices.iterator().next());
  }

  private final BleRcuManagerCallback mBleRcuCallback = new BleRcuManagerCallback() {

    @Override
      public void onPairingChanged(BleRcuManager manager, final boolean isPairing) {
        runOnUiThread(new Runnable() {
            public void run() {
            mLogView.i("KT: MainActivity.java, pairing state changed to " + isPairing);
            }
            });
      }
  }

  /**
   * Callbacks from the BleRcu service.
   */
  private final BleRcuManagerCallback mBleRcuCallback = new BleRcuManagerCallback() {

    @Override
      public void onPairingChanged(BleRcuManager manager, final boolean isPairing) {
        runOnUiThread(new Runnable() {
            public void run() {
            mLogView.i("KT: MainActivity.java, pairing state changed to " + isPairing);
            }
            });
      }
  }
} 


// to provice client access to service via IBinder if
// BleRcuExample/app/src/main/java/com/sky/blercu/BleRcuManager.java

public final class BleRcuManager {

  private static synchronized IBleRcuService getService() {
    if(binder != null) {
      sService = IBleRcuService.Stub.asInterface(binder);
    }
  }
}

// BleRcuExample/app/src/main/java/com/sky/blercuexample/SideBar.java

    private void onClicked(int position) {

        if ((mCurrentAddress == null) || mCurrentAddress.isEmpty())
            return;

        if (position == TRIGGER_FINDME_LIST_IDX) {
            if (mFindMeListener != null)
                mFindMeListener.onTriggered(mCurrentAddress);
        }
        if (position == UPGRADE_FIRMWARE_LIST_IDX) {
            if (mFwUpgradeListener != null)
                mFwUpgradeListener.onTriggered(mCurrentAddress);
        }
        if (position == SCANNING_RCU_LIST_IDX) {
            try {
                mLogView.e("KT: startScanning(30000)..");
                mLogView.e("KT: startScanning(30000)..");
                mLogView.e("KT: startScanning(30000)..");
                mDevice.startScanning(30000);
            } catch (RemoteException e) {
                Log.e(TAG, "", e);
            }
        }
        if (position == GET_STATE_LIST_IDX) {
            try {
                *use-device*
                mLogView.e("KT: getState() retuns " + mDevice.getState());
                mLogView.e("KT: getState() retuns " + mDevice.getState());
                mLogView.e("KT: getState() retuns " + mDevice.getState());
            } catch (RemoteException e) {
                Log.e(TAG, "", e);
            }
        }
    }


// /BleRcuExample/app/src/main/java/com/sky/blercu/BleRcuDevice.java

    *use-device*
    @Override
    public String toString() {
        StringBuilder description = new StringBuilder();

        try {
            // isDeviceConnected
            final boolean connected = isConnected();

            // getDeviceId, getDeviceName
            description.append("BleRcu Device ").append(getDeviceId()).append(": ").append(getName()).append("\n");

            description.append("  bdaddr: ").append(getAddress()).append("\n");
            description.append("  connected: ").append(connected);
            if (connected) {
                description.append("\n");
                description.append("  name: ").append(getName()).append("\n");
                description.append("  deviceid: ").append(getDeviceId()).append("\n");

                // getDeviceMake, 
                description.append("  make: ").append(getMake()).append("\n");

                // getDeviceModel
                description.append("  model: ").append(getModel()).append("\n");

                // getDeviceHardwareVersion
                description.append("  hwrev: ").append(getHardwareVersion()).append("\n");

                // getDeviceSerialNumber
                description.append("  serialno: ").append(getSerialNumber()).append("\n");

                // getDeviceSoftwareVersion
                description.append("  rcuswver: ").append(getSoftwareVersion()).append("\n");

                // getDeviceBootloaderVersion
                description.append("  btlswver: ").append(getBootloaderVersion()).append("\n");

                // getDeviceBatteryLevel
                description.append("  batterylevel: ").append(getBatteryLevel());
            }

        } catch (RemoteException e) {
            description.append("Error: ...");
        }
  }


={============================================================================
*kt_dev_skymw_0000* skymw-android-ip150

<ip150>
https://www.stb.bskyb.com/confluence/display/2016/IP150+Releases

Image Location:

Userdebug
https://s3.eu-central-1.amazonaws.com/mgt-ip100-jenkins-output-s3/REL/IP150/QIP100.000.17.00/userdebug/test-keys/IP150-ota.zip
User
https://s3.eu-central-1.amazonaws.com/mgt-ip100-jenkins-output-s3/REL/IP150/QIP100.000.17.00/user/test-keys/IP150-ota.zip


<update-ip-box> <ip100> <ip150> <ip051>
https://www.stb.bskyb.com/confluence/pages/viewpage.action?pageId=54062914
Programming IP100/IP150 via adb

Note: The box and the laptop must be on the same network before you can try to
program with this image from the laptop.
 
adb connect 192.168.1.10:5555 
adb root 
adb connect 192.168.1.10:5555
 
# Push the OTA package
adb push IP150-ota.zip /cache/update.zip
 
#(If it already exists you might see the following- mkdir: '/cache/recovery/':
File exists. Everything is fine and you can proceed to the next step)

adb shell
su
adb shell 'mkdir /cache/recovery/'
adb shell 'echo "--update_package=/cache/update.zip" > /cache/recovery/command'
 
mkdir /cache/recovery/
echo "--update_package=/cache/update.zip" > /cache/recovery/command

# Reboot in recovery mode
adb reboot recovery


<ip100-check-version>
IP100:/ $ getprop | grep version
[ro.build.sky.drivers.version]: [M4.2.10]
[ro.build.version.all_codenames]: [REL]
[ro.build.version.base_os]: []
[ro.build.version.baseline]: [Q08]
[ro.build.version.codename]: [REL]
[ro.build.version.incremental]: [QIPQ00.000.39.00D]


<comp-drivers>
IP150:/vendor/lib/modules # pwd
/vendor/lib/modules


={============================================================================
*kt_dev_skymw_0000* skymw-luna

https://www.stb.bskyb.com/confluence/display/~grayb/Android+Luna+-+Runtime+Service

<git-repo-skymw-luna>
git clone ssh://kyoupark@mgt-ip100-gerrit.skyqstbbuild.com:29418/sky/platform/packages/apps/SkyLunaRuntime
git clone ssh://kyoupark@mgt-ip100-gerrit.skyqstbbuild.com:29418/sky/platform/packages/apps/SkyLunaRuntime SkyLunaRuntime-100

<signing>
android
testkey
android

<upgrade-apk>

https://www.stb.bskyb.com/confluence/display/~grayb/Updating+SkyLunaRuntime+Package

IP150:/system/app # readlink -f SkyLunaRuntime/
/system/app/SkyLunaRuntime


Step 1 - Disable Verity

adb root
adb connect 192.168.0.104
adb disable-verity

If verity is not already disabled you'll need then be prompted to reboot you box
for the change to take effect ... do that.

keitee@keitee-mint:~/Downloads$ adb disable-verity
Verity disabled on /vendor
Verity disabled on /system
Now reboot your device for settings to take effect

adb reboot

adb root
adb connect 192.168.0.104
adb remount
adb shell rm -rf /system/app/SkyLunaRuntime
adb reboot

cd ~/ip/repo/SkyLunaRuntime/apk
adb install SkyLunaRuntime.apk
adb: failed to install SkyLunaRuntime.apk: Failure [INSTALL_FAILED_UPDATE_INCOMPATIBLE: Package com.sky.lunaruntime signatures do not match the previously installed version; ignoring!]

adb install -r -t SkyLunaRuntime.apk

app installation:
 install [-lrtsdg] PACKAGE
 install-multiple [-lrtsdpg] PACKAGE...
     push package(s) to the device and install them
     -l: forward lock application
     -r: replace existing application
     -t: allow test packages
     -s: install application on sdcard
     -d: allow version code downgrade (debuggable packages only)
     -p: partial application install (install-multiple only)
     -g: grant all runtime permissions
 
adb: failed to install SkyLunaRuntime.apk: Failure [INSTALL_FAILED_UPDATE_INCOMPATIBLE: Package com.sky.lunaruntime signatures do not match the previously installed version; ignoring!]

keitee@keitee-mint:~/ip/repo/SkyLunaRuntime/apk$ adb uninstall com.sky.lunaruntime
Success
keitee@keitee-mint:~/ip/repo/SkyLunaRuntime/apk$ adb install SkyLunaRuntime.apk
Success


<android-instant-run>
https://developer.android.com/studio/run#instant-run
https://stackoverflow.com/questions/42672157/how-to-stop-installation-of-multiple-slice-apk-in-android-studio-2-3

Vevo app : http://static.de.skyq.sky.com/softcat-published-content/QIPQ00DE/com.bskyb.vevo/12712444/1.7.5/package.wgt
unzip that
adb install app.apk
Success

adb shell am start -n com.bskyb.vevo/com.bskyb.vevo.MainActivity


<output-so>
~/ip/repo/SkyLunaRuntime$ ls -al app/src/main/libs/armeabi-v7a/libluna.so
-rwxr-xr-x 1 keitee keitee 20257680 Jul 15 14:31 app/src/main/libs/armeabi-v7a/libluna.so


// example/app/src/main/java/com/sky/lunaexample/MainActivity.java

public class MainActivity extends Activity {

  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    // create the runtime object
    mLuna = new Runtime(this, mCallback);
  }
}


<clientlib>
clientlib/src/main/aidl/com/sky/luna/ILunaRuntime.aidl

interface ILunaRuntime
{
  /**
   * Check/download required libs to run the application
   *
   * param callback  - interface used by Minsitro service to notify the client when the loader is ready
   * param parameters
   *            parameters fields:
   *                 * Key Name                   Key type         Explanations
   *                   "sources"                  StringArray      Sources list from where Ministro will download the libs. Make sure you are using ONLY secure locations.
   *                   "repository"               String           Overwrites the default Ministro repository. Possible values: default, stable, testing and unstable
   *                   "required.modules"         StringArray      Required modules by your application
   *                   "application.title"        String           Application name, used to show more informations to user
   *                   "qt.provider"              String           Qt libs provider, currently only "necessitas" is supported.
   *                   "minimum.ministro.api"     Integer          Minimum Ministro API level, used to check if Ministro service compatible with your application. Current API Level is 3 !
   *                   "minimum.qt.version"       Integer          Minimim Qt version (e.g. 0x040800, which means Qt 4.8.0, check http://qt-project.org/doc/qt-4.8/qtglobal.html#QT_VERSION)!
   */
  void requestLoader(in ILunaRuntimeCallback callback, in Bundle parameters);
}


clientlib/build/generated/aidl_source_output_dir/debug/compileDebugAidl/out/com/sky/luna/ILunaRuntime.java


// SkyLunaRuntime/clientlib/src/main/java/com/sky/luna/Runtime.java

public class Runtime {

    /**
     * Async callback object that receives the service updates.
     * <p>
     * The com.sky.lunaruntime service works by requesting the loader providing a
     * callback.  That callback is called with details on the service and triggers
     * the start of the actual runtime.  At the same time we disconnect from the
     * remote service because we no longer need it, all the require details were
     * supplied in the callback.
     *
     */
    private ServiceConnection mRuntimeConnection = new ServiceConnection() {

        private ILunaRuntime mService = null;

        @Override
        public void onServiceConnected(ComponentName name, IBinder service)
        {
            mService = ILunaRuntime.Stub.asInterface(service);
            try {
                if (mService != null) {
                    Bundle parameters = new Bundle();

                    // TODO: add any parameters to the engine request

                    mService.requestLoader(mServiceCallback, parameters);
                }
            } catch (RemoteException e) {
                e.printStackTrace();
            }
        }

        @Override
        public void onServiceDisconnected(ComponentName name) {
            mService = null;
        }

        private ILunaRuntimeCallback mServiceCallback = new ILunaRuntimeCallback.Stub() {

            // this function is called back by LunaRuntime service.
            @Override
            public void loaderReady(final Bundle loaderParams) throws RemoteException {
                mActivity.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        mActivity.unbindService(mRuntimeConnection);
                        launchLuna(loaderParams);
                    }
                });
            }
        };

    };
}


<runtime>

app/src/main/aidl/com/sky/luna/ILunaRuntime.aidl

app/src/main/java/com/sky/lunaruntime/LunaRuntimeService.java

public class LunaRuntimeService extends Service {

    public void onCreate() {

        mRuntimeInterface = new ILunaRuntime.Stub() {

            @Override
            public void requestLoader(ILunaRuntimeCallback callback, Bundle params) throws RemoteException {
            }
    }
}


<so>

// Main Activity of the application, we need to implement SufraceHolder callback
// from which we obtain the actual SufraceView

public class MainActivity extends AppCompatActivity implements SurfaceHolder.Callback {

  @Override
    public void surfaceCreated(SurfaceHolder surfaceHolder) { //Callback which is called when surface is created
      A4TVStatus status;
      mLog.d("SurfaceHolder.Callback surfaceCreated");
      if (IDTVManager != null) {
        if (mSurfaceHolder != null) {
          Surface surface = mSurfaceHolder.getSurface(); //The actual surface object that we want to pass to the AS Service
          try {
            //The following line sets the actual surface to the AS service
            status = IDTVManager.getDisplayControl().setVideoLayerSurface(DISP_PRIMARY_VIDEO_LAYER, new SurfaceBundle(surface));
            if (status != ASStatus.SUCCESS) {
              mLog.e("Error on passing surface to AS service");
            }
            mLog.d("setVideoLayerSurface[" + surface + "]");
          } catch (RemoteException re) {
            re.printStackTrace();
          }
        }
      }
    }
}


// app/src/main/java/com/sky/lunaruntime/Runtime.java

public class Runtime extends BroadcastReceiver implements IRuntime {

  /**
   * Attempts to launch the luna runtime executing the contents of the supplied asset.
   * <p>
   * The asset must be a zip file containing all the 'stuff' for running the app in Luna.
   * It will be extracted to the data area of the app and then luna will be launched
   * from that.
   *
   * @param activity the activity to display and run luna in.
   * @param params the parameters to use for launching the luna runtime.
   *
   * @return true if successful otherwise false.
   */
  @Override
    public boolean launch(Activity activity, Bundle params) {

      // load the native luna library(s) .so
      loadNativeLibraries(params);

      // /app/libs/com.iwedia.comedia.service.comm-release.jar!/com/iwedia/dtv/IDTVManager.class
      //
      // connect to the DTV service early, even before extracting the app
      
      `mDtvManager = new IWediaDTVManager(activity);`
      mDtvManager.connect();

      // latest version already installed, go and run it
      return launchLuna(AppInstaller.installedDirectory(activity), params);

    }

  /**
   * This creates all the surfaces and sets the content view for the activity.
   * All the work to actually kick off Luna is done in the surface creation
   * callbacks, so this is just the view setup code.
   *
   * @param appInstallDir the directory that the app was expanded to.
   * @param params the parameters that were passed to the app to launch.
   *
   * @return true on success or false on failure.
   */
  private boolean launchLuna(final File appInstallDir, final Bundle params) {

    mRenderer = new Renderer(appInstallDir.getAbsolutePath(), mActivity);

    // Create the VideoSurface
    mVideoSurface = `new VideoSurface`(mActivity, `mDtvManager`);

    // Attach the video surface to Luna so it can adjust it
    `mRenderer.addVideoWindow(0, mVideoSurface);`

    // Setup and attach the video surface
    relativeLayout.addView(mVideoSurface, 0,
          new ViewGroup.LayoutParams(
            ViewGroup.LayoutParams.MATCH_PARENT,
            ViewGroup.LayoutParams.MATCH_PARENT));

    // Create the subtitle surface and add to the layout
    mSubtitleSurface = new SubtitleSurface(mActivity, mDtvManager);

    // Setup and attach the subtitle surface

    /*
    https://developer.android.com/reference/android/view/SurfaceView
    setZOrderMediaOverlay
    Added in API level 5
    public void setZOrderMediaOverlay (boolean isMediaOverlay)
    Control whether the surface view's surface is placed on top of another regular surface view in the window (but still behind the window itself). This is typically used to place overlays on top of an underlying media surface view.
    
    Note that this must be set before the surface view's containing window is attached to the window manager.
    mSubtitleSurface.setZOrderMediaOverlay(true);

    https://developer.android.com/reference/android/view/View#layout
    and is a top-down traversal of the view tree. 
     */

    relativeLayout.addView(mSubtitleSurface, 1,
        new RelativeLayout.LayoutParams(
          ViewGroup.LayoutParams.MATCH_PARENT,
          ViewGroup.LayoutParams.MATCH_PARENT));
  }
}


app/src/main/java/com/sky/lunaruntime/VideoSurface.java

class `VideoSurface` extends `IWediaDTVSurface` implements `Native.ILunaVideoSurface` {

  public VideoSurface(Activity activity, IWediaDTVManager dtvManager) {
    super(activity, dtvManager, IWediaDTVManager.`DISP_LAYER_PRIMARY_VIDEO_ID`);

    mActivity = activity;
    mDtvManager = dtvManager;

    // get the current screen dims for clamping the video window to the
    // on screen region
    // get the screen display size
    DisplayMetrics displayMetrics = new DisplayMetrics();
    activity.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);

    // hardcode subtitles surface size based on display metrics
    mScreenWidth = displayMetrics.widthPixels;
    mScreenHeight = displayMetrics.heightPixels;
  }
}

app/src/main/java/com/sky/lunaruntime/IWediaDTVSurface.java

class IWediaDTVSurface extends `SurfaceView` {

  IWediaDTVSurface(Context context, IWediaDTVManager dtvManager, `int layerId`) {
    super(context);

    `getHolder().addCallback(mCallback);`
  }

  private SurfaceHolder.Callback mCallback = `new SurfaceHolder.Callback`() {

    @Override
      public void `surfaceCreated`(SurfaceHolder surfaceHolder) {
        if (DBG) Log.d(TAG, "Surface for layer " + mLayerId + " created");

        // get the underlying surface
        `Surface` surface = surfaceHolder.getSurface();
        if (surface == null) {
          Log.e(TAG, "Failed to get the underlying surface");
          return;
        }

        // and attach to the DTV manager
        `mDtvManager.attachSurface`(`mLayerId`, surface);
      }
  }
}

Android/Sdk/platforms/android-27/android.jar!/android/view/SurfaceView.class
import android.view.SurfaceView;


class IWediaDTVManager {

  /**
   * The possible layer ids to assign a surface to.
   */
  public static final int DISP_LAYER_PRIMARY_VIDEO_ID = 0;
  public static final int DISP_LAYER_GFX_ID_0 = 16;

  public void `attachSurface`(int layerId, Surface surface) {

    // add the surface to our internal map
    mSurfaceMapping.put(layerId, surface);

    // if we have a DTV manager (ie. the service is connected) then add the binding
    if (mDtvManager != null) {
      `bindSurface`(layerId, surface);
    }
  }

  /**
   * Binds the supplied surface to the DTV layer in the service.
   * <p>
   * The lock must be held before calling this method.
   *
   * @param id the id of the layer to bind the surface to.
   * @param surface the surface to be bound.
   * @return true on success, false on failure.
   */
  private boolean bindSurface(int id, Surface surface) {

    // sanity check the lock is held before this call
    if (DBG && !mDtvManagerLock.isLocked())
      Log.e(TAG, "The mDtvManagerLock must be held before calling this method");

    // sanity check we have a DTV manager
    if (mDtvManager == null) {
      Log.e(TAG, "Invalid DtvManager");
      return false;
    }

    // SkyLunaRuntime/app/libs/com.iwedia.comedia.service.comm-release.jar!/com/iwedia/dtv/display/SurfaceBundle.class

    try {
     
      // *plumbing-to-as-iwedia*
      // SkyLunaRuntime/app/libs/com.iwedia.comedia.service.comm-release.jar!/com/iwedia/dtv/display/IDisplayControl.class

      A4TVStatus status = mDtvManager.getDisplayControl()
        .`setVideoLayerSurface`(id, `new SurfaceBundle(surface)`);
      if (status == A4TVStatus.SUCCESS) {
        Log.i(TAG, "Surface for layer " + id + " bound to DTV display controller");
      } else {
        Log.e(TAG, "Error on passing surface to AS service (" + status.getValue() + ")");
        return false;
      }

    } catch (RemoteException e) {
      Log.e(TAG, "Remote exception occurred talking to AS", e);
      return false;
    }

    return true;
  }
}

app/src/main/java/com/sky/lunaruntime/Renderer.java

public class Renderer implements ModdedGLSurfaceView.Renderer {

  @Override
    public void onSurfaceCreated(GL10 gl, EGLConfig config, int width, int height) {

      if (mInited.compareAndSet(false, true)) {

        // get the context, this should never fail, if it does it means the Activity has finished ?
        Context context = mContext.get();
        if (context == null)
          Log.wtf(TAG, "failed to get main android context");

        // initialise the luna engine (even if context is null)
        `com.sky.lunaruntime.Native.initLuna`(context,
            getClass().getClassLoader(),
            width, height,
            mMetrics.xdpi, mMetrics.ydpi);

        // *pass-video-window*
        // register video window(s)
        // public static native void 
        // registerVideoWindow(int id, ILunaVideoSurface videoSurface);

        for(int i = 0; i < mVideoWindows.size(); i++) {
          `com.sky.lunaruntime.Native.registerVideoWindow`(
              `mVideoWindows`.keyAt(i), mVideoWindows.get(i));
        }

        // finally start Luna
        com.sky.lunaruntime.Native.startLuna(mPath, mCallback);
        return;
      }

      Native.surfaceRestored();
    }
}


// app/src/main/java/com/sky/lunaruntime/VideoSurface.java

    /**
     * Called by the luna runtime code when we want to adjust the video window parameters.
     *
     * @param flags 
     * Flags that control the visibility, z-ordering and subtitles for the video
     * surface.
     *
     * @param sourceRect 
     * The cropping rectangle that controls the portion of the video to
     * display on the surface.
     *
     * @param destinationRect 
     * The position on the display to put the video surface.
     *
     * note: (see) only use destination
     */
    @Override
    public void setWindowProperties(int flags, 
        RectF sourceRect, 
        Rect destinationRect) {

      if (DBG) {
        if ((flags & Native.ILunaVideoSurface.VISIBLE) == 0)
          Log.d(TAG, "Luna app requested video to hidden");
        else
          Log.d(TAG, "Luna app requested video size to " + destinationRect);
      }

      if (destinationRect.right > mScreenWidth)
        destinationRect.right = mScreenWidth;
      if (destinationRect.left < 0)
        destinationRect.left = 0;

      if (destinationRect.bottom > mScreenHeight)
        destinationRect.bottom = mScreenHeight;
      if (destinationRect.top < 0)
        destinationRect.top = 0;

      final int x = destinationRect.left;
      final int y = destinationRect.top;
      final int width = destinationRect.width();
      final int height = destinationRect.height();
      final boolean visible = ((flags & Native.ILunaVideoSurface.VISIBLE) != 0);

      mActivity.runOnUiThread(new Runnable() {
          @Override
          public void run() {

          if (!visible) {

          if (DBG)
          Log.d(TAG, "Hiding video window");

          setVisibility(View.INVISIBLE);
          mDtvManager.blankVideo(true);

          } else {

          if (DBG)
          Log.d(TAG, "Setting video window dims to " +
              x + "x" + y + " " + width + "x" + height);

          final RelativeLayout.LayoutParams params =
          new RelativeLayout.LayoutParams(width, height);

          params.setMargins(x, y,
              mScreenWidth - x - width,
              mScreenHeight - y - height);
          setLayoutParams(params);

          setVisibility(View.VISIBLE);
          mDtvManager.blankVideo(false);
          }
          }
      });
    }


={============================================================================
*kt_dev_skymw_0000* skymw-rdk

<skymw-rdk-wiki>
https://wiki.rdkcentral.com/display/RDK/Overview

git clone dwngit@git.stb.bskyb.com:appinfrastructure appinfrastructure-rcu
git checkout feature/NOJIRA_rdk_ble_rcu_daemon

*rdk-sdk* toolchain
https://www.stb.bskyb.com/confluence/display/~grayb/RDK+-+Setting+up+new+Xi6+Units
download arrisxi6-morty-RNE-SDK-2.0-bundle.tgz from google drive and install
it to like /media/keitee/ssd2/rdk/2.0

arrisxi6-morty-RNE-SDK-2.0.sh will install sdk

// sdk root where sdk is installed

`keitee@keitee-mint:~/rdk/2.0`$ 
drwxr-xr-x 4 keitee keitee 4.0K Aug 28 00:01 sysroots/
drwxr-xr-x 5 keitee keitee 4.0K Sep 20 11:07 ../
-rw-r--r-- 1 keitee keitee 3.4K Sep 20 11:07 environment-setup-cortexa15t2hf-neon-rdk-linux-gnueabi
-rw-r--r-- 1 keitee keitee  118 Sep 20 11:07 version-cortexa15t2hf-neon-rdk-linux-gnueabi
-rw-r--r-- 1 keitee keitee  54K Sep 20 11:07 site-config-cortexa15t2hf-neon-rdk-linux-gnueabi


<skymw-rdk-build-cmake>

TO BUILD BLE RCU USING RDK toolchain.

The top level CMake file is in the 

CMAKE_PREFIX_PATH=/home/keitee/Qt/5.12.6/gcc_64 cmake ..

appinfrastructure/RDK/BluetoothRcu 

The first step is to setup a cmake toolchain file to point to you local RDK
SDK (aka firebolt). You can either modify one of the toolchain files in the
RDK/BluetoothRcu/cmake directory, or use them as a base to write a new one.

*specify-toolchain-cmake*
cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/rdk-toolchain.cmake ..
cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain.cmake -DCMAKE_BUILD_TYPE=DEBUG ..

// 
keitee@keitee-mint:~/rdk/appinfrastructure/RDK/BluetoothRcu/cmake$ 
more toolchain.cmake

# this one is important
SET(CMAKE_SYSTEM_NAME Linux)
#this one not so much
SET(CMAKE_SYSTEM_VERSION 1)

set(RDK_SDK /home/keitee/rdk/2.0)

set( RDK_TOOLCHAIN_BASE ${RDK_SDK}/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi )
set( RDK_TOOLCHAIN_PREFIX ${RDK_TOOLCHAIN_BASE}/arm-rdk-linux-gnueabi- )

# compiler flags as set by the RDK SDK
set( RDK_DEFAULT_CFLAGS "-march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -mtune=cortex-a7 -fno-omit-frame-pointer -fno-optimize-sibling-calls -ggdb --sysroot=${RDK_SDK}/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi" )


# specify the cross compiler
SET(CMAKE_C_COMPILER   ${RDK_TOOLCHAIN_PREFIX}gcc )
SET(CMAKE_CXX_COMPILER ${RDK_TOOLCHAIN_PREFIX}g++ )

# the following is needed as the OSX toolchain uses the "/lib/ld-linux.so.3"
# linker path, whereas in the RDK rootfs they haven't added the symlink so
# instead we force it to be the original file
# (nb if you run 'file' on the built binary you can see the difference)
set( CMAKE_EXE_LINKER_FLAGS "-Wl,--dynamic-linker,/lib/ld-2.24.so" )

set( CMAKE_C_FLAGS "${RDK_DEFAULT_CFLAGS}" CACHE STRING "" FORCE )
set( CMAKE_CXX_FLAGS "${RDK_DEFAULT_CFLAGS}" CACHE STRING "" FORCE )

# where is the target environment
#SET( CMAKE_FIND_ROOT_PATH "${RDK_TOOLCHAIN_BASE}" )
SET( CMAKE_FIND_ROOT_PATH "${RDK_SDK}/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/" )
SET( CMAKE_SYSROOT "${RDK_SDK}/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/" )


# search for programs in the build host directories
SET( CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER )

# for libraries and headers in the target directories
set( CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY )
set( CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY )

# set the path to the Qt SDK
set( QT5_SDK, ${RDK_SDK}/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/usr )
set( QT5_ABI_SDK "${QT5_SDK}" )
# set( OE_QMAKE_PATH_EXTERNAL_HOST_BINS "/Volumes/Katalix/RDK/firebolt/Qt-build/rdk_armv7/bin" )
set( OE_QMAKE_PATH_EXTERNAL_HOST_BINS "/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin" )


// set env

Assuming that the SDK is installed in sdk_root directory, issue the following command
source  <sdk_root>/environment-setup-<chipset>-rdk-linux-gnueabi

...
export SDKTARGETSYSROOT=/home/keitee/rdk/2.0/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi

export PATH=
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/sbin:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/bin:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/sbin:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/../x86_64-rdksdk-linux/bin:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-uclibc:
  /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-musl:$PATH

export CCACHE_PATH=/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin:/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/../x86_64-rdksdk-linux/bin:/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi:/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-uclibc:/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-musl:$CCACHE_PATH
export PKG_CONFIG_SYSROOT_DIR=$SDKTARGETSYSROOT
export PKG_CONFIG_PATH=$SDKTARGETSYSROOT/usr/lib/pkgconfig:$SDKTARGETSYSROOT/usr/share/pkgconfig
export CONFIG_SITE=/home/keitee/rdk/2.0/site-config-cortexa15t2hf-neon-rdk-linux-gnueabi
export OECORE_NATIVE_SYSROOT="/home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux"
export OECORE_TARGET_SYSROOT="$SDKTARGETSYSROOT"
export OECORE_ACLOCAL_OPTS="-I /home/keitee/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/share/aclocal"
unset command_not_found_handle
export CC="arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=$SDKTARGETSYSROOT"
export CXX="arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=$SDKTARGETSYSROOT"
export AR=arm-rdk-linux-gnueabi-ar
export NM=arm-rdk-linux-gnueabi-nm
export M4=m4
export TARGET_PREFIX=arm-rdk-linux-gnueabi-
...

keitee@keitee-mint:~/rdk/2.0/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi$ ls -al
total 35428
drwxr-xr-x 2 keitee keitee    4096 Aug 28 01:02 .
drwxr-xr-x 8 keitee keitee    4096 Sep 20 11:07 ..
-rwxr-xr-x 1 keitee keitee  836736 Sep 20 11:07 arm-rdk-linux-gnueabi-addr2line
...


// build sample
keitee@keitee-mint:~/rdk/arrisxi6-morty-RNE-SDK-2.0/samples$ ./build_samples.sh

wayland-egl-bnxs-1.0+gitr999-r0 do_compile: ./arm-rdk-linux-gnueabi-libtool
--tag=CC   --mode=compile arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb
-mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer
-fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
-DHAVE_CONFIG_H -I. -I../../../../../../../generic/wayland-egl-bnxs -I./cfg
-DUSE_WAYLAND_EGL -I../../../../../../../generic/wayland-egl-bnxs/protocol
-I../../../../../../../generic/wayland-egl-bnxs/refsw17.3/vc5
-DBDBG_DEBUG_BUILD=1 -DNEXUS_SERVER_SUPPORT=1 -D_GNU_SOURCE=1 -DLINUX -pipe
-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
-DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE -marm -mfloat-abi=hard
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
-DCOMCAST_RDK_SPECIFIC_CHANGE=0 -DNEXUS_POWER_MANAGEMENT -DBHSM_AUTO_TEST
-DBSP_BSECK_COMMAND -DCOMMON_CRYPTO_28NM_CHIP=1
-DCOMMON_CRYPTO_ZEUS_VERSION=42 -DCOMMON_CRYPTO_28NM_CHIP=1
-DCOMMON_CRYPTO_ZEUS_VERSION=42 -DNEXUS_PLATFORM_VERSION_MAJOR=17
-DNEXUS_PLATFORM_VERSION_MINOR=3 -DNEXUS_HAS_XPT_DMA -DNEXUS_GISB_ARB
-DNEXUS_WKTMR -DNEXUS_CONFIG_IMAGE -DNEXUS_MODE_proxy
-DNEXUS_NUM_SID_VIDEO_DECODERS=1 -DNEXUS_PLATFORM=97268 -DMOTO_PLATFORM=1
-DNEXUS_PLATFORM_MOTO_XI6=1 -DBCHP_CHIP=7268 -DBCHP_VER=BCHP_VER_B0
-DNEXUS_PROFILE_OS_linuxuser -DB_REFSW_MINIMAL -DBBCP_SUPPORT
-DNEXUS_HAS_FRONTEND_SATFE_IMG -DNEXUS_FRONTEND_45216 -DNEXUS_HAS_MXT=1
-DNEXUS_FRONTEND_45308_FW -DNEXUS_FRONTEND_45316_FW
-DNEXUS_HAS_FRONTEND_SATFE_IMG -DNEXUS_FRONTEND_45308 -DNEXUS_HAS_MXT=1
-DNEXUS_FRONTEND_SAT -DNEXUS_HAS_FRONTEND_CTFE_IMG -DNEXUS_FRONTEND_3466
-DNEXUS_HAS_MXT=1 -DNEXUS_HAS_FRONTEND_CTFE_IMG -DNEXUS_FRONTEND_3461_BX
-DNEXUS_FRONTEND_3461 -DNEXUS_HAS_FRONTEND_CTFE_IMG -DNEXUS_FRONTEND_3158
-DNEXUS_HAS_MXT=1 -DNEXUS_SECURITY_FW_SIGN=1 -DNEXUS_SECURITY_API_VERSION=1
-DNEXUS_SECURITY_ZEUS_VERSION_MAJOR=4 -DNEXUS_SECURITY_ZEUS_VERSION_MINOR=2
-DNEXUS_SECURITY_ZEUS_VERSION_SUBMINOR=1 -DNEXUS_SECURITY_HAS_ASKM=1
-DNEXUS_SECURITY_EXT_KEY_IV -DNEXUS_SECURITY_CHIP_SIZE=28 -DNEXUS_KEYLADDER=1
-DNEXUS_HAS_KEYLADDER_SUPPORT=1 -DNEXUS_OTPMSP=1 -DNEXUS_OTPID=1
-DNEXUS_OTPKEY=1 -DNEXUS_USERCMD=1 -DNEXUS_SECURITY_SECURERSA=1
-DNEXUS_SECURITY_RAWCMD=1 -DNEXUS_SECURITY_BSECK_COMMAND=1
-DNEXUS_HAS_HDCP_2X_SUPPORT -DBXPT_MESG_DONT_AUTO_ENABLE_PID_CHANNEL
-DB_REFSW_DSS_SUPPORT=1 -DNEXUS_OTFPVR=1 -DB_REFSW_DSS_SUPPORT=1
-DBVDC_SUPPORT_BVN_DEBUG=1 -DNEXUS_VBI_SUPPORT=1 -DNEXUS_HAS_HDCP_2X_SUPPORT
-DNEXUS_HAS_PLATFORM -DNEXUS_HAS_CORE -DNEXUS_HAS_PWM -DNEXUS_HAS_I2C
-DNEXUS_HAS_GPIO -DNEXUS_HAS_LED -DNEXUS_HAS_IR_INPUT -DNEXUS_HAS_IR_BLASTER
-DNEXUS_HAS_INPUT_CAPTURE -DNEXUS_HAS_FRONTEND -DNEXUS_HAS_SPI
-DNEXUS_HAS_SECURITY -DNEXUS_HAS_SAGE -DNEXUS_HAS_PICTURE_DECODER
-DNEXUS_HAS_HDMI_INPUT -DNEXUS_HAS_GRAPHICSV3D -DNEXUS_HAS_TRANSPORT
-DNEXUS_HAS_VIDEO_DECODER -DNEXUS_HAS_AUDIO -DNEXUS_HAS_SURFACE
-DNEXUS_HAS_ASTM -DNEXUS_HAS_DISPLAY -DNEXUS_HAS_GRAPHICS2D
-DNEXUS_HAS_SYNC_CHANNEL -DNEXUS_HAS_HDMI_OUTPUT -DNEXUS_HAS_CEC
-DNEXUS_HAS_SMARTCARD -DNEXUS_HAS_SURFACE_COMPOSITOR -DNEXUS_HAS_INPUT_ROUTER
-DNEXUS_HAS_SIMPLE_DECODER -DNEXUS_HAS_FILE -DNEXUS_HAS_PLAYBACK
-DNEXUS_HAS_RECORD -DBDBG_NO_WRN=1 -DBDBG_NO_MSG=1
-DB_REFSW_DEBUG_ASSERT_NO_FAIL=1 -DB_REFSW_STRICT_PRINTF_FORMAT=1
-DBCHP_PWR_SUPPORT -DBCHP_PWR_HAS_RESOURCES -DBCHP_RESET_COMMON
-DBCHP_UNIFIED_IMPL -DRDK_USE_NXCLIENT
-std=c99 -DNXPL_PLATFORM_NSC -DNXCLIENT_SUPPORT -DNO_OPENVG
-Os -pipe -g -feliminate-unused-debug-types
-c -o refsw17.3/vc5/common/libwayland_egl_la-display_framework.lo `test -f
'refsw17.3/vc5/common/display_framework.c' || echo
'../../../../../../../generic/wayland-egl-bnxs/'`refsw17.3/vc5/common/display_framework.c


<rdk-ssh> *rdk-xi6*
https://www.stb.bskyb.com/confluence/display/~grayb/RDK+-+Setting+up+new+Xi6+Units
// Enable SSH Access (every time when boots)

By default the image provides an ssh service (dropbear) that is locked down.
The following can be used to spin up a new instance of dropbear that allow
root login.

// since "/opt" is writable on xi6
dropbearkey -t rsa -f /opt/sky-ssh-hostkey
dropbear -p :10022 -P /var/run/dropbear-sky.pid -r /opt/sky-ssh-hostkey -B


// have to run this when reboots
dropbearkey -t rsa -f /tmp/sky-ssh-hostkey
dropbear -p :10022 -P /var/run/dropbear2.pid -r /tmp/sky-ssh-hostkey -B

You then need to open the 10022 port:

iptables -I INPUT 2 -p tcp --dport 10022 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -I OUTPUT 1 -p tcp --sport 10022 -m conntrack --ctstate ESTABLISHED -j ACCEPT

ssh -p 10022 root@<STBIP>

// copy binary to
/tmp/data


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-bitbake-build

RDK build using bitbake

*skymw-rdk-token* *xi6-token*

LDEBUG: ../Src/Token/TokenManager.cpp(364): Restoring Token
LDEBUG: ../Src/Token/TokenDatabase.cpp(961): Uses Remaining: 175 -> 174


____________START_TEXT_COPY_ON_NEXT_LINE____________
REQUEST_TYPE=TOKEN_REPLACEMENT
KEY_ID=BE74AFD4377F0035C428C6FCC9AB9AE821E53FEC
DIGEST_ALGOR=SHA256
5819F8377901
000C010D0303FC4A
000000000003251F
-----BEGIN SIGNATURE-----
Y4CXpTreqYsMDG/ddhjEAGKanmINmQn0XqDmGqR+KpT4jb1r7a7+4effYMBVlvdTxEaZ5rn8msSB
H02f45mp5cIvK3DIIhMTDsyx1XAgNP1w2ypst5TL+Q8YNA6obR3soy8ojodFGwUeY0GH28Iz4m8R
0bZy7VFFq+Ao+iOEddOciCEZGpkHWYcQAXxiXDJVUYn6Dll6zPmjG+Q3Z+Wd/mTLWS3YKz2pguRh
mp6v3ddxIJjwqI0j5qxWcZzmo1rpMm3+NKEWF136HJFovke8pFkdGgJDxeYdtqtNcdDDhrxx75Za
bRQqmjX4mm8VQsTu+0LQNaJocU3r+LzEdV38ig==
-----END SIGNATURE-----
-----BEGIN CERTIFICATE-----
MIIDpDCCAoygAwIBAgIQWgy0OGs6ItNhZIv55/lVkDANBgkqhkiG9w0BAQsFADBkMQswCQYDVQQG
EwJVUzEaMBgGA1UEChMRQVJSSVMgR3JvdXAsIEluYy4xGTAXBgNVBAsTEEhXUk9CIERldmljZSBQ
S0kxHjAcBgNVBAMTFUhXUk9CIERldmljZSBTdWItQ0EgMTAeFw0xNzExMTUyMTQwMDhaFw0zNzEx
MTUyMTQwMDhaMFsxCzAJBgNVBAYTAlVTMRowGAYDVQQKExFBUlJJUyBHcm91cCwgSW5jLjEZMBcG
A1UECxMQSFdST0IgRGV2aWNlIFBLSTEVMBMGA1UEAxMMMDAwMDZERjRDREIzMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtjE43eh0oFKzbvbmFtmhD15X4i0haus+sN0gVKEhNmDoblSV
3STLEB6Inyh1sQ23k0qHc7Lnf6Vb6SU/Y5iOrPvXTjAoa+QENGQUu56j8amxtKRY94idkQGTnoKt
2c0mhOmfGqGEqylkPUczS8P4rMgXEYd7iY0p/In3viCjhpfElu7cqg/8nKarmQOlrcppGqHt5ufX
EuOqEmGUbuu61LVNqh6Xamlr/MlGXq06wQbqgr+q1YpsLjq88X3SAYudHYJW8c75scu/TZcMHEfn
aOSfjvfgAi3tKFRlXpywKfiD6iaOz6sI8jov+zJ+QNS/pgtfPkceL+QAsDnyaOlagQIDAQABo1sw
WTAOBgNVHQ8BAf8EBAMCBaAwJgYDVR0lAQH/BBwwGgYEVR0lAAYIKwYBBQUHAwIGCCsGAQUFBwMB
MB8GA1UdIwQYMBaAFBeQDfBocJybpGQ1QrajALHxAL4+MA0GCSqGSIb3DQEBCwUAA4IBAQCrLywR
TbBrxcQUKc7wFqHvZM8Pojd4RW/TxfGhyX3Mr8FC7cmNrDP3tvkU4l/Eniafea/16ckLnVOKfxhY
PTvzMsGwYuCiri/dEkwcsL86JVg6DNl/Pp0SRwv3Eiov2hLfJPT9a1+cRObyjrCZGKTks9F7GOMr
faR8GBSi5vttnqysNbrjeQv9PnI1uruiguEZqvEGKSFVMkgZmRbN5/q9Txvt+hAsoJejUzLMa0Sh
CHxtbcznBDshs/lHk4GbY/rpbudarI4dgOUUDNbemN7UDGTpIrBvNj85ChCpCO2Vm/Xqlflqr60J
8dWAuRqNhmnyUgRqTwqfGSk7GUrV/I9y
-----END CERTIFICATE-----

__________END_TEXT_COPY_WITH_PREVIOUS_LINE__________


Invalid data (error=23)!  Length of string received = 0 chars
TKN: AAEBXAAAAAAAAzCdAQAAAFgZ+Dd5AQAMAQ0DA/xKAAAAAAAAAAAAAAAAAAAAAAAAXe9VJQAAAAQAAAAEAABG7AACAAQAJ40AAAQABAAAAMgADAAIAAAAAAADJR9eL0QM4uHAsfQfqGJ8mE//59AEMHwU09MBe1Mqd5ruVLjXm57dw+DHJ9S9QRGoSOH9cLjkeVAeg7saAZojFKJiWukst+mpeCPxsu8k1xg0xl9NGz5klLy238hk1A+ZjOzmqHLrs7kh+GW8qjKyLV8BGk9dJ95+4uIEECxz1c8jqG9Ltp+Ou2L4zV7bud1S3zqimh71PxKPriBQdDlYBWjBBkHvQFfoYgJ+IHcmOq6hUGIlUJWInDzFAkGCd9vlFzMCICtAknCLDtsQoNlEUe2KILWjeAIcW3jDbTsUAP/izpKhZ0jYavyBawrdau7aRwW6Jf8NfJzV3fXTVyv0jC+v
LDEBUG: ../Src/Token/TokenDatabase.cpp(961): Uses Remaining: 200 -> 199
LDEBUG: ../Src/Token/AuthorizationManager.cpp(306): AM: Platform Authentication Disabled
LDEBUG: ../Src/Token/AuthorizationManager.cpp(285): AM: CPE DL Enabled
TKN:


<skymw-rdk-build> *rdk-account*

https://www.stb.bskyb.com/confluence/pages/viewpage.action?pageId=65678532
https://www.stb.bskyb.com/jira/browse/LLDEV-23

Nexus Repository Manager OSS 2.13.0-01
https://nexus.teamccp.com/nexus/#nexus-search;quick~refsw

https://gerrit.teamccp.com/login/%23%2F

bp-kpark257
# myLd8pCt5
t!!

ssh -i ~/.ssh/id_rsa_comcast -p 29418 bp-bgray640@gerrit.teamccp.com
ssh -p 29418 bp-bgray640@gerrit.teamccp.com
ssh -p 29418 gerrit.teamccp.com

https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=~grayb&title=RDK+-+Building+Xi6+Image


Checkout and Configure
repo init -u ssh://gerrit.teamccp.com:29418/rdk/yocto_oe/manifests/arris-bcm-manifest -m arrisxi6-morty.xml -b topic/fr_qtb_upgrade -g all --no-repo-verify --repo-url=ssh://gerrit.teamccp.com:29418/rdk/tools/git-repo
// repo sync --verify --no-tags -c --no-clone-bundle
repo sync --no-tags -c --no-clone-bundle


// sky layer
git clone ssh://bp-kpark257@gerrit.teamccp.com:29418/rdk/yocto_oe/layers/meta-rdk-sky -b topic/fr_qtb_upgrade
git clone ssh://gerrit.teamccp.com:29418/rdk/yocto_oe/layers/meta-rdk-sky -b topic/fr_qtb_upgrade

// // you'll need to do this each time you use the shell:
// source meta-rdk/setup-environment

// for sky layer
source meta-rdk-sky/setup-environment

10) meta-rdk-oem-arris-broadcom/meta-arrisxi6/conf/machine/arrisxi6.conf                        23) openembedded-core/meta/conf/machine/qemux86-64.conf
11) meta-rdk-oem-arris-broadcom/meta-arrisxi6/conf/machine/arrisxi6-morty.conf                  24) openembedded-core/meta/conf/machine/qemux86.conf

Please enter your choice of machine [1..25]:

# Select arrisxi6-morty.conf from the available images

11

this will create "build-arrisxi6-morty" and cd into it.

Then update local.conf to make this a Firebolt image:

echo '
DISTRO_FEATURES_append = " build_rne"
' >> conf/local.conf

# run command to "Build Flash Image"
# keitee@keitee-mint:/media/keitee/ssd2/build-arrisxi6-morty$ which bitbake
# /media/keitee/ssd2/openembedded-core/bitbake/bin/bitbake
# keitee@keitee-mint:/media/keitee/ssd2/build-arrisxi6-morty$ bitbake --version
# BitBake Build Tool Core version 1.32.0

bitbake comcast-mediaclient-vbn-image


<check-id-pass>
wget https://nexus.teamccp.com/nexus/content/repositories/arris_bcm_xi6/strt/PKGCMP_STRT_Xi6_v02.02.bin


<rdk-patch>

patch -p1 < /media/keitee/ssd2/qemu.patch
patch -p1 < /media/keitee/ssd2/e2fsprogs.patch
patch -p1 < /media/keitee/ssd2/ucresolve.patch

/media/keitee/ssd2/direct_build_3/build-arrisxi6-morty/

cd tmp/work/x86_64-linux/breakpad-native/svn-r0/trunk/src/client/linux/dump_writer_common
patch -p1 < /media/keitee/ssd2/ucontext_reader.cc.patch
patch -p1 < /media/keitee/ssd2/ucontext_reader.h.patch

cd tmp/work/x86_64-linux/breakpad-native/svn-r0/trunk/src/client/linux/minidump_writer
patch -p1 < /media/keitee/ssd2/minidump_writer.patch

cd tmp/work/x86_64-linux/breakpad-native/svn-r0/trunk/src/client/linux/microdump_writer
patch -p1 < /media/keitee/ssd2/microdump_writer.patch

cd tmp/work/x86_64-linux/breakpad-native/svn-r0/trunk/src/client/linux/handler
patch -p1 < /media/keitee/ssd2/exception_handler.patch


<x> xione
build-realtekxi1/tmp/work/x86_64-linux/qtbase-native/5.1.1-r0/git/source/qtbase/src/corelib/thread/qmutex_linux.cpp

static void checkElapsedTimerIsTrivial()
{
//    Q_STATIC_ASSERT(std::has_trivial_default_constructor<QT_PREPEND_NAMESPACE(QElapsedTimer)>::value);
}


<x>
./tmp/work/x86_64-linux/comcast-hostfwtool-native/1.99+git9ca95b4cb935051d6011b375101d20de6e44d3b5-r0/tigress-2.2a/App/Cilly.pm


// More threads on WPE
// meta-rdk-ext/recipes-extended/wpe-webkit/wpe-webkit.inc
// PARALLEL_MAKE_pn-wpe-webkit ?= "-j48" (org value)
// PARALLEL_MAKE_pn-wpe-webkit ?= "-j8"
sed -i s/j48/j8/ ./meta-rdk-ext/recipes-extended/wpe-webkit/wpe-webkit.inc

ag PARALLEL_MAKE_pn-wpe-webkit ./meta-rdk-ext/recipes-extended/wpe-webkit/wpe-webkit.inc


<skymw-rdk-build-docker>
export TIMESTART=`date +%s`
export DNAME=ubuntu14-morty-$TIMESTART

# rename this to suit you
export SHARENAME=docker_share_jeff
export SHAREBASE=`pwd`

docker run --name=$DNAME -d -v $SHAREBASE/$SHARENAME:/home/developer -it tony-working0image /bin/bash
docker attach $DNAME

# Now In Container
export DEBIAN_FRONTEND=noninteractive

apt-get -y update && apt-get -y upgrade -u && apt-get -y install \
rsync \
ssh \
build-essential \
curl \
git \
gawk \
wget \
git-core \
diffstat \
unzip \
texinfo \
gcc-multilib \
build-essential \
chrpath \
socat \
libsdl1.2-dev \
xterm \
binfmt-support \
qemu \
qemu-user-static

echo "dash dash/sh boolean false" | debconf-set-selections
dpkg-reconfigure dash

useradd   -s /bin/bash developer
mkdir -p /home/developer
chown -R developer:developer /home/developer


echo '
developer    ALL=(ALL) NOPASSWD: ALL
' >> /etc/sudoers

passwd -d developer


su developer
cd ~

mkdir .ssh/

# echo "
# Host *
#    ServerAliveInterval 30
#    ServerAliveCountMax 20
# Host gerrit.teamccp.com
# HostName gerrit.teamccp.com
# User <bp-username>
# IdentityFile ~/.ssh/id_rsa
# " >> ~/.ssh/config

echo "
Host *
   ServerAliveInterval 30
   ServerAliveCountMax 20
Host gerrit.teamccp.com
    HostName gerrit.teamccp.com
    ServerAliveInterval 30
    ServerAliveCountMax 20
    User bp-bgray640
" >> ~/.ssh/config


## Copy over the ssh keys
sudo cp -r ~/keys/id* ~/.ssh/
sudo chown -R developer:developer /home/developer/.ssh

Check connectivity works with something like
ssh -i ~/.ssh/id_rsa_comcast -p 29418 bp-bgray640@gerrit.teamccp.com
ssh -p 29418 bp-kpark257@gerrit.teamccp.com

# echo "
# machine nexus.teamccp.com login bp-mmariy569 password 6lRxqACt5
# " >>~/.netrc

echo "
machine nexus.teamccp.com login bp-kpark257 password myLd8pCt5
" >>~/.netrc


git config --global user.email "kit.park@sky.uk"
git config --global user.name "Kit Park"

sudo apt-get install locales
sudo locale-gen en_US.UTF-8
sudo dpkg-reconfigure locales
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8


mkdir -p Llama/Xi6/
cd Llama/Xi6/
ssh -p 29418 gerrit.teamccp.com


// install repo
// repo version v1.12.16-163-ga103ccc
//
mkdir -p ~/bin/
curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod a+x ~/bin/repo
export PATH="~/bin:$PATH"

repo init -u ssh://gerrit.teamccp.com:29418/rdk/yocto_oe/manifests/arris-bcm-manifest -m arrisxi6-morty.xml -b topic/fr_qtb_upgrade -g all --no-repo-verify --repo-url=ssh://gerrit.teamccp.com:29418/rdk/tools/git-repo
repo sync --verify --no-tags -c --no-clone-bundle


// // add sky layer
// git clone ssh://gerrit.teamccp.com:29418/rdk/yocto_oe/layers/meta-rdk-sky -b topic/fr_qtb_upgrade


// Choose arrisxi6-morty.conf
// source meta-rdk/setup-environment

// sky
source meta-rdk-sky/setup-environment


echo '
DISTRO_FEATURES_append = " build_rne"
' >> conf/local.conf


echo '
BB_GENERATE_MIRROR_TARBALLS = "1"
' >> conf/local.conf


bitbake -c fetchall comcast-mediaclient-vbn-image
bitbake comcast-mediaclient-vbn-image
bitbake comcast-mediaclient-vbn-image -c populate_sdk

see *bitbake-flash*

Serial port parameters are 115200, 8N1

When the box is powered then you will see the Broadcom bootloader spin up.
ctrl-c this to interrupt the boot process (this takes slightly longer to take
    effect than you'd think from a typical BCM box)

Type usbflash

This will flash the package.bin from the USB stick, and reboot


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-refsw

// recipe name

broadcom-refsw                               :unified-14.2-r0        :unified-17.3-r4.2


// recipe appends

/// main
./meta-rdk-soc-broadcom/meta-brcm/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bb

PR = "r4.2"

-rw-r--r--  1 keitee keitee  12K Nov 13 15:13 broadcom-refsw_unified-17.3.bb
drwxr-xr-x  2 keitee keitee 4.0K Nov 13 15:13 broadcom-refsw_unified-17.3/
-
keitee@kit-ubuntu:/media/keitee/ssd2/direct_build/meta-rdk-soc-broadcom/meta-brcm/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3$ ls -al
total 124
drwxr-xr-x  2 keitee keitee  4096 Nov 13 15:13 .
drwxr-xr-x 12 keitee keitee  4096 Dec 16 09:47 ..
-rw-r--r--  1 keitee keitee 81717 Nov 13 15:13 17_3_mips_refsw.patch
-rw-r--r--  1 keitee keitee   736 Nov 13 15:13 delete_undefined_lock_initializer.patch
-rw-r--r--  1 keitee keitee   458 Nov 13 15:13 mpod_17.3_excessive_console_logging.patch
-rw-r--r--  1 keitee keitee   366 Nov 13 15:13 nxserver.service
-rw-r--r--  1 keitee keitee  1868 Nov 13 15:13 SWRDKV133.ms12_16.2.patch
-rw-r--r--  1 keitee keitee 12352 Nov 13 15:13 unified_17.3_docsis_memory_leak_fix.patch
-rw-r--r--  1 keitee keitee  1481 Nov 13 15:13 wifi_utils.sh


-rw-r--r--  1 keitee keitee   366 Nov 13 15:13 nxserver.service
[Unit]
Description=Nxserver Daemon
After=systemd-modules-load.service
Requires=systemd-modules-load.service

[Service]
Type=notify
ExecStartPre=/bin/sleep 3
ExecStartPre=/usr/bin/nexus_dfb install
ExecStart=/usr/bin/nxserver -audio_output_delay 500 -video_cdb 5 -ir none -ms11
ExecStop=/bin/kill -9 $MAINPID
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target


///
./meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_%.bbappend

#   append /media/keitee/ssd2/direct_build/meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_%.bbappend:88

export RDK_USE_NXCLIENT="y"

#One of these fixes the issue, need to find which one, for now added all
CFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
CXXFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
TARGET_CXXFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
NEXUS_EXTRA_CFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
BUILD_CFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
BUILD_CPPFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
BUILD_CXXFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"
TARGET_CFLAGS += "-DCOMCAST_RDK_SPECIFIC_CHANGE=0"


///
/meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bbappend

FILESEXTRAPATHS_prepend := "${THISDIR}/${BPN}-${PV}:"

/meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw-unified-17.3$ ll
-rw-r--r-- 1 keitee keitee  150 Nov 13 15:13 nxserver_svp.cfg
-rw-r--r-- 1 keitee keitee  595 Nov 13 15:13 nxserver.service.svp
-rw-r--r-- 1 keitee keitee  529 Nov 13 15:13 nxserver.service
-rw-r--r-- 1 keitee keitee   84 Nov 13 15:13 nxserver.cfg

-rw-r--r-- 1 keitee keitee  595 Nov 13 15:13 nxserver.service.svp

[Unit]
Description=Nxserver Daemon
After=systemd-modules-load.service
Requires=systemd-modules-load.service

[Service]
Type=notify
Environment="SAGEBIN_PATH=/usr/lib"
ExecStartPre=/bin/sleep 3
ExecStartPre=/usr/bin/nexus_dfb install
ExecStartPre=/bin/sh -c 'modprobe wakeup_drv; if [ ! -e /dev/wake0 ]; then mknod -m a=rw /dev/wake0 c 34 0; fi'
ExecStart=/usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M
ExecStop=/bin/kill -9 $MAINPID
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target

gvimdiff /media/keitee/ssd2/direct_build/meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw-unified-17.3/nxserver.service.svp \
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/nxserver.service


///
/meta-rdk-sky/meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bbappend

FILESEXTRAPATHS_prepend := "${THISDIR}/files:"

do_install_append () {
    sed -i 's?^ExecStart=.*$?ExecStart=/usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080?' ${WORKDIR}/nxserver.service.svp; \
    cp ${WORKDIR}/nxserver.service.svp ${WORKDIR}/nxserver.service; \
    install -m 0644 ${WORKDIR}/nxserver.service ${D}${systemd_unitdir}/system; \
    install -m 0644 ${WORKDIR}/nexus/lib/secbuf/include/*.h ${D}${D_BRCM_SDK}/include; \
}


///
/meta-rdk-oem-arris-broadcom/meta-arrisxi6/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bbappend
# Arris patches for Xi6
FILESEXTRAPATHS_prepend := "${THISDIR}/${BPN}-${PV}:"
SRC_URI += "file://bp3_path.patch"


*do-patch-work*

https://wiki.rdkcentral.com/display/RDK/RDK-V+Modify+and+Build+Components

Apply Patch and Build Component

1) Add the below line to the recipe of the component you need to modify.

        SRC_URI += "file://<name>.patch"                              

        eg: SRC_URI += "file://temp.patch" in  meta-rdk-video/recipes-extended/devicesettings/devicesettings_git.bb          

  SRC_URI += "file://nxserverlib.patch"

2) Create a folder named "files" in the same folder of recipe. 

eg: In meta-rdk-video/recipes-extended/devicesettings/


3) Create a blank file with the same name given in the recipe.

         touch files/<name>.patch 

         eg: touch files/temp.patch  


4) bitbake <recipe> -c devshell

         eg: bitbake devicesettings -c devshell 


5) Do "quilt top" and verify if the patch file is reflected there. 

    eg:

        # quilt top
        patches/temp.patch

  root@kit-ubuntu:/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2# quilt series
  patches/mpod_17.3_excessive_console_logging.patch
  patches/unified_17.3_docsis_memory_leak_fix.patch
  patches/nxserverlib.patch
  patches/17.3_xi6_Arris.patch
  patches/Makefile.app.patch
  patches/bp3_path.patch


6) quilt add "filename which you need to modify" (If multiple files are there, then add all those)

        eg: quilt add Makefile.am configure.ac

  root@kit-ubuntu:/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2# quilt add patches/nxserverlib.patch
  File patches/nxserverlib.patch is located below patches/

7) Make necessary modifications required for these files.

--- BSEAV/cable/lib/mpod/src/driver/mpoddrv_os.c.orig	2018-02-15 10:53:15.174984274 -0800
+++ BSEAV/cable/lib/mpod/src/driver/mpoddrv_os.c	2018-02-15 10:46:52.462984588 -0800


8) quilt refresh


9) Verify if your modifications are reflected in the patch file.

         vi patches/<name>.patch

10) Now replace this patch file with original one in files folder.

         eg: cp patches/temp.patch ~/.../meta-rdk-video/recipes-extended/devicesettings/files/temp.patch

 

11) exit

 

12) Do a clean and then build.

bitbake -ccleanall devicesettings 

bitbake devicesettings 



meta-rdk-soc-broadcom/meta-brcm/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bb
# Broadcom Reference Software Unified Release 17.1

// from log
NOTE: recipe broadcom-refsw-unified-17.3-r4.2: task do_unpack: Succeeded

15:SRC_URI += "https://${NEXUS_BROADCOM_BASE}/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz;name=trinity"

meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bbappend
8:SRC_URI  += "${@bb.utils.contains('DISTRO_FEATURES','sage_svp','file://nxserver.service.svp','file://nxserver.service',d)}"
40:                cp ${WORKDIR}/nxserver.service.svp ${WORKDIR}/nxserver.service; \

./meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw-unified-17.3/nxserver.service.svp

// do not have fbsize
ExecStart=/usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M


meta-brcm/recipes-bsp/broadcom-refsw/broadcom-refsw-trinity-unified-13.2/nexus-nxserver.patch


refsw_src_link -> /media/keitee/ssd2/direct_build_3/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2


# do not error out on bbappends for missing recipes (mysql5)
#BB_DANGLINGAPPENDS_WARNONLY = "true"
NEXUS_BROADCOM_SDK_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom_sdk"
NEXUS_BROADCOM_SDK_3PIP_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom_sdk_restricted/components"
NEXUS_BROADCOM_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom/components"
BROADCOM_SDK_GIT ?= "git://${RDK_GIT}/sdk/broadcom"


meta-brcm97268/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bbappend
6:    sed -i 's?^ExecStart=.*$?ExecStart=/usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080?' ${WORKDIR}/nxserver.service.svp; \


*rdk-refsw-recipe*

// meta-rdk-soc-broadcom/`meta-brcm`/recipes-bsp/broadcom-refsw/broadcom-refsw_unified-17.3.bb
# Broadcom Reference Software Unified Release 17.3

require recipes-bsp/broadcom-refsw/broadcom-refsw-common.inc


SRC_URI += "https://${NEXUS_BROADCOM_BASE}/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz;name=trinity"
// SRC_URI += "https://${NEXUS_BROADCOM_BASE}/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/
// refsw_release_unified_20170922-2.1.tgz;name=trinity"

// log.do_fetch()
--2019-11-25 09:50:30--  https://nexus.teamccp.com/nexus/content/repositories/broadcom/components/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz


https://nexus.teamccp.com/nexus/#nexus-search;gav~components.sdk.refsw.17_3~refsw_release_unified_20170922~~~~kw,versionexpand


NOTE: Unpacking /media/keitee/ssd2/direct_build_3/meta-rdk-soc-broadcom/meta-brcm97268/recipes-bsp/broadcom-refsw/ broadcom-refsw-unified-17.3/nxserver.service to /media/keitee/ssd2/direct_build_3/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
      /broadcom-refsw/unified-17.3-r4.2/

*rdk-refsw-listtasks*

https://wiki.rdkcentral.com/display/RDK/Yocto+Developer%27s+Guide

D = “${WORKDIR}/${image}” (Destination dir)

bitbake -c listtasks broadcom_refsw

broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_build                       Default task for a recipe - depends on all other normal tasks required to 'build' a recipe
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_checkuri                    Validates the SRC_URI value
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_checkuriall                 Validates the SRC_URI value for all recipes required to build a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_clean                       Removes all output files for a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_cleanall                    Removes all output files, shared state cache, and downloaded source files for a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_cleansstate                 Removes all output files and shared state cache for a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_compile                     Compiles the source in the compilation directory
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_configure                   Configures the source by enabling and disabling any build-time and configuration options for the software being built
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_devpyshell                  Starts an interactive Python shell for development/debugging
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_devshell                    Starts a shell with the environment set up for development/debugging
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_fetch                       Fetches the source code
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_fetchall                    Fetches all remote sources required to build a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_install                     Copies files from the compilation directory to a holding area
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_listtasks                   Lists all defined tasks for a target
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_make_scripts
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package                     Analyzes the content of the holding area and splits it into subsets based on available packages and files
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package_qa                  Runs QA checks on packaged files
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package_qa_setscene         Runs QA checks on packaged files (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package_setscene            Analyzes the content of the holding area and splits it into subsets based on available packages and files (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package_write_ipk           Creates the actual IPK packages and places them in the Package Feed area
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_package_write_ipk_setscene  Creates the actual IPK packages and places them in the Package Feed area (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_packagedata                 Creates package metadata used by the build system to generate the final packages
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_packagedata_setscene        Creates package metadata used by the build system to generate the final packages (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_patch                       Locates patch files and applies them to the source code
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_populate_lic                Writes license information for the recipe that is collected later when the image is constructed
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_populate_lic_setscene       Writes license information for the recipe that is collected later when the image is constructed (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_populate_sysroot            Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_populate_sysroot_setscene   Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes (setscene version)
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_unpack                      Unpacks the source code into a working directory
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_unpack_3pip_additional
broadcom-refsw-unified-17.3-r4.2 do_listtasks: do_unpack_additional

bitbake -c cleanall broadcom-refsw

bitbake -vDDD broadcom-refsw |& tee broadcom-refsw-bitbake

DEBUG: `broadcom-refsw-unified-17.3-r4.2 do_fetch`: Executing python function do_fetch
Fetching https://nexus.teamccp.com/nexus/content/repositories/broadcom/components/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz;name=trinity using command '/usr/bin/env wget -t 2 -T 30 -nv --passive-ftp --no-check-certificate -P /media/keitee/ssd2/direct_build/build-arrisxi6-morty/../downloads 'https://nexus.teamccp.com/nexus/content/repositories/broadcom/components/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz''
DEBUG: broadcom-refsw-unified-17.3-r4.2 do_fetch: Fetcher accessed the network with the 
command /usr/bin/env wget -t 2 -T 30 -nv --passive-ftp --no-check-certificate -P 
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/../downloads 'https://nexus.teamccp.com/nexus/content/repositories/broadcom/components/sdk/refsw/17_3/refsw_release_unified_20170922/2.1/refsw_release_unified_20170922-2.1.tgz'

// do_unpack_additional() from
// require recipes-bsp/broadcom-refsw/broadcom-refsw-common.inc

// cd ${WORKDIR}
+ cd /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /`tmp/work`/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2


DEBUG: Executing task `do_compile`

// do_compile() from
// require recipes-bsp/broadcom-refsw/broadcom-refsw-common.inc
DEBUG: broadcom-refsw-unified-17.3-r4.2 do_compile: Executing shell function do_compile

broadcom-refsw-unified-17.3-r4.2 do_compile: + CC_NOFP=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
+ oe_runmake CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/build
+ oe_runmake_call CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C
broadcom-refsw-unified-17.3-r4.2 do_compile:  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/build
+ bbnote make -j 12 KERNEL_SRC=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work-shared/arrisxi6-morty/kernel-source CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/build
+ [ -p /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/temp/fifo.28550 ]
+ printf %b\0 bbnote make -j 12 KERNEL_SRC=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work-shared/arrisxi6-morty/kernel-source CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/build

+ make -j 12
KERNEL_SRC=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work-shared/arrisxi6-morty/kernel-source
CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon
-mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon
-mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer
-fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
LD=arm-rdk-linux-gnueabi-ld
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm
AS=arm-rdk-linux-gnueabi-as  
-C /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /`tmp/work`/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/build


build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/temp
lrwxrwxrwx 1 keitee keitee 20 Nov 19 11:16 run.do_compile -> run.do_compile.14722*

  oe_runmake CC="${CC_NOFP}" CXX="$CXX" LD="$LD" AR="$AR" NM="$NM" AS="$AS" -C /media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient server;

+ oe_runmake_call CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient server
+ bbnote make -j 12 KERNEL_SRC=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/work-shared/arrisxi6-morty/kernel-source CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon   -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty LD=arm-rdk-linux-gnueabi-ld --sysroot=/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty  AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build_2/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient server

+ make -j 12
KERNEL_SRC=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work-shared/arrisxi6-morty/kernel-source
CC=arm-rdk-linux-gnueabi-gcc  -march=armv7ve -mthumb -mfpu=neon
-mcpu=cortex-a15 -fno-omit-frame-pointer -fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
CXX=arm-rdk-linux-gnueabi-g++  -march=armv7ve -mthumb -mfpu=neon
-mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer
-fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
LD=arm-rdk-linux-gnueabi-ld
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
AR=arm-rdk-linux-gnueabi-ar NM=arm-rdk-linux-gnueabi-nm
AS=arm-rdk-linux-gnueabi-as  -C /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient server

/media/keitee/ssd2/direct_build_2/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient/server/Makefile


broadcom-refsw-unified-17.3-r4.2 do_compile: [Compile... nxserverlib.o]

DEBUG: Executing task `do_install`

// do_install() from
// require recipes-bsp/broadcom-refsw/broadcom-refsw-common.inc
DEBUG: broadcom-refsw-unified-17.3-r4.2 do_install: Executing shell function do_install
broadcom-refsw-unified-17.3-r4.2 do_install: 
+ cd /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2

// D = “${WORKDIR}/${image}” (Destination dir)
// install -d -m 0755 ${D}/lib/modules/${KERNEL_VERSION}/misc
+ install -d -m 0755 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/image
  /lib/modules/4.1.51-1.19/misc


// install -d ${D}${systemd_unitdir}/system ${D}${bindir}
broadcom-refsw-unified-17.3-r4.2 do_install: 
+ install -d 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2
  /image/lib/systemd/system 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2
  `/image/usr/bin`

broadcom-refsw-unified-17.3-r4.2 do_install: 
+ install -m 0755 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2/obj.97268/bin/nxserver 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2`/image/usr/bin`

DEBUG: Executing task do_populate_sysroot
DEBUG: Executing task `do_package`


NOTE: image -> sysroot-destdir but not all?? for example, nxserver is not in
sysroot-destdir


// openembedded-core/meta/classes/staging.bbclass
// python do_populate_sysroot () {
// }

broadcom-refsw-unified-17.3-r4.2 `do_populate_sysroot`: + sysroot_stage_all

// sysroot_stage_dirs ${D} ${SYSROOT_DESTDIR}

+ sysroot_stage_dirs 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/image 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/`sysroot-destdir`

+ from=/media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2`/image`

+ to=/media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2`/sysroot-destdir`

+ sysroot_stage_dir 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2/image/usr/include 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2/`sysroot-destdir/usr/include`

+ src=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/image/usr/include
+ dest=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/sysroot-destdir/usr/include
+ [ ! -d /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/image/usr/include ]
+ mkdir -p /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/sysroot-destdir/usr/include

DEBUG: broadcom-refsw-unified-17.3-r4.2 do_populate_sysroot: Shell function sysroot_stage_all finished
DEBUG: broadcom-refsw-unified-17.3-r4.2 do_populate_sysroot: Executing python function sysroot_strip


DEBUG: broadcom-refsw-unified-17.3-r4.2 do_package: Executing python function do_package

// openembedded-core/meta/classes/package.bbclass
broadcom-refsw-unified-17.3-r4.2 do_package: + breakpad_package_preprocess


// openembedded-core/meta/classes/staging.bbclass
// python sysroot_strip () {

DEBUG: broadcom-refsw-unified-17.3-r4.2 do_populate_sysroot: runstrip: 
'arm-rdk-linux-gnueabi-strip' --remove-section=.comment --remove-section=.note --strip-unneeded --remove-section=.pdr '/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/sysroot-destdir/usr/lib/libbip_base.so'

}}} // from full log


NOTE:
HOW copy 
  `/broadcom-refsw/unified-17.3-r4.2/sysroot-destdir` ->
  `/comcast-mediaclient-vbn-image/1.0-r0/rootfs`/etc/hosts ???

keitee@kit-ubuntu:/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2$ find . -name nxserver | xargs ls -al
-rwxr-xr-x 1 keitee keitee 1149520 Nov 28 08:46 ./image/usr/bin/nxserver
-rwxr-xr-x 1 keitee keitee 1149520 Nov 28 08:45 ./obj.97268/bin/nxserver
-rwxr-xr-x 1 keitee keitee 1149520 Nov 28 08:45 ./obj.97268/nexus/nxclient/arm-linux/server/nxserver
-rwxr-xr-x 2 keitee keitee  856248 Nov 28 08:46 ./packages-split/broadcom-refsw-dbg/usr/bin/.debug/nxserver
-rwxr-xr-x 2 keitee keitee  295916 Nov 28 08:46 ./packages-split/broadcom-refsw/usr/bin/nxserver
-rwxr-xr-x 2 keitee keitee  856248 Nov 28 08:46 ./package/usr/bin/.debug/nxserver
-rwxr-xr-x 2 keitee keitee  295916 Nov 28 08:46 ./package/usr/bin/nxserver


keitee@kit-ubuntu:/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0$ find . -name nxserver | xargs ls -al
-rwxr-xr-x 1 keitee keitee 856248 Nov 28 08:46 ./rootfs-dbg/usr/bin/.debug/nxserver
-rwxr-xr-x 1 keitee keitee 295916 Nov 28 08:46 ./rootfs/usr/bin/nxserver


NOTE:
HOW can use rootfs-dbg which has non-stripped images?


*bitbake-clang*
export PATH=/home/keitee/bin:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/home/keitee/bin:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/keitee/.fzf/bin
            /home/keitee/bin:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/home/keitee/.local/bin:/home/keitee/bin:/home/keitee/works/bitbake-1.40/bin:/home/keitee/bin:/home/keitee/vim/bin:/home/keitee/git/kb/bin:/home/keitee/.cargo/bin:/home/keitee/Downloads/git-repo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/keitee/.fzf/bin


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-bitbake

https://wiki.rdkcentral.com/display/RDK/RDK-V+Yocto+Build+Framework

The build/ directory

conf/ : Configuration files - image specific and layer configuration.
downloads/ : This folder stores the downloaded upstream tarballs of the packages used in the builds, facilitating fast rebuilds. If the content of this folder is deleted, the builds will go and refetch the source tars again.
sstate-cache/ : Shared state cache, it is the local prebuilt store used by all builds. It will be populated when you do the builds. It is important to keep this directory safe for sstate reuse.
tmp/ : Holds all the build.
tmp/buildstats/ : Build statistics for all packages built (CPU usage, elapsed time, host, timestamps).
tmp/deploy/ : Final output of the build.
tmp/deploy/images/ : Contains the complete images built by the OpenEmbedded build system. These images are used to flash the target.
tmp/work/ : Set of specific work directories, split by architecture. They are used to unpack, configure and build the packages. Contains the patched sources, generated objects and logs.
tmp/sysroots/ : Shared libraries and headers used to compile packages for the target but also for the host.

Note: build-<machine> (e.g. build-oem-platform) - This is the object/build
directory, all objects and intermediate files for all components are stored in
this folder. if you want to do a clean build you can delete this folder, then
run ./meta-cmf/setup-environment and rebuild. The build will be very fast
since it will reuse the sstate (prebuilts) during this build, assuming the
sstate-cache directory was populated with previous builds already.


*bitbake-flash* *bitbake-image*

Actually Flashing

Look for the build image. This will be under the usual location under the
build directory of

build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty$ 

// filename changes to date when build is made
// `20191108100350`sdy_MTY_FBT.bin

cp AX061AEI_VBN_fr_qtb_upgrade_20191106094759sdy_MTY_FBT.bin /media/keitee/6085-9899/package.bin


*bitbake-image*
meta-rdk-comcast/recipes-core/images/comcast-mediaclient-vbn-image.bb
meta-rdk-comcast/recipes-core/images/comcast-mediaclient-image.bb

require recipes-core/images/sdk-common.inc
meta-rdk/recipes-core/images/sdk-common.inc

bitbake -vDDD comcast-mediaclient-vbn-image |& tee broadcom-refsw-image
bitbake comcast-mediaclient-vbn-image


bitbake -c listtasks comcast-mediaclient-vbn-image

comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_build                       Default task for a recipe - depends on all other normal tasks required to 'build' a recipe
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_bundle_initramfs            Combines an initial ramdisk image and kernel together to form a single image
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_check_image_size
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_checkuri                    Validates the SRC_URI value
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_checkuriall                 Validates the SRC_URI value for all recipes required to build a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_clean                       Removes all output files for a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_cleanall                    Removes all output files, shared state cache, and downloaded source files for a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_cleansstate                 Removes all output files and shared state cache for a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_compile                     Compiles the source in the compilation directory
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_configure                   Configures the source by enabling and disabling any build-time and configuration options for the software being built
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_create_arris_image
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_devpyshell                  Starts an interactive Python shell for development/debugging
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_devshell                    Starts a shell with the environment set up for development/debugging
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_fetch                       Fetches the source code
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_fetchall                    Fetches all remote sources required to build a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_complete
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_cpio
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_debugfs_tar
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_qa
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_squashfs_xz
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_image_tar
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_install                     Copies files from the compilation directory to a holding area
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_listtasks                   Lists all defined tasks for a target
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package                     Analyzes the content of the holding area and splits it into subsets based on available packages and files
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package_qa                  Runs QA checks on packaged files
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package_qa_setscene         Runs QA checks on packaged files (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package_setscene            Analyzes the content of the holding area and splits it into subsets based on available packages and files (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package_write_ipk           Creates the actual IPK packages and places them in the Package Feed area
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_package_write_ipk_setscene  Creates the actual IPK packages and places them in the Package Feed area (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_packagedata                 Creates package metadata used by the build system to generate the final packages
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_packagedata_setscene        Creates package metadata used by the build system to generate the final packages (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_patch                       Locates patch files and applies them to the source code
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_lic                Writes license information for the recipe that is collected later when the image is constructed
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_lic_setscene       Writes license information for the recipe that is collected later when the image is constructed (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_sdk                Creates the file and directory structure for an installable SDK
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_sdk_ext
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_sysroot            Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_populate_sysroot_setscene   Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes (setscene version)
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_rootfs                      Creates the root filesystem (file and directory structure) for an image
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_rootfs_wicenv
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_sdk_depends
comcast-mediaclient-vbn-image-1.0-r0 do_listtasks: do_unpack                      Unpacks the source code into a working directory


*bitbake-image-do-rootfs*
DEBUG: Executing task do_rootfs

// openembedded-core/meta/classes/image.bbclass
// fakeroot `python do_rootfs` ()
// inherit rootfs-postcommands

// openembedded-core/meta/classes/rootfs-postcommands.bbclass
// ssh_allow_empty_password ()

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + ssh_allow_empty_password

// openembedded-core/meta/classes/rootfs-postcommands.bbclass
// ssh_allow_empty_password ()
// #
// # A hook function to support read-only-rootfs IMAGE_FEATURES
// #
// read_only_rootfs_hook () {

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + read_only_rootfs_hook
+ sed -i -e '/^[#[:space:]]*\/dev\/root/{s/defaults/ro/;s/\([[:space:]]*[[:digit:]]\)\([[:space:]]*\)[[:digit:]]$/\1\20/}' /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/fstab

DEBUG: comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: Executing shell function systemd_create_users
comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + systemd_create_users
+ for conffile in /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/usr/lib/sysusers.d/systemd.conf /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/usr/lib/sysusers.d/systemd-remote.conf

+ package_type=VBN

DEBUG: comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: Executing shell function copy_vbn_sshkeys
comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + copy_vbn_sshkeys

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + install -m 0644 /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear/vbn-keys/authorized_keys /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear/vbn-keys/known_hosts /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + rm -rf /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear/dev-keys

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + rm -rf /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear/vbn-keys

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + rm -rf /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/dropbear/id_dropbear

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + ret=0


comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: + copy_etc_hosts
+ '[' -f /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/hosts ']'

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: 
+ install -m 0644 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  `/comcast-mediaclient-vbn-image/1.0-r0/rootfs`/etc/hosts 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/rootfs/etc/hosts.default


+ python /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/x86_64-linux/usr/share/lxc-container-generator/src/__main__.py -r /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs -s -t SOC_VER=UNKNOWN,OE_VER=2.2,version=debug,RDK_VER=1,RDKHAL_VER=1 /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/x86_64-linux/usr/share/lxc-container-generator/secure/lxc_conf_netflix.xml /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/x86_64-linux/usr/share/lxc-container-generator/secure/lxc_conf_netflix_append.xml

comcast-mediaclient-vbn-image-1.0-r0 do_rootfs: 
===================================================================
	GENERATE netflix CONTAINER
==================================================================


DEBUG: Executing task `do_image`

+ R=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs

comcast-mediaclient-vbn-image-1.0-r0 do_image: + MODEL_NUM=AX061AEI


*bitbake-image-do-image-tar*
DEBUG: Executing task `do_image_tar`
DEBUG: comcast-mediaclient-vbn-image-1.0-r0 do_image_tar: Executing `shell function` do_image_tar

comcast-mediaclient-vbn-image-1.0-r0 do_image_debugfs_tar: + do_image_debugfs_tar

comcast-mediaclient-vbn-image-1.0-r0 do_image_tar: + do_image_tar
+ tar -cvf
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0
  /deploy-comcast-mediaclient-vbn-image-image-complete/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.tar
  -C
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0
  /rootfs
  .

+ tar -cvf
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0
  /deploy-comcast-mediaclient-vbn-image-image-complete/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT-`dbg.rootfs.tar`
  -C
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0
  /rootfs-dbg
  .

build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/temp/run.do_image_tar 

run.do_image_tar
bitbake -c compile broadcom_refsw

// *nxserver* outputs

build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2/temp
lrwxrwxrwx 1 keitee keitee 20 Nov 19 11:16 run.do_compile -> run.do_compile.14722*


build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /broadcom-refsw/unified-17.3-r4.2/obj.97268$ find . -name nxserver | xargs ls -al

-rwxr-xr-x 1 keitee keitee 1155196 Nov 28 14:45 ./bin/nxserver
-rwxr-xr-x 1 keitee keitee 1155196 Nov 28 14:45 ./nexus/nxclient/arm-linux/server/nxserver

// copy non-stripped to

cp /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/obj.97268/bin/nxserver \
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/usr/bin/nxserver
do_image_tar() {
  tar -cvf /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/deploy-comcast-mediaclient-vbn-image-image-complete/AX061AEI_VBN_fr_qtb_upgrade_20191202094823sdy_MTY_FBT.rootfs.tar -C /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs .
  cd /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/deploy-comcast-mediaclient-vbn-image-image-complete
  gzip -f -9 -c AX061AEI_VBN_fr_qtb_upgrade_20191202094823sdy_MTY_FBT.rootfs.tar > AX061AEI_VBN_fr_qtb_upgrade_20191202094823sdy_MTY_FBT.rootfs.tar.gz
  rm AX061AEI_VBN_fr_qtb_upgrade_20191202094823sdy_MTY_FBT.rootfs.tar
}


*nxserver-service*
// build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
// `/comcast-mediaclient-vbn-image/1.0-r0/rootfs/lib/systemd/system/nxserver.service`

comcast-mediaclient-vbn-image-1.0-r0 do_image_tar: `./lib/systemd/system/nxserver.service`

NOTE: recipe comcast-mediaclient-vbn-image-1.0-r0: task do_image_tar: Succeeded


DEBUG: comcast-mediaclient-vbn-image-1.0-r0 do_image_squashfs_xz: Executing `shell function` do_image_squashfs_xz

note: create *squashfs*
comcast-mediaclient-vbn-image/1.0-r0/deploy-comcast-mediaclient-vbn-image-image-complete
  /`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz`


DEBUG: Executing task do_image_squashfs_xz

comcast-mediaclient-vbn-image-1.0-r0 do_image_squashfs_xz: + do_image_squashfs_xz
+ mksquashfs /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/`rootfs`

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/`deploy-comcast-mediaclient-vbn-image-image-complete`/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz 
  -noappend -comp xz

comcast-mediaclient-vbn-image-1.0-r0 do_image_squashfs_xz: Parallel mksquashfs: Using 12 processors
Creating 4.0 filesystem on 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/deploy-comcast-mediaclient-vbn-image-image-complete/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz, block size 131072.


DEBUG: Executing task do_image_complete

DEBUG: Executing task do_create_arris_image


// meta-rdk-oem-arris-broadcom/meta-arrisxi6/classes/arris-image.bbclass
// do_create_arris_image() 
//
// install -d ${S}
// install -m755 ${STAGING_BINDIR_NATIVE}/build_scripts/ArrisInstallScript.sh ${S}
//
// note: comment out to run modified buildImage.sh
// #    install -m755 ${STAGING_BINDIR_NATIVE}/build_scripts/buildImage.sh ${S}

// create a dir
+ install -d 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/arris_pack

comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: 
  + install -m755 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp
  /sysroots/x86_64-linux/usr/bin/build_scripts/buildImage.sh 

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/arris_pack


NOTE: somehow two squash fs image are the same !!!
NOTE: $ diff /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz 
NOTE:  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/deploy-comcast-mediaclient-vbn-image-image-complete/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz
NOTE:

*bitbake-squashfs-from-rootfs*
cd /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty
mksquashfs /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs ./AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz -noappend -comp xz
`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz`
ls -al comcast-mediaclient-vbn-image-arrisxi6-morty.squashfs-xz
cp comcast-mediaclient-vbn-image-arrisxi6-morty.bin /media/keitee/FAT/package.bin


note: use sym link. copy and rename to rootfs.squashfs-xz

/tmp/deploy/images/arrisxi6-morty/comcast-mediaclient-vbn-image-arrisxi6-morty.squashfs-xz 
`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.rootfs.squashfs-xz`
->
comcast-mediaclient-vbn-image/1.0-r0/arris_pack/`rootfs.squashfs-xz`

  + install -m644 
  /media/keitee/ssd2/direct_build/build-arrisxi6-morty
  /`tmp/deploy/images`/arrisxi6-morty/`comcast-mediaclient-vbn-image-arrisxi6-morty.squashfs-xz`

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  `/comcast-mediaclient-vbn-image/1.0-r0/arris_pack/rootfs.squashfs-xz`


comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: 
  + cd /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/arris_pack


note: makes final image using root fs
`rootfs.squashfs-xz` -> `AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin`

comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: 
  + /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/arris_pack/`buildImage.sh`

  /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty
  /`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin` 

  AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT


comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: 
  + IMAGE_INITRAMFS=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi
  /comcast-mediaclient-vbn-image/1.0-r0/arris_pack/`rootfs.squashfs-xz`

  + PACKAGE_TO=/media/keitee/ssd2/direct_build/build-arrisxi6-morty
  `/tmp/deploy/images/arrisxi6-morty/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin`


comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: `Platform Package Creator` version 1.89_XI6 May 14 2018 09:01:06

Reading configuration from platform.cfg

Creating package file package.bin

Using prepackaged STRT component from PKGCMP_STRT_Xi6_BCM7268B0.bin
Information for component STRT:
  Version info:
    Version = 2.2
    Description: STRT Xi6 7268 02.02 2018-05-11
    controlledSequenceName = STRT_MOT
    otpEpoch             = 0x00000000
    nvSequence           = 1
  Loader:
    destAddr             = 0x0000000000000000
    copyLength           = 0x0005789E
    executeAddrOffset    = 0x00000000
  format               = RAW
  ExecParams:          [none]
  execSize             = 0x0005789E

Creating component KERN from exec file /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/arris_pack/zImage
Information for component KERN:
  Version info:
    Version = 0.0
    Description: AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin
    controlledSequenceName = PLAT_XRE_OCAP
    otpEpoch             = 0x00000000
    nvSequence           = 1
  Loader:
    destAddr             = 0x0000000000000000
    copyLength           = 0x005E5A18
    executeAddrOffset    = 0x00000000
  format               = ZIMG
  ExecParams:          vmalloc=577m bmem=894m@428m usb-storage.delay_use=7 blkdevparts=mmcblk0boot0:38640(EMMC_BT0.FSBL.A),92432(EMMC_BT0.BSECK.BBL),124K(EMMC_BT0.FSBL.B),4K(EMMC_BT0.EMMS.SLOT1),128K(EMMC_BT0.PFD.SLOT1),128K(EMMC_BT0.PFD.RESERVED),128K(EMMC_BT0.AVS_MEMS.FIXED),256K(EMMC_BT0.PFD.COMCAST),128K(EMMC_BT0.RESERVED.RSVD_1),256K(EMMC_BT0.BSECK.BFW_MFG),1792K(EMMC_BT0.RESERVED.RSVD_2),1M(EMMC_BT0.SSBL.FIXED);mmcblk0boot1:38640(EMMC_BT1.FSBL.A),92432(EMMC_BT1.BSECK.BBL),124K(EMMC_BT1.FSBL.B),4K(EMMC_BT1.EMMS.SLOT1),256K(EMMC_BT1.PFD.RSVD1),128K(EMMC_BT1.AVS_MEMS.PRGRMBL),256K(EMMC_BT1.PFD.RSVD2),128K(EMMC_BT1.RESERVED.RSVD_1),256K(EMMC_BT1.BSECK.BFW_FLD),1792K(EMMC_BT1.RESERVED.RSVD_2),1M(EMMC_BT1.SSBL.PRGRMBL);mmcblk0gp0:128M(EMMC_GP0.RECOVERY.PRGRMBL),384M(EMMC_GP0.PLATFORM.PING),384M(EMMC_GP0.PLATFORM.PONG),32M(EMMC_GP0.NON_VOL.CRITICAL),32M(EMMC_GP0.NON_VOL.FLSHCRWL);mmcblk0gp2:32M(EMMC_GP2.RECOVERY.FIXED);mmcblk0:6104220K(EMMC0.TIMESHFT.SLOT1),100K(EMMC0.OOPS.DUMP),71680K(EMMC0.OPT.NON_CRITICAL)
  execSize             = 0x005E5A18
  FrontPanelDisplay:
    FrontPanelDisplay text: boot

PackageDirectory:
  Package version:
    Version = 0.0
    Description: AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/deploy/images/arrisxi6-morty/AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin. UNSIGNED
    controlledSequenceName = 
    swCtrlOtpEpoch     = EPOCH_NOT_SPECIFIED
    nvSequence         = UNKNOWN_NV_SEQUENCE
  Components:
    Component 0:
      componentTag         = STRT
      offset               = 0x00000000
      componentLength      = 0x000579A0
      hashType             = 1
      controlledSequenceName = STRT_MOT
      otpEpoch             = 0x00000000
      nvSequence           = 1
    Component 1:
      componentTag         = INSC
      offset               = 0x000579A0
      componentLength      = 0x00000174
      hashType             = 1
      controlledSequenceName = PLAT_XRE_OCAP
      otpEpoch             = 0x00000000
      nvSequence           = 1
    Component 2:
      componentTag         = KERN
      offset               = 0x00057B14
      componentLength      = 0x005E5FB8
      hashType             = 1
      controlledSequenceName = PLAT_XRE_OCAP
      otpEpoch             = 0x00000000
      nvSequence           = 1
    Component 3:
      componentTag         = DISP
      offset               = 0x0063DACC
      componentLength      = 0x0000007C
      hashType             = 1
      controlledSequenceName = 
      swCtrlOtpEpoch     = EPOCH_NOT_SPECIFIED
      nvSequence     
comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image:     = UNKNOWN_NV_SEQUENCE
    Component 4:
      componentTag         = SPLS
      offset               = 0x0063DB48
      componentLength      = 0x002A307C
      hashType             = 1
      controlledSequenceName = 
      swCtrlOtpEpoch     = EPOCH_NOT_SPECIFIED
      nvSequence         = UNKNOWN_NV_SEQUENCE
    Component 5:
      componentTag         = FSYS
      offset               = 0x008E0BC4
      componentLength      = 0x07110028
      hashType             = 1
      controlledSequenceName = 
      swCtrlOtpEpoch     = EPOCH_NOT_SPECIFIED
      nvSequence         = UNKNOWN_NV_SEQUENCE


Signature not generated
Packaging complete.

comcast-mediaclient-vbn-image-1.0-r0 do_create_arris_image: Image /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp
  /deploy/images/arrisxi6-morty/`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin`
  size OK - 127864672 bytes less than maximum allowed 362387865 bytes

+ bbnote 'Image /media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp
  /deploy/images/arrisxi6-morty/`AX061AEI_VBN_fr_qtb_upgrade_20191127155153sdy_MTY_FBT.bin`
  size OK - 127864672 bytes, allowed size 134217728 bytes'

}


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-video

https://wiki.rdkcentral.com/display/RDK/Device+Settings

<skymw-jira-rdk>
NGDEV-151053

in this file /opt/persistent/ds/hostData on the box, set HDMI0.resolution to
1080p60. Then reboot


*rdk-logging* *tool-journalctl*

Nov 08 09:31:33 arrisxi6-morty dsMgrMain[2977]: [tid=2979]: 191108-09:31:33:863432 
  The HDMI Audio Mode Setting From Persistent is STEREO

generic/devicesettings/generic/rpc/srv/dsAudio.c

static void _GetAudioModeFromPersistent(void *arg)
{
  _DEBUG_ENTER();

  dsAudioSetStereoModeParam_t *param = (dsAudioSetStereoModeParam_t *)arg;

  if (param != NULL)
  {
    else if (_APortType == dsAUDIOPORT_TYPE_HDMI) {
      _AudioModeSettings = device::HostPersistence::getInstance().getProperty("HDMI0.AudioMode",_AudioModeSettings);
      __TIMESTAMP(); `printf`("The HDMI Audio Mode Setting From Persistent is %s \r\n",_AudioModeSettings.c_str());
    }
  }
}


journalctl -u nxserver --since today

  BDBG_LOG(("KTMSG: BDBG_LOG ******************************************************************************************"));
  BDBG_LOG(("KTMSG: BDBG_LOG * main"));
  BDBG_LOG(("KTMSG: BDBG_LOG ******************************************************************************************"));


root@arrisxi6-morty:~# ps aux | grep journald

root       918  1.0  0.3  22668  3912 ?        Ss   Nov11  14:48 /lib/systemd/systemd-journald
root      1703  0.0  0.3 397400  4288 ?        Ssl  Nov11   0:04 /usr/sbin/asproxy --journald
root      1706  0.0  0.3   4472  3548 ?        Ss   Nov11   0:00 /usr/bin/asmockservice --journald --enable-ping --enable-time
root      2796 94.5  1.2 483380 13792 ?        Rsl  Nov11 1306:49 /usr/sbin/appsservice --journald


*devicesettings-recipe*
meta-rdk-video/recipes-extended/devicesettings/devicesettings_git.bb
SRC_URI = "${RDK_GENERIC_ROOT_GIT}/devicesettings/generic;protocol=${RDK_GIT_PROTOCOL};branch=${RDK_GIT_BRANCH}"


*rdk-resolution-change-from-file*

resolution change from boot-up

cat /opt/persistent/ds/hostData

HDMI0.AudioMode STEREO
HDMI0.AudioMode.AUTO    TRUE
HDMI0.resolution        720p
Power.Color     23279
Power.brightness        10
audio.LEEnable  TRUE


// `$B$/generic/devicesettings/generic`/rpc/srv/dsVideoPort.c

static void persistResolution(dsVideoPortSetResolutionParam_t *param)
{
  dsVideoPortResolution_t resolution = param->resolution;
  std::string resolutionName(resolution.name);

  try
  {
    dsVideoPortType_t _VPortType = _GetVideoPortType(param->handle);
    if (_VPortType == dsVIDEOPORT_TYPE_HDMI)
    {
      if(param->toPersist){
        device::HostPersistence::getInstance().persistHostProperty("HDMI0.resolution",resolutionName);
      }

      __TIMESTAMP();printf("KTMSG: Set Resolution on HDMI Port!!!!!!..\r\n");
      _dsHDMIResolution = resolutionName;
    }
  }
}


*rdk-resolution-change-from-as*

http://192.168.0.100:9005/as/display/action/checkresolution?resolution=720p

/as/display/action/checkresolution?resolution=720p

NOTE: DO NOT USE "as"

// when url is wrong
URL: display/action/checkresolution?resolution=720p

0000088990.790063 NFO: < M:SystemService.cpp F:handleRequest L:417 > KT: urlPrefix(/as) request.path(/as/display/action/checkresolution)
0000088990.790093 NFO: < M:SystemService.cpp F:handleRequest L:424 > Key was not found , system settings ? url = /as/display/action/checkresolution
0000088990.790108 ERR: < M:SystemService.cpp F:handleRequest L:447 > Request url /as/display/action/checkresolution is not supported

// when url is okay
URL: /display/action/checkresolution?resolution=720p
URL: /display/action/checkresolution?resolution=1080

0000098108.145427 NFO: < M:SystemService.cpp F:onRequest L:318 > KT: received POST request for url '/as//display/action/checkresolution'
0000098108.145477 NFO: < M:SystemService.cpp F:handleRequest L:417 > KT: urlPrefix(/as) request.path(/as//display/action/checkresolution)
0000098108.145498 NFO: < M:SystemService.cpp F:handleRequest L:442 > KT: execute path (/as//display/action/checkresolution)
0000098108.145607 ERR: < M:DisplayCheckResolutionExecutor.cpp F:handlePostRequest L:36 > Resolution provided is 1080p
0000098108.145633 NFO: < M:DisplayController.cpp F:parseResolutionToSTBFormat L:333 > Resolution name is 1080p
0000098108.145655 NFO: < M:DisplayController.cpp F:parseResolutionToSTBFormat L:343 > Converted resolution 1080p60
0000098108.145681 NFO: < M:DisplayController.cpp F:setResolution L:364 > port name is HDMI0

// as-system-service/System/Controllers/Display/DisplayController.cpp
as-system-service/Settings/AVSettings/display/DisplayController.cpp

0000098108.145698 NFO: < M:DisplayController.cpp F:setResolution L:368 > resolution being set is 1080p60

                ports.at(i).setResolution(resolution);


*ds-gen* DS Generic Layer, Device Settings API (`libds.so`)

// `$B$/generic/devicesettings/generic`/ds/videoOutputPort.cpp

Dec 03 14:29:48 arrisxi6-morty ASSystemService[3037]:  
  `KTMSG: VideoOutputPort::setResolution(720p)`

void VideoOutputPort::setResolution(const std::string &resolutionName)
{
  cout <<" KTMSG: VideoOutputPort::setResolution(" << resolutionName << ")" 
    << endl;

  cout <<" KTMSG: VideoOutputPort::setResolution: call dsSetResolution"
    << endl;

  dsError_t ret = `dsSetResolution`(_handle, &resolution);
}


// $B$/generic/devicesettings/generic/ds/videoOutputPortConfig.cpp

Dec 03 14:29:48 arrisxi6-morty ASSystemService[3037]:  
  `KTMSG : EDID Num of Resolution .......3`

List<VideoResolution>  VideoOutputPortConfig::getSupportedResolutions()
{
  cout <<" KTMSG : EDID Num of Resolution ......."<< edid.numOfSupportedResolution << endl;	
}


// $B$/generic/devicesettings/`generic`/ds/videoOutputPort.cpp
// arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs-dbg/usr/lib/.debug/libds.so
// 00013d15 T device::VideoOutputPort::setResolution
//  (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

Dec 03 14:29:48 arrisxi6-morty ASSystemService[3037]: 
  `KTMSG: VideoOutputPort::setResolution: call dsSetResolution`

void VideoOutputPort::setResolution(const std::string &resolutionName)
{
  cout <<" KTMSG: VideoOutputPort::setResolution: call dsSetResolution"
    << endl;
}


*ds-on-iarm-bus*

method call time=1573644985.778138 sender=:1.292 -> 
destination=process.iarm.DSMgr serial=46 path=/iarm/method/Object; interface=iarm.method.Type; 
member=dsSetResolution

   uint32 72
   array of bytes [
      3c 00 00 00 f2 ee db ba 3a 31 2e 31 a8 e4 f0 b6 01 01 00 00 31 30 38 30
      70 36 30 00 00 00 00 00 e8 87 e6 b6 04 00 00 00 cc eb 6f b5 01 74 e0 b6
      6c eb 6f b5 03 00 00 00 01 00 00 00 01 00 00 00 08 00 00 00 00 d4 ea b6
   ]
method call time=1573644985.778208 sender=:1.15 -> destination=process.iarm.Daemon serial=10 
path=/iarm/method/Object; interface=iarm.method.Type; member=DaemonResolutionPreChange
   uint32 20
   array of bytes [
      08 00 00 00 f2 ee db ba 0d 00 00 00 38 04 00 00 80 07 00 00
   ]
method return time=1573644985.825944 sender=:1.2 -> destination=:1.15 serial=191 reply_serial=10
   int32 0
   array of bytes [
      38 04 00 00 80 07 00 00
   ]
method call time=1573644985.827132 sender=:1.15 -> destination=process.iarm.Daemon serial=11 
path=/iarm/method/Object; interface=iarm.method.Type; member=DaemonResolutionPostChange
   uint32 20
   array of bytes [
      08 00 00 00 f2 ee db ba 0d 00 00 00 38 04 00 00 80 07 00 00
   ]


*ds-on-dsmgr*

keitee@kit-ubuntu:/media/keitee/ssd2/direct_build_2$ find . -name dsMgr.c | xargs ls -al
-rwxr-xr-x 1 keitee keitee  2166 Nov 18 17:01 ./generic/devicesettings/generic/rpc/srv/dsMgr.c
-rw-r--r-- 1 keitee keitee 29306 Nov 18 17:01 ./generic/iarmmgrs/generic/dsmgr/dsMgr.c


Nov 20 14:19:47 arrisxi6-morty dsMgrMain[2984]: dsIsDisplayConnected: HDMI Port Connection Status 0


2975  process.iarm.DSMgr       /usr/bin/dsMgrMain
2975  process.iarm.DSMgr.Event /usr/bin/dsMgrMain
2975  process.iarm.DSMgr.Method/usr/bin/dsMgrMain

cat /proc/`pidof dsMgrMain`/maps

root@arrisxi6-morty:~# cat /proc/`pidof dsMgrMain`/maps | grep ".so" | sort -u -k 6,6
b6f20000-b6f35000 r-xp 00000000 07:00 1084       /lib/ld-2.24.so
b62d2000-b6390000 r-xp 00000000 07:00 1096       /lib/libc-2.24.so
b5f16000-b5f19000 r-xp 00000000 07:00 1099       /lib/libcap.so.2.25
b6eec000-b6eee000 r-xp 00000000 07:00 1106       /lib/libdl-2.24.so
b63a6000-b63bf000 r-xp 00000000 07:00 1114       /lib/libgcc_s.so.1
b63c1000-b6422000 r-xp 00000000 07:00 1115       /lib/libm-2.24.so
b6ec8000-b6ed9000 r-xp 00000000 07:00 1135       /lib/libpthread-2.24.so
b5ef8000-b5f03000 r-xp 00000000 07:00 1137       /lib/libresolv-2.24.so
b5f4c000-b5f51000 r-xp 00000000 07:00 1139       /lib/librt-2.24.so
b6d81000-b6dd6000 r-xp 00000000 07:00 1148       /lib/libsystemd.so.0.15.0
b6dd9000-b6ddf000 r-xp 00000000 07:00 2630       /usr/lib/libIARMBus.so.0.0.0
b5f83000-b616a000 r-xp 00000000 07:00 2632       /usr/lib/libMCS.so
b62ce000-b62d0000 r-xp 00000000 07:00 2747       /usr/lib/libarrisfpdlib.so
b5de8000-b5ec9000 r-xp 00000000 07:00 2802       /usr/lib/libcrypto.so.1.0.0
b6de1000-b6e0c000 r-xp 00000000 07:00 2812       /usr/lib/libdbus-1.so.3.14.7
b6f12000-b6f1e000 r-xp 00000000 07:00 2820       /usr/lib/libds-hal.so.0.0.0
b6eff000-b6f10000 r-xp 00000000 07:00 2823       /usr/lib/`libdshalsrv.so`
b6e0e000-b6ec6000 r-xp 00000000 07:00 2876       /usr/lib/libglib-2.0.so.0.4800.2
b5edd000-b5ede000 r-xp 00000000 07:00 2926       /usr/lib/libgthread-2.0.so.0.4800.2
b5f62000-b5f75000 r-xp 00000000 07:00 2989       /usr/lib/liblog4c.so.3.3.0
b5ee0000-b5ef6000 r-xp 00000000 07:00 2995       /usr/lib/liblzma.so.5.2.2
b6512000-b6515000 r-xp 00000000 07:00 3004       /usr/lib/libmotorolalib.so
b6517000-b6d66000 r-xp 00000000 07:00 3019       /usr/lib/libnexus.so
b6d71000-b6d7d000 r-xp 00000000 07:00 3062       /usr/lib/`libnxclient.so`
b5f1b000-b5f4a000 r-xp 00000000 07:00 3080       /usr/lib/libpcre.so.1.2.7
b6186000-b625b000 r-xp 00000000 07:00 3085       /usr/lib/libpdklib.so
b5f7f000-b5f81000 r-xp 00000000 07:00 3120       /usr/lib/librdkhdmiin.so
b5f79000-b5f7c000 r-xp 00000000 07:00 3122       /usr/lib/librdkloggers.so.0.0.0
b6f36000-b6f39000 r-xp 00000000 07:00 3162       /usr/lib/libsecure_wrapper.so.0.0.0
b6433000-b6507000 r-xp 00000000 07:00 3184       /usr/lib/libstdc++.so.6.0.22

dsMgr.c

extern IARM_Result_t _dsSetResolution(void *arg);

static int  _SetResolution(int* handle,dsVideoPortType_t PortType)
{
  _dsSetResolution(&Setparam);
}


When Nexus is running in user mode, the auto-generated socket proxy allows
each client to communicate with the server process (linked with libnexus.so).


*ds-hal*

DS HAL Layer (libds-hal.so)
  A set of ds*.h files that SoC vendors implements
  Access to HAL layer is serialized by dsMgrMain(Daemon)

make: Entering directory '/media/keitee/ssd2/direct_build/generic/devicesettings/generic/rpc/cli'

Building libdshalcli.so ....
Building libdshalsrv.so ....

keitee@kit-ubuntu:/media/keitee/ssd2/direct_build/generic/devicesettings/generic/rpc$ ag _dsSetResolution
include/dsRpc.h
93:#define IARM_BUS_DSMGR_API_dsSetResolution                   "dsSetResolution"

cli/dsVideoPort.c
424:                                                    (char *)IARM_BUS_DSMGR_API_dsSetResolution,


// `$B$/generic/devicesettings/generic/rpc`/srv/dsVideoPort.c, `libdshalsrv.so`

81:IARM_Result_t _dsSetResolution(void *arg);
200:            IARM_Bus_RegisterCall(IARM_BUS_DSMGR_API_dsSetResolution,_dsSetResolution);
697:IARM_Result_t _dsSetResolution(void *arg)

Dec 03 14:29:48 arrisxi6-morty dsMgrMain[2803]: [tid=2805]: 191203-14:29:48:211703 
  `KTMSG: Resolution Requested ..720p Platform Resolution - 1080p60`

//  nm -C ./arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs-dbg/usr/lib/.debug/
//  libdshalsrv.so | ag _dsSetRe
//
// 0000bc95 T _dsSetResolution(void*)

#define IARM_BUS_DSMGR_API_dsSetResolution                   "dsSetResolution"

IARM_Result_t IARM_Bus_RegisterCall(
     _BUS_IRMGR_API_SetRepeatInterval,  /* RPC Method Name */
     _SetRepeatInterval         /* RPC Method Implementation*/*
) 

IARM_Bus_RegisterCall(IARM_BUS_DSMGR_API_dsSetResolution,_dsSetResolution);

IARM_Result_t _dsSetResolution(void *arg)
{
  dsGetResolution(param->handle,&platresolution);

  __TIMESTAMP();printf("KTMSG: Resolution Requested ..%s Platform Resolution - %s\r\n",resolution.name,platresolution.name);

  /*!< Set Platform Resolution  */
  ret = `dsSetResolution`(param->handle, &param->resolution);
}


*ds-hal*
libds-hal.so.0.0.0
oe-pkgdata-util find-path /usr/lib/libds-hal.so.0.0.0
devicesettings-hal-brcm97268: /usr/lib/libds-hal.so.0.0.0

oe-pkgdata-util find-path libnxclient.so

// $B$/meta-rdk-soc-broadcom/meta-brcm97268/recipes-extended/devicesettings-hal/devicesettings-hal-brcm97268_git.bb
// $B$/tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/devicesettings-hal-brcm97268/1.99-r0/git/dsVideoPort.c

Dec 05 07:53:45 arrisxi6-morty 
  `dsMgrMain[3384]: KTMSG: Set the resolution for HDMI Video output 36`

dsError_t  dsSetResolution(int handle, dsVideoPortResolution_t *resolution)
{
  nexusApiResult = NscClientSetDisplayFormat(NEXUS_VideoFormat_e720p50hz);
  printf("Set the resolution for HDMI Video output %d \r\n",format);
}


*nxclient*
// /media/keitee/ssd2/nexus/nxclient/include/nxclient_global.h
// $B$/tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/devicesettings-hal-brcm97268/1.99-r0/git/nscclient.c

Dec 05 07:53:45 arrisxi6-morty 
  `dsMgrMain[3384]: KTMSG: rdk use: get and set display format (NEXUS_Error NscClientSetDisplayFormat(NEXUS_VideoFormat), 192)`

NEXUS_Error NscClientSetDisplayFormat(NEXUS_VideoFormat nexus_format)
{
  printf("KTMSG: rdk use: get and set display format (%s, %d)\n", __PRETTY_FUNCTION__, __LINE__);
  NxClient_GetDisplaySettings(&displaySettings);
  displaySettings.format = nexus_format;
  rc = NxClient_SetDisplaySettings(&displaySettings);
}

// libdshalsrv.so
// $B$/generic/devicesettings/generic/`rpc`/srv/dsVideoPort.c

Dec 03 14:29:48 arrisxi6-morty dsMgrMain[2803]: [tid=2805]: 191203-14:29:48:457625 
  Set Resolution on HDMI Port!!!!!!..

static void persistResolution(dsVideoPortSetResolutionParam_t *param)
{
  __TIMESTAMP();printf("Set Resolution on HDMI Port!!!!!!..\r\n");
}


*nxclient-join*
// $B$/tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/devicesettings-hal-brcm97268/1.99-r0/git/nscclient.c

void NscClientInit()
{
  printf("register nxclient DS Mgr\n");
  printf("KTMSG: calls NxClient_Join name(%s) (%d) \r\n",
      joinSettings.name, __LINE__);

  rc = NxClient_Join(&joinSettings);
}


// $B$/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient/server/nxclient_ipc.c

NEXUS_Error NxClient_Join(const NxClient_JoinSettings *pSettings)
{
  rc = NxClient_P_Join(nxclient_ipc_thread_regular, pSettings);
}


nxserverlib_ipc.c
nxclient_p_create(nxclient_state.client[id].ipc, pSettings, &nxclient_state.client[id].client_info, id);
{
  NxClient_P_CreateClient();
}


Dec 06 14:50:02 arrisxi6-morty appsservice[9087]:     437678:50:02.55 nxclient_ipc: KTMSG: NxClient IPC Join (NxClient_Join 156)
Dec 06 14:50:02 arrisxi6-morty appsservice[9087]:     437678:50:02.55 nxclient_ipc: KTMSG: NxClient IPC Join and call nxclient_p_create session(0) (NxClient_P_Join 105)
Dec 06 14:50:02 arrisxi6-morty appsservice[9087]:     437678:50:02.55 nxclient_ipc: KTMSG: NxClient IPC Join and call nxclient_p_create is okay (NxClient_P_Join 113)
Dec 06 14:50:02 arrisxi6-morty nxserver[2353]:     00:15:48.282 nxserverlib_ipc: KTMSG: NxServerlib IPC (nxclient_p_create 383)
Dec 06 14:50:02 arrisxi6-morty nxserver[2353]:     00:15:48.282 nxserverlib_ipc: KTMSG: NxServerlib IPC call NxClient_P_CreateClient (nxclient_p_create 409)
Dec 06 14:50:02 arrisxi6-morty nxserver[2353]:     00:15:48.282 nxserverlib: westeros_renderer_nexus(0xa0303d78) registering as '15,0x9d3bfba0x685ae502,westeros_renderer_nexus' verified
Dec 06 14:50:02 arrisxi6-morty nxserver[2353]:     00:15:48.282 nxserverlib_ipc: KTMSG: NxServerlib IPC (nxclient_p_create 383)
Dec 06 14:50:02 arrisxi6-morty nxserver[2353]:     00:15:48.282 nxserverlib_ipc: KTMSG: NxServerlib IPC call NO NxClient_P_CreateClient (nxclient_p_create 395)
Dec 06 14:50:02 arrisxi6-morty appsservice[9087]:     437678:50:02.55 nxclient_ipc: KTMSG: NxClient IPC Join and call nxclient_p_create session(0) (NxClient_P_Join 105)
Dec 06 14:50:02 arrisxi6-morty appsservice[9087]:     437678:50:02.55 nxclient_ipc: KTMSG: NxClient IPC Join and call nxclient_p_create is okay (NxClient_P_Join 113)


Dec 06 14:50:05 arrisxi6-morty nxserver[2353]:     00:15:51.595 nxserverlib_ipc: KTMSG: NxServerlib IPC (nxclient_p_create 383)
Dec 06 14:50:05 arrisxi6-morty nxserver[2353]:     00:15:51.595 nxserverlib_ipc: KTMSG: NxServerlib IPC call NxClient_P_CreateClient (nxclient_p_create 409)
Dec 06 14:50:05 arrisxi6-morty nxserver[2353]:     00:15:51.595 nxserverlib: wayland-egl7(0xa0304430) registering as '16,0x7e10e8ab0xf262618,wayland-egl7' verified
Dec 06 14:50:05 arrisxi6-morty nxserver[2353]:     00:15:51.596 nxserverlib_ipc: KTMSG: NxServerlib IPC (nxclient_p_create 383)
Dec 06 14:50:05 arrisxi6-morty nxserver[2353]:     00:15:51.596 nxserverlib_ipc: KTMSG: NxServerlib IPC call NO NxClient_P_CreateClient (nxclient_p_create 395)


*nxserver*

  nxserver.service                                                                                       loaded active     running      Nxserver Daemon
 
root      1922  1.5  0.7 374028  8088 ?        Ssl  12:14   0:02 
  /usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080

keitee@kit-ubuntu:/media/keitee/ssd2/direct_build_2$ find . -name nxserver
./build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/obj.97268/bin/nxserver
./build-arrisxi6-morty/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/obj.97268/nexus/nxclient/arm-linux/server/nxserver


*nxserver-compile* *rdk-refsw-recipes*

// build-arrisxi6-morty/conf/bblayers.conf

BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm97268"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm-rdk"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm-security"

// meta-rdk-soc-broadcom/meta-brcm/conf/layer.conf

BBPATH .= ":${LAYERDIR}"
BBFILES += "\
            ${LAYERDIR}/recipes-*/*/*.bb \
            ${LAYERDIR}/recipes-*/*/*.bbappend \
           "

BBFILE_COLLECTIONS += "brcm"
BBFILE_PATTERN_brcm := "^${LAYERDIR}/"
BBFILE_PRIORITY_brcm = "40"


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-nexus

cd /media/keitee/ssd2/direct_build

source meta-rdk-sky/setup-environment

// change nexus and especially nexus client source

bitbake broadcom-refsw -c compile -f
 
// if only changes nexus server then run do.run_compile only. note that this only updates outputs
// under obj.xxx but not all of them

/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nexus/nxclient/server

// check nxserver output images. can run strings on stripped images

find . -name nxserver | xargs ls -al
strings ./rootfs/usr/bin/nxserver | ag KTMSG

// rootfs
/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs

// nxserver.service
/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/nxserver.service
/tmp/work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/sysroot-destdir/lib/systemd/system/nxserver.service


// build roofs which will make a clean root fs. means it wipes out old root fs
bitbake comcast-mediaclient-vbn-image -c rootfs -f


// change rootfs

bitbake comcast-mediaclient-vbn-image

// check image time stamp

// copy to usb

cp AX061AEI_VBN_fr_qtb_upgrade_20191202094823sdy_MTY_FBT.bin /media/keitee/FAT/package.bin


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-nexus-virtual-display

*nxserver-proc-device*

// 1080

root@arrisxi6-morty:~# cat /proc/brcm/display
DisplayModule:
display 0: format=1080p 59.940hz
  graphics: enabled fb=d94df800 1920x1080 pixelFormat=72
            vsync count=12951, line=688, errors=0
  output c93ae280: hdmi

root@arrisxi6-morty:~# cat /proc/brcm/hdmi_output
HDMI 0:ovE
 video: s:bf5c82d4 d:c93ae280
 audio: t:4 o:bf5c82d4 md:ce35a580 p:3470088776
Attached device: SAMSUNG

  rxAttached: Y   rxPowered: Y
  txPower  Clock: Y CH2: Y CH1: Y CH0: Y
  txPLL Locked: Y  txPLL Status: 0xa5a00
  Total RxSense Changes:   2
  Total HP Changes:        2
  Total Unstable Format Detected Count: 0
HDMI Settings:
  ColorSpace: YCbCr 4:4:4
  ColorDepth: 12
  Current Video Format:  1080p60
  Preferred Video Format:  720p
  Current Audio Format :  Pcm
  Content Stream Type: 1
  Matrix Coefficient ID: 1  Override: No
  Color Range: Limited  Override: No

root@arrisxi6-morty:/proc/brcm# cat surface_compositor
SurfaceCompositor cdda2000
display 0: cf05c000, canvas 1920x1080, 13117 compositions, 3 fills
client d9762000: -19162,-23062,39604,46845 (virtual 1280,720); visible y; zorder 0
client cdd63000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client ce3bf000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cab39000: 0,0,1920,1080 (virtual 0,0); visible y; zorder 10000000
  pushed 1, recycled 0, total 13103
client d8f06000: 0,0,1920,1080 (virtual 0,0); visible y; zorder 10000000
client d704f000: 0,0,14,41 (virtual 0,0); visible y; zorder 10000000


// 720p

root@arrisxi6-morty:~# cat /proc/brcm/display

DisplayModule:
display 0: format=720p 59.940hz
  graphics: enabled fb=d8cb7c00 1280x720 pixelFormat=72
            vsync count=29675, line=733, errors=0
  output c93ae280: hdmi


root@arrisxi6-morty:~# cat /proc/brcm/hdmi_output
HDMI 0:ovE
 video: s:bf5c82d4 d:c93ae280
 audio: t:4 o:bf5c82d4 md:ce35a580 p:3470088776
Attached device: SAMSUNG
  rxAttached: Y   rxPowered: Y
  txPower  Clock: Y CH2: Y CH1: Y CH0: Y
  txPLL Locked: Y  txPLL Status: 0xa5a00
  Total RxSense Changes:   2
  Total HP Changes:        2
  Total Unstable Format Detected Count: 0
HDMI Settings:
  ColorSpace: YCbCr 4:4:4
  ColorDepth: 12
  Current Video Format:  720p
  Preferred Video Format:  720p
  Current Audio Format :  Pcm
  Content Stream Type: 1
  Matrix Coefficient ID: 1  Override: No
  Color Range: Limited  Override: No

root@arrisxi6-morty:/proc/brcm# cat surface_compositor
SurfaceCompositor cf295000
display 0: ce3e0000, canvas 1280x720, 13305 compositions, 3 fills
client ce25f000: -15066,-23057,31412,46834 (virtual 1280,720); visible y; zorder 0
client cf02b000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client ce25e000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cf08f000: 0,0,1920,1080 (virtual 0,0); visible y; zorder 10000000
  pushed 1, recycled 0, total 13292
client ce282000: 0,0,1920,1080 (virtual 0,0); visible y; zorder 10000000
client ce263000: 0,0,14,41 (virtual 0,0); visible y; zorder 10000000


*nxserver-proc-fixed*

// 720p when forced virtual display 1920x1080

root@arrisxi6-morty:/proc/brcm# cat display

DisplayModule:
display 0: format=720p 59.940hz
  graphics: enabled fb=d96a7400 1280x720 pixelFormat=72
            vsync count=304731, line=347, errors=0
  output ce560980: hdmi

root@arrisxi6-morty:/proc/brcm# cat surface_compositor
SurfaceCompositor d9656000
`display 0`: cf3e4000, canvas 1280x720, 266044 compositions, 3 fills
client cf289000: -31450,-23063,64180,46846 (virtual 1920,1080); visible y; zorder 0
client cddb0000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cf2e5000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cf271000: 0,0,1920,1080 (virtual 1920,1080); visible y; zorder 10000000
  pushed 1, recycled 0, total 266030
client c9091000: 0,0,1920,1080 (virtual 1920,1080); visible y; zorder 10000000
client cf372000: 0,0,14,41 (virtual 1920,1080); visible y; zorder 10000000

root@arrisxi6-morty:/proc/brcm# cat hdmi_output
HDMI Settings:
  ColorSpace: YCbCr 4:4:4
  ColorDepth: 12
  Current Video Format:  720p
  Preferred Video Format:  720p
  Current Audio Format :  Pcm
  Content Stream Type: 1
  Matrix Coefficient ID: 1  Override: No
  Color Range: Limited  Override: No

// 1080

root@arrisxi6-morty:/proc/brcm# cat display

DisplayModule:
display 0: format=1080p 59.940hz
  graphics: enabled fb=d8d50800 1280x720 pixelFormat=72
            vsync count=4463421, line=402, errors=0
  output cae66100: hdmi

root@arrisxi6-morty:/proc/brcm# cat surface_compositor

SurfaceCompositor d9656000
`display 1`: cf3e4000, canvas 1920x1080, 1698028 compositions, 3 fills
client cf289000: -31450,-23063,64180,46846 (virtual 1920,1080); visible y; zorder 0
client cddb0000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cf2e5000: 0,0,1280,720 (virtual 1280,720); visible y; zorder 10
client cf271000: 0,0,1920,1080 (virtual 1920,1080); visible y; zorder 10000000
  pushed 1, recycled 0, total 1698014
client c9091000: 0,0,1920,1080 (virtual 1920,1080); visible y; zorder 10000000
client cf372000: 0,0,14,41 (virtual 1920,1080); visible y; zorder 10000000

root@arrisxi6-morty:/proc/brcm# cat hdmi_output
HDMI Settings:
  ColorSpace: YCbCr 4:4:4
  ColorDepth: 12
  Current Video Format:  1080p60
  Preferred Video Format:  720p
  Current Audio Format :  Pcm
  Content Stream Type: 1
  Matrix Coefficient ID: 1  Override: No
  Color Range: Limited  Override: No


*nxserver-surface-composition*

nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): {{{
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): surfaceClientId(8), i(0)
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): virtual display(1280x720) from get setting
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): virtual display(0x0) from arg
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): client name string(wayland-egl7) is not xre receiver
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): virtual display(0x0)
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): set setting
nxserver[2206]:     00:02:17.609 nxserverlib: KTMSG(NxClient_P_SetSurfaceClientComposition): }}}

// nexus/nxclient/include/nxclient.h

/*
Allow client to set server-level composition settings on its own surfaces
including position, zorder, alpha blending more more.  Not used for video
window positioning which is done directly with SurfaceClient API.

See NxClient_Config_SetSurfaceClientComposition for an API to change another
client's surface composition.
*/

void NxClient_GetSurfaceClientComposition(
    unsigned surfaceClientId, /* top-level surface client id */
    NEXUS_SurfaceComposition *pSettings
    );

NEXUS_Error `NxClient_SetSurfaceClientComposition`(
    unsigned surfaceClientId, /* top-level surface client id */
    const NEXUS_SurfaceComposition *pSettings
    );

// nexus/nxclient/server/nxclient_api.inc

NEXUS_Error NxClient_SetSurfaceClientComposition( unsigned surfaceClientId, const NEXUS_SurfaceComposition *pSettings )
{
    NEXUS_Error rc;
    LOCK();
    rc = nxclient_p_set_surface_client_composition(NXCLIENT_STATE_RESTRICTED, surfaceClientId, pSettings);
    UNLOCK();
    return rc;
}

// /nexus/nxclient/server/nxserverlib_ipc.c
int nxclient_p_set_surface_client_composition(nxclient_ipc_t client, unsigned surfaceClientId, const NEXUS_SurfaceComposition *composition)
{
    return NxClient_P_SetSurfaceClientComposition(client->client, surfaceClientId, composition);
}

// nexus/modules/surface_compositor/include/nexus_surface_compositor_types.h

typedef struct NEXUS_SurfaceComposition
{
  `NEXUS_SurfaceRegion virtualDisplay;`
  /*
  If width/height non-zero, composition.position will be positioned and scaled
  relative to the virtualDisplay dimensions. Otherwise, graphics will be
  positioned and scaled in clipped framebuffer coordinates; video will be
  positioned and scaled in parent coordinates. Because clipping and HW
  upscaling makes the mapping of framebuffer coordinates to display
  coordinates complex, we recommend using virtualDisplay.
  */

  NEXUS_Rect position; 
  /*
  position and size of the surface relative to the size of the parent. scaling
  is automatic. if rectangle is offscreen, the surface will be clipped
  appropriately. 
  */

  NEXUS_SurfaceRegion clipBase; /* If width/height non-zero, compositin.clipRect will use this as units.
                                   Otherwise it will use virtualDispay. */
  NEXUS_Rect clipRect; /* source clipping rectangle in the coordinates of clipBase.
                          if clipBase is zero, in coordinates of virtualDisplay.
                          if set to all zeros, no source clipping will be performed.
                          negative source clipping (zoom out) is not supported.*/

  ...

} NEXUS_SurfaceComposition;


// nexus/modules/surface_compositor/include/nexus_surface_compositor.h

typedef struct NEXUS_SurfaceCompositorClientSettings
{
  `NEXUS_SurfaceComposition composition;`
  NEXUS_SurfaceCompositorClientDisplaySettings display[NEXUS_MAX_DISPLAYS];
} `NEXUS_SurfaceCompositorClientSettings`;

NEXUS_Error `NxClient_P_SetSurfaceClientComposition`(
    nxclient_t client, 
    unsigned surfaceClientId, 
    const NEXUS_SurfaceComposition *pComposition)
{
  `NEXUS_SurfaceCompositorClientSettings` client_settings;

#if COMCAST_RDK_SPECIFIC_CHANGE || 1
  {
    if (!strcmp(client->joinSettings.name, "xre receiver"))
    {
      NEXUS_DisplayHandle display;
      NEXUS_DisplaySettings displaySettings;

      display = client->session->display[0].display;
      NEXUS_Display_GetSettings(display, &displaySettings);

      if (displaySettings.format == NEXUS_VideoFormat_e480p || displaySettings.format == NEXUS_VideoFormat_eNtsc)
      {
        client_settings.composition.virtualDisplay.width = 640;
        client_settings.composition.virtualDisplay.height = 480;
      }
      else
      {
        client_settings.composition.virtualDisplay.width = 1280;
        client_settings.composition.virtualDisplay.height = 720;
      }
      /*341, make sure the highest zorder is smaller than NXCLIENT_MAX_ZORDER*/
      /* ensure that Closed Caption is always at the top */
      if (client_settings.composition.zorder > NXCLIENT_MAX_ZORDER) {
        client_settings.composition.zorder = NXCLIENT_DEFAULT_ZORDER;
      }
    }
  }
#endif

  rc = `NEXUS_SurfaceCompositor_SetClientSettings`(
      client->session->surfaceCompositor, 
      req->handles.surfaceClient[i].handle, 
      &client_settings);
  if (rc) return BERR_TRACE(rc);

  return 0;
}


*nxserver-session*

init_session() is called once and all virtual display setting through
b_display_format_change() are for specific client:

if(client && (!strcmp(client->joinSettings.name, "xre receiver")));

nxserver[2206]:     00:00:03.690 nxserverlib: KTMSG(init_session): init_session (0)
nxserver[2206]:     00:00:03.711 nxserverlib: KTMSG(init_session): HD display(0) framebuffer (1280) MIN width(1280, 1920) (720) MIN height(720, 1080)
nxserver[2206]:     00:00:03.711 nxserverlib: KTMSG(init_session): set display(0) clip (1280) MIN width(1280,1280) (720) MIN height(720,720)
nxserver[2206]:     00:00:03.712 nxserverlib: KTMSG(init_session): call NxClient_P_SetDisplaySettingsNoRollback(null0)
nxserver[2206]:     00:00:03.712 nxserverlib: KTMSG(NxClient_P_SetDisplaySettingsNoRollback): main display(0) setting

static int init_session(nxserver_t server, unsigned index)
{
  struct b_session {
    nxserver_t server;

    BLST_D_HEAD(b_session_client_list, b_client) clients; /* uses session_link */

    unsigned index;

    struct {
      NEXUS_DisplayHandle display; /* created as init_session */
      unsigned global_index;
      bool created_by_encoder;
      NEXUS_VideoWindowHandle window[NEXUS_NUM_VIDEO_WINDOWS][NXCLIENT_MAX_IDS]; /* created on demand */
      NEXUS_VideoWindowHandle parentWindow[NEXUS_NUM_VIDEO_WINDOWS];
      NEXUS_VideoFormatInfo formatInfo;
      nxclient_t crc_client;
      NEXUS_SurfaceHandle graphic; /* for NxClient_SlaveDisplayMode_eGraphics */
      bool graphicsOnly;
      NEXUS_DisplayPriority priority;
    } `display[NXCLIENT_MAX_DISPLAYS];`

    struct {
      NxClient_DisplaySettings displaySettings;
    } nxclient;
  };

  struct b_session *session;

  NEXUS_Display_GetGraphicsSettings(session->display[i].display, &surface_compositor_settings.display[i].graphicsSettings);

  // change frame size and set

  NEXUS_SurfaceCompositor_SetSettings(session->surfaceCompositor, &surface_compositor_settings);

  (void)NxClient_P_SetDisplaySettingsNoRollback(NULL, session, &settings);
}


// Dec 03 14:29:48 arrisxi6-morty nxserver[2209]:     00:10:52.415 
//  nxserverlib: session 0: changing display format 1080p -> 720p

NEXUS_Error NxClient_P_SetDisplaySettingsNoRollback(nxclient_t client, struct b_session *session, 
    const NxClient_DisplaySettings *pSettings)
{
  NEXUS_SurfaceCompositorSettings surface_compositor_settings;

  if (format_change) {
    BDBG_LOG(("session %d: changing display format %s -> %s",
          session->index,
          lookup_name(g_videoFormatStrs, session->nxclient.displaySettings.format),
          lookup_name(g_videoFormatStrs, pSettings->format)));

    BKNI_ResetEvent(session->inactiveEvent);
    waitForInactive = true;

    NEXUS_SurfaceCompositor_GetSettings(session->surfaceCompositor, &surface_compositor_settings);
    surface_compositor_settings.enabled = false;
    rc = NEXUS_SurfaceCompositor_SetSettings(session->surfaceCompositor, &surface_compositor_settings);
    if (rc) return BERR_TRACE(rc);
  }

  `b_display_format_change`(session, pSettings);
}

static int b_display_format_change(struct b_session *session, 
    const NxClient_DisplaySettings *pDisplaySettings)
{
  NEXUS_SurfaceCompositorSettings surface_compositor_settings;

#if COMCAST_RDK_SPECIFIC_CHANGE || 1
  nxclient_t client;
  bool findXREClient = false;
#endif

  // SO set framebuffer size for each display?
  {
    for (i=0;i<NXCLIENT_MAX_DISPLAYS;i++) {

      if (i == 0) {
#if COMCAST_RDK_SPECIFIC_CHANGE || 1
#ifdef XITHREE_2702 /* [13.2] Xi3 Resolution change sync - enable for effort to unify 480p across platforms */
        surface_compositor_settings.display[i].graphicsSettings.clip.width = surface_compositor_settings.display[i].framebuffer.width;
        surface_compositor_settings.display[i].graphicsSettings.clip.height = surface_compositor_settings.display[i].framebuffer.height;
#else
        surface_compositor_settings.display[i].graphicsSettings.clip.width = MIN(surface_compositor_settings.display[i].framebuffer.width,session->display[i].formatInfo.width);
        surface_compositor_settings.display[i].graphicsSettings.clip.height = MIN(surface_compositor_settings.display[i].framebuffer.height,session->display[i].formatInfo.height);

        // KT
        BDBG_WRN(("KTMSG(%s): MIN width(%d, %d) MIN height(%d, %d)", __PRETTY_FUNCTION__,
              surface_compositor_settings.display[i].framebuffer.width,session->display[i].formatInfo.width,
              surface_compositor_settings.display[i].framebuffer.height,session->display[i].formatInfo.height))
#endif
#endif
      }
    }

    NEXUS_SurfaceCompositor_SetSettings(session->surfaceCompositor, &surface_compositor_settings);
  }

#if COMCAST_RDK_SPECIFIC_CHANGE || 1

  // SO only set virtial display for this specific client
  // THEREFORE, virtual display settings is ONLY for this specific client
  {
    if(client && (!strcmp(client->joinSettings.name, "xre receiver")))
    {
      NEXUS_SurfaceComposition composition;

      composition.virtualDisplay.width = 1280;
      composition.virtualDisplay.height = 720;

      // KT
      BDBG_WRN(("KTMSG(%s): virtual display(%dx%d)", __PRETTY_FUNCTION__,
            composition.virtualDisplay.width, composition.virtualDisplay.height));

      NxClient_P_SetSurfaceClientComposition(client, resources.surfaceClient.id[j], &composition);
    }
  }
#endif
}


*nxserver-main*

// nxserver_main.c

int main(int argc, char **argv)
{
  server = nxserver_init(argc, argv, true);
}

struct nxserver_settings
{
  unsigned framebuffers;

  struct {
    unsigned width, height;
  } fbsize;

  bool allowCompositionBypass;

  NxClient_DisplaySettings display; /* only session 0 */
  ...
};

// nxserver.c

nxserver_t nxserver_init(int argc, char **argv, bool blocking)
{
  struct nxserver_settings settings;

  // fbsize
  `nxserver_get_default_settings`(&settings);
  {
    settings->fbsize.width = 1280;

    #if NEXUS_HAS_GFD_VERTICAL_UPSCALE
      settings->fbsize.height = 720;
    #else
      settings->fbsize.height = 1080;
    #endif
  }

  rc = nxserver_parse_cmdline(argc, argv, &settings, &cmdline_settings);
  {
    else if (!strcmp(argv[curarg], "-fbsize") && curarg+1 < argc) {
      sscanf(argv[++curarg], "%u,%u", &settings->fbsize.width, &settings->fbsize.height);
    }
  }
}

ASSystemService[3613]:  KTMSG: VideoOutputPort::setResolution(720p)
dsMgrMain[3384]: dsIsDisplayConnected: HDMI Port Connection Status 1
dsMgrMain[3384]: vDispHandle->vType- 6 ..........
dsMgrMain[3384]: Supported Resolution 720p
dsMgrMain[3384]: Supported Resolution 1080i
dsMgrMain[3384]: Supported Resolution 1080p60
dsMgrMain[3384]: dsQueryHdmiResolution: Total Device supported resolutions on HDMI = 3
dsMgrMain[3384]: numSupportedResn - 3 ..........
dsMgrMain[3384]: EDID for HDMI Port
dsMgrMain[3384]: [DsMgr] Total Resolution Count from HAL: 3
dsMgrMain[3384]: [DsMgr] presolution->name : 720p, resolution count : 1
dsMgrMain[3384]: [DsMgr] presolution->name : 1080i, resolution count : 2
dsMgrMain[3384]: [DsMgr] presolution->name : 1080p60, resolution count : 3
dsMgrMain[3384]: [1B blob data]
dsMgrMain[3384]: [tid=3386]: 191205-07:53:45:669444 KTMSG: Resolution Requested ..720p Platform Resolution - 1080p60
dsMgrMain[3384]: KTMSG: rdk use: get and set display format (NEXUS_Error NscClientSetDisplayFormat(NEXUS_VideoFormat), 192)
nxserver[1846]:     00:41:55.106 nxserverlib: KTMSG: call NxClient_P_SetDisplaySettingsNoRollback (NxClient_P_SetDisplaySettings 4405)
nxserver[1846]:     00:41:55.106 nxserverlib: KTMSG: enter (NxClient_P_SetDisplaySettingsNoRollback 4133)
nxserver[1846]:     00:41:55.106 nxserverlib: KTMSG: session 0: changing display format 1080p -> 720p
ASSystemService[3613]:  KTMSG : EDID Num of Resolution .......3
ASSystemService[3613]:  KTMSG: VideoOutputPort::setResolution: call dsSetResolution
nxserver[1846]:     00:41:55.170 nxserverlib: KTMSG: try to set outputs (NxClient_P_SetDisplaySettingsNoRollback 4280)
nxserver[1846]:     00:41:55.170 nxserverlib: KTMSG: manually call b_display_format_change (NxClient_P_SetDisplaySettingsNoRollback 4313)
nxserver[1846]:     00:41:55.170 nxserverlib: KTMSG: enter (b_display_format_change 1967)
nxserver[1846]:     00:41:55.170 nxserverlib: KTMSG: comcast change and set client (b_display_format_change 1973)
kernel:     504:08:43.292 BHDM: Tx0 Output: 720p     (YCbCr 4:4:4 36 bpp) 1280 [+] x 720/720 [+], PxlClk: 74MHz (TMDS 111 Mcsc)
kernel[1673]: [  396.002403]     504:08:43.292 BHDM: Tx0 Output: 720p     (YCbCr 4:4:4 36 bpp) 1280 [+] x 720/720 [+], PxlClk: 74MHz (TMDS 111 Mcsc)
nxserver[1846]:     00:41:55.350 nxserverlib: KTMSG: composition bypass(0) (b_display_format_change 2078)
nxserver[1846]:     00:41:55.350 nxserverlib: KTMSG: try to find client (b_display_format_change 2083)
nxserver[1846]:     00:41:55.350 nxserverlib: KTMSG: comcast specific, try to find client (b_display_format_change 2087)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: comcast specific, no client found (b_display_format_change 2139)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: ends (b_display_format_change 2167)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: return from 0 (NxClient_P_SetDisplaySettingsNoRollback 4315)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: try to set sd_outputs (NxClient_P_SetDisplaySettingsNoRollback 4317)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: skip outputs and waitFor is true (NxClient_P_SetDisplaySettingsNoRollback 4336)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: enter (b_display_format_change 1967)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: comcast change and set client (b_display_format_change 1973)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: composition bypass(0) (b_display_format_change 2078)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: try to find client (b_display_format_change 2083)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: comcast specific, try to find client (b_display_format_change 2087)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: comcast specific, no client found (b_display_format_change 2139)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: ends (b_display_format_change 2167)
nxserver[1846]:     00:41:55.351 nxserverlib: KTMSG: ends (NxClient_P_SetDisplaySettingsNoRollback 4381)
dsMgrMain[3384]: KTMSG: Set the resolution for HDMI Video output 36
nxserver[1846]:     00:41:55.357 nxserverlib: nxserver_check_hdcp: filter(Unauthenticated, Success)
nxserver[1846]:     00:41:55.357 nxserverlib: Start hdcp authentication(version=auto level=mandatory)
nxserver[1846]:     00:41:55.357 nxserverlib: initializeHdmiOutputHdcpSettings:  content_stream_type = 1
nxserver[1846]: ### 00:41:55.360 nexus_platform_os: stuck callback 0x208c0(interface 0xbf5c82d4) for 169 msec
nxserver[1846]: ### 00:41:55.378 nxserverlib: nxserver_check_hdcp: begin: NEXUS_HdmiOutput_StartHdcpAuthentication failed: 10
nxserver[1846]:     00:41:55.378 nxserverlib: nxserver_check_hdcp: *** (begin --> follow)
nxserver[1846]:     00:41:55.378 nxserverlib: nxserver_hdcp_mute: MUTING_HDMI_GX_VIDEO (0x6fa70)
kernel:     504:08:43.315 nexus_hdmi_output_hdcp: NEXUS_HdmiOutput_StartHdcpAuthentication_impl: Going through format change, authentication will be started once format change completed
kernel[1673]: [  396.025744]     504:08:43.315 nexus_hdmi_output_hdcp: NEXUS_HdmiOutput_StartHdcpAuthentication_impl: Going through format change, authentication will be started once format change completed
nxserver[1846]:     00:41:55.378 nxserverlib: nxserver_hdcp_mute: MUTING_HDMI_AUDIO (0x6fa70)
kernel:     504:08:43.333 BHDM: Tx0 Output: 720p     (YCbCr 4:4:4 36 bpp) 1280 [+] x 720/720 [+], PxlClk: 74MHz (TMDS 111 Mcsc)
ASSystemService[3613]: 0000000396.032639 NFO: < M:DisplayCheckResolutionExecutor.cpp F:handlePostRequest L:54 > Setting resolutionParam Status = 0
kernel[1673]: [  396.043384]     504:08:43.333 BHDM: Tx0 Output: 720p     (YCbCr 4:4:4 36 bpp) 1280 [+] x 720/720 [+], PxlClk: 74MHz (TMDS 111 Mcsc)
dsMgrMain[3384]: [1B blob data]
dsMgrMain[3384]: [tid=3386]: 191205-07:53:45:955081 KTMSG: Set Resolution on HDMI Port!!!!!!..


*bitbake-find-recipe*

keitee@kit-ubuntu:/media/keitee/ssd2/direct_build/build-arrisxi6-morty$ oe-pkgdata-util find-path /usr/bin/nxserver
NOTE: base_contains is deprecated, please use bb.utils.contains instead.
broadcom-refsw: /usr/bin/nxserver

scp -P 10022 nxserver root@192.168.0.100:/tmp/data
mount-copybind /tmp/data/nxserver /usr/bin/nxserver
mount-copybind -d /tmp/data/nxserver

/tmp/data/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080

*systemctl-status*

root@arrisxi6-morty:~# systemctl status nxserver
● nxserver.service - Nxserver Daemon
   Loaded: loaded (/lib/systemd/system/nxserver.service; enabled; vendor preset: enabled)
   Active: active (running) since Fri 2019-11-22 10:39:54 UTC; 2 days ago
  Process: 2073 ExecStartPre=/bin/sh -c modprobe wakeup_drv; if [ ! -e /dev/wake0 ]; then mknod -m a=rw /dev/wake0 c 34 0; fi (code=exited, status=0/SUCCESS)
  Process: 2046 ExecStartPre=/usr/bin/nexus_dfb install (code=exited, status=0/SUCCESS)
  Process: 1667 ExecStartPre=/bin/sleep 3 (code=exited, status=0/SUCCESS)
 Main PID: 2080 (nxserver)
   Status: "Nexus Server is Successfully Initialized"
   CGroup: /system.slice/nxserver.service
           ├─2080 /usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080
           └─2111 /usr/bin/splash_client

Warning: Journal has been rotated since unit was started. Log output is incomplete or unavailable.

root@arrisxi6-morty:~# cat /lib/systemd/system/nxserver.service
[Unit]
Description=Nxserver Daemon
After=systemd-modules-load.service
Requires=systemd-modules-load.service

[Service]
Type=notify
Environment="SAGEBIN_PATH=/usr/lib"
ExecStartPre=/bin/sleep 3
ExecStartPre=/usr/bin/nexus_dfb install
ExecStartPre=/bin/sh -c 'modprobe wakeup_drv; if [ ! -e /dev/wake0 ]; then mknod -m a=rw /dev/wake0 c 34 0; fi'
ExecStart=/usr/bin/nxserver -audio_output_delay 500 -dropFrame enable -video_cdb 5 -ir none -ms12 -smoothscaling -svp_urr -mode verified -heap video_secure,128M -fbsize 1920,1080
ExecStop=/bin/kill -9 $MAINPID
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target


*bitbake-recipes*
// build-arrisxi6-morty/conf/bblayers.conf

BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm97268"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm-rdk"
BBLAYERS =+ "${RDKROOT}/meta-rdk-soc-broadcom/meta-brcm-security"

// meta-rdk-soc-broadcom/meta-brcm/conf/layer.conf

BBPATH .= ":${LAYERDIR}"
BBFILES += "\
            ${LAYERDIR}/recipes-*/*/*.bb \
            ${LAYERDIR}/recipes-*/*/*.bbappend \
           "

BBFILE_COLLECTIONS += "brcm"
BBFILE_PATTERN_brcm := "^${LAYERDIR}/"
BBFILE_PRIORITY_brcm = "40"

# do not error out on bbappends for missing recipes (mysql5)
#BB_DANGLINGAPPENDS_WARNONLY = "true"
NEXUS_BROADCOM_SDK_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom_sdk"
NEXUS_BROADCOM_SDK_3PIP_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom_sdk_restricted/components"
NEXUS_BROADCOM_BASE ?= "nexus.teamccp.com/nexus/content/repositories/broadcom/components"
BROADCOM_SDK_GIT ?= "git://${RDK_GIT}/sdk/broadcom"


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-westeros

WPE is the reference WebKit port for embedded and low-consumption computer
devices. It has been designed from the ground-up with performance, small
footprint, accelerated content rendering, and simplicity of deployment in
mind, bringing the excellence of the WebKit engine to countless platforms and
target devices.


https://wiki.rdkcentral.com/display/RDK/WPE
Wayland is not an implementation but a protocol specification between a
display server and its clients


“Wayland is a protocol for a compositor to talk to its client as well as a C
lib implementation of that protocol”. `Weston` is the reference implementation
for wayland. `Westeros is a compositor, a replacement of Weston.` This
  provides clear interface towards graphics and input.


https://wiki.rdkcentral.com/display/RDK/Westeros


// appinfrastructure-ai/RDK/AppManager/WindowManager
// WindowManager/source/WesterosClient.cpp
// WESTEROS_COMPOSITOR_LIBRARY from cmake

WesterosClient::WesterosClient()
{
    // create the compositor
    mCompositor = WstCompositorCreate();

    setupRenderer();
}

// uses it to send output
{
  if (!WstCompositorComposeEmbedded(mCompositor, mX, mY, mWidth, mHeight,
        mMatrix, 1.0f,
        hints,
        &needHolePunch, holeRects))
  {
    AI_LOG_ERROR("failed to compose embedded");
  }
}


bool WesterosClient::setupRenderer()
{
  const std::string renderModule("/usr/lib/plugins/westeros/libwesteros_render_sky.so");

  // westeros-compositor.cpp
  WstCompositorSetRendererModule(mCompositor, renderModule.c_str());
}


// renderers/SkyRenderer/source/SkyRenderer.cpp

int renderer_init(WstRenderer *renderer, int argc, char **argv)
{
  // create the sky 'renderer' wrapper
  SkyRenderer *skyRenderer = new SkyRenderer(renderer, argc, argv, client);

  renderer->renderTerm = skyRendererTerm;
  ...
}

SkyRenderer::SkyRenderer(WstRenderer *renderer, int argc, char **argv,
                         const std::shared_ptr<IWesterosClient> &client)
{
    // the platform determines the 'real' renderer to use
#if (RDK_PLATFORM == XI6)
    // const std::string rendererPath("libwesteros_render_nexus.so.0.0.0");
    const std::string rendererPath("`libwesteros_render_embedded.so.0.0.0`");
#elif (RDK_PLATFORM == AMLOGIC)
    const std::string rendererPath("/usr/lib/libwesteros_render_embedded.so.0.0.0");
#else
#   error "unknown RDK platform type"
#endif

    // set the args for the 'real' renderer
    char arg0[] = "--width";
    char arg1[] = "1920";
    char arg2[] = "--height";
    char arg3[] = "1080";
    char *realArgv[4] = { arg0, arg1, arg2, arg3 };

    // now try and create the 'real' renderer
    //
    // calls `renderer_init` by init= dlsym( module, RENDERER_MODULE_INIT );

    `mRealRenderer` = WstRendererCreate(rendererPath.c_str(), 4, realArgv);
}



// build-arrisxi6-morty/tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/westeros/1.0+gitrAUTOINC+790df67969-r0/git
// -c ../git/westeros-compositor.cpp -o libwesteros_compositor_la-westeros-compositor.o
// libwesteros_compositor.so.0.0.0

westeros/westeros-compositor.cpp

WstCompositor* WstCompositorCreate()
{
}

bool WstCompositorSetRendererModule( WstCompositor *ctx, const char *rendererModule )
{
  `ctx->rendererModule`= strdup( rendererModule );
}

// westeros-compositor.h

/**
 * WstCompositorComposeEmbedded
 *
 * Requests that the current scene be composed as part of the configured embedded environment.  This
 * should be called with the environment setup for offscreen rendering.  For example, if OpenGL is
 * being used for rendering, WstCompositorComposeEmbedded should be called with an FBO set as the
 * current render target.
 *
 * The x, y, width and height give the desired composition rectangle.  The matrix and alpha
 * values are what the caller intends to apply when the composited scene is subsequently rendered
 * from the offscreen target to the callers scene.  Based on the hinting provided, the compositor will
 * either render to the offscreen target or use an available fast path to render to a separate 
 * plane.  If no fast path is available it will render to the offscreen target without the transform
 * and alpha.  If it renders to a separate plane it will apply the provide transformation matrix and alpha
 * and will set needHolePunch to true.  Upon return, if needHolePunch is true, the caller should 
 * render a hole punch for each rectangle returned in rects, otherwise it should render the offscreen 
 * target to its scene while applying the transformation matrix and alpha.
 *
 * This should only be called while the compositor is running.
 */

// westeros-compositor.cpp

bool WstCompositorComposeEmbedded( WstCompositor *ctx, ...)
{
  WstRendererUpdateScene( ctx->renderer );
}

void WstRendererUpdateScene( WstRenderer *renderer )
{
  renderer->updateScene( renderer );
}


westeros/westeros-compositor.cpp

bool WstCompositorStart( WstCompositor *ctx )

static bool wstCompositorCreateRenderer( WstCompositor *ctx )
{
  ctx->renderer= WstRendererCreate( `ctx->rendererModule`, argc, (char **)argv, ctx->display, ctx->nc );
}


westeros/westeros-render.cpp

WstRenderer* WstRendererCreate(const char *moduleName, int argc, char **argv,
    struct wl_display *display, WstNestedConnection *nc )
{
  WstRenderer *renderer= (WstRenderer*)calloc( 1, sizeof(WstRenderer) );

  module= dlopen(`moduleName`, RTLD_NOW );

  init= dlsym( module, RENDERER_MODULE_INIT );

  rc= ((WSTMethodRenderInit)init)( renderer, argc, argv );
}


// -c ../git/westeros-render-embedded.cpp -o westeros-render-embedded.o
// .libs/libwesteros_render_embedded.so.0.0.0
// -DWESTEROS_PLATFORM_EMBEDDED -DWESTEROS_HAVE_WAYLAND_EGL -DENABLE_SBPROTOCOL

// westeros-render-embedded.cpp

static WstRendererEMB* wstRendererEMBCreate( WstRenderer *renderer )
{
  #if defined (WESTEROS_PLATFORM_EMBEDDED)
  rendererEMB->glCtx= WstGLInit();
  #endif

  rendererEMB->eglDisplay= eglGetDisplay(EGL_DEFAULT_DISPLAY);
}


// build-arrisxi6-morty/tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/westeros-soc/1.0+gitrAUTOINC+790df67969-r0/git
// ../git/brcm/westeros-gl/westeros-gl.cpp

WstGLCtx* WstGLInit()
{
  NxClient_GetDisplaySettings( &displaySettings );
#if NEXUS_PLATFORM_VERSION_MAJOR >= 16
  displaySettings.secure= ctx->secureGraphics;
#endif
  rc= NxClient_SetDisplaySettings( &displaySettings );
}


// westeros-render-nexus/1.0+gitrAUTOINC+acb5172a2e-r0/git/
// drm/westeros-gl/westeros-gl.c
// westeros-compositor.cpp

1765:      moduleNew->module= dlopen( moduleName, RTLD_NOW );
4044:   module= dlopen( "libwayland-egl.so.0", RTLD_NOW );


arm-rdk-linux-gnueabi-libtool: link: arm-rdk-linux-gnueabi-g++  -march=armv7ve
-mthumb -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a15 -fno-omit-frame-pointer
-fno-optimize-sibling-calls
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
-fPIC -DPIC -shared -nostdlib
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/crti.o
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/arm-rdk-linux-gnueabi/6.4.0/crtbeginS.o
.libs/westeros-render-embedded.o
-L/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib
-lGLESv2
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/`libwesteros_gl.so`
-L=/../../work/arrisxi6_morty-rdk-linux-gnueabi/broadcom-refsw/unified-17.3-r4.2/obj.97268/bin
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/`libwayland-egl.so`
-lEGL -lpthread -lnexus -lnxclient
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/libwesteros_simplebuffer_server.so
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/libwayland-client.so
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/libwayland-server.so
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/libffi.so
-lrt
-L/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/x86_64-linux/usr/lib/arm-rdk-linux-gnueabi/gcc/arm-rdk-linux-gnueabi/6.4.0
-L/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/lib
-L/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/arm-rdk-linux-gnueabi/6.4.0
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/libstdc++.so
-lm -lc -lgcc_s
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/arm-rdk-linux-gnueabi/6.4.0/crtendS.o
/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty/usr/lib/crtn.o
-march=armv7ve -mthumb -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a15
--sysroot=/media/keitee/ssd2/direct_build/build-arrisxi6-morty/tmp/sysroots/arrisxi6-morty
-Os -g -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed   -pthread -Wl,-soname
-Wl,libwesteros_render_embedded.so.0 -o
.libs/libwesteros_render_embedded.so.0.0.0


/media/keitee/ssd2/direct_build/generic/wayland-egl-bnxs/refsw17.3/vc5/nexus/display_nexus.c

#ifdef NXCLIENT_SUPPORT
      /* default our SurfaceClient to blend */
      NEXUS_SurfaceComposition comp;
      NxClient_GetSurfaceClientComposition(nw->clientID, &comp);
      comp.colorBlend = info->colorBlend;
      comp.alphaBlend = info->alphaBlend;
      NxClient_SetSurfaceClientComposition(nw->clientID, &comp);
#endif /* NXCLIENT_SUPPORT */


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-git

https://etwiki.sys.comcast.net/pages/viewpage.action?pageId=467501432

Create ".gitreview" in your repository with below details (Do not commit it on git)

[gerrit]
host=gerrit.teamccp.com
port=29418
project=rdk/yocto_oe/layers/meta-rdk-sky
defaultbranch=topic/fr_qtb_upgrade

git config --global --add gitreview.username "bp-kpark257"

$ git-review -l

NGDEV-151053: RDK - Changing the HDMI resolution also changes the framebuffer

If using the display settings API to change the HDMI resolution to 720, then
this also changes the nexus compositing surface to 720. This is a problem for
our window manger / EPG as everything we render is at 1080.

To match DTH behaviour we ideally need the framebuffer to remain at 1080 for
HDMI resolutions (including 4k which I haven't tested) and let the HDMI output
scale the frame buffer for us.

Reason for change: To fix output sacling to suport resolution changes
Test Procedure: Local developer tests
Risks: Low
Signed-off-by:


<skymw-jira-rdk>
https://gerrit.teamccp.com/#/q/status:open+project:rdk/yocto_oe/layers/meta-rdk-sky+branch:topic/fr_qtb_upgrade

project:rdk/yocto_oe/layers/meta-rdk-sky branch:topic/fr_qtb_upgrade


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-xione

repo init -u ssh://gerrit.teamccp.com:29418/rdk/yocto_oe/manifests/realtek-manifest -b topic/realtek_xi_ref -m realtekxi1.xml --repo-url=ssh://gerrit.teamccp.com:29418/rdk/tools/git-repo --no-repo-verify -g all
repo sync --no-tags
repo start topic/realtek_xi_ref --all

source meta-rdk/setup-environment
select option -1, meta-rdk-soc-realtek/conf/machine/realtekxi1.conf
bitbake comcast-mediaclient-vbn-image


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-llama

rdkcentral
kit.park
t1!! 

// from reademe

Setup the system to use the amlogic common ssh key for accessing amlogic repo.

a. Copy the ssh keys. The common rsa private and public key are shared 
mkdir ~/.ssh/amlogic_repo_key
cp amlogic_repo_access_ssh_key_id_rsa.pub ~/.ssh/amlogic_repo_key/id_rsa.pub
cp amlogic_repo_access_ssh_key_id_rsa ~/.ssh/amlogic_repo_key/id_rsa

b. Change the file permission of private key as below
chmod 400 ~/.ssh/amlogic_repo_key/id_rsa

c. Edit the ssh config file as below
cat ~/.ssh/config

Host openlinux.amlogic.com
HostName openlinux.amlogic.com
User rpattabiraman
IdentityFile ~/.ssh/amlogic_repo_key/id_rsa

Create a local git for now and add the manifest file in it so that we can do
repo init.  We are hosting internal repositories in Brentwood for this.  This
will eventually also get added in comcast gerrit. 

mkdir manifest
cd manifest
git init
cp sky-llama-rdk.xml .
git add sky-llama-rdk.xml
git commit sky-llama-rdk.xml -m “Add manifest”


Checkout Code

mkdir workspace
cd workspace
repo init -u <path to local manifest git > -m sky-llama-rdk.xml  -g all --no-repo-verify --repo-url=ssh://gerrit.teamccp.com:29418/rdk/tools/git-repo
repo init -u ../manifest -m sky-llama-rdk.xml  -g all --no-repo-verify --repo-url=ssh://gerrit.teamccp.com:29418/rdk/tools/git-repo
repo sync -j4 --no-tags
git clone ssh://git@openlinux.amlogic.com/yocto/meta-meson -b rdkv-2019q3
git clone ssh://git@openlinux.amlogic.com/yocto/meta-rdk-bsp-amlogic -b rdkv-2019q3
git clone ssh://git@openlinux.amlogic.com/yocto/meta-customer-sky -b rdkv-2019q3
tar xf meta-rdk-oem-sky-amlogic.tar.bz2

*rdk-llama-build*
Build Image 

source meta-rdk/setup-environment

Select the board you want to build
- Choose number corresponding to sky_llama_adapter.conf for E2 board/ Blob Board and
- Choose number corresponding to sky_llama_panel.conf  for X3 board.

7. conf/machine/sky_llama_adapter.conf
7) meta-rdk-oem-sky-amlogic/meta-llama/conf/machine/sky_llama_adapter.conf

You will be now in the build-xx folder. From here give below command to start compilation.

bitbake iarmbus
bitbake comcast-mediaclient-vbn-image

do patches as you do for buidling rdk in local ubuntu. 


<rdk-sky-dev>

/meta-rdk-sky/recipes-core/images
compare two files:
comcast-mediaclient-vbn-image-skydev.bb 
comcast-mediaclient-vbn-image.bbappend

add the followings to `comcast-mediaclient-vbn-image.bbappend`

                        packagegroup-core-tools-debug \


<sky-app>
cat meta-rdk-oem-sky-amlogic/meta-llama/conf/machine/include/sky_llama_common.inc

# Comment below to get sky apps
# BBMASK += "meta-rdk-sky/recipes-extended/appmanager/|.meta-rdk-sky/recipes-core/packagegroups/packagegroup-rdk-media-common.bbappend|.meta-rdk-sky/recipes-core/images/comcast-mediaclient-vbn-image.bbappend"


<rdk-epg>
eitee@kit-ubuntu:/media/keitee/ssd2/llama/workspace2/build-sky_llama_adapter/tmp/work/sky_llama_adapter-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/opt/sky/packages$ ls -al
-rw-r--r-- 1 keitee keitee 18243445 Jan 21 11:49 epg-ui-11.164.00.07.wgt
-rw-r--r-- 1 keitee keitee  6712962 Jan 21 11:49 luna-runtime-2.17.3.wgt
-rw-r--r-- 1 keitee keitee    26556 Jan 21 11:49 rdkbrowser-1.0.0.wgt


<repo-from-brentwood>
https://skyswteam.com
https://skyswteam.com/rdk-llama-bwd-osterley-integration/meta-rdk-sky

// repo for brentwood
https://skyswteam.com/rdk-llama-bwd-osterley-integration/meta-rdk-sky/tree/bens_changes_for_llama

keitee@kit-ubuntu:/media/keitee/ssd2/llama/workspace2/meta-rdk-sky/recipes-core/asappsserviced$ ls
asappsserviced_git.bb  files


<to-flash>
usb_burn aml_sdc_burn.ini


<rdk-rootfs>
llama/workspace2/build-sky_llama_adapter/tmp/work/sky_llama_adapter-rdk-linux-gnueabi/
  comcast-mediaclient-vbn-image/1.0-r0/rootfs

cat lib/systemd/system/appmanager.service

// from box
root@sky_llama_adapter:/lib/systemd/system# ls -al sky-*
-rw-r--r--    1 root     root           939 Jan  2 10:44 sky-appsservice.service
-rw-r--r--    1 root     root           755 Jan  2 10:43 sky-asmock.service
-rw-r--r--    1 root     root           717 Jan  2 10:42 sky-asnetwork.service
-rw-r--r--    1 root     root           797 Jan  2 10:42 sky-asplayer.service
-rw-r--r--    1 root     root           760 Jan  2 10:45 sky-asproxy.service
-rw-r--r--    1 root     root           800 Jan  2 10:43 sky-assystem.service
-rw-r-xr-x    1 root     root           558 Jan  2 10:55 sky-bluetoothrcu.service
-rw-r--r--    1 root     root           838 Jan  2 10:42 sky-dobby.service
-rw-r--r--    1 root     root           713 Jan  2 10:00 sky-dropbear.service
-rw-r--r--    1 root     root           414 Jan  2 10:43 sky-fixup.service


iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -F

// xi6
-rwxr-xr-x 1 keitee keitee  67K Dec 18 15:12 libwayland-egl.so.0.0.0*
lrwxrwxrwx 1 keitee keitee   23 Dec 18 15:12 libwayland-egl.so.0 -> libwayland-egl.so.0.0.0*

// xi1
lrwxrwxrwx 1 keitee keitee 10 Jan  2 09:46 libwayland-egl.so.1.0.0 -> libMali.so*
lrwxrwxrwx 1 keitee keitee 23 Jan  2 09:46 libwayland-egl.so.1 -> libwayland-egl.so.1.0.0*
lrwxrwxrwx 1 keitee keitee 19 Jan  2 09:46 libwayland-egl.so -> libwayland-egl.so.1*


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-as

// under bitbake
meta-rdk-sky/recipes-core$ ll

drwxrwxr-x  2 keitee keitee 4.0K Nov  4 10:56 skyui/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 sky-fixup/
drwxrwxr-x  2 keitee keitee 4.0K Nov  4 10:56 packagegroups/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 libasservice/
drwxrwxr-x  2 keitee keitee 4.0K Nov  4 10:56 images/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 ctemplate/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 assystemserviced/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 asproxy/
drwxrwxr-x  2 keitee keitee 4.0K Nov  4 10:56 asplayerservice/
drwxrwxr-x  3 keitee keitee 4.0K Nov  4 10:56 asmockservice/
drwxrwxr-x  2 keitee keitee 4.0K Nov  4 10:56 asappsserviced/


tmp/work/cortexa15t2hf-neon-rdk-linux-gnueabi/assystemserviced/1.0-0.1/git

tmp/work/arrisxi6_morty-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs-dbg
  /usr/src/debug$ ls -ald as*
drwxr-xr-x 3 keitee keitee 4096 Nov  4 14:01 asappsserviced
drwxr-xr-x 3 keitee keitee 4096 Nov  4 14:01 asmockservice
drwxr-xr-x 3 keitee keitee 4096 Nov  6 10:53 asplayerservice
drwxr-xr-x 3 keitee keitee 4096 Nov  4 14:07 asproxy
drwxr-xr-x 3 keitee keitee 4096 Nov  4 14:01 assystemserviced


*rdk-as-repo*
https://git.bskyb.com/llama/as-system-service

git clone gitlab@git.bskyb.com:llama/ASServiceLib.git
git clone gitlab@git.bskyb.com:llama/ASMockService.git
git clone gitlab@git.bskyb.com:llama/asplayer.git

https://www.stb.bskyb.com/confluence/display/~grayb/RDK+-+Building+BleRcuDaemon
Checkout Code

git clone dwngit@git.stb.bskyb.com:appinfrastructure appinfrastructure-rdk
git checkout feature/NOJIRA_rdk_appinfra



cmake -D RDK_SDK=/media/keitee/ssd2/rdk/2.0 ..
-D RDK_SDK=<PATH_RDK_SDK> 

## enabling AS port
iptables -I INPUT 1 -p tcp --match multiport --dport 9001:9007 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -I OUTPUT 1 -p tcp --match multiport --sport 9001:9007 -m conntrack --ctstate ESTABLISHED -j ACCEPT


systemctl stop appmanager
./asproxy &
./ASSystemService &
./ASNetworkService &

systemctl -a | grep -i sky
  sky-appsservice.service                                                                                           loaded    active     running      Sky AS Apps Service
  sky-asmock.service                                                                                                loaded    active     running      Sky AS Mock Service daemon
  sky-asplayer.service                                                                                              loaded    active     running      Sky AS Player Service
  sky-asproxy.service                                                                                               loaded    active     running      Sky AS Proxy daemon
  sky-bluetoothrcu.service                                                                                          loaded    active     running      Sky Bluetooth RCU Daemon
  sky-dobby.service                                                                                                 loaded    active     running      Sky Dobby (Container) daemon
● sky-fixup.service                                                                                                 loaded    failed     failed       Sky FixUp


*rdk-as-build* out of bitbake

/media/keitee/ssd2/as/asappsserviced/RDK/AppManager/build

cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/rdk-toolchain.cmake ..
cmake -DCMAKE_TOOLCHAIN_FILE=/media/keitee/ssd2/as/cmake/kit.toolchain.new.cmake ..
cmake -DCMAKE_TOOLCHAIN_FILE=../kit.toolchain.new.cmake ..
cmake -DCMAKE_TOOLCHAIN_FILE=./kit.toolchain.new.cmake ..


*as-asmockservice*

[Unit]
Description=Sky AS Mock Service daemon
After=sky-bluetoothrcu.service

[Service]
Type=dbus
BusName=com.sky.as.mockservice
ExecStart=/bin/sh -c '/usr/bin/asmockservice --journald --nobuiltin /etc/sky/asmockservice/configs/*.json'
Restart=on-failure

// do not use builtin json config files but still use extarnal confings in
// /etc/sky? are they same?

keitee@kit-ubuntu:/media/keitee/ssd2/as/asmockservice$ diff -r configs configs_from_box/
Only in configs: apps.json
Only in configs: btremotes.json
Only in configs: network.json

this means that these three files are not handled by mock; real services do
instead.


*as-asplayer*

[Service]
Type=dbus
BusName=com.sky.as.player
Environment="XDG_RUNTIME_DIR=/tmp"
Environment="WAYLAND_DISPLAY=westeros-asplayer"
Environment="PLAYERSINKBIN_USE_WESTEROSSINK=1"
WorkingDirectory=/tmp
ExecStartPre=/bin/rm -rf /tmp/llds
ExecStart=/usr/sbin/asrdkplayer
Restart=on-failure

armv7at2hf-neon-rdk-linux-gnueabi/gst-plugins-rdk-aamp/1.99+git999-r0$ diff ./package/usr/lib/gstreamer-1.0/libgstaamp.so ~/mw/exports/rdk/libgstaamp.so
./gst-plugins-rdk-aamp/1.99+git999-r0/gst-plugins-rdk-aamp-1.99+git999/libgstaamp.so

(gst-plugin-scanner:10723): GStreamer-WARNING **: Failed to load plugin '/usr/lib/gstreamer-1.0/libgstaamp.so': /usr/lib/libaampjsbindings.so: undefined symbol: JSObjectGetPrivate
Inside playersinkbin_init :1654
Inside gst_player_sinkbin_get_type :1624
Inside gst_player_sinkbin_class_init :367
Inside playersink_gst_resolution_get_type :94

libaampjsbindings.so 

// source
/media/keitee/ssd2/llama/workspace2/generic/aamp-video-engine/aamp


*as-appsserviced*

/llama/workspace2/build-sky_llama_adapter/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/
  asappsserviced/git-r0/git/RDK/AppManager


// source
/media/keitee/ssd2/llama/workspace2/build-sky_llama_adapter/tmp/work/
  armv7at2hf-neon-rdk-linux-gnueabi/asappsserviced/git-r0/git/RDK/AppManager/WindowManager/source

// output
/media/keitee/ssd2/llama/workspace2/build-sky_llama_adapter/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/asappsserviced/git-r0/build$

*as-appsserviced-recipe*
/meta-rdk-sky/recipes-core/asappsserviced/asappsserviced_git.bb


asappsserviced-git-r0 do_listtasks: do_build                       Default task for a recipe - depends on all other normal tasks required to 'build' a recipe
asappsserviced-git-r0 do_listtasks: do_checkuri                    Validates the SRC_URI value
asappsserviced-git-r0 do_listtasks: do_checkuriall                 Validates the SRC_URI value for all recipes required to build a target
asappsserviced-git-r0 do_listtasks: do_clean                       Removes all output files for a target
asappsserviced-git-r0 do_listtasks: do_cleanall                    Removes all output files, shared state cache, and downloaded source files for a target
asappsserviced-git-r0 do_listtasks: do_cleansstate                 Removes all output files and shared state cache for a target
asappsserviced-git-r0 do_listtasks: do_compile                     Compiles the source in the compilation directory
asappsserviced-git-r0 do_listtasks: do_configure                   Configures the source by enabling and disabling any build-time and configuration options for the software being built
asappsserviced-git-r0 do_listtasks: do_devpyshell                  Starts an interactive Python shell for development/debugging
asappsserviced-git-r0 do_listtasks: do_devshell                    Starts a shell with the environment set up for development/debugging
asappsserviced-git-r0 do_listtasks: do_fetch                       Fetches the source code
asappsserviced-git-r0 do_listtasks: do_fetchall                    Fetches all remote sources required to build a target
asappsserviced-git-r0 do_listtasks: do_generate_toolchain_file
asappsserviced-git-r0 do_listtasks: do_install                     Copies files from the compilation directory to a holding area
asappsserviced-git-r0 do_listtasks: do_listtasks                   Lists all defined tasks for a target
asappsserviced-git-r0 do_listtasks: do_package                     Analyzes the content of the holding area and splits it into subsets based on available packages and files
asappsserviced-git-r0 do_listtasks: do_package_qa                  Runs QA checks on packaged files
asappsserviced-git-r0 do_listtasks: do_package_qa_setscene         Runs QA checks on packaged files (setscene version)
asappsserviced-git-r0 do_listtasks: do_package_setscene            Analyzes the content of the holding area and splits it into subsets based on available packages and files (setscene version)
asappsserviced-git-r0 do_listtasks: do_package_write_ipk           Creates the actual IPK packages and places them in the Package Feed area
asappsserviced-git-r0 do_listtasks: do_package_write_ipk_setscene  Creates the actual IPK packages and places them in the Package Feed area (setscene version)
asappsserviced-git-r0 do_listtasks: do_packagedata                 Creates package metadata used by the build system to generate the final packages
asappsserviced-git-r0 do_listtasks: do_packagedata_setscene        Creates package metadata used by the build system to generate the final packages (setscene version)
asappsserviced-git-r0 do_listtasks: do_patch                       Locates patch files and applies them to the source code
asappsserviced-git-r0 do_listtasks: do_populate_lic                Writes license information for the recipe that is collected later when the image is constructed
asappsserviced-git-r0 do_listtasks: do_populate_lic_setscene       Writes license information for the recipe that is collected later when the image is constructed (setscene version)
asappsserviced-git-r0 do_listtasks: do_populate_sysroot            Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes
asappsserviced-git-r0 do_listtasks: do_populate_sysroot_setscene   Copies a subset of files installed by do_install into the sysroot in order to make them available to other recipes (setscene version)
asappsserviced-git-r0 do_listtasks: do_unpack                      Unpacks the source code into a working directory

bitbake asappsserviced -c clean -f

// to have source code and to build. but not built when code changes
bitbake asappsserviced -c compile

// not build
// bitbake asappsserviced -c compile -f

// build
bitbake asappsserviced

// outputs
./armv7at2hf-neon-rdk-linux-gnueabi/asappsserviced/git-r0/build/appsservice
./sky_llama_adapter-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs-dbg/usr/sbin/.debug/appsservice
./sky_llama_adapter-rdk-linux-gnueabi/comcast-mediaclient-vbn-image/1.0-r0/rootfs/usr/sbin/appsservice

bitbake comcast-mediaclient-vbn-image


*as-appsserviced-service*
asappsserviced/git-r0/git/RDK/AppManager/Systemd/sky-appsservice.xi6.service

# This file is systemd script for launching the AS apps service
# at boot time.
#
# Enable appsservice to start on boot:
#         systemctl enable sky-appsservice.service
#
# Start appsservice immediately:
#         systemctl start sky-appsservice.service
#
# Stop appsservice:
#         systemctl stop sky-appsservice.service
#
# Status:
#         systemctl status sky-appsservice.service

[Unit]
Description=Sky AS Apps Service
Wants=sky-asproxy.service

Requires=sky-dobby.service
After=sky-dobby.service

Requires=nxserver.service
After=nxserver.service

Requires=storagemgrmain.service
After=storagemgrmain.service

After=sky-asmock.service

[Service]
Type=dbus
BusName=com.sky.as.apps
Environment="LD_PRELOAD=/usr/lib/libwayland-egl.so.0"
ExecStartPre=/bin/sleep 60
ExecStart=/usr/sbin/appsservice --journald
WatchdogSec=10
Restart=on-failure


*rdk-as-proxy*

[Service]
Type=dbus
BusName=com.sky.as.proxy
ExecStart=/usr/sbin/asproxy --journald
Restart=on-failure
LimitNPROC=1
ProtectHome=true
ProtectSystem=full


./ethan-as-source/Components/Rdk/ASProxy/Proxy/Main/include/ProxyUrlMap.h
./ethan-as-source/Components/Rdk/ASProxy/Proxy/Main/source/ProxyUrlMap.cpp


// ethan-as-source/Components/Rdk/ASProxy/Proxy/Services/include/IServicesController.h

class IServicesController
{
  public:
    static std::shared_ptr<IServicesController>
      create(const std::shared_ptr<AS_MAIN::ProxyUrlMap> &urlMap,
          const std::shared_ptr<ISecurityContext> &securityCtx);

    virtual ~IServicesController() = default;

  public:
    virtual bool start() = 0;
    virtual void stop() = 0;
};

// ethan-as-source/Components/Rdk/ASProxy/Proxy/Services/source/rdk/RdkServicesController.h

class RdkServicesController : public IServicesController

// IXX interface class has static create and the derived class has its
// implementation. kind of factory?

// ethan-as-source/Components/Rdk/ASProxy/Proxy/Services/source/rdk/RdkServicesController.cpp

std::shared_ptr<IServicesController> IServicesController::create(const std::shared_ptr<AS_MAIN::ProxyUrlMap> &urlMap,
                                                                 const std::shared_ptr<ISecurityContext> &securityCtx)
{
  return std::make_shared<RdkServicesController>(urlMap, securityCtx);
}

RdkServicesController::RdkServicesController()
    , mOurServiceName("com.sky.as.proxy")
{}


void RdkServicesController::HandleProxyMethodCall( const std::string dbusMessage, sd_bus_message *reply )
{
  mEventQueue.emplace_back(std::move(event));
}


// asproxyservice

SD_BUS_METHOD("DBusProxyMethodCall",       "s",         "us",         &ASProxyService::proxyMethodCall,                SD_BUS_VTABLE_UNPRIVILEGED),

ASProxyService::ASProxyService(const std::shared_ptr<SDBusConnection> &connection)
{}


// Called by the sd-bus library when a 'com.sky.as.Service1.DBusProxyMethodCall'
// method call arrives.

int ASProxyService::proxyMethodCall( sd_bus_message *msg, void *userData, sd_bus_error *retError )
{
  sd_bus_message_read( msg, "s", &msgArgs );
  std::string dbusMessage( msgArgs );
  self->mRdkServiceControllerShdPtr->HandleProxyMethodCall( dbusMessage, reply );
}

void ASProxyService::ProcessDbusCall( const std::string dbusMessage, sd_bus_message *reply )
{
  std::shared_ptr<ASProxyMethodCall> proxyMsg = std::make_shared<ASProxyMethodCall>( dbusMessage, reply );

  std::string domain;
  std::string method;

  proxyMsg->GetDomainAndMethod( domain, method );
}

ASProxyMethodCall::ASProxyMethodCall( const std::string dBusMessage, sd_bus_message *reply )
        : SDBusMethodCall( "/com/sky/as/service", ASSERVICE1_INTERFACE )
{
    AS_LOG_ENTRY( "%s", __func__ );

    mReplyCode = 500;
    mReply = reply;
    mSentReply = false;

    SetDomainAndMethod( dBusMessage );

    AS_LOG_EXIT( "%s", __func__ );
}

void ASProxyMethodCall::SetDomainAndMethod( const std::string dBusMessage )
{
    AS_LOG_ENTRY( "%s", __func__ );

    if ( dBusMessage.empty() == false )
    {
        mDbusMessage = dBusMessage;

        AS_LOG_INFO( "mDbusMessage: %s", mDbusMessage.c_str() );

        Json::Reader reader;
        Json::Value root;
        if ( reader.parse( mDbusMessage, root ) )
    }
}


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-dtt

// from ftp
wget --user=sky --password=PHEr7xb2Rb ftp://sky@ftp.futarque.com/MediariteAndClientLib/2020-01-31/Release_RDK_Readme.txt
wget -r --user=sky --password=PHEr7xb2Rb ftp://sky@ftp.futarque.com/MediariteAndClientLib/2020-02-10


// on xi6 rdk box
dropbearkey -t rsa -f /opt/sky-ssh-hostkey
dropbear -p :10022 -P /var/run/dropbear-sky.pid -r /opt/sky-ssh-hostkey -B

iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -F

ssh -p 10022 root@192.168.0.103

systemctl status sky-asplayer
systemctl stop sky-asplayer

scp -r -P 10022 ./asrdkplayer root@192.168.0.103:/opt
mount-copybind ./asrdkplayer /usr/sbin/asrdkplayer

systemctl start sky-asplayer

journalctl -u sky-asplayer --since today


// copy whole directory and must be on "/" on target

scp -r -P 10022 ./futarque root@192.168.0.100:


// on pc

./ptestcli -s<your device's IP>:40660 
./ptestcli -s192.168.0.100:40660 


keitee@kit-ubuntu:/media/keitee/ssd2/dtt/mediarite-sky_llama_adapter-20200131/MapiClient/build$ ./ptestcli

Usage: ./ptestcli [-h] -s<server:port> [-m[<timeout>]] [command] [param]
  Parameters in brackets '[]' are optional.
  -h: This help.
  -s<server:port>: The rpc server and port to connect to (can also be set in environment variable PTESTCLI_REMOTE_SERVER)
  -m[<timeout>]: Monitor the rpc event queue for timeout seconds. If timeout is 0 or not included: Monitor until program is stopped with Ctrl-c
  command is optional. If not included then information about the server will be printed (getFutApiVersion)
    Supported commands:
      GetProductInfo
      GetProductConfig KEY string
      SetProductConfig KEY string VALUE string
      SetAgeingMode IS_ON integer <0|1>
      SelectInput SRC string
      LoadWB COLOR_MODE string <standard|warm|cold|off>
      SetWB [COLOR_MODE string <standard|warm|cold|off>] [R_GAIN integer] [G_GAIN integer] [B_GAIN integer] [R_OFFSET integer] [G_OFFSET integer] [B_OFFSET integer]
      GetWB [COLOR_MODE string <standard|warm|cold>]
      SaveWB
      SetWBTestPattern [PATTERN string <grey|red|green|blue>] LEVEL integer
      GetWBTestPattern
      SetLcdSS SS_LEVEL integer SS_FREQ integer
      GetLcdSS
      SetDdrSS SS_LEVEL integer SS_FREQ integer
      GetDdrSS
      GetContrastLevel
      SetContrastLevel LEVEL integer
      GetBrightnessLevel
      SetBrightnessLevel LEVEL integer
      GetBacklightLevel
      SetBacklightLevel LEVEL integer
      GetVolumeLevel
      SetVolumeLevel LEVEL integer
      GetMute
      SetMute MUTE_ON integer <0|1>
      SetPictureMode PICTURE_MODE string
      SetPowerMode
      SelectTestPattern PATTERN string <none|bar|grid|dots|grey|red|green|blue|black>
      StartDTVTest [DTV_MODE string <standard|url|dvb-t|dvb-t2|dvb-c>] [URL string] [DTV_FREQUENCY_KHZ integer]
      StartLocalDimmingSequence
      GetLightSensorStatus
      GetWifiStatus [SSID string]
      GetNetworkStatus
      GetBluetoothStatus [SSID string]
      GetUSBDeviceStatus
      PlayTestUrl [URL stringfilename]
      NotifyEvent [EVENT string <reboot|exitproductiontest>]
  param may be optional (depending on what command is). If included it should be a serialized metacontainer "[key integer] [key string] [key blob]" or encoded as examples below:
    Ex. 1 param is metacontainer                                             ./ptestcli -s192.168.2.206:40680 SelectInput "[] [SRC hdmi1] []"
    Ex. 2 params are key value pairs:                                        ./ptestcli -s192.168.2.206:40680 SelectInput SRC hdmi1
    Ex. 3 params are key value pairs:                                        ./ptestcli -s192.168.2.206:40680 SetWB R_GAIN 1030 G_GAIN 1024 B_GAIN 1020
    Ex. 4 params are values (ordered as in help, including optional params): ./ptestcli -s192.168.2.206:40680 SetMute 1


./ptestcli -s192.168.0.100:40660 SetPowerMode
./ptestcli -s192.168.0.100:40660 StartDTVTest

gdb --args ./ptestcli -s192.168.0.100:40660 SetPowerMode
gdb --args ./ptestcli -s192.168.0.100:40660


$ ./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=CHList
---[Day is Tuesday 2020 02 11 - 09:22:21 ]---
[09:21:39,710393] MAIN(9195).20 UnitTestMain.cpp:50(L1)Connecting to http://192.168.0.100:40660?p=json
[09:21:39,715801] MAIN(9195).20 UnitTestMain.cpp:63(L1)
[09:21:39,715801] MAIN(9195).20 UnitTestMain.cpp:63(L1)
[09:21:39,715801] MAIN(9195).20 UnitTestMain.cpp:63(L1)Unit test: CHList
[09:21:39,715801] MAIN(9195).20 UnitTestMain.cpp:63(L1)
[09:21:39,716090] MAIN(9195).20 UnitTestManager.cpp:40(L1)Execute Test  cmd=CHList
[09:21:39,716207] MAIN(9195).20 UnitTestManager.cpp:377(L1)iChannelList  args=
[09:21:39,725308] MAIN(9195).20 UnitTestManager.cpp:400(L1)iChannelList  args=
[09:21:39,725447] MAIN(9195).20 TableResult.cpp:39(L0)ChannelListResult
[0] PK (9)
[1] Name (12)
[2] epgPresent.StartTime (2)
[3] epgPresent.Name (12)
[4] _id (9)
[09:21:39,725989] MAIN(9195).20 UnitTestManager.cpp:87(L1)Execute Test (DONE)  cmd=CHList, success=true

./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=CHSearchDVBT
./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=CHSearchAbort

./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=WizardGBR@AssignTunerDVBT,HDHomeRun:123035ec@CHSearchDVBT@CHList
./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=WizardITA@AssignTunerDVBT,HDHomeRun:123035ec@CHSearchDVBT@CHList

./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=WizardITA@AssignTunerDVBT,Futarque:Internal@CHSearchDVBT@CHList
./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=CHList
./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=CHChannelUp

--unit-test=CHChannelUp@Delay,10@CHChannelDown@CHChannelChange,35

L:[25], L:[BBC NEWS], L:[1581498000], L:[BBC News at 9], L:[25],
L:[30], L:[BBC Parliament], L:[1581494400], L:[Live European Parliament], L:[30],
L:[1], L:[Sky News], L:[1581498000], L:[All Out Politics], L:[1],
L:[120], L:[RT], L:[1581498000], L:[Headline News], L:[120],

./unittest --mapi-url=http://192.168.0.100:40660 --unit-test=WizardITA

adb connect 192.168.0.100

#include <MediaRiteApiConnectionHandler.h>

MediaRiteApiConnectionHandler * pCH = new MediaRiteApiConnectionHandler(pCB);

SettingsManagerRpcHelper* sm =  mpCH->getSettingsManager();

./MapiClientLib/MediaRiteApi/Rpc/MediaRiteApiConnectionHandler.h

class MediaRiteApiConnectionHandler : public FutarqueRpcClient {
public:
    MediaRiteApiConnectionHandler(MediaRiteApiConnectionCallback * ipCallback);
    virtual ~MediaRiteApiConnectionHandler();

    void handleFutarqueRpcError(FutarqueRpcErrorResponse ret, const char * method) FJAP_THROW(FutarqueRpcException);

    void connect(const char * url) FJAP_THROW(FutarqueRpcException);
    void disconnect() FJAP_THROW(FutarqueRpcException);
    bool isConnected(int64 mmversionRequired);
    bool isConnected(){return isConnected(0);}
    MediaRiteApiRpcContext getConnectedContext(){return mConnectedContext;}
    
    MediaRiteApiRpcHelper * getMediaRite(){return mpMediaRiteApiRpcHelper;}
    SystemManagerRpcHelper * getSystemManager(){return mpSystemManagerRpcHelper;}
    SoftwareUpdateRpcHelper * getSoftwareUpdate(){return mpSoftwareUpdateRpcHelper;}
    SettingsManagerRpcHelper * getSettingsManager(){return mpSettingsManagerRpcHelper;}
    SettingsUtilsRpcHelper * getSettingsUtils(){return mpSettingsUtilsRpcHelper;}
    DynamicResourceUpdateRpcHelper * getDynamicResourceUpdate(){return mpDynamicResourceUpdateRpcHelper;}
    PlayerManagerRpcHelper * getPlayerManager(){return mpPlayerManagerRpcHelper;}
    PlayerRpcHelper * getPlayer(){return mpPlayerRpcHelper;}
    PlayerUtilsRpcHelper * getPlayerUtils(){return mpPlayerUtilsRpcHelper;}
    ChannelManagerRpcHelper * getChannelManager(){return mpChannelManagerRpcHelper;}
    ChannelListRpcHelper * getChannelList(){return mpChannelListRpcHelper;}
    ChannelSearchRpcHelper * getChannelSearch(){return mpChannelSearchRpcHelper;}
    ChannelListEditorRpcHelper * getChannelListEditor(){return mpChannelListEditorRpcHelper;}
    ChannelUtilsRpcHelper * getChannelUtils(){return mpChannelUtilsRpcHelper;}
    EpgManagerRpcHelper * getEpgManager(){return mpEpgManagerRpcHelper;}
    TunerManagerRpcHelper * getTunerManager(){return mpTunerManagerRpcHelper;}
    UnicableSearchRpcHelper * getUnicableSearch(){return mpUnicableSearchRpcHelper;}
    TunerUtilsRpcHelper * getTunerUtils(){return mpTunerUtilsRpcHelper;}
    NetworkTunersRpcHelper * getNetworkTuners(){return mpNetworkTunersRpcHelper;}
    CaManagerRpcHelper * getCaManager(){return mpCaManagerRpcHelper;}
    DvrManagerRpcHelper * getDvrManager(){return mpDvrManagerRpcHelper;}
    DvrStorageRpcHelper * getDvrStorage(){return mpDvrStorageRpcHelper;}
    DvrUtilsRpcHelper * getDvrUtils(){return mpDvrUtilsRpcHelper;}
    ProductionTestRpcHelper * getProductionTest(){return mpProductionTestRpcHelper;}

    MediaRiteApiRpcClient * getMediaRiteClient(){return mpMediaRiteApiRpc;}
    SystemManagerRpcClient * getSystemManagerClient(){return mpSystemManagerRpc;}
    SoftwareUpdateRpcClient * getSoftwareUpdateClient(){return mpSoftwareUpdateRpc;}
    SettingsManagerRpcClient * getSettingsManagerClient(){return mpSettingsManagerRpc;}
    SettingsUtilsRpcClient * getSettingsUtilsClient(){return mpSettingsUtilsRpc;}
    DynamicResourceUpdateRpcClient * getDynamicResourceUpdateClient(){return mpDynamicResourceUpdateRpc;}
    PlayerManagerRpcClient * getPlayerManagerClient(){return mpPlayerManagerRpc;}
    PlayerRpcClient * getPlayerClient(){return mpPlayerRpc;}
    PlayerUtilsRpcClient * getPlayerUtilsClient(){return mpPlayerUtilsRpc;}
    ChannelManagerRpcClient * getChannelManagerClient(){return mpChannelManagerRpc;}
    ChannelListRpcClient * getChannelListClient(){return mpChannelListRpc;}
    ChannelSearchRpcClient * getChannelSearchClient(){return mpChannelSearchRpc;}
    ChannelListEditorRpcClient * getChannelListEditorClient(){return mpChannelListEditorRpc;}
    ChannelUtilsRpcClient * getChannelUtilsClient(){return mpChannelUtilsRpc;}
    EpgManagerRpcClient * getEpgManagerClient(){return mpEpgManagerRpc;}
    TunerManagerRpcClient * getTunerManagerClient(){return mpTunerManagerRpc;}
    UnicableSearchRpcClient * getUnicableSearchClient(){return mpUnicableSearchRpc;}
    TunerUtilsRpcClient * getTunerUtilsClient(){return mpTunerUtilsRpc;}
    NetworkTunersRpcClient * getNetworkTunersClient(){return mpNetworkTunersRpc;}
    CaManagerRpcClient * getCaManagerClient(){return mpCaManagerRpc;}
    DvrManagerRpcClient * getDvrManagerClient(){return mpDvrManagerRpc;}
    DvrStorageRpcClient * getDvrStorageClient(){return mpDvrStorageRpc;}
    DvrUtilsRpcClient * getDvrUtilsClient(){return mpDvrUtilsRpc;}
    ProductionTestRpcClient * getProductionTestClient(){return mpProductionTestRpc;}
};


<scan-events>
ethan-as-source/Components/AS/Services/Controllers/ServiceScanController/include/AS_SERVICESCAN_ServiceScanController.h

/**
 * @brief Types of events handled by service scan controller
 */
enum ServiceScanEvent
{
    SERVICE_SCAN_EVENT_UNDEF,                            ///< Undefined event
    SERVICE_SCAN_EVENT_START,                            ///< Event to start a scan operation
    SERVICE_SCAN_EVENT_ABORT,                            ///< Event to abort a current scan
    SERVICE_SCAN_EVENT_COMMIT,                           ///< Event to commit a current scan
    SERVICE_SCAN_EVENT_STATUS_UPDATE,                    ///< Event to notify the status of scan progress
    SERVICE_SCAN_EVENT_UPDATE_SCAN_NOTIFICATION,         ///< Event to notify the state of the SPM updates
    SERVICE_SCAN_EVENT_USER_ACTIVITY_UPDATE,             ///< Event to notify the user activity updates
    SERVICE_SCAN_EVENT_SCAN_TIMEOUT,                     ///< Event to notify scan timer expiry
    SERVICE_SCAN_EVENT_TERM                              ///< Event to terminate the controller thread execution
};

// ethan-as-source/Components/AS/Services/Controllers/ServiceScanController/include/AS_SERVICESCAN_ServiceScanController.h
/**
 * @brief Different states of service scan controller
 */
enum ServiceScanControllerState
{
    SERVICE_SCAN_CONTROLLER_STATE_IDLE,         ///< State when no new scan has been started. Set during startup or after a commit or abort
    SERVICE_SCAN_CONTROLLER_STATE_RUNNING,      ///< State to indicate that there is a scan in progress
    SERVICE_SCAN_CONTROLLER_STATE_BLOCKED,      ///< State to indicate that the scan is in blocked state and requires user intervention for the scan to continue
    SERVICE_SCAN_CONTROLLER_STATE_COMPLETE,     ///< State to indicate that the scan is complete. Set when the scan is 100 percent complete
    SERVICE_SCAN_CONTROLLER_STATE_FAILED        ///< State to indicate that the scan has failed.
};

// from mediarite
enum ChannelSearchAction {
    eChannelSearch_Init = 0,
    eChannelSearch_Tuning,
    eChannelSearch_Searching,
    eChannelSearch_Aborting,
    eChannelSearch_Aborted,
    eChannelSearch_Processing,
    eChannelSearch_Interaction,
    eChannelSearch_Finished
};

// mediarite scan
[09:42:44,745137] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:42:45,747573] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:42:46,750223] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:42:47,752795] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
...
[09:43:03,881362] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:04,888871] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:05,900651] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:06,912160] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:07,954865] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
...
[09:43:15,063992] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:16,077478] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:17,087105] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
...
[09:43:22,194274] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:23,227244] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:24,238744] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:25,258268] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
...
[09:43:30,350199] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:31,379964] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:34,459147] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:35,486484] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:40,618987] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:41,650456] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:47,817339] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:43:48,839922] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
...
[09:43:58,138057] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Searching
[09:43:59,168717] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
...
[09:43:59,168717] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Tuning
[09:45:07,865662] MAIN(10486).20 console.cpp:162(L1)KT: --------------------------------> SearchStatus: Finished
[09:45:08,866023] MAIN(10486).20 console.cpp:167(L1)SearchStatus: (DONE)


[1563970136.24] /services/scan/status ws: {u'status': u'RUNNING', u'progress': 99, u'scantype': u'DTT-UPDATE', u'radiochannels': 0, u'tvchannels': 6}


// 1. controller which as q and thread
// 2. register to SPM to get status

ServiceScanController::ServiceScanController


={============================================================================
*kt_dev_skymw_0000* skymw-rdk-as-windowmanager

int main(int argc, char *argv[])
{
    // create and start the window manager
    std::shared_ptr<IWindowManager> windowMgr =
        WindowManagerFactory::create(eventLoop);
    windowMgr->start();
}

// asappsserviced/RDK/AppManager/WindowManager/source/WindowManagerFactory.cpp

std::shared_ptr<IWindowManager> WindowManagerFactory::create(const sky::EventLoop &eventLoop)
{
    (void) eventLoop;
    return std::make_shared<WesterosWindowManager>(eventLoop);
}

// asappsserviced/RDK/AppManager/WindowManager/source/WesterosWindowManager.h

class WesterosWindowManager : public std::enable_shared_from_this<WesterosWindowManager>
                            , public IWindowManager
{}

*player-client*
void WesterosWindowManager::start()
{
    if (!mPlayerClient)
    {
        mPlayerClient = std::make_shared<WesterosPlayerClient>(mEventLoop, shared_from_this());
        if (!mPlayerClient || !mPlayerClient->start())
        {
            AI_LOG_ERROR("failed to start AS player client compositor");
        }
    }

    if (!mRenderLoop->start())
    {
        AI_LOG_ERROR("failed to start render loop");
    }
}

*client*
std::shared_ptr<IWindowManagerClient> WesterosWindowManager::createClient(const std::string &name,
                                                                          uid_t userId,
                                                                          ClientState initialState)
{
    (void) initialState;

    std::shared_ptr<WesterosClient> client =
        std::make_shared<WesterosClient>(mEventLoop, shared_from_this(), name, userId);

    client->inheritVideoSurface(mPlayerClient->getSurface());
    client->start();

    std::lock_guard<std::mutex> locker(mClientLock);
    mClients.emplace_back(RenderClient{ client, nullptr });

    return client;
}


// asappsserviced/RDK/AppManager/WindowManager/source/WesterosPlayerClient.h
class WesterosPlayerClient : public std::enable_shared_from_this<WesterosPlayerClient>

WesterosPlayerClient::WesterosPlayerClient()
{
  // create the compositor
  mCompositor = WstCompositorCreate();
}

bool WesterosPlayerClient::start()
{
  if (!mCompositor)
  {
    AI_LOG_ERROR("no compositor created");
    return false;
  }

  if (mIsRunning)
  {
    AI_LOG_WARN("compositor already started");
    return true;
  }

  if (!WstCompositorStart(mCompositor))
  {
    AI_LOG_ERROR("failed to start compositor");
    return false;
  }

  mIsRunning = true;

  AI_LOG_INFO("started AS player compositor @ '%s/%s'",
      mDisplayName.first.c_str(), mDisplayName.second.c_str());

  return true;
}


*westeros-compositor-llama*

// NOTE: cannot find sources here but `bitbake westeros -c compile` will make them.

/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros/1.0+gitrAUTOINC+88abed1807-r0

WESTEROS_INCLUDE_DIR include dir = /media/keitee/ssd2/rdk/2.0/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/usr/include
WESTEROS_COMPOSITOR_LIBRARY lib = /media/keitee/ssd2/rdk/2.0/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/usr/lib/libwesteros_compositor.so
WESTEROS_GL_LIBRARY lib = /media/keitee/ssd2/rdk/2.0/sysroots/cortexa15t2hf-neon-rdk-linux-gnueabi/usr/lib/libwesteros_gl.so
PROJECT_SOURCE_DIR: /media/keitee/ssd2/as/asappsserviced/RDK/AppManager

westeros-compositor.h

/**
 * WestCompositorCreate
 *
 * Create a new compositor instance.  The caller should configure
 * the instance with WstCompositorSet* calls and then start the
 * compositor operation by calling WstCompositorStart.
 */
WstCompositor* WstCompositorCreate();


void WesterosPlayerClient::setSurface(const WesterosPlayerSurfaceConfig &config)
{
  mMatrix[0] = static_cast<float>(mConfig.outputRect.width) / 1920.0f;
  mMatrix[5] = static_cast<float>(mConfig.outputRect.height) / 1080.0f;

  mMatrix[12] = static_cast<float>(mConfig.outputRect.x);
  mMatrix[13] = static_cast<float>(mConfig.outputRect.y);
}

void WesterosPlayerClient::render()
{
  WstCompositorComposeEmbedded(mCompositor, 0, 0, 1920, 1080);

  /**
   * WstCompositorComposeEmbedded
   *
   * Requests that the current scene be composed as part of the
   * configured embedded environment.  This should only be called
   * while the compositor is running.
   */
  bool WstCompositorComposeEmbedded(
      WstCompositor *ctx, int x, int y, int width, int height, float *matrix, float alpha )
  {
    `ctx->renderer->outputWidth= width;`
    `ctx->renderer->outputHeight= height;`
    `ctx->renderer->outputX= x;`
    `ctx->renderer->outputY= y;`

    `ctx->renderer->matrix= matrix;`

    ctx->renderer->alpha= alpha;
    ctx->renderer->fastHint= (hints & WstHints_noRotation);
    ctx->renderer->hints= hints;
    ctx->renderer->needHolePunch= false;
    ctx->renderer->rects.clear();

    WstRendererUpdateScene( ctx->renderer );

    // westeros-render.cpp

    void WstRendererUpdateScene( WstRenderer *renderer )
    {
      renderer->updateScene( renderer );
    }

    // westeros-render-embedded.cpp

    int renderer_init( WstRenderer *renderer, int argc, char **argv )
    {
      renderer->updateScene= wstRendererUpdateScene;
    }

    typedef struct _WstRect
    {
      int x;
      int y;
      int width;
      int height;
    } WstRect;

    static void wstRendererUpdateScene( WstRenderer *renderer )
    {

      rendererEMB->rendererFast->surfaceGetGeometry( rendererEMB->rendererFast, surface->surfaceFast, 
          &sx, &sy, &sw, &sh );
      
      void wstRendererSurfaceGetGeometry( WstRenderer *renderer, WstRenderSurface *surface, 
          int *x, int *y, int *width, int *height )
      {
        *x= surface->x;
        *y= surface->y;
        *width= surface->width;
        *height= surface->height;
      }

      if ( sw && sw )
      {
        WstRect r;

        r.x= renderer->matrix[0]*sx+renderer->matrix[12];
        r.y= renderer->matrix[5]*sy+renderer->matrix[13];
        r.width= renderer->matrix[0]*sw;
        r.height= renderer->matrix[5]*sh;

        wstRendererHolePunch( renderer, r.x, r.y, r.width, r.height );
      }
    }
  }
}

// westeros-render.h (stripped)

typedef struct _WstRenderer
{
   int outputWidth;
   int outputHeight;
   void *nativeWindow;
   struct wl_display *display;

   `void *renderer;`
   
   // For embedded composition
   int outputX;
   int outputY;
   float *matrix;
   float alpha;
   bool fastHint;
   int hints;
   bool needHolePunch;
   std::vector<WstRect> rects;
} WstRenderer;

// stripped
typedef struct _WstRendererEMB
{
   `WstRenderer *renderer;`
   int outputWidth;
   int outputHeight;

} WstRendererEMB;

// log

PARK: setting player surface to { visible:true zOrder:-2 
        outRect:0x0, 1920x1080    // x, y, w, h
        inRect:0.0x0.0, 1.0x1.0 alpha:1.0 }

// after calculation

PARK: setSurface matrix {
        1.000000x1.000000,    // for w, h
        0.000000x0.000000     // for x, y
      }

// full video [0, 5, 12, 13]
PARK: westeros-render-embedded: matrix{(1.0, 1.0), (0.0, 0.0)}
PARK: westeros-render-embedded: EMBRenderSurface


0000000927.874407 NFO: < T:17175 M:WesterosClient.cpp F:configurePlayerSurface L:1090 > 
client 'com.bskyb.epgui' requested player surface change 
{ visible:true zOrder:-2 outRect:55x140,436x246 inRect:0.0x0.0,1.0x1.0 alpha:1.0 }

0000000927.879367 NFO: < T:15526 M:WesterosPlayerClient.cpp F:setSurface L:456 > 

PARK: setting player surface to { visible:true zOrder:-2 
        outRect:55x140, 436x246               // x, y, w, h
        inRect:0.0x0.0, 1.0x1.0 alpha:1.0 }

// after calculation

PARK: setSurface matrix {
        0.227083x0.227778,          // w, h [0, 5]
        55.000000x140.000000        // x, y [12, 13]
      }


// scaled video when use %.1f
PARK: westeros-render-embedded: matrix{(0.2, 0.2), (55.0, 140.0)}
PARK: westeros-render-embedded: fast is false
PARK: westeros-render-embedded: EMBRenderSurface


// stripped

typedef struct _WstCompositor
{
   const char *displayName;
   const char *rendererModule;
   bool isEmbedded;
   int outputWidth;
   int outputHeight;

   WstOutput *output;
   WstRenderer *renderer;

   struct wl_display *display;
   struct wl_simple_shell *simpleShell;
   struct wl_event_source *displayTimer;

   int nextSurfaceId;
   std::vector<WstSurface*> surfaces;
   std::map<int32_t, WstSurface*> surfaceMap;
   
} WstCompositor;

// log from console

Westeros Info: westeros (core) version 1.01.09
Westeros Debug:  setoutputsize: 1920x1080
Westeros Info: waiting for compositor westeros-asplayer to start...
Westeros Debug: calling wl_display_create
Westeros Debug: wl_display=0xb1900470
Westeros Info: removing temp file: /tmp/westeros-6912-GiJGSJ
Westeros Debug: wl_display=0xb1900470 displayName=westeros-asplayer
westeros-sb: WstSBInit: enter: display 0xb1900470
westeros-sb: WstSBInit: exit: display 0xb1900470 sb 0xb19008e8
westeros-simpleshell: WstSimpleShellInit: enter: display 0xb1900470
westeros-simpleshell: WstSimpleShellInit: exit: display 0xb1900470 shell 0xb1900928
Westeros Debug: calling wl_display_run for display: westeros-asplayer
1579866699973: INFO: ../git/drm/westeros-gl/westeros-gl.c:1325 westeros-gl: have drm atomic mode setting
1579866703063: INFO: ../git/drm/westeros-gl/westeros-gl.c:1412 wstInitCtx: current mode 1920x1080@60
1579866703064: INFO: ../git/drm/westeros-gl/westeros-gl.c:1572 wstInitCtx; found 2 overlay planes
have wayland-egl: 0
have dmabuf import: 0
have external image: 0
WstRendererCreate: module (libwesteros_render_embedded.so.0.0.0) loaded and intialized
Westeros Info: compositor westeros-asplayer is started


*as-appsserviced-run*

scp -P 10022 appsservice root@192.168.0.103:

dropbearkey -t rsa -f /home/root/sky-ssh-hostkey
dropbear -p :10022 -P /var/run/dropbear2.pid -r /home/root/sky-ssh-hostkey -B

// check status
systemctl status sky-asplayer
systemctl status sky-appsservice


// stop player
systemctl stop sky-asplayer
// will crash appsservice
systemctl stop sky-appsservice


// move to ssh and set envs and run player

cat /sys/module/amvdec_ports/parameters/multiplanar
echo 1 > /sys/module/amvdec_ports/parameters/multiplanar
cat /sys/module/amvdec_ports/parameters/multiplanar

// run this on console where runs player
export XDG_RUNTIME_DIR=/tmp
export WAYLAND_DISPLAY=westeros-asplayer
export PLAYERSINKBIN_USE_WESTEROSSINK=1
export WESTEROS_GL_USE_BEST_MODE=1
export WESTEROS_SINK_USE_GFX=1
export LD_PRELOAD=/usr/lib/libwesteros_gl.so.0.0.0

echo $XDG_RUNTIME_DIR
echo $WAYLAND_DISPLAY
echo $PLAYERSINKBIN_USE_WESTEROSSINK
echo $WESTEROS_GL_USE_BEST_MODE
echo $WESTEROS_SINK_USE_GFX

asrdkplayer -v


systemctl status sky-appsservice

systemctl start sky-appsservice
LD_PRELOAD=/usr/lib/libwesteros_gl.so.0 /usr/sbin/appsservice -v --launchdelay=30000

LD_PRELOAD=/usr/lib/libwesteros_gl.so.0 ./appsservice -v --launchdelay=30000

LD_PRELOAD=/usr/lib/libwesteros_gl.so.0 gdb --args ./appsservice -v --launchdelay=30000


// copy to a box

scp -P 10022 ./.libs/libwesteros_render_embedded.so.0 root@192.168.0.100:/usr/lib/libwesteros_render_embedded.so.0.0.0
scp -P 10022 ./.libs/libwesteros_compositor.so.0.0.0 root@192.168.0.100:/usr/lib/libwesteros_compositor.so.0.0.0
scp -P 10022 ./build/./.libs/libgstwesterossink.so root@192.168.0.100:/usr/lib/gstreamer-1.0/libgstwesterossink.so
scp -P 10022 ./.libs/libwesteros_simpleshell_server.so.0.0.0 root@192.168.0.100:/usr/lib/libwesteros_simpleshell_server.so.0.0.0

// solib dependency

root@sky_llama_adapter:/proc/7007# /lib/ld-2.24.so --list /usr/sbin/appsservice
        linux-vdso.so.1 (0xbbf85000)
        libwesteros_compositor.so.0 => /usr/lib/libwesteros_compositor.so.0 (0xb3ed6000)
        libwesteros_gl.so.0 => /usr/lib/libwesteros_gl.so.0 (0xb3ecd000)
        libMali.so => /usr/lib/libMali.so (0xb30ec000)
        libcurl.so.4 => /usr/lib/libcurl.so.4 (0xb30b6000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb2ff5000)
        libxslt.so.1 => /usr/lib/libxslt.so.1 (0xb2fd1000)
        libcrypto.so.1.0.0 => /usr/lib/libcrypto.so.1.0.0 (0xb2edd000)
        libxmlsec1.so.1 => /usr/lib/libxmlsec1.so.1 (0xb2e9a000)
        libxmlsec1-openssl.so.1 => /usr/lib/libxmlsec1-openssl.so.1 (0xb2e6a000)
        libsystemd.so.0 => /lib/libsystemd.so.0 (0xb2e12000)
        libudev.so.1 => /lib/libudev.so.1 (0xb2dfb000)
        libjsoncpp.so.19 => /usr/lib/libjsoncpp.so.19 (0xb2dde000)
        libminizip.so => /usr/lib/libminizip.so (0xb2dd3000)
        libasservice.so => /usr/lib/libasservice.so (0xb2da0000)
        librt.so.1 => /lib/librt.so.1 (0xb2d8a000)
        libpthread.so.0 => /lib/libpthread.so.0 (0xb2d66000)
        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0xb2c87000)
        libm.so.6 => /lib/libm.so.6 (0xb2c15000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0xb2bfa000)
        libc.so.6 => /lib/libc.so.6 (0xb2b26000)
        libxkbcommon.so.0 => /usr/lib/libxkbcommon.so.0 (0xb2af9000)
        libwesteros_simpleshell_server.so.0 => /usr/lib/libwesteros_simpleshell_server.so.0 (0xb2af5000)
        libdl.so.2 => /lib/libdl.so.2 (0xb2ae2000)
        libwesteros_simplebuffer_server.so.0 => /usr/lib/libwesteros_simplebuffer_server.so.0 (0xb2ade000)
        libwayland-client.so.0 => /usr/lib/libwayland-client.so.0 (0xb2ad5000)
        libwayland-server.so.0 => /usr/lib/libwayland-server.so.0 (0xb2aca000)
        libffi.so.6 => /usr/lib/libffi.so.6 (0xb2ac3000)
        libdrm.so.2 => /usr/lib/libdrm.so.2 (0xb2ab9000)
        /lib/ld-linux-armhf.so.3 => /lib/ld-2.24.so (0xb3eec000)
        libssl.so.1.0.0 => /usr/lib/libssl.so.1.0.0 (0xb2a89000)
        libz.so.1 => /lib/libz.so.1 (0xb2a79000)
        libcap.so.2 => /lib/libcap.so.2 (0xb2a74000)
        libresolv.so.2 => /lib/libresolv.so.2 (0xb2a56000)
        liblzma.so.5 => /usr/lib/liblzma.so.5 (0xb2a3d000)


<westerossink>
/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-sink/gitAUTOINC+4d5f2c8d43-r0

root@sky_llama_adapter:/usr/bin# gst-inspect-1.0 westerossink
westeros-sink: discover decoder: /dev/video26
error: XDG_RUNTIME_DIR not set in the environment.
Factory Details:
  Rank                     none (0)
  Long-name                Westeros Sink
  Klass                    Codec/Decoder/Video/Sink/Video
  Description              Writes buffers to the westeros wayland compositor
  Author                   Comcast

Plugin Details:
  Name                     westerossink
  Description              Writes buffers to the westeros wayland compositor
  Filename                 /usr/lib/gstreamer-1.0/libgstwesterossink.so

westeros-sink: caps: (video/x-h264, pixel-aspect-ratio=(fraction)1/1, width=(int)1280, height=(int)720, framerate=(fraction)30000/1001, interlace-mode=(string)progressive, chroma-format=(string)4:2:0, bit-depth-luma=(uint)8, bit-depth-chroma=(uint)8, parsed=(boolean)true, stream-format=(string)byte-stream, alignment=(string)au, profile=(string)main, level=(string)4.1)
gst_westeros_sink_set_property set window rect (0,0,1920,1080)


/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros/1.0+gitrAUTOINC+88abed1807-r0/temp

bitbake westeros -c compile

/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros/1.0+gitrAUTOINC+88abed1807-r0/build$ find . -name libwesteros_render_embedded.so*
./.libs/libwesteros_render_embedded.so
./.libs/libwesteros_render_embedded.so.0.0.0
./.libs/libwesteros_render_embedded.so.0


<westeros-build>
/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros/1.0+gitrAUTOINC+88abed1807-r0/build

bitbake westeros-simplebuffer -c compile
bitbake westeros-simpleshell -c compile

/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-simpleshell/1.0+gitrAUTOINC+88abed1807-r0

/tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-simpleshell/1.0+gitrAUTOINC+88abed1807-r0/git/simpleshell/westeros-simpleshell.cpp

static void wstISimpleShellSetVisible(struct wl_client *client, struct wl_resource *resource, 
                                      uint32_t surfaceId, uint32_t visible)
{
   struct wl_simple_shell *shell= (struct wl_simple_shell*)wl_resource_get_user_data(resource);

   printf("PARK: simpleshell: wstISimpleShellSetVisible(surfaceid %d, visible %d", surfaceId, visible);

   shell->callbacks->set_visible( shell->userData, surfaceId, (visible != 0) );

   wstSimpleShellBroadcastSurfaceUpdate(client, shell, surfaceId );
}

libwesteros_simpleshell_server.so.0.0.0 

bitbake westeros-sink -c compile
bitbake westeros -c compile


libwesteros_gl.so.0.0.0
bitbake westeros-soc-drm -c compile
tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-soc-drm/1.0-r0/git/drm/westeros-gl/westeros-gl.c


b wstRendererUpdateScene

break westeros-render-embedded.cpp:1691 if renderer->matrix != 0
commands
silent
printf "BINGO\n"
end

b gst_westeros_sink_set_property:PARK1
b gst_westeros_sink_set_property:PARK2


break westeros-render-embedded.cpp:1430
// b wstRendererEMBRenderSurface:PARK1
b wstRendererEMBRenderSurface:PARK2

// same
b westeros-compositor.cpp:2077
// b WstCompositorComposeEmbedded:PARK2
b WstCompositorComposeEmbedded:PARK1

// aamp-cli commands

rset_property set window 
rect 0 0 1280 720
rect 55 140 440 280
rect 55 140 880 560
http://nh.lab.xcal.tv/integration/files/neil/master.m3u8


// first time
PARK: gst_westeros_sink_set_property set window rect (0,0,1280,720)

// when use rect command
rect 55 140 440 280

PARK: gst_westeros_sink_set_property set window rect (55,140,440,280)
PARK: wl_simple_shell_set_geometry (55,140,440,280)
PARK: wl_simple_shell_set_visible

(gdb) step
wl_simple_shell_set_geometry (height=280, width=440, y=140, x=55, surfaceId=2, wl_simple_shell=0x192eb8) at /usr/include/simpleshell-client-protocol.h:255
255     /usr/include/simpleshell-client-protocol.h: No such file or directory.
(gdb) bt
#0  wl_simple_shell_set_geometry (height=280, width=440, y=140, x=55, surfaceId=2, wl_simple_shell=0x192eb8) at /usr/include/simpleshell-client-protocol.h:255
#1  gst_westeros_sink_set_property (object=0x2059c0, prop_id=<optimized out>, value=<optimized out>, pspec=0x201078)
    at /usr/src/debug/westeros-sink/gitAUTOINC+4d5f2c8d43-r0/git/westeros-sink/westeros-sink.c:676
#2  0xb2d73726 in ?? () from /usr/lib/libgobject-2.0.so.0
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb) step


// wayland/src/wayland-util.h

struct wl_interface {
	/** Interface name */
	const char *name;
	/** Interface version */
	int version;
	/** Number of methods (requests) */
	int method_count;
	/** Method (request) signatures */
	const struct wl_message *methods;
	/** Number of events */
	int event_count;
	/** Event signatures */
	const struct wl_message *events;
};

// /tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-simpleshell/1.0+gitrAUTOINC+88abed1807-r0/git/simpleshell/protocol/simpleshell.xml

<?xml version="1.0" encoding="UTF-8"?>
<protocol name="simple_shell">
  <interface name="wl_simple_shell" version="1">
    
    <description summary="control the layout of surfaces">
      The simple_shell provides control over the size, position,
      z-order, opacity, etc., of the surfaces making up the user
      interfaces suitable for situations such as embedded systems.
    </description>

    <!-- Raised when a new surface is created to provide the surfaceId -->
    <event name="surface_id">
      <description summary="provides surface id for new surface">
   This event is sent to the creator of a new wl_surface to
   provide the surface id.  The surface id is used in the 
   simple_shell protocol to control the surface.  The surface
   creator can set a surface name with the set_name request
   in response to this event.
      </description>
      <arg name="surface" type="object" interface="wl_surface"/>
      <arg name="surfaceId" type="uint"/>
    </event>
    <!-- Raised when a new surface is created by any client-->
    <event name="surface_created">
      <description summary="broadcast announcement of a new surface">
   This event is sent to all simple_shell listeners to announce the creation 
   of a new wl_surface.
      </description>
      <arg name="surfaceId" type="uint"/>
      <arg name="name" type="string"/>
    </event>
    <!-- Raised when a surface is destroyed by any client-->
    <event name="surface_destroyed">
      <description summary="broadcast announcement of a surface destruction">
   This event is sent to all simple_shell listeners to announce the destruction 
   of a new wl_surface.
      </description>
      <arg name="surfaceId" type="uint"/>
      <arg name="name" type="string"/>
    </event>
    <!-- Raised in response to a get_status request for a surface -->
    <event name="surface_status">
      <description summary="supply current surface information">
   This event is sent in response to a get_status request to the listener
   registered by the client issuing the request.
      </description>
      <arg name="surfaceId" type="uint"/>
      <arg name="name" type="string"/>
      <arg name="visible" type="uint"/>
      <arg name="x" type="int"/>
      <arg name="y" type="int"/>
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
      <arg name="opacity" type="fixed"/>
      <arg name="zorder" type="fixed"/>
    </event>
    <!-- Raised to mark the end of surface_status events for get_surfaces -->
    <event name="get_surfaces_done">
      <description summary="marks end of surface_status events for get_surfaces">
   This event is sent to a client that issues a get_surfaces request after the last
   surface_status event is sent.
      </description>
    </event>
    
    <!-- Set the name of a surface -->
    <request name="set_name">
      <arg name="surfaceId" type="uint"/>
      <arg name="name" type="string"/>
    </request>
    
    <!-- Set the visibility of a surface -->
    <request name="set_visible">
      <arg name="surfaceId" type="uint"/>
      <arg name="visible" type="uint"/>
    </request>

    <!-- Set the geometry of a surface -->
    <request name="set_geometry">
      <arg name="surfaceId" type="uint"/>
      <arg name="x" type="int"/>
      <arg name="y" type="int"/>
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
    </request>
    ... 
  </interface>
  
</protocol>


//tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-simpleshell/1.0+gitrAUTOINC+88abed1807-r0/git/simpleshell/protocol/simpleshell-server-protocol.h

/* Generated by wayland-scanner 1.11.0 */

/**
 * @ingroup iface_wl_simple_shell
 * @struct wl_simple_shell_interface
 */
struct wl_simple_shell_interface {
	/**
	 */
	void (*set_name)(struct wl_client *client,
			 struct wl_resource *resource,
			 uint32_t surfaceId,
			 const char *name);
	/**
	 */
	void (*set_visible)(struct wl_client *client,
			    struct wl_resource *resource,
			    uint32_t surfaceId,
			    uint32_t visible);
	/**
	 */
	void (*set_geometry)(struct wl_client *client,
			     struct wl_resource *resource,
			     uint32_t surfaceId,
			     int32_t x,
			     int32_t y,
			     int32_t width,
			     int32_t height);
	/**
	 */
	void (*set_opacity)(struct wl_client *client,
			    struct wl_resource *resource,
			    uint32_t surfaceId,
			    wl_fixed_t opacity);
	/**
	 */
	void (*set_zorder)(struct wl_client *client,
			   struct wl_resource *resource,
			   uint32_t surfaceId,
			   wl_fixed_t zorder);
	/**
	 */
	void (*get_status)(struct wl_client *client,
			   struct wl_resource *resource,
			   uint32_t surfaceId);
	/**
	 * get all existing surfaces
	 *
	 * Causes a surface status event for each existing surface to be
	 * sent to the listener registered by the client issuing the
	 * request.
	 */
	void (*get_surfaces)(struct wl_client *client,
			     struct wl_resource *resource);
	/**
	 */
	void (*set_focus)(struct wl_client *client,
			  struct wl_resource *resource,
			  uint32_t surfaceId);
};


//tmp/work/armv7at2hf-neon-rdk-linux-gnueabi/westeros-simpleshell/1.0+gitrAUTOINC+88abed1807-r0/git/simpleshell/protocol/simpleshell-client-protocol.h
/* Generated by wayland-scanner 1.11.0 */

/**
 * @ingroup iface_wl_simple_shell
 */
static inline void
wl_simple_shell_set_visible(struct wl_simple_shell *wl_simple_shell, uint32_t surfaceId, uint32_t visible)
{
	wl_proxy_marshal((struct wl_proxy *) wl_simple_shell,
			 WL_SIMPLE_SHELL_SET_VISIBLE, surfaceId, visible);
}

/**
 * @ingroup iface_wl_simple_shell
 */
static inline void
wl_simple_shell_set_geometry(struct wl_simple_shell *wl_simple_shell, uint32_t surfaceId, int32_t x, int32_t y, int32_t width, int32_t height)
{
	wl_proxy_marshal((struct wl_proxy *) wl_simple_shell,
			 WL_SIMPLE_SHELL_SET_GEOMETRY, surfaceId, x, y, width, height);
}

// weseros-sink.c
wl_simple_shell_set_geometry( sink->shell, sink->surfaceId,sink->windowX, sink->windowY,sink->windowWidth, sink->windowHeight );


={============================================================================
*kt_dev_skymw_0000* skymw-jira-airplay

<skymw-jira-airplay>

<NGDEV-141186>

// delegate if
else if (CFEqual(inProperty, CFSTR(kAirPlayKey_FirmwareRevision))) {

// [String] Firmware revision of the accessory.
#define kAirPlayKey_FirmwareRevision	"firmwareRevision"

have to use SPM_API_SYSINFO_PROPID_STB_SW_VER

// from http if
// [Boolean] Support sending UDP beacon as keep alive.
#define kAirPlayKey_KeepAliveLowPower "keepAliveLowPower"
need to change it to false

kAirPlayKey_KeepAliveSendStatsAsBody  387 AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverServer.c     CFDictionarySetValue(info, CFSTR(kAirPlayKey_KeepAliveSendStatsAsBody), kCFBooleanFalse); // Supports statistics as part of the keep alive body.

// from http if
// [Boolean] Whether the receiver supports statistics as part of the keep alive body.
#define kAirPlayKey_KeepAliveSendStatsAsBody "keepAliveSendStatsAsBody"
need to change it to false

// [Boolean] Returns true if the AirPlay name is the factory default name
#define kAirPlayProperty_NameIsFactoryDefault "nameIsFactoryDefault"

    else if (CFEqual(inProperty, CFSTR(kAirPlayKey_Name))) {

.654538 !MIL   -AS           < p:00000dec t:7a1fedc0 T:no name M:AS_DMS_Writer.cpp F:AirplaySDKDiagLog L:00258 > @ctx:AS_AUDIOSTREAMER_IMPL Trace.cpp(25) 2019-05-16 10:40:41.629209 AM [AirtuneDelegate] <- Name being set is Sky4027  


<NGDEV-141186>

<decode>

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.c


typedef struct
{
	UInt32		mNumberChannels;
	UInt32		mDataByteSize;
	void *		mData;
	
}	AudioBuffer;

typedef struct
{
	UInt32			mNumberBuffers;
	AudioBuffer		mBuffers[ 1 ];
	
}	AudioBufferList;

_AudioDecoderDecodeFrame()
{
  // note that it is local
  AudioBufferList							bufferList;

  packetCount									= inSession->samplesPerFrame;

  bufferList.mNumberBuffers					= 1;
  bufferList.mBuffers[ 0 ].mNumberChannels	= ctx->channels;
  bufferList.mBuffers[ 0 ].mDataByteSize		= (uint32_t) inDstMaxLen;
  bufferList.mBuffers[ 0 ].mData				= inDstPtr;

  AudioConverterFillComplexBuffer(
      inSession->audioConverter, 
      _AudioDecoderDecodeCallback,  // pass function pointer
      inSession,
      &packetCount,                 // samples per frame 
      &bufferList,                  // buffer list
      NULL );
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/PlatformEthan/AudioConverterStub.c
// called as many as needed to decode chunk of audio

AudioConverterFillComplexBuffer()
OSStatus AudioConverterFillComplexBuffer(
    AudioConverterRef inConverter, 
    AudioConverterComplexInputDataProc inInputDataProc,
    void* inInputDataProcUserData,
    uint32_t* ioOutputDataPacketSize,   // samples per frame
    AudioBufferList* outOutputData,     // buffer list
    AudioStreamPacketDescription* outPacketDescription)
{
  switch (me->sourceFormatID) {

    // ALAC
    case kAudioFormatAppleLossless:
      return _AudioConverterFillComplexBufferALACDecode(
          inConverter, 
          inInputDataProc, 
          inInputDataProcUserData, 
          ioOutputDataPacketSize,   // in/out, size to decode and size that decoded
          outOutputData, 
          outPacketDescription);

    case kAudioFormatMPEG4AAC:
      // AAC LC to PCM
      return _AudioConverterFillComplexBufferAACDecode(inConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);

    default:
      return kUnsupportedErr;
  }
}

<flush>

static HTTPStatus _requestProcessFlushBuffered()
{
  err = AirPlayReceiverSessionFlushAudio(inCnx->session, flushFromP, flushUntil, &lastPlayedTS);
}

// AudioStreamer/AirplaySdk2/AirPlaySDK_2/Sources/AirPlayReceiverSession.h
// @abstract 
// Flush any queued audio until the specified timestamp or sequence number.

AirPlayReceiverSessionFlushAudio()
{
  err = AudioConverterReset(inSession->audioConverter);
}

// AP2 SDK

OSStatus AudioConverterReset(AudioConverterRef inConverter)
{
  (void)inConverter;

  // $$$ TODO: Discard any data buffered by the codec

  AudioConverterPrivateRef const me = (AudioConverterPrivateRef)inConverter;

  switch (me->sourceFormatID) {

    case kAudioFormatMPEG4AAC:
      _FlushAACDecoder(inConverter);
  }

  return (kNoErr);
}


// AP1 SDK

// AudioStreamer/AirplaySdk/AirPlayAudioPOSIXReceiver211.1.p8/Support/AudioConverterLite.c

OSStatus	AudioConverterReset_compat( AudioConverterRef me )
{
  (void) me;

  // Nothing to do here.

  return( kNoErr );
}

// from LOG

KT: audioGetData(0 230596533307 0x78f3597c 8820)
KT: audioGetData(2205 230646111351 0x78f3597c 8820)
KT: audioGetData(4410 230696437499 0x78f3597c 8820)
KT: audioGetData(6615 230746918462 0x78f3597c 8820)
KT: audioGetData(8820 230796348590 0x78f3597c 8820)
KT: audioGetData(11025 230846362117 0x78f3597c 8820)
KT: audioGetData(13230 230896336344 0x78f3597c 8820)
KT: audioGetData(15435 230946897891 0x78f3597c 8820)
KT: audioGetData(17640 230996312937 0x78f3597c 8820)
KT: audioGetData(19845 231046380775 0x78f3597c 8820)
KT: audioGetData(22050 231096312862 0x78f3597c 8820)

>>> 985635-983430
2205
>>> 2205-1595
610
>>> 610/44.1
13.83219954648526 ~~ 14ms but 26ms in PCM output?

985635, 22.350
18051:NDS: ^0000000252.850650 !MIL   -AS           < 1970-01-01 12:04:12.850632 AM [AirPlay] Concealed 1595 unit gap (985635 vs 987230), curr seq 26233
18052:NDS: ^0000000252.850667 !MIL   -AS           < 1970-01-01 12:04:12.850632 AM [AirPlay] Concealed 1595 unit gap (985635 vs 987230), curr seq 26233

25016:NDS: ^0000000264.298628 !MIL   -AS           < 1970-01-01 12:04:24.298610 AM [AirPlay] Concealed 2042 unit gap (1490580 vs 1492622), curr seq 27667
25017:NDS: ^0000000264.298645 !MIL   -AS           < 1970-01-01 12:04:24.298610 AM [AirPlay] Concealed 2042 unit gap (1490580 vs 1492622), curr seq 27667

31732:NDS: ^0000000275.496637 !MIL   -AS          < 1970-01-01 12:04:35.496619 AM [AirPlay] Concealed 1612 unit gap (1984500 vs 1986112), curr seq 29063
31733:NDS: ^0000000275.496655 !MIL   -AS          < 1970-01-01 12:04:35.496619 AM [AirPlay] Concealed 1612 unit gap (1984500 vs 1986112), curr seq 29063

37098:NDS: ^0000000284.702606 !MIL   -AS          < 1970-01-01 12:04:44.702588 AM [AirPlay] Concealed 727 unit gap (2390220 vs 2390947), curr seq 30209
37099:NDS: ^0000000284.702624 !MIL   -AS          < 1970-01-01 12:04:44.702588 AM [AirPlay] Concealed 727 unit gap (2390220 vs 2390947), curr seq 30209

43855:NDS: ^0000000295.902600 !MIL   -AS          < 1970-01-01 12:04:55.902582 AM [AirPlay] Concealed 302 unit gap (2884140 vs 2884442), curr seq 31608
43856:NDS: ^0000000295.902618 !MIL   -AS          < 1970-01-01 12:04:55.902582 AM [AirPlay] Concealed 302 unit gap (2884140 vs 2884442), curr seq 31608

3168585, 71.850
47357:NDS: ^0000000302.348641 !MIL   -AS          < 1970-01-01 12:05:02.348619 AM [AirPlay] Concealed 286 unit gap (3168585 vs 3168871), curr seq 32410
47358:NDS: ^0000000302.348659 !MIL   -AS          < 1970-01-01 12:05:02.348619 AM [AirPlay] Concealed 286 unit gap (3168585 vs 3168871), curr seq 32410

3318525, 75.250
48777:NDS: ^0000000305.746622 !MIL   -AS          < 1970-01-01 12:05:05.746564 AM [AirPlay] Concealed 1170 unit gap (3318525 vs 3319695), curr seq 32834
48778:NDS: ^0000000305.746644 !MIL   -AS          < 1970-01-01 12:05:05.746564 AM [AirPlay] Concealed 1170 unit gap (3318525 vs 3319695), curr seq 32834


>>> 985635/44100
22
>>> (985635%44100)/44.1
350.0


KT: nowTs=806326, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552521935, srcTS=806326
KT: nowTs=806326, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552521935, srcTS=806326
KT: pktTS=3552522287 src->rtpOffsetActive=743240662 inSession->audioLatencyOffset=11025
KT: pktTS=3552522287 src->rtpOffsetActive=743240662 inSession->audioLatencyOffset=11025
KT: nowTs=806678, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552522287, srcTS=806678
KT: nowTs=806678, limTs=807030, minTs=807030, maxTs=1248030, pktTS=3552522287, srcTS=806678


={============================================================================
*kt_dev_skymw_0000* skymw-jira-android

<skymw-jira-NGDEV-143556> <git-log>

keitee@keitee-mint:~/ip/repo/SkyBluetoothRcu$ git show --stat

commit c472491d870088f3afaffd7863bc5c4ce4697078 (HEAD -> NGDEV-143556_IP100_Support_RCU_pairing_without_infrared, origin/NGDEV-143556_IP100_Support_RCU_pairing_without_infrared)
Author: Kit Park <kit.park@sky.uk>
Date:   Tue Jun 25 14:48:07 2019 +0100

    NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared

    Quote from
    https://www.stb.bskyb.com/confluence/pages/viewpage.action?spaceKey=~grayb&title=Bluetooth+RCU+Pairing+Without+Infrared

    In the v2.1.0 release of the SkyBluetoothRcu code for Android an experimental
    feature was added in the debug builds to put the bluetooth code in 'searching'
    mode for 30 seconds. In search mode the code will look for any nearby BT RCU
    devices that are in pairing mode, when / if found it will automatically start
    pairing to it. Only the first RCU found in pairing mode will trigger the STB
    pairing code, subsequent found devices will be ignored (until 'searching' mode
    is enalbed once again).

    It works by looking for the special advertising packets sent by the BT RCU
    when you hold the 1 and 3 buttons. The BT RCU will send these special packets
    for 10 seconds after entering pairing mode.

 app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl         |  2 ++
 app/src/main/aidl/com/sky/blercu/IBleRcuServiceCallback.aidl |  2 +-
 app/src/main/cpp/blercu/blercucontroller.cpp                 | 37 +++++++++++++++++++++++++++++++++----
 app/src/main/cpp/blercu/blercucontroller.h                   | 11 ++++++++++-
 app/src/main/cpp/blercu/blercucontroller_p.h                 |  2 ++
 app/src/main/cpp/blercu/blercupairingstatemachine.h          |  1 +
 app/src/main/cpp/debug/wshandler.cpp                         |  2 +-
 app/src/main/cpp/service/android/blercuservice.cpp           | 57 +++++++++++++++++++++++++++++++++++++++++++++++++--------
 app/src/main/cpp/service/android/blercuservice.h             |  9 ++++++++-
 app/src/main/java/com/sky/blercu/BleRcuService.java          | 24 +++++++++++++-----------
 10 files changed, 120 insertions(+), 27 deletions(-)

* c472491 : (HEAD -> NGDEV-143556_IP100_Support_RCU_pairing_without_infrared, origin/NGDEV-143556_IP100_Support_RCU_pairing_without_infrared) NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared (23 hours ago) <Kit Park>
* d9f1809 : NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared (24 hours ago) <Kit Park>

keitee@keitee-mint:~/ip/repo/SkyBluetoothRcu$ git show --stat d9f1809
commit d9f1809e6ab0bb5bf4d500dfa82f5207ea3ef605
Author: Kit Park <kit.park@sky.uk>
Date:   Tue Jun 25 14:24:20 2019 +0100

    NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared

    As a part of delivery, applies clang style, Mozilla, to files before a commit
    which has actual changes so that can have clean base to show only differences to
    review.

 app/src/main/cpp/blercu/blercucontroller.cpp        |  906 ++++++++++++++++++++++++++------------------------
 app/src/main/cpp/blercu/blercucontroller.h          |   52 ++-
 app/src/main/cpp/blercu/blercupairingstatemachine.h |  192 +++++------
 app/src/main/cpp/debug/wshandler.cpp                |  188 ++++++-----
 app/src/main/cpp/service/android/blercuservice.cpp  | 3192 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------------------------------------------------------------------
 app/src/main/cpp/service/android/blercuservice.h    |  447 ++++++++++++++-----------
 6 files changed, 2637 insertions(+), 2340 deletions(-)


<add-start-scan-call>

add startScanning(int timeout); to client if

app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl
app/src/main/java/com/sky/blercu/BleRcuService.java

	public BleRcuService(long qtObject) {
		//
		mQtObject = qtObject;
   }

	private static class BleRcuServiceBinder extends IBleRcuService.Stub {

		`private BleRcuService mService;`

		private BleRcuServiceBinder(BleRcuService svc) {
			mService = svc;
		}
		public boolean cleanup() {
			mService = null;
			return true;
		}

		public BleRcuService getService() {
			if (mService != null && mService.isAvailable()) {
				return mService;
			}
			return null;
		}

		public String getDeviceName(String address) {
			if (!checkAddress(address))
				return null;

			BleRcuService service = getService();
			if (service == null) return null;
			return service.jniGetDeviceName(`service.mQtObject`, address);
		}

	private native String jniGetDeviceName(long qtObject, String address);


app/src/main/cpp/service/android/blercuservice.cpp

bool BleRcuService::registerNatives()
{
		JNI_ENTRY(jniGetDeviceName,               "(JLjava/lang/String;)Ljava/lang/String;"),
}

jstring BleRcuService::jniGetDeviceName(JNIEnv *env, jobject, `jlong qtObject`,
                                        jstring address)
{
	return jniGetDeviceInfo(env, qtObject, address, DeviceName);
}

app/src/main/cpp/service/android/blercuservice.h

keitee@keitee-mint:~/ip/BleRcuExample$ cp ../SkyBluetoothRcu/app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl app/src/main/aidl/com/sky/blercu/IBleRcuService.aidl


<ble-example-client>

app/build/generated/aidl_source_output_dir/debug/compileDebugAidl/out/com/sky/blercu/IBleRcuService.java
 * This file is auto-generated.  DO NOT MODIFY.


<ble-callback>

// app/src/main/cpp/blercu/blercucontroller.cpp

BleRcuControllerImpl::BleRcuControllerImpl()
{
  *emit-started*
  // connect to the finished signal of the pairing statemachine, use to update
  // our list of managed devices
  QObject::connect(&m_pairingStateMachine, `&BleRcuPairingStateMachine::finished`,
      this, &BleRcuControllerImpl::onFinishedPairing,
      Qt::QueuedConnection);

  // connect to the started signal so we can send pairing state notifications
  QObject::connect(&m_pairingStateMachine, `&BleRcuPairingStateMachine::started`,
      this, &`BleRcuControllerImpl::onStartedPairing`,
      Qt::QueuedConnection);

  QObject::connect(this, &`BleRcuController::pairingStateChanged`,
      m_analytics.data(), &BleRcuAnalytics::logPairingStateChange,
      Qt::QueuedConnection);
}

void BleRcuControllerImpl::onStartedPairing()
{
  // a queued event so check the state
  const bool pairing = m_pairingStateMachine.isRunning();

  qMilestone() << "KT: tell clients that the pairing state has changed";

  // tell clients that the pairing state has changed
  emit pairingStateChanged(pairing);
}

void BleRcuControllerImpl::onFinishedPairing()
{
  // a queued event so check the state
  const bool pairing = m_pairingStateMachine.isRunning();

  // (re)sync our list of managed devices now pairing has finished
  if (!pairing)
    syncManagedDevices();

  qMilestone() << "KT: tell clients that the pairing state has changed";

  // tell clients that the pairing state is changed
  emit pairingStateChanged(pairing);
}

// app/src/main/cpp/service/android/blercuservice.cpp

void BleRcuService::setController(const QSharedPointer<BleRcuController> &controller)
{
  QObject::connect(controller.data(), &`BleRcuController::pairingStateChanged`,
      this, `&BleRcuService::onPairingStateChanged`);
}

void BleRcuService::onPairingStateChanged(bool pairing)
{
  *call-from-c-to-java*
  m_javaBleRcuService->callMethod<void>("onPairingStateChanged",
      "(Z)V",
      static_cast<jboolean>(pairing ? JNI_TRUE : JNI_FALSE));
}

void BleRcuAnalytics::logPairingStateChange(bool pairing)
{
  if (pairing)
    qProdLog("KT: logPairingStateChange: started bluetooth RCU pairing procedure");
  else
    qProdLog("KT: logPairingStateChange: finished bluetooth RCU pairing procedure");
}

app/src/main/java/com/sky/blercu/BleRcuService.java

public class BleRcuService extends Service {

	final RemoteCallbackList<IBleRcuServiceCallback> mCallbacks =
		new RemoteCallbackList<IBleRcuServiceCallback>();

	/**
	 * Expected to be called by the native C++ code when the pairing process
	 * has started or stopped.
	 *
	 */
	public void onPairingStateChanged(final boolean pairing) {

		mServiceLock.writeLock().lock();
		boolean triggerCallback = (mIsPairing != pairing);
		mIsPairing = pairing;
		mServiceLock.writeLock().unlock();

		if (triggerCallback && mNotifyThread.isAlive()) {

			// broadcast back to clients from the notify thread
			mNotifyThread.mHandler.post(() -> {

				final int n = mCallbacks.beginBroadcast();
				for (int i = 0; i < n; i++) {
					try {
						mCallbacks.getBroadcastItem(i).onPairingChanged(pairing);
					} catch (RemoteException e) {
						// RemoteCallbackList will take care of removing dead objects
					}
				}

				`mCallbacks`.finishBroadcast();
			});
		}
	}
}

<port-to->

/xSubmoduleAppInfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/
main.cpp

setupBleRcuController()
{
  // create the manager object
  QSharedPointer<BleRcuManager> manager =
    QSharedPointer<BleRcuManagerImpl>::create(config,
        deviceFactory,
        QDBusConnection::systemBus());

  // create the controller object
  QSharedPointer<BleRcuController> controller =
    QSharedPointer<BleRcuControllerImpl>::create(
        config, 
        `manager`,
        options->networkNamespace());
}


/xSubmoduleAppInfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/
blercu/blercumanager.cpp

class BleRcuManagerImpl : public BleRcuManager

	StateMachine m_stateMachine;


/xSubmoduleAppInfrastructure/AppInfrastructure/BluetoothRcu/daemon/source/
blercu/blercucontroller.cpp

	BleRcuPairingStateMachine m_pairingStateMachine;


xSubmoduleAppInfrastructure/AppInfrastructure/BluetoothRcu/console/source/
dbus/dbusabstractinterface.cpp


<xx>
this is when a device is ready when pairing fsm is not running.

I BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state StartingServices(5) to ReadyState(6)"
I BleRcuQt: < M:blercuadapter.cpp F:onDeviceReadyChanged L:1733 > device with address D4:B8:FF:12:E1:A8 is  ready
D ServicePeripherals: @BTREMOTE: onDeviceConnectionStateChanged | address: D4:B8:FF:12:E1:A8 connected: true
D BleRcuManager: onDeviceConnectionStateChanged() - D4:B8:FF:12:E1:A8 : true


<skymw-jira-NGDEV-147137>
NGDEV-147137
IP - peripherals/btremotes/status is not persistent after reboot

Have used IP100, QIPQ00.000.39.00D which is older AS version than the reported,
QIP100.000.16.00D and see the same issue when connected from reboot.

However, can get these properties from test application. So AS don't seem to
update its property set when connected. 

<skymw-jira-NGDEV-147573> *state-change*
PUCK ITA very long INITIALISING BT remote state during startup

From log_dump.log

09-11 15:16:13.348760  1376  1376 I bluetoothd: Bluetooth daemon 5.48
09-11 15:16:13.349182  1376  1376 D bluetoothd: src/main.c:parse_config() parsing /data/user/0/com.sky.bluez/etc/main.conf
09-11 15:16:13.349249  1376  1376 D bluetoothd: src/main.c:parse_config() discovto=180
09-11 15:16:13.349304  1376  1376 D bluetoothd: src/main.c:parse_config() pairto=180
09-11 15:16:13.349357  1376  1376 D bluetoothd: src/main.c:parse_config() privacy=off
09-11 15:16:13.349408  1376  1376 D bluetoothd: src/main.c:parse_config() name="sky-ip100"
09-11 15:16:13.349475  1376  1376 D bluetoothd: src/main.c:parse_config() class=0x040414
09-11 15:16:13.349566  1376  1376 D bluetoothd: src/main.c:parse_config() Key file does not have key “DeviceID” in group “General”
09-11 15:16:13.349688  1376  1376 D bluetoothd: src/main.c:parse_sky_config() SecureConnections=false
09-11 15:16:13.349754  1376  1376 D bluetoothd: src/main.c:parse_sky_config() att_le_mtu=23
09-11 15:16:13.349807  1376  1376 D bluetoothd: src/main.c:parse_sky_config() DelayGATTUntilBonded=true

	/** This is a list of possible pairing state values */
	private static final int PAIRING_STATE_INITIALSING  = 0;
	private static final int PAIRING_STATE_IDLE         = 1;
	private static final int PAIRING_STATE_SEARCHING    = 2;
	private static final int PAIRING_STATE_PAIRING      = 3;
	private static final int PAIRING_STATE_COMPLETE     = 4;
	private static final int PAIRING_STATE_FAILED       = 5;

6418 :09-11 15:16:13.749913  1280  1360 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
10260:09-11 15:16:19.868501  1280  1360 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  2
17053:09-11 15:16:43.620617  1280  1360 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  3
17722:09-11 15:16:48.144087  1280  1360 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  4
28657:09-11 15:21:18.921847  1139  1252 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
38031:09-11 15:23:00.713862  1142  1244 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
47503:09-11 15:24:07.713163  1141  1295 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
55904:09-11 15:25:13.668425  1142  1293 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
67590:09-11 16:05:27.576975  1146  1232 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
79753:09-11 16:08:42.353928  1141  1268 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1
95029:09-11 16:16:05.782230  1141  1237 I BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1



https://www.stb.bskyb.com/jira/browse/NGDEV-146966

To reproduce, once paired, press 1+3 of remote and see that state changes to
idle.

{
  "remotes": [
    {
      "bdaddr": "D4:B8:FF:12:E1:A8",
      "connected": false,
      "deviceid": -1,
      "name": "U006 SkyQ EC101"
    }
  ],
  "status": "IDLE"
}


2019-10-09 15:42:57.576 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 connected
2019-10-09 15:42:57.577 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state Paired(1) to ResolvingServices(3)"
2019-10-09 15:42:57.577 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onEnteredResolvingServicesState L:547 > D4:B8:FF:12:E1:A8 entered RESOLVING_SERVICES state
2019-10-09 15:42:57.577 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceNameChanged L:352 > D4:B8:FF:12:E1:A8 device name changed from "U184 SkyQ EC101" to "U006 SkyQ EC101"
2019-10-09 15:42:57.577 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:onDeviceNameChanged L:1695 > renamed device D4:B8:FF:12:E1:A8 to "U006 SkyQ EC101"
2019-10-09 15:42:58.059 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuservice.cpp F:updateDeviceIdMap L:733 > device D4:B8:FF:12:E1:A8 deviceId has changed to -1

2019-10-09 15:42:58.252 2051-2069/com.sky.skybluetoothrcu E/BleRcuQt: < M:blercuadapter.cpp F:onBluezServiceUnregistered L:605 > detected bluez service has dropped off the dbus, has it crashed?
2019-10-09 15:42:58.252 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:gatt_services.cpp F:stop L:161 > stopping services
2019-10-09 15:42:58.269 2051-2069/com.sky.skybluetoothrcu W/BleRcuQt: < M:blercuadapter.cpp F:onEnteredServiceUnavailableState L:297 > "org.bluez" is still not registered on the bus
2019-10-09 15:42:58.269 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuservice.cpp F:updateDeviceIdMap L:733 > device D4:B8:FF:12:E1:A8 deviceId has changed to -1
2019-10-09 15:42:58.269 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:? F:? L:0 > ECx01 bluetooth RCU removed
2019-10-09 15:42:58.383 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:onBluezServiceRegistered L:586 > detected bluez service registration, will retry connecting in 1s

2019-10-09 15:42:59.266 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:findAdapter L:719 > found bluez adapter at "/org/bluez/hci0" with address 38:A6:CE:FE:DA:22
2019-10-09 15:42:59.273 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:disablePairable L:1158 > disabling pairable mode
2019-10-09 15:42:59.280 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving to state Idle(0)"
2019-10-09 15:42:59.281 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[GattAudioService] moving to state Idle(0)"
2019-10-09 15:42:59.281 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:gatt_infraredservice.cpp F:GattInfraredService L:62 > using standby mode B
2019-10-09 15:42:59.282 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:onDeviceAdded L:1497 > added device D4:B8:FF:12:E1:A8 named "U006 SkyQ EC101" (connected: false paired: true)
2019-10-09 15:42:59.282 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuadapter.cpp F:onAdapterPairableChanged L:1323 > adapter pairable state changed to false

2019-10-09 15:42:59.282 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuservice.cpp F:onStateChanged L:417 > on pairing state changes to  1

2019-10-09 15:42:59.291 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDevicePairedChanged L:399 > D4:B8:FF:12:E1:A8 paired
2019-10-09 15:42:59.291 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state Idle(0) to Paired(1)"
2019-10-09 15:42:59.291 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercuservice.cpp F:onDeviceAdded L:492 > failed to find input device for D4:B8:FF:12:E1:A8
2019-10-09 15:42:59.292 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:? F:? L:0 > ECx01 bluetooth RCU added
2019-10-09 15:42:59.508 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 connected
2019-10-09 15:42:59.508 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state Paired(1) to ResolvingServices(3)"
2019-10-09 15:42:59.508 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onEnteredResolvingServicesState L:547 > D4:B8:FF:12:E1:A8 entered RESOLVING_SERVICES state
2019-10-09 15:42:59.875 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 disconnected
2019-10-09 15:42:59.875 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state ResolvingServices(3) to Paired(1)"
2019-10-09 15:43:00.533 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 connected
2019-10-09 15:43:00.533 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state Paired(1) to ResolvingServices(3)"
2019-10-09 15:43:00.533 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onEnteredResolvingServicesState L:547 > D4:B8:FF:12:E1:A8 entered RESOLVING_SERVICES state
2019-10-09 15:43:00.672 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 disconnected
2019-10-09 15:43:00.672 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state ResolvingServices(3) to Paired(1)"
2019-10-09 15:43:00.991 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 connected
2019-10-09 15:43:00.991 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state Paired(1) to ResolvingServices(3)"
2019-10-09 15:43:00.991 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onEnteredResolvingServicesState L:547 > D4:B8:FF:12:E1:A8 entered RESOLVING_SERVICES state
2019-10-09 15:43:01.245 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:blercudevice.cpp F:onDeviceConnectedChanged L:373 > D4:B8:FF:12:E1:A8 disconnected
2019-10-09 15:43:01.245 2051-2069/com.sky.skybluetoothrcu I/BleRcuQt: < M:statemachine.cpp F:logTransition L:82 > "[DeviceStateMachine] moving from state ResolvingServices(3) to Paired(1)"


={============================================================================
*kt_dev_skymw_0000* skymw-jira-q

<skymw-jira-q>
NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared

This is clone of NGDEV-143556[1] to bring the same feature onto DTH Q. Before
doing that, Bluetooth code in DTH Q may be updated and be synced with IP100
codebase since DTH Q is left behind and IP100 is moved away which makes many
differences between two base. 

Therefore, the efforts is made to have as common base as possible between them
and have a new feature on top of that. Refer to [1] for more details of the new
feature. 

This also has corresponding test caes in support of features and changes.

[1] NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared


git flow feature start NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared_compatibility_fix

NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared

While delivering NGDEV-143989[1], we have found that it is better to maintain
compatibility in terms of paring state which application counts on until
application moves to new state change and old pairing state becomes obsolete. 

This commit includes changes to update pairing state when pairing attempts fails.

[1] NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared


commit ff1b11c895b656ec2a85eea10af00c797cea84e2
Author: Kit Park <kit.park@sky.uk>
Date:   Fri Jul 19 08:59:12 2019 +0100

    NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared

    While delivering NGDEV-143989[1], we have found that it is better to maintain
    compatibility in terms of paring state which application counts on until
    application moves to new state change and old pairing state becomes obsolete.

    This commit includes changes to update pairing state when pairing attempts
    fails.

    [1] NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared

commit d72ba3afca41490034901be9ecaa25c21450a18d
Author: Kit Park <kit.park@sky.uk>
Date:   Tue Jul 16 15:38:30 2019 +0100

    NGDEV-143989: CLONE - DTH - BLERCU Support RCU pairing without Infrared

    This is clone of NGDEV-143556[1] to bring the same feature onto DTH Q. Before
    doing that, Bluetooth code in DTH Q may be updated and be synced with IP100
    codebase since DTH Q is left behind and IP100 is moved away which makes many
    differences between two base.

    Therefore, the efforts is made to have as common base as possible between them
    and have a new feature on top of that. Refer to [1] for more details of the new
    feature.

    This also has corresponding test caes in support of features and changes.

    [1] NGDEV-143556: IP100 - BLERCU Support RCU Pairing without Infrared

git show --stat d72ba3afca41490034901be9ecaa25c21450a18d

 AppInfrastructure/BluetoothRcu/client/lib/source/BleRcuController.cpp                      |  54 ++++++++++++++++
 AppInfrastructure/BluetoothRcu/client/lib/source/BleRcuController.h                        |  20 ++++++
 AppInfrastructure/BluetoothRcu/client/test/source/BlueRcuProxyTest.cpp                     | 121 ++++++++++++++++++++++++++++++++++
 AppInfrastructure/BluetoothRcu/console/source/base_cmdhandler.h                            |   1 +
 AppInfrastructure/BluetoothRcu/console/source/blercu/blercucontroller1_interface.h         |  12 ++++
 AppInfrastructure/BluetoothRcu/console/source/blercu_cmdhandler.cpp                        |  68 +++++++++++++++++++-
 AppInfrastructure/BluetoothRcu/console/source/blercu_cmdhandler.h                          |   3 +
 AppInfrastructure/BluetoothRcu/console/source/console.cpp                                  |  28 ++++++++
 AppInfrastructure/BluetoothRcu/console/source/console.h                                    |   1 +
 AppInfrastructure/BluetoothRcu/console/source/rhad_cmdhandler.cpp                          |   6 ++
 AppInfrastructure/BluetoothRcu/console/source/rhad_cmdhandler.h                            |   1 +
 AppInfrastructure/BluetoothRcu/daemon/resources/config.default.json                        |  25 ++++++--
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/adaptors/blercucontroller1_adaptor.cpp |  51 +++++++++++++++
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/adaptors/blercucontroller1_adaptor.h   |   9 +++
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercu.pri                             |   2 +
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercucontroller.cpp                   | 310 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercucontroller.h                     |  22 +++++--
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercucontroller_p.h                   |  22 +++++--
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercudevice.cpp                       |  13 +++-
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercumanager.cpp                      | 114 ++++++++++++++++++++------------
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercumanager.h                        |  26 ++++----
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercumanager_p.h                      |  19 +++---
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercupairingstatemachine.cpp          | 192 ++++++++++++++++++++++++++++++++++++------------------
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercupairingstatemachine.h            |  46 +++++++------
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercuscannerstatemachine.cpp          | 492 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 AppInfrastructure/BluetoothRcu/daemon/source/blercu/blercuscannerstatemachine.h            | 129 +++++++++++++++++++++++++++++++++++++
 AppInfrastructure/BluetoothRcu/daemon/source/configsettings/configmodelsettings.cpp        |  85 +++++++++++++++++++++---
 AppInfrastructure/BluetoothRcu/daemon/source/configsettings/configmodelsettings.h          |  10 ++-
 AppInfrastructure/BluetoothRcu/daemon/source/configsettings/configmodelsettings_p.h        |   4 +-
 AppInfrastructure/Public/BluetoothRcu/IBluetoothRcu.h                                      |  35 ++++++++++
 30 files changed, 1708 insertions(+), 213 deletions(-)


<skymw-jira-q>
git checkout -b NGDEV-146407_AS_INT_peripherals_btremotes_status_is_stuck_in_INITIALISING_state_after_reboot

NGDEV-146407: AS_INT: peripherals/btremotes/status is stuck in INITIALISING state after reboot

From investigation, the edge case is identified:

* 055 RCU and some platforms gets an adapter powered earlier than the usual
  such as 101 RCU which causes the IDLE state change fired before the signal
  connection is made. So the signal is lost and no state update to AS.

This commit sends out IDLE state change once all objects are up and running to
be sure it's get delivered to AS when early powered event arrives and manager
skips out to powered on state. 


git flow feature start NGDEV-146407_AS_INT_peripherals_btremotes_status_is_stuck_in_INITIALISING_state_after_reboot

NGDEV-143989_CLONE_-_DTH_-_BLERCU_Support_RCU_pairing_without_infrared

This issue can not be reproduced with EC 101.

Steps:

RCU E055 is paired
reboot the box

Actual: peripherals/btremotes/status is stuck in "INITIALISING" state.
Expected : peripherals/btremotes/status in "IDLE" state


// 101, OK

42331:NDS: ^0000000113.395098 !MIL   -APPINFRA     < p:00000e14 t:43110dc0 T:no name M:DiagService.cpp F:createLogPipe L:00137 > CreateLogPipe created pipe for app BLERCU with inode 123931
42332:NDS: ^0000000113.396437 !MIL   -DOBBY        < p:00000e14 t:49cbadc0 T:no name M:EthanLogPlugin.cpp F:postConstruction L:00255 > Received pipe to BLERCU with inode 123931
42335:NDS: ^0000000113.476438 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:.  L:00000 > Logging pipe inode is 123931
42336:NDS: ^0000000113.502220 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:hcisocket.cpp F:create L:00311 > creating new socket for HciSocket object
42337:NDS: ^0000000113.502419 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:hcisocket.cpp F:setSocketFilter L:00435 > setting hci filter to [ type=0x0010 events={0x00000020, 0x40000000} ]
42338:NDS: ^0000000113.502755 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:qtvfs.cpp F:qtvfsRegister L:00704 > registered sqlite VFS for QT
42339:NDS: ^0000000113.503158 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:irdatabase.cpp F:init L:00253 > opened ir database @ ':irdb.sqlite'
42340:NDS: ^0000000113.507607 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/ruwido/rcu" on service "com.ruwido.rcu"
42341:NDS: ^0000000113.508173 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/uei/userver" on service "com.uei.userver"
42342:NDS: ^0000000113.508262 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercudevicefactory.cpp F:BleRcuDeviceFactory L:00047 > models with OUI 0x48d0cf are disabled
42343:NDS: ^0000000113.511511 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:findAdapter L:00703 > found bluez adapter at "/org/bluez/hci0" with address FF:FF:FF:FF:FF:FF
42344:NDS: ^0000000113.512581 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOffState L:00456 > adapter is not powered, attempting to power on now
42345:NDS: ^0000000113.513691 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:hcimonitor.cpp F:run L:00645 > entering hci monitor thread
42348:NDS: ^0000000113.517156 !MIL   -APPINFRA     < p:00000e14 t:4b282dc0 T:no name M:BleRcuFactory.cpp F:createBleRcuControllerProxy L:00447 > KT: BleRcuContollerProxy: {
42349:NDS: ^0000000113.518418 !MIL   -APPINFRA     < p:00000e14 t:4b282dc0 T:no name M:BleRcuFactory.cpp F:createBleRcuControllerProxy L:00449 > KT: BleRcuContollerProxy: }
42352:NDS: ^0000000113.519752 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started
42353:NDS: ^0000000113.519793 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:main.cpp F:main L:00479 > ========================
42354:NDS: ^0000000113.519808 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:main.cpp F:main L:00480 > KT: BleRcuDaemon started
42507:NDS: ^0000000113.733030 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00864 > BT adapter powered on
42569:NDS: ^0000000113.745203 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:disablePairable L:01142 > disabling pairable mode
42570:NDS: ^0000000113.747187 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving to state Idle(0)"
42583:NDS: ^0000000113.748514 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:onDeviceAdded L:01480 > added device D4:B8:FF:12:E1:A8 named "P037 SkyQ EC101" (connected: false paired: true)
42587:NDS: ^0000000113.748813 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOnState L:00552 > KT: onEnteredAdapterPoweredOnState: emit poweredInitialised
42588:NDS: ^0000000113.748844 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercucontroller.cpp F:onInitialised L:00605 > KT: onInitialised: emit stateChanged(idle)
42589:NDS: ^0000000113.748858 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )
42596:NDS: ^0000000113.749657 !MIL   -APPINFRA     < p:00000e14 t:44110dc0 T:no name M:BleRcuController.cpp F:signalHandlerPropertiesChanged L:00770 > KT: Status change: 1
42610:NDS: ^0000000113.753153 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:blercudevice.cpp F:onDevicePairedChanged L:00484 > D4:B8:FF:12:E1:A8 paired
42611:NDS: ^0000000113.753222 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state Idle(0) to Paired(1)"
42612:NDS: ^0000000113.753405 !MIL   -BLERCU       < p:00000e14 t:49cbadc0 T:no name M:.  L:00000 > ECx01 bluetooth RCU added
43848:NDS: ^0000000114.060701 !MIL   -DRM_Manager  < p:00000e15 t:76a70c70 T:no name M:time_server.c F:HandleFirstValidDeviceTime L:01023 > !DRM_MIL_TIME! device time calculated from LKT is 0xB6415B:5 [15:23:05 17/09/2019], Current device time is 0xB6415E:6 [15:26:06 17/09/2019] - secure time was adjusted to 0xB6415E:5 [15:26:05 17/09/2019], compensating for power-down time, time_qualit=1
44351:NDS: ^0000000114.346088 !MIL   -AS           < p:00000e14 t:3b4dedc0 T:AUS_Player M:AS_DMS_Writer.cpp F:BluetoothMediaStreamer L:00258 > @ctx:dbusitf bluetooth_media.cpp(239) KT::BluetoothMediaStreamer
52798:NDS: ^0000000117.936613 !MIL   -AS           < p:00000e14 t:4a185dc0 T:AS_SVC_CTL M:AS_DMS_Writer.cpp F:SetName L:00258 > @ctx:AS_SERVICELIST_CONTROLLER AS_SERVICELIST_Service.cpp(934) AS_DMSUTILS::getSystemString succeeded, m_name: KTV
52801:NDS: ^0000000117.936735 !MIL   -AS           < p:00000e14 t:4a185dc0 T:AS_SVC_CTL M:AS_DMS_Writer.cpp F:AddServiceObject L:00258 > @ctx:AS_SERVICELIST_CONTROLLER AS_SERVICELIST_ServiceListContainer.cpp(412) Adding service that is relevant, service.GetSid: 1056, service.GetLcn: 771, service.GetName: KTV


// 055, NOK

392876:NDS: ^0000000111.689749 !MIL   -APPINFRA     < p:00000e12 t:430a7dc0 T:no name M:DiagService.cpp F:createLogPipe L:00137 > CreateLogPipe created pipe for app BLERCU with inode 83962
392877:NDS: ^0000000111.691023 !MIL   -DOBBY        < p:00000e12 t:49c51dc0 T:no name M:EthanLogPlugin.cpp F:postConstruction L:00255 > Received pipe to BLERCU with inode 83962
392880:NDS: ^0000000111.777662 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:.  L:00000 > Logging pipe inode is 83962
392881:NDS: ^0000000111.803370 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:hcisocket.cpp F:create L:00311 > creating new socket for HciSocket object
392882:NDS: ^0000000111.803554 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:hcisocket.cpp F:setSocketFilter L:00435 > setting hci filter to [ type=0x0010 events={0x00000020, 0x40000000} ]
392883:NDS: ^0000000111.803901 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:qtvfs.cpp F:qtvfsRegister L:00704 > registered sqlite VFS for QT
392884:NDS: ^0000000111.804319 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:irdatabase.cpp F:init L:00253 > opened ir database @ ':irdb.sqlite'
392885:NDS: ^0000000111.814339 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/ruwido/rcu" on service "com.ruwido.rcu"
392886:NDS: ^0000000111.815319 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:ipc_servicesfactory.cpp F:init L:00153 > created 'com.sky.rcu.Manager1' proxy to "/com/uei/userver" on service "com.uei.userver"
392887:NDS: ^0000000111.815435 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercudevicefactory.cpp F:BleRcuDeviceFactory L:00047 > models with OUI 0x48d0cf are disabled
392888:NDS: ^0000000111.824693 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercumanager.cpp F:findAdapter L:00703 > found bluez adapter at "/org/bluez/hci0" with address FF:FF:FF:FF:FF:FF
392889:NDS: ^0000000111.830725 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercumanager.cpp F:disablePairable L:01142 > disabling pairable mode
392890:NDS: ^0000000111.832958 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving to state Idle(0)"
392891:NDS: ^0000000111.834093 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercumanager.cpp F:onDeviceAdded L:01480 > added device 1C:A2:B1:BA:C0:AD named "U192ruwido Sky Remote" (connected: false paired: true)
392892:NDS: ^0000000111.834168 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOnState L:00552 > KT: onEnteredAdapterPoweredOnState: emit poweredInitialised
392893:NDS: ^0000000111.834915 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:hcimonitor.cpp F:run L:00645 > entering hci monitor thread
392896:NDS: ^0000000111.837928 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started
392897:NDS: ^0000000111.837978 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:main.cpp F:main L:00479 > ========================
392898:NDS: ^0000000111.837993 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:main.cpp F:main L:00480 > KT: BleRcuDaemon started
392899:NDS: ^0000000111.838498 !MIL   -APPINFRA     < p:00000e12 t:4b1b4dc0 T:no name M:BleRcuFactory.cpp F:createBleRcuControllerProxy L:00447 > KT: BleRcuContollerProxy: {
392900:NDS: ^0000000111.839903 !MIL   -APPINFRA     < p:00000e12 t:4b1b4dc0 T:no name M:BleRcuFactory.cpp F:createBleRcuControllerProxy L:00449 > KT: BleRcuContollerProxy: }
392903:NDS: ^0000000111.840755 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:blercudevice.cpp F:onDevicePairedChanged L:00484 > 1C:A2:B1:BA:C0:AD paired
392904:NDS: ^0000000111.840841 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:statemachine.cpp F:logTransition L:00082 > "[DeviceStateMachine] moving from state Idle(0) to Paired(1)"
392905:NDS: ^0000000111.841514 !MIL   -BLERCU       < p:00000e12 t:49c51dc0 T:no name M:.  L:00000 > EC05x bluetooth RCU added
394378:NDS: ^0000000112.353534 !MIL   -DRM_Manager  < p:00000e13 t:76a70c70 T:no name M:time_server.c F:HandleFirstValidDeviceTime L:01023 > !DRM_MIL_TIME! device time calculated from LKT is 0xB64140:53 [14:56:53 17/09/2019], Current device time is 0xB64150:42 [15:12:42 17/09/2019] - secure time was adjusted to 0xB64150:41 [15:12:41 17/09/2019], compensating for power-down time, time_qualit=1
394847:NDS: ^0000000112.645504 !MIL   -AS           < p:00000e12 t:3b3dddc0 T:AUS_Player M:AS_DMS_Writer.cpp F:BluetoothMediaStreamer L:00258 > @ctx:dbusitf bluetooth_media.cpp(239) KT::BluetoothMediaStreamer
405166:NDS: ^0000000119.839658 !MIL   -AS           < p:00000e12 t:4a085dc0 T:AS_SVC_CTL M:AS_DMS_Writer.cpp F:SetName L:00258 > @ctx:AS_SERVICELIST_CONTROLLER AS_SERVICELIST_Service.cpp(934) AS_DMSUTILS::getSystemString succeeded, m_name: KTV
405169:NDS: ^0000000119.839708 !MIL   -AS           < p:00000e12 t:4a085dc0 T:AS_SVC_CTL M:AS_DMS_Writer.cpp F:AddServiceObject L:00258 > @ctx:AS_SERVICELIST_CONTROLLER AS_SERVICELIST_ServiceListContainer.cpp(412) Adding service that is relevant, service.GetSid: 1056, service.GetLcn: 771, service.GetName: KTV


<skymw-jira-q>
https://www.stb.bskyb.com/jira/browse/NGDEV-102682

Navigate to Impostazioni (Settings) 
Configura (Configure)
My Music 
Dispositivi Bluetooth (Devices Bluetooth)
Aggiungi nuovo dispositivo Bluetooth (Add new Bluetooth device)
Time how long it takes to get dismissed

Add a bluetooth device in order to play music from a mobile, tablet or PC
through your TV.

NDS: ^0000000208.838051 !MIL   -AS           < p:00000e00 t:75390dc0 T:AS_MAIN_TH_9001 M:AS_DMS_Writer.cpp F:LogReceivedRequest L:00258 > 
  @ctx:AS_WEBSERVER AS_WEB_SERVER_RequestResponseLogger.cpp(205) HTTP Request received. 
  httpRequestHandle: 235, httpMethod: 1, Port: 9001, URI: /as/audiostreamer/bluetooth/action/startvisibility?timeout=105
NDS: ^0000000208.840607 !MIL   -AS           < p:00000e00 t:31d0bdc0 T:AS_BTAUDIO_CTL M:AS_DMS_Writer.cpp F:SetCurrentHCIVisible L:00258 > @ctx:AS_BTAUDIO AS_BTAUDIO_PlatformItf.cpp(466) SetCurrentHCIVisible() entry: timeout=110


!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:virtual bool RestfulRequestHandler::sendEventHandlerRequest(JsonEventsRequest*) L:00423 > 
  Web Socket URL Scheme:  ws ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status
!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:void RestfulRequestHandler::onWebSocketConnected() L:00092 > Websocket connected QUrl("ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status")
!INFO  -com.bskyb.epgui < M:RestfulRequestHandler.cpp F:void RestfulRequestHandler::onWebSocketConnected() L:00096 > Connected Socket URI: QUrl("ws://127.0.0.1:9001/as/audiostreamer/bluetooth/status")


<skymw-jira-q>
// use AI ticket
git flow feature start NGDEV-149450_FalconV2_UK_checkjob_failures
git flow feature finish NGDEV-149450_FalconV2_UK_checkjob_failures

git branch --set-upstream-to=origin/develop
git diff origin/develop..HEAD
git push -n origin feature/NGDEV-149450_FalconV2_UK_checkjob_failures
git push origin feature/NGDEV-149450_FalconV2_UK_checkjob_failures

NGDEV-149450: Q120: FalconV2 UK checkjob failures since Q120.000.51.00 since integration of AS v16.23.0

This only happens on Falcon V2 and nds_si_devel profile and it is an edge case
where BluRcuDaemon state is out of sync from server's state since AS comes up
later than the usual and there is no guarantee in terms of the order of
running.

This commit retrieves state value from a server every time when requested than
the cached value which can be out of sync.


keitee@keitee-mint:~/Downloads$ ag "^==" fail_001

5783:=== NDS: ^0000000134.049937 !MIL   -APPINFRA     < p:0000087d t:328fedd0 T:no name M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready
5789:=== NDS: ^0000000135.326863 !MIL   -DOBBY        < p:0000087d t:2f499dd0 T:no name M:Dobby.cpp F:onContainerStarted L:01129 > container 'ai.blercu'(91) started
5793:=== NDS: ^0000000135.327026 !MIL   -BLERCU       < p:0000087d t:2f499dd0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started
5794:=== NDS: ^0000000135.327056 !MIL   -BLERCU       < p:0000087d t:2f499dd0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00871 > BT adapter powered on
5795:=== NDS: ^0000000135.327098 !MIL   -BLERCU       < p:0000087d t:2f499dd0 T:no name M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )
5796:=== NDS: ^0000000135.332418 !MIL   -APPINFRA     < p:0000087d t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00559 > ble rcu service system started successfully
5797:=== NDS: ^0000000135.334399 !MIL   -APPINFRA     < p:0000087d t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00573 > softcat factory object set up done

7739:=== NDS: ^0000000177.755525 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00258 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(157) Total number of paired rcu device: 0
7740:=== NDS: ^0000000177.755594 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(165) Successfully registered input notification callback
7744:=== NDS: ^0000000177.755632 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(178) Pairing state: 0

7745:=== NDS: ^0000000177.755680 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(199) Received event: 1
7749:=== NDS: ^0000000177.755714 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(385) RF RcuDeviceList SetPairingState new state 0
7750:=== NDS: ^0000000177.755746 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(390) RF RcuDeviceList SetPairingState old state was 0
7751:=== NDS: ^0000000177.755779 !MIL   -AS           < p:0000087d t:1a10bdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(214) RF pairing state changed state: 0

 9619:=== NDS: ^0000000208.333725 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
 9739:=== NDS: ^0000000208.381687 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
 9963:=== NDS: ^0000000221.207841 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10061:=== NDS: ^0000000221.559338 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10110:=== NDS: ^0000000224.966126 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10175:=== NDS: ^0000000225.123009 !MIL   -com.bskyb.epgui < p:0000087d t:2f499dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"



working_001: which as both failing and working case

# failing case
 2503:=== NDS: ^0000000069.770497 !MIL   -NCM_SERVER   < p:00000878 t:35a0e450 T:NCM_SERVER_MAIN M:ncm_sysinit.c F:ncm_sysinit_update_run_level L:00103 > NCM Run Level changed to Initialised.
 5807:=== NDS: ^0000000132.132937 !MIL   -APPINFRA     < p:0000087c t:328fedd0 T:no name M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready
 5810:=== NDS: ^0000000132.134060 !MIL   -DOBBY        < p:0000087c t:2f433dd0 T:no name M:Dobby.cpp F:onContainerStarted L:01129 > container 'ai.blercu'(91) started
 5816:=== NDS: ^0000000132.134167 !MIL   -BLERCU       < p:0000087c t:2f433dd0 T:no name M:blercumanager.cpp F:onEnteredAdapterPoweredOffState L:00465 > adapter is not powered, attempting to power on now
 5817:=== NDS: ^0000000132.134196 !MIL   -BLERCU       < p:0000087c t:2f433dd0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started
 5818:=== NDS: ^0000000132.134223 !MIL   -BLERCU       < p:0000087c t:2f433dd0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00871 > BT adapter powered on
 5819:=== NDS: ^0000000132.134264 !MIL   -BLERCU       < p:0000087c t:2f433dd0 T:no name M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )

 // as is up but signal made before this so lost it.
 5821:=== NDS: ^0000000132.138402 !MIL   -APPINFRA     < p:0000087c t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00559 > ble rcu service system started successfully
 5822:=== NDS: ^0000000132.140543 !MIL   -APPINFRA     < p:0000087c t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00573 > softcat factory object set up done

 // get state
 5941:=== NDS: ^0000000138.801081 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00258 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(157) Total number of paired rcu device: 0
 5942:=== NDS: ^0000000138.801166 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(165) Successfully registered input notification callback
 5943:=== NDS: ^0000000138.801212 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(178) Pairing state: 0

 // get posted state
 5944:=== NDS: ^0000000138.801316 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(199) Received event: 1
 5945:=== NDS: ^0000000138.801379 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(385) RF RcuDeviceList SetPairingState new state 0
 5946:=== NDS: ^0000000138.801422 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(390) RF RcuDeviceList SetPairingState old state was 0
 5947:=== NDS: ^0000000138.801461 !MIL   -AS           < p:0000087c t:1a01cdd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(214) RF pairing state changed state: 0
10086:=== NDS: ^0000000185.873061 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10190:=== NDS: ^0000000185.913611 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10558:=== NDS: ^0000000229.841659 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10660:=== NDS: ^0000000230.153329 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10726:=== NDS: ^0000000234.433210 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
10760:=== NDS: ^0000000234.593055 !MIL   -com.bskyb.epgui < p:0000087c t:2f433dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"

# working case
14778:=== NDS: ^0000000069.230371 !MIL   -NCM_SERVER   < p:0000089d t:35b0e450 T:NCM_SERVER_MAIN M:ncm_sysinit.c F:ncm_sysinit_update_run_level L:00103 > NCM Run Level changed to Initialised.
18018:=== NDS: ^0000000131.170867 !MIL   -DOBBY        < p:000008a1 t:2f493dd0 T:no name M:Dobby.cpp F:onContainerStarted L:01129 > container 'ai.blercu'(91) started
18028:=== NDS: ^0000000131.246212 !MIL   -APPINFRA     < p:000008a1 t:328fedd0 T:no name M:DaemonController.cpp F:waitTillReady L:00250 > ai.blercu daemon is ready
18030:=== NDS: ^0000000131.249710 !MIL   -BLERCU       < p:000008a1 t:2f493dd0 T:no name M:main.cpp F:main L:00478 > BleRcuDaemon started

// as is up
18031:=== NDS: ^0000000131.253102 !MIL   -APPINFRA     < p:000008a1 t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00559 > ble rcu service system started successfully
18032:=== NDS: ^0000000131.254880 !MIL   -APPINFRA     < p:000008a1 t:328fedd0 T:no name M:FactoryContainer.cpp F:FactoryContainer L:00573 > softcat factory object set up done

18033:=== NDS: ^0000000131.481034 !MIL   -BLERCU       < p:000008a1 t:2f493dd0 T:no name M:blercumanager.cpp F:onAdapterPowerChanged L:00871 > BT adapter powered on
18037:=== NDS: ^0000000131.497978 !MIL   -BLERCU       < p:000008a1 t:2f493dd0 T:no name M:blercucontroller1_adaptor.cpp F:onStateChanged L:00128 > onStateChanged( 1 )
18038:=== NDS: ^0000000131.499040 !MIL   -APPINFRA     < p:000008a1 t:29c25dd0 T:no name M:BleRcuController.cpp F:signalHandlerPropertiesChanged L:00770 > BleRcu status change: 1

19932:=== NDS: ^0000000175.264780 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00258 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(157) Total number of paired rcu device: 0
19933:=== NDS: ^0000000175.264867 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(165) Successfully registered input notification callback
19934:=== NDS: ^0000000175.264939 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(178) Pairing state: 1

19935:=== NDS: ^0000000175.264995 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(199) Received event: 1
19936:=== NDS: ^0000000175.265029 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(385) RF RcuDeviceList SetPairingState new state 1
19940:=== NDS: ^0000000175.265062 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:SetPairingState L:00283 > @ctx:AS_RCU AS_RCU_RcuDeviceList.cpp(390) RF RcuDeviceList SetPairingState old state was 0
19941:=== NDS: ^0000000175.265095 !MIL   -AS           < p:000008a1 t:1a02ddd0 T:AS_RCU_CTL M:AS_DMS_Writer.cpp F:Exec L:00283 > @ctx:AS_RCU AS_RCU_RcuControllerImplementation.cpp(214) RF pairing state changed state: 1
21678:=== NDS: ^0000000203.594686 !MIL   -com.bskyb.epgui < p:000008a1 t:2f493dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Busy] BTRemoteModelStartup"
21794:=== NDS: ^0000000203.616050 !MIL   -com.bskyb.epgui < p:000008a1 t:2f493dd0 T:no name M:DependencyMap.cpp F:void DependencyMap::dumpStatus() L:00140 > "6" : "[Complete] BTRemoteModelStartup"


<skymw-jira-q>

https://www.stb.bskyb.com/jira/browse/NGDEV-152601

git flow feature start NGDEV-152601_SI_delivery_causes_coredump_on_HIP_IT_VSTB

NGDEV-152601: Q000 SI delivery causes coredump on HIP IT VSTB

This only happens on VSTB and this commit makes code to get state in case it
fails to get a response of state n VSTB and it is confirmed that tests for this
setup do not use EPG. 


<skymw-jira-q> *skymw-as*

https://www.stb.bskyb.com/jira/browse/NGDEV-152804

NGDEV-152804: CODH-Bluetooth: Intermittently unable to push audio via BT on all UK STBs( using both iOS and Andriod) 

git flow feature start NGDEV-152601_SI_delivery_causes_coredump_on_HIP_IT_VSTB

git co -b NGDEV-152804_CODH_Bluetooth_Intermittently_unable_to_push_audio_via_BT

This commit is to fix the issue where playing event is not handled by BT
audio. This happens when the pairing is done first time and there is no
connection events made from this scenario. Therefore, it add a handling of
this case.


<skymw-jira-q> *skymw-as*
NGDEV-155219: CODH-Bluetooth: Unable to re-launch bluetooth audio after disconnecting via RCU(press Home/Elipsis) 

The new implementation missed out the support of disconnection timeout feature
which allows a connection to remain until timeout expires.

This commit is to introduce this timeout support back to be in line with the
previous implementation and to maintain a connection for the given time.

git push -n origin NGDEV-155219_CODH-Bluetooth_Unable_to_re-launch_bluetooth_audio_after_disconnecting_via_RCU


git co -b NGDEV-155219_CODH-Bluetooth_Unable_to_re-launch_bluetooth_audio_after_disconnecting_via_RCU

19976:NDS: ^0000000465.389093 !MIL   -HAM          < p:00000e0b t:4a99ddc0 T:no name M:hamiltron-client.c F:hamiltron_client_send_key_event L:00860 > KEY_PRESS: code=0xe008('apps') sent to 'com.bskyb.epgui'
19999:NDS: ^0000000465.412727 !MIL   -AS           < p:00000e0b t:3b6eddc0 T:AUS_Player M:AS_DMS_Writer.cpp F:stop L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(272) stop called
20000:NDS: ^0000000465.412769 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:doWork_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(846) received stop request from the client on player (/org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0) and post stop event
20001:NDS: ^0000000465.413048 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:exited_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1083) fsm exited: PlayerRunningState
20002:NDS: ^0000000465.413070 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:exited_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1083) fsm exited: RunningSuperState
20003:NDS: ^0000000465.413085 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:onExitRunningSuperState_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1251) RunningSuperState
20004:NDS: ^0000000465.413100 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:handleStopRequest_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1375) player proxy or player path are set. request proxy to stop
const size_t PLAY_HALT_INTERVAL{3500};

20006:NDS: ^0000000465.413143 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:entered_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1031) fsm entered: (DeviceOffState)
20007:NDS: ^0000000465.413158 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:onEnterDeviceOffState_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(1095) DeviceOffState
20051:NDS: ^0000000465.981919 !MIL   -AS           < p:00000e0b t:7535adc0 T:AS_MAIN_TH_9001 M:AS_DMS_Writer.cpp F:LogReceivedRequest L:00258 > @ctx:AS_WEBSERVER AS_WEB_SERVER_RequestResponseLogger.cpp(140) HTTP Request received. httpRequestHandle: 493, httpMethod: 1, Port: 9001, URI: /as/players/1/action/enableaudio
20054:NDS: ^0000000465.982657 !MIL   -AS           < p:00000e0b t:7536bdc0 T:AS_WRKR_TH_9001 M:AS_DMS_Writer.cpp F:LogSendResponse L:00258 > @ctx:AS_WEBSERVER AS_WEB_SERVER_RequestResponseLogger.cpp(317) HTTP response sent.    httpRequestHandle: 493, httpStatus: 200 httpMethod: 1, Port: 9001, URI: /as/players/1/action/enableaudio
20057:NDS: ^0000000466.029913 !MIL   -AS           < p:00000e0b t:319fedc0 T:no name M:AS_DMS_Writer.cpp F:onRefreshTimerExpired_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(568) refresh timer expired and refresh player
20474:NDS: ^0000000467.029931 !MIL   -AS           < p:00000e0b t:319fedc0 T:no name M:AS_DMS_Writer.cpp F:onRefreshTimerExpired_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(568) refresh timer expired and refresh player
20526:NDS: ^0000000468.029941 !MIL   -AS           < p:00000e0b t:319fedc0 T:no name M:AS_DMS_Writer.cpp F:onRefreshTimerExpired_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(568) refresh timer expired and refresh player

20531:NDS: ^0000000468.913179 !MIL   -AS           < p:00000e0b t:319fedc0 T:no name M:AS_DMS_Writer.cpp F:onStopTimerExpired_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(583) stop timer expired, stop device, reset reader, pathes and timers
20532:NDS: ^0000000468.915392 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:doWork_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(809) player is removed, (/org/bluez/hci0/dev_88_9F_6F_88_6A_7B/player0)
20534:NDS: ^0000000468.999969 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:doWork_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(699) transport is removed (/org/bluez/hci0/dev_88_9F_6F_88_6A_7B/fd0)
20535:NDS: ^0000000469.410074 !ERROR -AS           < p:00000e0b t:3b3fedc0 T:no name M:AS_DMS_Writer.cpp F:onEvent L:00254 > @ctx:dbusitf bleaudioreader.cpp(107) EOS error
20536:NDS: ^0000000469.410130 !MIL   -AS           < p:00000e0b t:3b3fedc0 T:no name M:AS_DMS_Writer.cpp F:readerThread L:00258 > @ctx:dbusitf bleaudioreader.cpp(176) media reader thread returning
20537:NDS: ^0000000471.163565 !MIL   -AS           < p:00000e0b t:319fedc0 T:no name M:AS_DMS_Writer.cpp F:~BleAudioReader L:00258 > @ctx:dbusitf bleaudioreader.cpp(470) BleAudioReader::~BleAudioReader
20538:NDS: ^0000000471.163685 !MIL   -AS           < p:00000e0b t:329fedc0 T:no name M:AS_DMS_Writer.cpp F:onPropertyChange L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(134) STATUS DEVICE : property (Connected), value b 0
20540:NDS: ^0000000471.163772 !MIL   -AS           < p:00000e0b t:321fedc0 T:no name M:AS_DMS_Writer.cpp F:doWork_ L:00258 > @ctx:dbusitf bleaudiostreamer.cpp(661) device is disconneced, ()


={============================================================================
*kt_dev_skymw_0000* skymw-jira-luna

git flow feature start NGDEV-144531_Luna_-_update_to_support_DTT_video_on_IP150_/_IP051

NGDEV-144531: Luna - update to support DTT video on IP150 / IP051

For the new IP150 and IP051 Android boxes the way the iWedia player exposes
video surfaces has changed. See [1] for more details. Therefore, The Luna
runtime needs to be updated to reflect this.

This is a temporary commit only to have new jar library and a change to see
video via Vevo.

[1] https://www.stb.bskyb.com/confluence/display/2016/Creating+and+passing+of+Android+video+surface+to+iWedia+AS+Service+for+IP150

git flow feature finish -S NGDEV-144531_Luna_-_update_to_support_DTT_video_on_IP150_/_IP051


={============================================================================
*kt_dev_skymw_0000* skymw-todo

NDS: ^0000027250.001939 !ERROR -BLERCU       < p:00000ddb t:89cbadc0 T:no name M:blercumanager.cpp F:onStartDiscoveryReply L:00959 > discovery start request failed with error QDBusError("org.bluez.Error.InProgress", "Operation already in progress")
NDS: ^0000027252.282777 !MIL   -SYSTEMTIME   < p:00000dda t:b5a10440 T:SYSTEMTIME_NOTIFICATION_THREAD M:systemtime_monotonic.c F:SYSTEMTIME_TimeStampCallback L:02242 > Time is (Year:Month:Day:Hour:Min:Sec) 2019:07:12:01:38:14
NDS: ^0000027255.001136 !ERROR -BLERCU       < p:00000ddb t:89cbadc0 T:no name M:blercumanager.cpp F:onDiscoveryWatchdog L:01064 > detected discovery in the wrong state (expected:on actual:off)
NDS: ^0000027255.003794 !ERROR -BLERCU       < p:00000ddb t:89cbadc0 T:no name M:blercumanager.cpp F:onStartDiscoveryReply L:00959 > discovery start request failed with error QDBusError("org.bluez.Error.InProgress", "Operation already in progress")
NDS: ^0000027257.282896 !MIL   -SYSTEMTIME   < p:00000dda t:b5a10440 T:SYSTEMTIME_NOTIFICATION_THREAD M:systemtime_monotonic.c F:SYSTEMTIME_TimeStampCallback L:02242 > Time is (Year:Month:Day:Hour:Min:Sec) 2019:07:12:01:38:19
NDS: ^0000027260.000971 !ERROR -BLERCU       < p:00000ddb t:89cbadc0 T:no name M:blercumanager.cpp F:onDiscoveryWatchdog L:01064 > detected discovery in the wrong state (expected:on actual:off)
NDS: ^0000027260.001910 !ERROR -BLERCU       < p:00000ddb t:89cbadc0 T:no name M:blercumanager.cpp F:onStartDiscoveryReply L:00959 > discovery start request failed with error QDBusError("org.bluez.Error.InProgress", "Operation already in progress")


#{============================================================================
Copyright: see |ktkb|  vim:tw=100:ts=3:ft=help:norl:
