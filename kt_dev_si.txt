*kt_dev_si*                                                                tw=100

kt.dev.si

/^[#=]{
Use #{ for a group and ={ for a item

|kt_dev_si_0002| si-links
|kt_dev_si_0002| si-feature-team
|kt_dev_si_0002| si-box
|kt_dev_si_0002| si-box-sceret-screen
|kt_dev_si_0002| si-box-mount
|kt_dev_si_0002| si-boot-ssitart-mw
|kt_dev_si_0002| si-boot-log
|kt_dev_si_0002| si-git
|kt_dev_si_0002| si-build
|kt_dev_si_0002| si-build-baseline
|kt_dev_si_0002| si-build-errors
|kt_dev_si_0002| si-build-make
|kt_dev_si_0002| si-build-make-image
|kt_dev_si_0002| si-build-map-file
|kt_dev_si_0002| si-build-jpa
|kt_dev_si_0002| si-sh-theyard
|kt_dev_si_0002| si-sh-check-log
|kt_dev_si_0002| si-sh-check-back
|kt_dev_si_0002| si-sh-log-parser
|kt_dev_si_0002| si-sh-log-parser-entry
|kt_dev_si_0002| si-sh-to-dates
|kt_dev_si_0002| si-sh-alog
|kt_dev_si_0002| si-sh-list-log
|kt_dev_si_0002| si-sh-convert-logs
|kt_dev_si_0002| si-sh-wombat
|kt_dev_si_0002| si-sh-flipper

|kt_dev_si_0002| si-tcpdump
|kt_dev_si_0002| si-dmalloc

|kt_dev_si_0003| si-log-commands
|kt_dev_si_0003| si-log-lines
|kt_dev_si_0003| si-log-lines-mil

|kt_dev_si_0001| comp-tree
|kt_dev_si_0001| comp-term
|kt_dev_si_0001| comp-build enable-comp-diag
|kt_dev_si_0001| comp-jpa
|kt_dev_si_0001| comp-jpa-print-systemstring
|kt_dev_si_0001| comp-jvm
|kt_dev_si_0001| comp-aem
|kt_dev_si_0001| comp-ams comp-uam
|kt_dev_si_0001| comp-lae
|kt_dev_si_0001| comp-gfx
|kt_dev_si_0001| comp-atm comp-adsmart
|kt_dev_si_0001| comp-atg comp-oigc
|kt_dev_si_0001| comp-bem
|kt_dev_si_0001| comp-ctm
|kt_dev_si_0001| comp-guide
|kt_dev_si_0001| comp-fem
|kt_dev_si_0001| comp-drv
|kt_dev_si_0001| comp-mcm
|kt_dev_si_0001| comp-mdm
|kt_dev_si_0001| comp-memman
|kt_dev_si_0001| comp-membuster
|kt_dev_si_0001| comp-memman-membuster
|kt_dev_si_0001| comp-memprof
|kt_dev_si_0001| comp-timedoctor
|kt_dev_si_0001| comp-ofs
|kt_dev_si_0001| comp-mfs
|kt_dev_si_0001| comp-msm
|kt_dev_si_0001| comp-rmf
|kt_dev_si_0001| comp-rmf-conclict
|kt_dev_si_0001| comp-vrm
|kt_dev_si_0001| comp-diag
|kt_dev_si_0001| comp-mil
|kt_dev_si_0001| comp-ncm
|kt_dev_si_0001| comp-dhcp
|kt_dev_si_0001| comp-sbm
|kt_dev_si_0001| comp-scm
|kt_dev_si_0001| comp-ssm
|kt_dev_si_0001| comp-upnp
|kt_dev_si_0001| comp-sfm
|kt_dev_si_0001| comp-sim
|kt_dev_si_0001| comp-spm
|kt_dev_si_0001| comp-power
|kt_dev_si_0001| comp-vgc
|kt_dev_si_0001| comp-srm
|kt_dev_si_0001| comp-pcat
|kt_dev_si_0001| comp-pcat-dbengine
|kt_dev_si_0001| comp-fdm
|kt_dev_si_0001| comp-pshed
|kt_dev_si_0001| comp-pdm
|kt_dev_si_0001| comp-player
|kt_dev_si_0001| comp-sharedplanner
|kt_dev_si_0001| comp-planner
|kt_dev_si_0001| comp-uam
|kt_dev_si_0001| comp-prefs
|kt_dev_si_0001| comp-systemobject
|kt_dev_si_0001| comp-systemutil
|kt_dev_si_0001| comp-systemalarm
|kt_dev_si_0001| comp-systemtime
|kt_dev_si_0001| comp-systemcommon comp-systemexception
|kt_dev_si_0001| comp-systemlocator
|kt_dev_si_0001| comp-systemipc
|kt_dev_si_0001| comp-systeminit
|kt_dev_si_0001| comp-wlm
|kt_dev_si_0001| comp-ca
|kt_dev_si_0001| comp-vgv
|kt_dev_si_0001| comp-camm
|kt_dev_si_0001| comp-xtvfs
|kt_dev_si_0001| comp-nvram
|kt_dev_si_0001| comp-helper
|kt_dev_si_0001| comp-app
|kt_dev_si_0001| comp-http comp-ctm


# ============================================================================
#{
={============================================================================
|kt_dev_si_0002| si-links

https://www.stb.bskyb.com/confluence/display/Relmgmt/Release+Management | SKY | Release Management
https://www.stb.bskyb.com/confluence/display/docs/Middleware+Document+Library | SKY | Docs
https://www.stb.bskyb.com/confluence/display/Relmgmt/Release+11 | SKY | Release 11

https://www.stb.bskyb.com/jira/projects/SI | SI | jira
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?MAC=0019FBF2D46B | SI | wobmat: BOX 6B
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?MAC=0019FB63D645 | SI | wombat: BOX 45
http://theyard.cisco.com/missing/checklog.php?log=1f047ae19daf49d912235e7d884ee5e4 | SI | web check log

http://hetty.cisco.com/fusionmadesimple/index.php/Log_Parser | FMS | Log Parser
http://hetty.cisco.com/fusionmadesimple/index.php/FillDisk | FMS | FillDisk
http://hetty.cisco.com/fusionmadesimple/index.php/SIProcesses#Requesting_retests_for_Brentwood_Stress_defects | FMS | process - brentwood
http://hetty.cisco.com/fusionmadesimple/index.php/SI-101 | FMS | SI-101
https://docs.cisco.com/share/page/site/nextgen-edcs/document-details?nodeRef=workspace://SpacesStore/df081074-9288-4b35-af48-34fe45cce120 | FMS | Doc Central
http://hetty.cisco.com/fusionmadesimple/index.php/Building_GDB | FMS | Building GDB
http://hetty.cisco.com/fusionmadesimple/index.php/Git_Fusion_standard_workflow | Git Fusion standard workflow - Fusion Made Simple
http://hetty.cisco.com/fusionmadesimple/index.php/Core_dumps_on_theyard | Core dumps on theyard - Fusion Made Simple
http://hetty.cisco.com/fusionmadesimple/index.php/Full_Stack_-_BSKYB | Full Stack - BSKYB - Fusion Made Simple
http://hetty.cisco.com/fusionmadesimple/index.php/MiscellaneousGaudiTips#Sky_Viewing_Cards | MiscellaneousGaudiTips - Fusion Made Simple
http://hetty.cisco.com/fusionmadesimple/index.php/Main_Page#Darwin_in_depth | Fusion Made Simple

http://hudkinsflipper.cisco.com/walrus/flipper/ | BLD | F.L.I.P.P.E.R
http://hetty.cisco.com/fusionmadesimple/index.php/Flipper_SI_scripts | BLD | Flipper SI scripts
http://hetty.cisco.com/fusionmadesimple/index.php/Creating_and_Releasing_a_Darwin_SI_Baseline_via_Git | BLD | make a build
http://hudsonmaster1.uk.nds.com:8080/hudson/view/Maintenance/job/generate_fullstack_table/lastSuccessfulBuild/artifact/FSI.html | BLD | search FSI
http://hudsonmaster1.uk.nds.com:8080/hudson/job/AutoSign_RequestSigning_Live/ | BLD | auto sign
http://hudsonmaster1.uk.nds.com:8080/hudson/view/WALRUS/job/build_fullstack_image/ | BLD | build_fullstack_image
http://engci-maven.cisco.com/artifactory/STB_BIN-repo/third_party/BSKYB_JTH/ | BLD | STB_BIN-repo/third_party/BSKYB_JTH
http://10.209.56.204/cgi-bin/t.sh | BLD | Compare Build Folders
http://hudsonmaster1.uk.nds.com:8080/hudson/ | BLD | Releases PVR [Jenkins]
http://manatee.cisco.com/Manatee | BLD | manatee

http://wwwin-tools.cisco.com/itsm/mailer/welcome.do | CISCO | Mailer
http://wwwin-tools.cisco.com/dir/details/kyoupark | CISCO | Directory | Kyoungtaek Park
https://wwwin-git-gpk-2.cisco.com:8081/#/admin/projects/ | CISCO | Code Review

https://wiki.cisco.com/display/DEVTEST/Linux+Mint+13+on+Thinkpad+W520 | CISCO | Linux Mint 13 on Thinkpad W520 - DEVTEST DevTest Team - IT Wiki


={============================================================================
|kt_dev_si_0002| si-feature-team
lynx-sm@cisco.com and beagle-sm@cisco.com. If those don't work, use
@external.cisco.com. 

Those lists will get you to the current scrum masters (they rotate around the
team, which is why we use the mailing lists). 


={============================================================================
|kt_dev_si_0002| si-box

The Amstrad DRX890 is a Broadcom 7335 based box
The Amstrad DRX595 is a Broadcom 7350 based box

<box-up> dynamic ip
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?MAC=0019FB63D645

<box-down> dynamic ip
eth0      Link encap:Ethernet  HWaddr 00:19:FB:F2:D4:6B  
          inet addr:10.209.60.60  Bcast:10.209.60.255  Mask:255.255.255.0


0019FBF2D46B  
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?MAC=0019FBF2D46B


<fsn_data>
/mnt/nds/dev_6/part_0/FSN_DATA


<mtd>
# 595 box 
# mtd devices
sh-3.2# cat /proc/mtd 
dev:    size   erasesize  name
mtd0: 0f800000 00020000 "rootfs"
mtd1: 0ff00000 00020000 "all"
mtd2: 00400000 00020000 "kernel"
mtd3: 00400000 00020000 "cfe"
mtd4: 03c00000 00020000 "nor"


={============================================================================
|kt_dev_si_0002| si-box-sceret-screen

1. Press "Services" button on remote control
2. Enter "001" and press "Select" to access setup screen 


={============================================================================
|kt_dev_si_0002| si-box-mount

// from a box and 10.209.62.232 is ukstbuild02 which shares all under /home
mount -o rw -t nfs 10.209.62.232:/home/NDS-UK/kyoupark/si_logs /mnt/tmp

// to kit-debian
mount -o rw -t nfs 10.209.56.97:/home/kyoupark/si_logs /mnt/tmp

http://hetty.cisco.com/fusionmadesimple/index.php/Cisco_SG_200-08_Ethernet_Switch

NFS issues

If you got one of the Cisco switches from me, be aware that NFS will not work
through it.

This is because it has a denial of service protection feature that drops TCP
SYN packets on privileged ports, because of
http://en.wikipedia.org/wiki/SYN_flood .

You canâ€™t turn this feature off; you need to upgrade the firmware.

See bug discussion: http://www.viktorious.nl/2013/11/05/cisco-sg200-08-nfs/

This issue is fixed in version 1.0.7.4. 


={============================================================================
|kt_dev_si_0002| si-boot-start-mw

note:
'build_mw_epg.sh' builds /etc and /NDS for images to flash
# - snippet from the end of running
#
# Creating middleware epg package
#./
#./etc/
#./etc/start-mw.sh
#./NDS/
#./NDS/bin/
#./NDS/bin/SCD_Process
#./NDS/bin/MW_Process
#./NDS/bin/APP_Process
#./NDS/bin/CA_Process

<boot>
// /etc/init.d/rcS

if [ -e /etc/start-mw.sh ]; then
    /etc/start-mw.sh
fi

<boot-start-mw>
// generated from build_mw_epg.sh
// /etc/start-mw.sh  *start-mw*

#!/bin/sh
echo
echo "##########################"
echo "# Loading NDS middleware #"
echo "##########################"
echo
echo "####################################"
echo "# Middleware starting in 5 seconds #"
echo "# Hit ctrl-C to cancel             #"
echo "####################################"
echo
stty brkint
sleep 5 || exit
ulimit -c unlimited
mkdir -p /mnt/nds
chgrp NDS_MW /mnt/nds
chown NDS_U2 /mnt/nds
mkdir -p /mnt/nds/disk/FSN_DATA && mount -t tmpfs none /mnt/nds/disk/FSN_DATA -o ro
killall udhcpc || true
OVERRIDE_LOCATION=asbo.bskyb.com:/home/asbo/mac
SERVER=`echo ${OVERRIDE_LOCATION} | cut -d":" -f1`
SCRIPT_PATH=`echo ${OVERRIDE_LOCATION} | cut -d":" -f2`
OVERRIDE_DIR=/tmp/override_dir
echo "Enabling udhcp"
udhcpc -nR -t3 -T5
ping -W 1 -c 1 ${SERVER} && (
MAC_ADDR=`ifconfig eth0 | grep HWaddr | head -n1 | tr -s " " | cut -d" " -f5`
mkdir -p ${OVERRIDE_DIR}
echo "mount ${SERVER}:${SCRIPT_PATH}/${MAC_ADDR} ${OVERRIDE_DIR}"
mount ${SERVER}:${SCRIPT_PATH}/${MAC_ADDR} ${OVERRIDE_DIR}
if [ -x "${OVERRIDE_DIR}/runme.sh" ]; then
    ${OVERRIDE_DIR}/runme.sh
    umount ${OVERRIDE_DIR}
else
    echo "OVERRIDE script failed to be executed: ${OVERRIDE_LOCATION}"
fi
)
killall udhcpc
   udhcpc -nR -t3 -T5
mkdir -p /mnt/nds/hudson_18_07_16_16_20_55
mount -o mountport=892 theyard.cisco.com:/home/si_logs/si_devel_posts/hudson_18_07_16_16_20_55  /mnt/nds/hudson_18_07_16_16_20_55
cp -f /mnt/nds/hudson_18_07_16_16_20_55/*_Process /NDS/bin/
chmod a+x /NDS/bin/*_Process
umount /mnt/nds/hudson_18_07_16_16_20_55
rm -rf /mnt/nds/hudson_18_07_16_16_20_55
   killall udhcpc
mkdir /mnt/nds/tmp
mount /dev/sda1 /mnt/nds/tmp
UPNPUAID_PATH=/mnt/nds/tmp/FSN_DATA
if [ ! -f ${UPNPUAID_PATH}/UPNPUAID ]; then
   echo "######################"
   echo "Creating UPNP Agent ID using MAC"
   echo "######################"
   echo "Grabbing MAC"
   MACADDR=`ifconfig -a | grep ^eth0|sed -e s/.*HWaddr[[:space:]]// -e s/://g -e s/[[:space:]]//g`
   echo "USERAGENTID=$MACADDR" > ${UPNPUAID_PATH}/UPNPUAID
fi
if [ -f ${UPNPUAID_PATH}/UPNPUAID ]; then
   echo "######################"
   echo "Changing UPNP Agent ID"
   echo "######################"
   UAID=`cat ${UPNPUAID_PATH}/UPNPUAID | sed s/USERAGENTID=//`
   sed -i "s/FILTERING_ENABLED.*/FILTERING_ENABLED=TRUE/" /NDS/config/libupnp.cfg
   sed -i "s/PRODUCTNAME=.*/PRODUCTNAME=\"$UAID\"/" /NDS/config/libupnp.cfg
   sed -i "s/PRODUCTNAME_FILTER=.*/PRODUCTNAME_FILTER=\"$UAID\"/" /NDS/config/libupnp.cfg
fi
umount /mnt/nds/tmp
rmdir /mnt/nds/tmp

// *comp-config*
cd /NDS/config
/NDS/bin/FusionConfigImport CFG2BIN ./ *

cd /etc
PATH_RESCONF=`readlink /etc/resolv.conf`
if [ -f ${PATH_RESCONF} ]; then
   echo "resolv.conf exists. Deleting ${PATH_RESCONF}"
   rm -f ${PATH_RESCONF}
fi
cd /tmp
export LD_PRELOAD=/usr/lib/libforcesched.so:/lib/libresolv-refresh.so:/lib/libifnameindex.so
/NDS/bin/PWM_Process


<unified-startup>
note:
What is it for?
deps/FUSIONOS_OUTPUT_DEL_2/KERN_AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/Scripts/unified_startup.sh

# unified_startup.sh FORMAT NORUN
#
# In sum, 
# FORMAT will format sda or delete db and recordings
# NORUN will setup env for MW or for test env.
#
# 1. copy xtvfs_format on to box:/usr/bin (actually not used)
# 2. make dirs. no effect appart from /NDS
# 3. untar driver file on to box:/. This includes ko and script files:
#        etc/bumpup.cfg
#        etc/load-cdi-drivers.sh
#        lib/modules/2.6.18.8/callisto_drx890.ko
#        lib/modules/2.6.18.8/callisto_periph.ko
#        lib/modules/2.6.18.8/callisto_tuner.ko
# 
# 4. run /etc/load-cdi-drivers.sh, nfs:/drivers/xtvfs.ko, nfs:/drivers/jhmknods_nds.sh, and nfs:/drivers/mhxnvramfs.ko
#    if NOCLEAN=false(default), populate nvram?.bin to /dev/nds/nvram[01].bin. (actually no effect since no nvram?.bin in nfs.)

# 5. if FORMAT=true, delete /dev/sda3,4 (no effect since there aren't 3, 4 partiiton in a box)
# 6. if FORMAT=true, delete /dev/sda1,2. create /dev/sda1 with FAT12 and format it using xtvfs_format. formatting xtvfs will create own file and dirs.
# 7. if NOCLEAN=false(default), delete /dev/sda1/FSN_DATA/* for dbs and /dev/sda1/* for recodring. Actually, has an effect only when not use FORMAT.
# 8. copy nfs:/fs/NDS/* on to /NDS
# 9. mount sysfs on /sys (no effect since already done after boot)
# 10. copy nfs:/drivers/libs on to /usr/lib, run /etc/bumpup.sh (no effect), delete /tmp/* and /fifo/*
#
# Once system loaded, see that there are fs mounded. Done by MW?
#   /dev/nds/nvram0 on /mnt/nds/dev_2/part_0 type MHNVRAMFS (rw,nosuid)
#   /dev/sda1 on /mnt/nds/dev_5/part_0 type xtvfs (rw,nosuid)


<ex>
# to use with kernel only env.
udhcpc
mkdir /host
mount -t nfs 172.18.253.143:/home/NDS-UK/parkkt/cc/parkkt_BSKYB_GM_01/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian /host
cd /host
./unified_startup.sh . /host FORMAT NORUN
./unified_startup.sh . /host NORUN
LD_PRELOAD=/usr/lib/libforcesched.so /NDS/bin/SCD_Process
LD_PRELOAD=/NDS/lib/cdi_tracker.so /usr/lib/libforcesched.so /NDS/bin/SCD_Process
LD_PRELOAD=/NDS/lib/cdi_tracker.so /usr/lib/libfollrcesched.so /NDS/bin/SCD_Process_us
LD_PRELOAD=/usr/lib/cdi_tracker.so /usr/lib/libforcesched.so /usr/lib/libresolv-refresh.so /usr/lib/libifnameindex.so /NDS/bin/SCD_Process

# FOSH
mount -t nfs 172.18.253.143:/home/NDS-UK/parkkt/fob/595/fosh/Darwin97350_BE/debug/FOSH/NDS /NDS


={============================================================================
|kt_dev_si_0002| si-boot-log

## trial-boot-scripts

// from *build-mw-epg* 

  # Enable FTP uploading for Trials only
  if [ -z "$UPLOAD" ]; then
    if ([ ${PROFILE} =  "sky_trials" ] || [ ${PROFILE} =  "mem_trials" ] || [ ${PROFILE} =  "cust_trials" ]); then
       UPLOAD=1
      # Enable new BOOTLOG Mechanism to upload logs for trials builds
       BOOTLOG=1
    fi
  else
    [ "$UPLOAD" = 0 ] && unset UPLOAD
  fi

      if [ -n "$BOOTLOG" ]; then
        echo 'echo'
        echo 'echo "###########"'
        echo 'echo "# Bootlog #"'
        echo 'echo "###########"'
        echo 'echo'
        # Call Bootlog and if upload is set upload the logs
        if [ -n "$UPLOAD" ]; then
          echo "/usr/bin/bootlog.sh  upload $LOGUPLOADMETHOD"
        else
          echo '/usr/bin/bootlog.sh '
        fi
      fi

// from start-mw.sh which made from *build-mw-epg* *start-mw*

/usr/bin/bootlog.sh 15 1024 upload
run CFG2BIN
call SCD process

# http://hoover.uk.nds.com/fusionmadesimple/index.php/Boot_Log
# /FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/tools/nds/si/bootlog


<bootlog-config>
# -sh-3.2# cat /etc/hostname
# drx890

  # Source storage device to mount
  `BLOG_mntdev`="/dev/sda1"

  # Mount point of data partition
  BLOG_mntpath="/tmp/dummydisk/BLOGDIR"

  # Path where data/logs are stored
  `BLOG_DATAPATH`="${BLOG_mntpath}/FSN_DATA"

  # Maximum memory available  and maximum number of log rotations on reboot i.e Bootlogs
  MAX_MEM_FOR_LOG_MB=1024
  MAX_OLD_BOOTLOG_ROTATE=15
  MAX_BOOTLOG_ROTATE=6
  # RLOG step size is now set to 20 Mb in diag_binary.cfg
  MAX_RLOG_ROTATE_COPY=19

FSN_ROOT="/mnt/nds"

# Rotated LOG Path where rotated logs will be moved
BLROTATED="${BLOG_DATAPATH}/RLOG"

# Path where INFO.TXT file is stored;
# INFO.TXT includes version info about the system;
BLINFOPATH="${BLOG_DATAPATH}/VERINFO"


<bootlog> main
# Usage: bootlog.sh <rotate limit> <size limit> [upload]
#
# check if it's already mounted.
grep -q "${BLOG_mntpath}" /proc/mounts

  # mounts
  mount "${`BLOG_mntdev`}" "${`BLOG_mntpath`}" || exit $?

#
/usr/bin/bootlog-rotate.sh "$rotate_limit"
#
/usr/bin/bootlog-create.sh
#
/usr/bin/bootlog-diskusage.sh "$rotate_limit" "$size_limit"
# upload
[ -n "$upload" ] && /usr/bin/bootlog-upload.sh

# Run crash monitor at high priority in background
chrt -r 97 /usr/bin/crash-monitor.sh </dev/null &

# COPY MEMPROF log in background 
chrt -r 2 /usr/bin/bootlog-copymemprof.sh </dev/null &

# umount. updated from 21.15 baseline
umount "${BLOG_mntpath}"


<bootlog-rotate>
# Logs are rotated into numbered directories with the following naming scheme: 
# Higher numbered directories are older. 
# base="/mnt/nds/BLOGDIR/FSN_DATA/BOOTLOG.x"
mv 'BOOTLOG' to 'BOOTLOG.1'


<bootlog-create>

# `BLOG_DATAPATH`="${BLOG_mntpath}/FSN_DATA"
cd "${BLOG_DATAPATH}"/ || exit $?

rm BOOTLOG
mkdir /mnt/nds/BLOGDIR/FSN_DATA/VERINFO
cp -a *.DB BOOTLOG/
mv ${BLINFOPATH}/INFO.TXT LOG LOG.* *.LOG *.CUR *.COR *.TXT BOOTLOG/

# [bootlog-mkinfo.sh] create info file, nvram file, etc..
/usr/bin/bootlog-mkinfo.sh >${BLINFOPATH}/INFO.TXT
# Middleware version
grep NDS_SW_VERSION /NDS/config/version.cfg && echo

# CDI version information properties
/usr/bin/cdi-vi STBM_NAME MODEL_VER STB_ID && echo

# Linux kernel version
uname -a
cat /proc/version && echo

# CDI driver version
cat /proc/callisto/version && echo


# [bootlog-upload.sh]
# Do upload
logdir="${BLOG_DATAPATH}"/BOOTLOG
if /usr/bin/bootlog-upload-1.sh "$logdir" &>/tmp/UPLOAD.LOG; then
  echo '---- UPLOAD COMPLETE ----' >>"$logdir"/UPLOAD.LOG
  cat /tmp/UPLOAD.LOG >>"$logdir"/UPLOAD.LOG

  # Remove global log file if upload succeeded
  rm -f "${BLOG_DATAPATH}"/UPLOAD.LOG
else

# Disable "online" LED
/usr/bin/cdi-fpi 0 0 0


# [bootlog-upload-1.sh]
# FTP settings
host=87.86.191.132
user=anonymous
pass=upload@sky.com
path=upload

# Enable "online" LED
# "usage: cdi-fpi <index> <state> <luminosity>\n"
/usr/bin/cdi-fpi 0 1 1

# Create tarball. upload 'BOOTLOG'
tar -c \
  "${BLOG_DATAPATH}"/UPLOAD.LOG \
  "$logdir"/LOG \
  "$logdir"/*.LOG \   # previous binary DIAG log
  "$logdir"/*.CUR \   # current binary DIAG log
  "$logdir"/*.TXT \
  "$logdir"/MFS.DB \
  "$logdir"/PCAT.DB \
  "$logdir"/REMBOOK.DB \
  "$logdir"/NVRAM0.BIN \
  "$logdir"/NVRAM1.BIN \
  "$logdir"/*.COR \ 
| gzip >"$logdir"/UPLOAD || exit $?


# get mac
# -sh-3.2# cat /sys/class/net/eth0/address
# 00:10:18:00:12:00
# 
cut -c1-2,4-5,7-8,10-11,13-14,16-17 </sys/class/net/eth0/address

# Send the tarball
if [ "$use_ftp" = "ftp" ] ; then
  echo "BLL:bootlog-upload.sh: MILESTONE Send Tarball by FTP: ${srcfile} to ${destfile}"  >> "${BLLFILENAME}"
  echo "67#        Uploading logs via FTP on ${interface}." >> "${UPLOAD_SCREEN_UPDATE}"
  echo "Uploading to ftp://$user@$host/$destfile"
  ftpput -u "$user" -p "$pass" "$host" "$destfile" "$srcfile" || exit $?
  echo "BLL:bootlog-upload.sh: MILESTONE Upload complete"  >> "${BLLFILENAME}"
  echo "ftp://$user@$host/$destfile" >"$logdir"/UPLOAD.URL
elif [ "$use_ftp" = "http" ] ; then
  # name of the file to be httpsend does not matter.Could be anything.
  # The way the naming of the upload file works is: generate the file,any name (UPLOAD) --> using md5sum generate the name and for records store in UPLOAD.URL
  # --> Upload the file, any name (UPLOAD)  --> in httpsend sky renames it as "2014-07-08_14-08-21_00:19:fb:f1:71:d8_10.10.8.54.tgz" --> On theyard, it regenerates the md5 sum name
  echo "BLL:bootlog-upload.sh: MILESTONE Upload via HTTP on $interface , srcfile: ${srcfile}, md5name: $md5name"  >> "${BLLFILENAME}"
  echo "67#        Uploading logs via HTTP on ${interface}." >> "${UPLOAD_SCREEN_UPDATE}"
  /sbin/httpsend "$macaddr" "$srcfile" || exit $?
  echo "$md5name" >"$logdir"/UPLOAD.URL
  echo "BLL:bootlog-upload.sh: MILESTONE Delete compressed and zipped UPLOAD file: ${srcfile}"  >> "${BLLFILENAME}"
  rm "$srcfile" || exit $?
fi
echo "BLL:bootlog-upload.sh: MILESTONE Upload finished"  >> "${BLLFILENAME}"


# [crash-monitor.sh]
# Set core dump location and format
echo '/tmp/%p.COR' >/proc/sys/kernel/core_pattern

# The crash monitor is a process which runs in the background checking for
# core dumps and then copying them to the disk when they appear.  The core
# dumps are written to /tmp/<pid>.COR by the kernel. The crash monitor copies
# these to /FSN_DATA/.  Looking at the date of the core files may give you a
# clue as to when a crash occurred. 


={============================================================================
|kt_dev_si_0002| si-git

<register-ssh-key>
https://wiki.cisco.com/display/GITFUSION/Getting+started+in+Git

The gerrit server is a git server and uses ssh config file.


<si-git>
http://hetty.cisco.com/fusionmadesimple/index.php/Git_Fusion_standard_workflow

git clone ssh://wwwin-git-gpk-2.cisco.com:29418/STB_SW STB_SW
git clone ssh://wwwin-git-gpk-2.cisco.com:29418/STB_SW STB_SW -b BSKYB_HQnnn_ETHAN_Int


<file-list>
ag -U --nopager --follow --nocolor --nogroup -g '' > list.out

#.agignore
build/
test/
unit_test/
tests/
mock/
DARWIN_PLATFORM/dms
Resolve_Deps/
doc/
curl/
openssl/
config/
FREETYPE2/
FUSION_SYSTEM_INTEGRATION/
.git/
# CMS_MEDIA_SERVICES/Media_Streamer/
VQE_SRC/
simulators/
mediastreamer/config_files/
CMS_MEDIA_SERVICES/Media_Streamer/proj_specific/mha/
CMS_MEDIA_SERVICES/Media_Streamer/generic/config_files/
proj_specific/mor/
proj_specific/fosh/
proj_specific/ip_vod/src/
CMS_MEDIA_SERVICES/metadata/proj_specific/legacy/
CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/ICU3/
CMS_SECURITY_SERVICES/NAGRA_CA_KERNEL/
BUILD_SYSTEM/
CMS_MEDIA_SERVICES/MPM/src/.doxygen.d/
NDS_TOOLSETS/


={============================================================================
|kt_dev_si_0002| si-build

<baseline>

tag name:
BSKYB_HR014_Int/BSKYB_INTEGRATION_BLD_83.01.00_BSKYB_HR014_Int

R014.083.57.00

From
http://hudsonmaster1.uk.nds.com:8080/hudson/view/Maintenance/job/generate_fullstack_table/lastSuccessfulBuild/artifact/FSI.html

BSKYB_HR014_Int

BSKYB_INTEGRATION_BLD_83.57.00_BSKYB_HR014_Int

ams-drx890

cust_trials

preprod

No


git clone ssh://wwwin-git-gpk-2.cisco.com:29418/STB_SW STB_SW_o

$ git tag | grep "BLD_.*_HR015"

git co BSKYB_HR014_Int
git co BSKYB_HR015_Int

http://hetty.cisco.com/fusionmadesimple/index.php/Git_Fusion_standard_workflow

cd STB_SW
./initialise_hooks
Resolve_Deps/scripts/resolve_deps.sh FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01

  <Platform> parameter is one or more of the listed in: 
  
  $ more FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/tools/nds/si/git_scripts/load_rules.txt 
  #
  # This contains load rules for this stream. create_SI_bl_source.sh loads
  # load rules by using this file. Hence this is not a regular text file.
  # Be careful when making changes, especially space characters between rules.
  #
  # Hudkins also needs this file. Check below link for further details
  # http://hudsonmaster1:9000/projects/hudsonadmin/wiki/Requirements_for_GetSourceToHudsonsh
  #
  
  PLATFORM_ams_drx890="FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01"
  PLATFORM_ams_drx595="FUSIONOS_5/BLD_DARWIN_SKYDRX595_BCM97350_LNUX_01"

cd /home/NDS-UK/mariyapm/R11/R11/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/

1. 
./build_mw_epg.sh -p "ams-drx890" --project "picasso"  --profile "Sky_Trials" --variant "debug"
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel

2) Upload jar files and replace it with car files. 
note: requires hudson page to do that.

3. Packaging 
./build_mw_epg.sh -p "ams-drx890" --project "picasso"  --profile "Sky_Trials" --variant "debug" -nm

4.
./make_image.sh -c -p "ams-drx890" --project "picasso"  --profile "Sky_Trials" --variant "debug"
./make_image.sh --platform ams-drx890 --project picasso --profile "NDS_SI_Devel" 


5. Use image from 
/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/\
AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/image/OTV/


<build-commands>

# make.sh: Build the Darwin middleware and/or application.
# (but don't support 890 platform)
#./make.sh --platform "ams-drx890" --profile "NDS_SI_Devel" 
#./make.sh -c --platform "ams-drx890" --profile "NDS_SI_Devel"

# build_mw_epg: Build the Darwin middleware and/or application.
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --clean [--output /home/NDS-UK/parkkt/cc/parkkt_BSKYB_INTEGRATION_MAIN_01/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build]
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --clean
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --clean --baseline ENG_0603_PICA
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --use_sysinit_cfg 
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --memprof --baseline ENG_KT_SP
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --clean --mw_only --baseline ENG_KT_PCAT_05
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile sky_trials --clean
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --memprof --bootlog --baseline ENG_SOC_03
./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel

./build_mw_epg.sh --platform ams-drx890 --project picasso --variant preprod --profile cust_trials --clean

# prod
./build_mw_epg.sh --platform ams-drx595 --project picasso --variant prod --profile sky_prod --clean

#./build_mw_epg.sh --platform "ams-drx780" --profile "NDS_SI_Devel" -nm

# to get flash0.tar.gz. use this but not release.sh
./utils/picasso_flash_H1.sh -b ams_bcm -p stripped_optim -s nds
./picasso_flash_H1.sh -b ams_bcm -p debug -s nds

# takes about 5 mins
./make_image.sh --platform ams-drx890 --project picasso --profile "NDS_SI_Devel" 
./make_image.sh --platform ams-drx890 --project picasso --profile "sky_trials" -c
./make_image.sh --platform ams-drx890 --project picasso --variant preprod --profile cust_trials

# prod
./make_image.sh --platform ams-drx595 --project picasso --variant prod --profile sky_prod -c


# takes about 37 mins
./make_image.sh --platform ams-drx890 --project picasso --profile "NDS_SI_Devel" -c
./make_image.sh --platform ams-drx890 --project picasso --profile "NDS_SI_Devel" --kernel_only 


<build-gcc-version>
Linux version 2.6.18.8 (hudson@hudkinsslave8.cisco.com) (gcc version 4.2.0 20070124 (prerelease) - BRCM 10tsHound-20140508) #2 Thu Sep 15 12:49:55 BST 2016

// 890
~/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gcc --version
mips-linux-uclibc-gcc (GCC) 4.2.0 20070124 (prerelease) - BRCM 10tsHound-20140508

~/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gcc \
-Os -fno-strict-aliasing -Wall -g -fno-builtin -Wmissing-prototypes \
-Wshadow -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations


<build-uclibc-version>
-rwxrwxrwx    1 root     root        29028 Sep 15  2016 ld-uClibc-0.9.29.so
lrwxrwxrwx    1 root     root           19 Jan  1 00:00 ld-uClibc.so.0 -> ld-uClibc-0.9.29.so


<build-option>
To see the output of -E option

FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gcc -E -Os 
-fno-strict-aliasing -Wall -g -fno-builtin -DNeedFunctioPrototypes=1 
-Wmissing-prototypes -Wshadow -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations   
-DAPP_MGMT_SIGNAL_24_7_SERVICE_TYPE_82H -DAPP_MGMT_SIGNAL_ETV_OTV_TRIGGER_MOD 
-DAPP_MGMT_SIGNAL_RECOMMENDATION_OTV_PROMO_MOD -DAUTHENTICATION_NDS_SAC 
-DBSKYB_SUPPORT_HEP_WITH_OIG -DCALLBACK_PSTN -DCAPTION_TELETEXT_LEGACY_LAYOUT 
-DCAROUSEL_MHC -DCAROUSEL_OTV -DCA_VIDEOGUARD_NDS_SECURE_RETURN_PATH 
-DCA_VIDEOGUARD_PARENTAL_RESTRICT -DCA_VIDEOGUARD_WATERSHED -DFRONT_END_DTT_USB 
-DFRONT_END_SAT -DFRONT_END_SAT_SCR -DFUSION_APP_MGMT_SUPPORTED 
-DFUSION_AUTHENTICATION_SUPPORTED -DFUSION_BDL_SUPPORTED 
-DFUSION_CA_VIDEOGUARD_SUPPORTED -DFUSION_DYNAMIC_TSA_SUPPORTED 
-DFUSION_HEADEND_METADATA_SUPPORTED -DFUSION_HOME_NETWORK_SUPPORTED 
-DFUSION_METADATA_SUPPORTED -DFUSION_NETWORK_SUPPORTED -DFUSION_PDL_SUPPORTED 
-DFUSION_PVOD_SUPPORTED -DFUSION_PVR_SUPPORTED -DFUSION_TARGETED_MESSAGING_SERVICE_SUPPORTED 
-DFUSION_USER_ACTIVITY_SUPPORTED -DFUSION_VIDEOGUARD_NOTIFY_SUPPORTED -DFUSION_VWS_SUPPORTED 
-DGUIDE_BSKYB_FORMAT_LOGICAL_CHAN_NO -DGUIDE_BSKYB_SUBSCRIBER_PROPERTIES_USED 
-DHEADEND_METADATA_OIGC -DHOME_NETWORK_MEDIA_RENDERER -DHOME_NETWORK_PLANNER_SERVER 
-DHOME_NETWORK_REMOTE_UI -DHOTPLUG_SUPPORT -DIPPV -DMCM_PVR_RECORD_CA_HOLES 
-DMETADATA_SI_XSI_SSR -DNETWORK_CONFIGURE_LAN -DPDL_NDS_SECURE_AUTH -DPLAYER_PIN_HANDLING_A 
-DPLAYER_REMOTE_UI_HTTP -DPVOD_LINEAR_TRANSPORT -DPVR_CHECK_XTV_STATUS -DPVR_CLASSIC_REVIEW_BUFFER 
-DSERIES_IMPLICIT_SERIES_DELETION -DSERIES_SYNCHRONIZE_BOOKINGS_WITH_SIGNUPS 
-DSI_SERVICE_SCAN_XSI -DSOFTWARE_DOWNLOAD_OTV -DSRM_ELEMENTARY_STREAMS_SELECTION_A 
-DSRM_USE_PI_SCHEDULE_FLAG_FOR_AVAILABILITY -DUSBTUNER_SUPPORTED -DUSB_SUPPORTED 
-DUSER_ACTIVITY_BARB -DUSER_ACTIVITY_SSP -DWIFI_SUPPORTED -DWLM_SUPPORTED -DRELEASE_DBG -DDIAG_RELEASE_DBG -DDIAG_BINARY_MODE -DDIAG_PERFORMANCE_MODE -DOTV_CAROUSEL_SUPPORTED -DXSI_SUPPORTED -DLINT_ERRORS_ONLY= -DLINT_RESTORE= -DMEMLIST -DMEMLIST_SLEEP_PERIOD=60 -DMEMPROF -DPROFILE_A -DDIAG_LOG_NDEBUG -DNDEBUG -DMEMMAN_TRUSTED_CLIENT -DGFX_NO_SHAPE -DGFX_IMAGE_NO_DITHERING -DGFX_PAINTER_NO_ARGB16_4444 -DGFX_PAINTER_NO_ARGB16_4444_PREMULT -DGFX_PAINTER_NO_RGB16_565 -DGFX_PAINTER_NO_SURFACE_RW -DMSCQ189287_CLOCK_MONOTONIC_NOT_SUPPORTED -DCQ171339 -DLEGACY_MIGRATION_SUPPORT -DSUN_BUILD -DNDS_APP_TYPE_PICASSO -DDIAG_JAVA_DEBUG -D_XOPEN_SOURCE=600 -DAMS_BCM_MIPS4K_LNUX_DARWIN_01 -DFUSION_PROFILE -DMEMMAN_TRUSTED_CLIENT -DMSCQ1854424_SP_SCHEMA_ONLY -DMSCQ2375670_SET_PROVIDER_CLASS_MEMBERSHIP -DCQ380004_USE_STB_SW_01 
-DMEMMAN_FORCE_USE_MALLOC_DIRECTLY 
-DPLAYER_DUMP_VTABLES -DPLAYER_VTABLE_LEAK_DETECTION -DCAPTIONS_SUBTITLES -DCDI_IOCTL_DEFINITIONS="/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc/ioctl_magic.h" -DCDI -DIS_BIG_ENDIAN -D__BIG_ENDIAN -D_XOPEN_SOURCE=600 -D__USE_XOPEN2K -D_GNU_SOURCE -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemcommon/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemlang/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemlocator/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemstring/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemtime/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemobject/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemitc/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemconfig/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/diag/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/memman/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/misc_libraries/httpserver/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_control_and_diagnostics/sysinit/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_platform_components/darwin_player/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_platform_components/darwin_planner/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_platform_components/darwin_player/src/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_platform_components/darwin_guide/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_platform_components/darwin_prefs/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_system_platform_components/darwin_spm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/darwin_system_platform_components/darwin_uam/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/vrm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/msm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/fem/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/mcm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/bem/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/mdm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/mpm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/media_services/camm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/information_services/sim/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/information_services/pcat/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/pdm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/rmf/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/presentation_services/gfx/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemutil/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/presentation_services/cappres/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/ssm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/security_services/vgv/darwin/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/security_services/vgv/darwin/carange -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemalarm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/information_services/fdm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/information_services/fdm/fdm_optv -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/tests/CUnit-2.0-2/CUnit/Headers -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/ipc/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc/CDI_INC/include -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/nds/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc/nds -include /home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/nds/inc/clocks.h -ffunction-sections -fdata-sections -DDIAG_FILE_ID=260 -c /home/NDS-UK/kyoupark/STB_SW/DARWIN_PLATFORM/DARWIN_PLAYER/src/player_api_session.c > out.txt


<build-output>
/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg$
drwxr-xr-x  3 kyoupark ccusers 4096 Jul 22 09:08 applications/
drwxr-xr-x 15 kyoupark ccusers 4096 Jul 22 09:29 components/
drwxr-xr-x  4 kyoupark ccusers 4096 Jul 22 09:28 dyn/
drwxr-xr-x  3 kyoupark ccusers 4096 Jul 22 09:28 engines/
drwxr-xr-x  2 kyoupark ccusers 4096 Aug 26 15:06 processes/
drwxr-xr-x  3 kyoupark ccusers 4096 Jul 22 09:28 projects/

/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/components/media_services/bem/src/server$ ls
bem_cec.deps                      bem_composition_table.deps  bem_device_denc_conf.deps  bem_link_discovery.deps  bem_path_determine.deps  bem_plane_table.deps    bem_server_oc.deps             bem_terminal.deps
bem_cec.o                         bem_composition_table.o     bem_device_denc_conf.o     bem_link_discovery.o     bem_path_determine.o     bem_plane_table.o       bem_server_oc.o                bem_terminal.o
bem_channel.deps                  bem_connection.deps         bem_device_discovery.deps  bem_link_table.deps      bem_path_release.deps    bem_port.deps           bem_source.deps                bem_track.deps
bem_channel.o                     bem_connection.o            bem_device_discovery.o     bem_link_table.o         bem_path_release.o       bem_port.o              bem_source.o                   bem_track.o
bem_channel_table.deps            bem_connection_table.deps   bem_device_table.deps      bem_lock.deps            bem_path_reserve.deps    bem_server.deps         bem_source_table.deps          bem_track_table.deps
bem_channel_table.o               bem_connection_table.o      bem_device_table.o         bem_lock.o               bem_path_reserve.o       bem_server_ipc.deps     bem_source_table.o             bem_track_table.o
bem_composition.deps              bem_db.deps                 bem_eedid.deps             bem_monitor.deps         bem_path_utils.deps      bem_server_ipc.o        bem_teletext_frame.deps        libms_bem_server_src.a
bem_composition_links_table.deps  bem_db.o                    bem_eedid.o                bem_monitor.o            bem_path_utils.o         bem_server_ipc_oc.deps  bem_teletext_frame.o           temp2_libms_bem_server_src.a
bem_composition_links_table.o     bem_device_configure.deps   bem_internal_event.deps    bem_path_attach.deps     bem_plane.deps           bem_server_ipc_oc.o     bem_teletext_frame_table.deps  temp_libms_bem_server_src.a
bem_composition.o                 bem_device_configure.o      bem_internal_event.o       bem_path_attach.o        bem_plane.o              bem_server.o            bem_teletext_frame_table.o


<build-spk>
/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug/build_mips/staging_dir/mips-linux-uclibc
/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug/build_mips/staging_dir/mips-linux-uclibc/include/asm/errno.h


={============================================================================
|kt_dev_si_0002| si-build-core

// 890
~/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gdb

$ file 498.COR
498.COR: ELF 32-bit MSB core file, MIPS, MIPS-I version 1 (SYSV), SVR4-style

$ file MW_Process
MW_Process: ELF 32-bit MSB executable, MIPS, MIPS32 version 1 (SYSV), dynamically linked (uses shared libs), not stripped


={============================================================================
|kt_dev_si_0002| si-build-baseline

http://hetty.cisco.com/fusionmadesimple/index.php/Creating_and_Releasing_a_Darwin_SI_Baseline_via_Git


$ git pull --rebase
$ git submodule update --init  # in case the pull brought in submodule changes


{dms}
// Bring in a new DMS

SI_BRANCH=BSKYB_HR015_Int
DMS_BRANCH=DMS_BSKYB_HR015
OLD_DMS="D91.0.6"
NEW_DMS="D91.0.8"
echo -e "\nSI_BRANCH:  ${SI_BRANCH}\nDMS_BRANCH: ${DMS_BRANCH}\nOLD_DMS: ${OLD_DMS}\nNEW_DMS: ${NEW_DMS}\n"

echo git merge ${DMS_BRANCH}/${NEW_DMS} --no-commit
git merge ${DMS_BRANCH}/${NEW_DMS} --no-commit

# Git will report (possibly amongst other conflicts):
...
CONFLICT (file/directory): There is a directory with name THIRD_PARTY_LIBRARIES/BSKYB_JTH in ${DMS_BRANCH}/${NEW_DMS}. Adding THIRD_PARTY_LIBRARIES/BSKYB_JTH as THIRD_PARTY_LIBRARIES/BSKYB_JTH~HEAD
...
# To resolve that conflict, just type:
git add THIRD_PARTY_LIBRARIES/BSKYB_JTH

# If there's been a merge conflict for `resolve_deps.ini`
$ git mergetool Resolve_Deps/ini_files/resolve_deps.ini

# Otherwise, check for upstream changes to resolve_deps.ini between old and new DMS:
git log -p ${DMS_BRANCH}/${OLD_DMS}..${DMS_BRANCH}/${NEW_DMS} -- Resolve_Deps/ini_files/resolve_deps.ini

# If the output of the previous command is *not* empty:
# {
$ git checkout ${SI_BRANCH} -- Resolve_Deps/ini_files/resolve_deps.ini
$ emacs Resolve_Deps/ini_files/resolve_deps.ini  # edit as appropriate
$ git add Resolve_Deps/ini_files/resolve_deps.ini
# }

$ git commit

# Reflect any merged-in changes to submodules in the workspace:
git submodule update --init

*goto-make-baseline*


{picasso}
this is `submodule` and have own git repo.

BSKYB_JTH_pvrR12.99428_BSKYB_JTH_HR015_Int

NEW_PICASSO_BRANCH="HR015_Int"
NEW_PICASSO="pvrR12.99428"
echo -e "\nNEW_PICASSO \t\t: ${NEW_PICASSO}\nNEW_PICASSO_BRANCH \t: ${NEW_PICASSO_BRANCH}\n"

note:
# A new Picasso baseline might come from GM or from branch, e.g.:
# BSKYB_JTH_trunk.94366_BSKYB_JTH_GM_Integration / BSKYB_JTH_trunk.97292_BSKYB_JTH_HR014_Int
#                                 ^^^^^^^^^^^^^^                                   ^^^^^^^^^


cd THIRD_PARTY_LIBRARIES/BSKYB_JTH; git fetch

// check if it is already imported in git
// http://hudsonmaster1.uk.nds.com:8080/hudson/view/import_releases/
// 
// or inspect fetch
//
// git ll BSKYB_JTH_HR015_Int..origin/BSKYB_JTH_HR015_Int
//
// # * [new tag]         BSKYB_JTH_pvrR12.98832_BSKYB_JTH_HR015_Int -> BSKYB_JTH_pvrR12.98832_BSKYB_JTH_HR015_Int
// # * [new tag]         BSKYB_JTH_pvrR12.98863_BSKYB_JTH_HR015_Int -> BSKYB_JTH_pvrR12.98863_BSKYB_JTH_HR015_Int
// # * [new tag]         BSKYB_JTH_pvrR12.98895_BSKYB_JTH_HR015_Int -> BSKYB_JTH_pvrR12.98895_BSKYB_JTH_HR015_Int
//
// from email
// FW: R12  Release-picasso__BSKYB_HR015_Integration__pvrR12__98832


echo git checkout BSKYB_JTH_${NEW_PICASSO}_BSKYB_JTH_${NEW_PICASSO_BRANCH}
git checkout BSKYB_JTH_${NEW_PICASSO}_BSKYB_JTH_${NEW_PICASSO_BRANCH}
// git co BSKYB_JTH_pvrR12.98832_BSKYB_JTH_HR015_Int

$ cd ../..
$ git status
git add THIRD_PARTY_LIBRARIES/BSKYB_JTH

# git commit -m "Switch to new Picasso (pvrR12.98863)"
echo git commit -m "Switch to new Picasso (${NEW_PICASSO})"


{check-what-to-push}
git ll origin/BSKYB_HR015_Int..BSKYB_HR015_Int


{make-tag}
SI_BRANCH=BSKYB_HR015_Int

NEW_SI_BL="84.48.00"
echo -e "\nSI_BRANCH:  ${SI_BRANCH}\nNEW_SI_BL: ${NEW_SI_BL}\n"


<new-dms-only>
echo git tag ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH} \
-am "SI baseline ${NEW_SI_BL} with new DMS (${NEW_DMS})"

// echo git tag ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH} -am "SI baseline ${NEW_SI_BL} with new DMS (${NEW_DMS})"
// git tag BSKYB_HR015_Int/BSKYB_INTEGRATION_BLD_84.48.00_BSKYB_HR015_Int -am SI baseline 84.48.00 with new DMS (D91.0.8)


<new-dms-and-picasso>
echo git tag ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH} \
-am "SI baseline ${NEW_SI_BL} with new DMS (${NEW_DMS}) and new Picasso (${NEW_PICASSO})"

git tag BSKYB_HR015_Int/BSKYB_INTEGRATION_BLD_84.40.00_BSKYB_HR015_Int -am "SI baseline 84.40.00 with new Picasso (pvrR12.98863)"



# Create the new SI BL tag:-

echo git tag ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH} \
-am "SI baseline ${NEW_SI_BL} with new Picasso (${NEW_PICASSO})"



{pssh}
// Push the committed changes to Gerrit:

echo git push origin HEAD:refs/for/${SI_BRANCH}

git push -n origin HEAD:refs/for/${SI_BRANCH}
git push origin HEAD:refs/for/BSKYB_HR015_Int


<gerrit>
// Go to Gerrit (the URL is in the output of the previous command), get the
// changes reviewed ('Code-Review +2') and then 'Submit' them.

<push>
// Push the new SI BL tag:
echo git push -n origin ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH}
git push -n origin ${SI_BRANCH}/BSKYB_INTEGRATION_BLD_${NEW_SI_BL}_${SI_BRANCH}


<hudson>
note: reuse the previous build
Goto http://hudsonmaster1:8080/hudson/job/AutoSI_GetBaseline/, log in, select
'Build with Parameters' on the left hand side, fill in the appropriate values
and start the baseline build.
NB: Use if possible 'ukstbuild3_bskyb' as CC_SERVER; the Bash shell on
'hudsconccspur' appears to be set up slightly differently.


={============================================================================
|kt_dev_si_0002| si-build-errors

quota_resource.c: In function 'QuotasOnDevice_Add':
quota_resource.c:3475: `error:` 'Idx' undeclared (first use in this function)
quota_resource.c:3475: error: (Each undeclared identifier is reported only once
quota_resource.c:3475: error: for each function it appears in.)

make[3]: *** [/hudson/workspace/workspace/build_fullstack_image/executors/1/work/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/debug//components/system_resource_management/rmf/src/plugins/.//quota_resource.o] Error 1
make[3]: Leaving directory `/hudson/workspace/workspace/build_fullstack_image/executors/1/work/CMS_SYSTEM_RESOURCE/RMF/src/plugins'
make[2]: *** [rmfplugin] Error 2
make[2]: *** Waiting for unfinished jobs....


cc1: warnings being treated as errors


={============================================================================
|kt_dev_si_0002| si-build-process

STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/APP_Process


={============================================================================
|kt_dev_si_0002| si-build-make

See build.log

<release_darwin_platform.sh>

From FSI console log:
http://hudsonmaster1.uk.nds.com:8080/hudson/job/build_fullstack_image/102440/console
12:48:35 + ./release_darwin_platform.sh \
   --output /hudson/workspace/workspace/build_fullstack_image/executors/7/work/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build \
   --project picasso --clean --cartool yes --enable_full_parallel_build \
   --disable_ccache --profile nds_si_devel --platform ams-drx890 \
   --variant debug --baseline ENG_99.99.99_6814 \
   --override_location asbo.bskyb.com:/home/asbo/mac


<build-mw>
//FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/build_mw_epg.sh

    // ./build_mw_epg.sh --platform ams-drx890 --project picasso 
    //    --variant debug --profile sky_trials --baseline ENG_48.96.00U_4790_AEM_ENG

    *version-cfg*
    --baseline <baseline> Used to manually override the version field"
                          Can be in the form of official SI baseline name or
                          Engineering baseline name: " E. g.
                          BSKYB_INTEGRATION_BLD_15.05.00_BSKYB_GM_Integration
                          or" ENG_15.05.00_Dbg_Test" \"ENG_\" prefix will skip
                          base36 calculation and insert string after \"ENG_\"
                          into version.cfg" If no baseline parameter is
                          entered and there is no ClearCase access \"~*~dev
                          version~*~\" will be used"

                          note: HOW long?

  *build-mw-only*
  Use this one and otherwise do clean build and build all.

  --mw_only                 builds the middleware only, no EPG built"


# note: before
# ./build_mw_epg.sh --platform ams-drx890 --project picasso --variant debug --profile nds_si_devel --clean
# 
# OUTPUT = $(pwd)
# VARIANT = debug
#
# else [ "${USE_SYSINIT_CFG}" == "YES" ]
# ./make.sh --clean --profile ${PROFILE} --project ${PROJECT} -a ${PROJECT} --box ${BOX} --output ${OUTPUT} --baseline ${BASELINE}
# ./make.sh --clean --profile nds_si_devel --project picasso -a picasso --box ams_bcm 
# --output /home/NDS-UK/parkkt/cc/parkkt_BSKYB_GM_001/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build --baseline  
#
# BUILD_OUTPUT_ROOT == .../picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/fs/NDS

# 2016.07
+ STD_OPTIONS='--clean --profile sky_trials --project picasso --platform ams-drx890 --output /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build '
+ ADDED_OPTIONS='                                                      '
+ /usr/bin/time -o /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/bfi_stats -a 
  -f %C,R=%E,K=%S,U=%U ./make.sh --clean --profile sky_trials --project picasso --platform ams-drx890 
  --output /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build


function build_mw_epg()
{
  if [ -n "${NOMAKE}" ]; then
    echo "Running nomake option - not calling make.sh"
  else

    STD_OPTIONS="${CLEAN} --profile ${PROFILE} --project ${PROJECT} --platform ${PLATFORM} --output ${OUTPUT} ${BASELINE}"

    ADDED_OPTIONS="${BUILD_MW} ${BUILD_EPG} ${MEMPROF} ${TIMEDOCTOR} ${USE_SYSINIT_CFG} ${MEMBUSTER} ${MEMMAP_ANALYSE} \
      ${ENABLE_LAE_DEBUG_HACKS} ${PATCH_BLD_OPT_DBG} ${PATCH_BLD_OPT_REL} ${LOGFILE_MONITOR} ${FILLDISK} \
      ${FULL_PARALLEL}"

    *call-make-sh*   
    /usr/bin/time -o ${WORKSPACE}/bfi_stats -a -f "%C,R=%E,K=%S,U=%U" ./make.sh ${STD_OPTIONS} ${ADDED_OPTIONS}

    if [ "${PIPESTATUS[0]}" -ne 0 ]; then
      echo "**** FAILED TO make ${project} ****"
      exit 1
    fi
  fi
}

package_mw_epg_binary()


<make-sh>
//FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/make.sh

  echo "  --mw_only                 builds the middleware only, no EPG built"

  echo "  -d, --debug_level <level> build middleware for a specific debug level."
  echo "                            level may be \"debug\", \"release_dbg\" or \"release\""

  echo "  -o, --os_debug_level <level>"
  echo "                            link OS-specific libraries for a specific debug level."
  echo "                            level may be \"debug\", \"release_dbg\" or \"release\""
  echo "                            H=Hound-Development, NH=Non-Hound;"

  // NDS_OS_BUILD_TYPE:="${OS_BUILD_TYPE}". 'release' is default
  // NDS_OS_BUILD_TYPE:=release     

    // (version_string_calculation.py)
    //
    // def get_letter_for_build_type(build_type):
    //     build_type_list=dict(sky_prod='P', 
    //                          sky_trials='U', 
    //                          sky_tpt='T', 
    //                          nds_si_devel='D',
    //                          cust_trials='C')
    // 


  <build-profile>
  nds_si_devel )  ## for development
      BUILD_TYPE=release_dbg
      PICASSO_BLD_TYPE=release-trials
      DIAG_MIN_FOOTPRINT=YES

  sky_trials )    ## for trials testing
        BUILD_TYPE=release_dbg
        PDL_SERVER=SKY_Trials
        PICASSO_BLD_TYPE=release-trials
        DIAG_BINARY_MODE=YES
        DIAG_PERFORMANCE_MODE=YES
        MEMPROF=YES
        ;;

  cust_trials )    ## for Sky customer testing 
        BUILD_TYPE=release_dbg
        PDL_SERVER=SKY_Production
        PICASSO_BLD_TYPE=release-trials
        DIAG_BINARY_MODE=YES
        DIAG_PERFORMANCE_MODE=YES
        ;;

  VERSION_STRING=`python tools/nds/si/python/version_string_calculation.py ${PROFILE} ${BASELINE}`

{

  ${MAKE_EXE} -s \
    BUILD_EPG:="${BUILD_EPG}" \
    BUILD_MW:="${BUILD_MW}" \
    NDS_MW_PROJECT:="${NDS_MW_PROJECT_SI}" \
    MEMMAN_TIMINGS:="${MEMMAN_TIMINGS}" \
    MEMMAN_OUTPUT_ONCE:="${MEMMAN_OUTPUT_ONCE}" \
    NDS_BUILD_ROOT:="${OUTPUT}" \
    NDS_BUILD_PROJECT:="${PROJECT}" \
    NDS_PLATFORM:="${PLATFORM_DIR}" \
    SQLITE_WANT_PROFILING:=YES \
    NDS_PLATFORM_ENDIAN:="${ENDIAN}Endian" \
    NDS_FUSIONOS:=${FUSIONOS} \
    NDS_USE_CPP:=YES \
    NDS_LOCATION:=ST \
    `NDS_BUILD_TYPE_DEFAULT`:="${BUILD_TYPE}" // from profile sets.

    *diag-debug*
    `DIAG_BINARY_MODE`:=${DIAG_BINARY_MODE} \
    ...
}


*build-make-options*
// FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/makefile

make - --directory=projects/picasso --print-directory --no-builtin-rules \
NDS_BUILD_SYSTEM=FUSION NDS_ROOT=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build 
NDS_ROOT_UNIX=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build NDS_LOCAL_TOOLS= NDS_PLATFORM=AMS_BCM_MIPS4K_LNUX_DARWIN_01 NDS_PROJECT=picasso NDS_BUILD_PROJECT=picasso NDS_STB= NDS_BUILD_ROOT=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso NDS_HOST=linux NDS_MAKE=make --debug NDS_PARALLEL=1 NDS_BUILD_TYPE_DEFAULT=release_dbg NDS_DEFINES="" NDS_LOCATION=ST COMPONENTS_DIR="/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components" NDS_TOOLS_ROOT="/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build" VOB_ROOT="/home/NDS-UK/kyoupark/STB_SW" VOB_ROOT_UNIX="/home/NDS-UK/kyoupark/STB_SW" PLATFORMS_TOOLS_ROOT="/home/NDS-UK/kyoupark/STB_SW" NDS_FUSIONOS="FUSIONOS_2" NDS_FUSIONOS_PRE="FUSIONOS" NDS_FUSIONOS_VER=" _2" NDS_USE_CCACHE= NDS_USE_REL_PATHS= NDS_CCACHE_EXE= NDS_HOST_CC=/usr/bin/ NDS_TARGET:=install install


note:
--directory=projects/picasso

â€˜--directory=dirâ€™
    Change to directory dir before reading the makefiles. If multiple â€˜-Câ€™
    options are specified, each is interpreted relative to the previous one:
    â€˜-C / -C etcâ€™ is equivalent to â€˜-C /etcâ€™. This is typically used with
    recursive invocations of make (see Recursive Use of make).


<project-picasso-makefile>
// FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/makefile

ifeq ($(MEMBUSTER), YES)
    # updating NDS_DEFINE here as memman src.mk requires this.
    override NDS_DEFINES += MEMMAN_MEMBUSTER
    override NDS_DEFINES += MEMBUSTER_SHORT_LOG
    override NDS_DEFINES += MEMBUSTER_NO_DOUBLE_FREE_MSG
endif

# using dynamic memory allocation for all platforms
override PROJECT_DEFINES+=`MEMMAN_FORCE_USE_MALLOC_DIRECTLY`

ifneq ($(BUILD_CARANGE_LIB_ONLY), YES)
    LOCAL_COMPONENTS += ../processes/APP_Process
endif

ifeq ($(BUILD_MW),YES)
    LOCAL_COMPONENTS += ../processes/MW_Process
endif

.PHONY: $(LOCAL_COMPONENTS)
$(LOCAL_COMPONENTS):
	/usr/bin/time -o ${WORKSPACE}/bfi_stats -a -f "%C,R=%E,K=%S,U=%U" $(MAKE) $(PARALLELISM) -C $(NDS_ROOT)/components/$@ $(MAKE_ARGS)

// /usr/bin/time -o /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/bfi_stats -a -f "%C,R=%E,K=%S,U=%U" 
// make  -C /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/../processes/APP_Process  
// NDS_TRANSPORT_MODE=""
// PROJECT_PREBUILT_LIBRARIES="/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/engines/lae/lib/BigEndian/libcore.a
// /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/engines/lae/lib/BigEndian/libstbeplatform.a
// /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/engines/lae/lib/BigEndian/libstbecommon.a"
// PRODUCT_IDENTIFIER="" PROJECT_IDENTIFIER="" NDS_OS_BUILD_TYPE=release
// PROJECT_DEFINES="MEMLIST MEMLIST_SLEEP_PERIOD=60 MEMPROF PROFILE_A
// DIAG_LOG_NDEBUG NDEBUG MEMMAN_TRUSTED_CLIENT GFX_NO_SHAPE
// GFX_IMAGE_NO_DITHERING GFX_PAINTER_NO_ARGB16_4444
// GFX_PAINTER_NO_ARGB16_4444_PREMULT GFX_PAINTER_NO_RGB16_565
// GFX_PAINTER_NO_SURFACE_RW MSCQ189287_CLOCK_MONOTONIC_NOT_SUPPORTED CQ171339
// LEGACY_MIGRATION_SUPPORT SUN_BUILD NDS_APP_TYPE_PICASSO DIAG_JAVA_DEBUG
// _XOPEN_SOURCE=600 AMS_BCM_MIPS4K_LNUX_DARWIN_01 FUSION_PROFILE
// MEMMAN_TRUSTED_CLIENT MSCQ1854424_SP_SCHEMA_ONLY
// MSCQ2375670_SET_PROVIDER_CLASS_MEMBERSHIP CQ380004_USE_STB_SW_01
// MEMMAN_FORCE_USE_MALLOC_DIRECTLY" PROJECT_SHARED_LIBS="" NDS_DEFINES=""
// PROJECT_ENABLE_PUBLICLIBS="" PROJECT_LINT_CONFIG="" PROJECT_PARENT=fusion2
// NDS_VGV_PROJECT="darwin" NDS_MW_PROJECT="BSKYB_HD_PVR_SI" install
// FUSION_PROFILE="BSKYB_HD_PVR_SI"
// FUSION_PROFILE_DEFINES="APP_MGMT_SIGNAL_24_7_SERVICE_TYPE_82H
// APP_MGMT_SIGNAL_ETV_OTV_TRIGGER_MOD
// APP_MGMT_SIGNAL_RECOMMENDATION_OTV_PROMO_MOD AUTHENTICATION_NDS_SAC
// BSKYB_SUPPORT_HEP_WITH_OIG CALLBACK_PSTN CAPTION_TELETEXT_LEGACY_LAYOUT
// CAROUSEL_MHC CAROUSEL_OTV CA_VIDEOGUARD_NDS_SECURE_RETURN_PATH
// CA_VIDEOGUARD_PARENTAL_RESTRICT CA_VIDEOGUARD_WATERSHED FRONT_END_DTT_USB
// FRONT_END_SAT FRONT_END_SAT_SCR FUSION_APP_MGMT_SUPPORTED
// FUSION_AUTHENTICATION_SUPPORTED FUSION_BDL_SUPPORTED
// FUSION_CA_VIDEOGUARD_SUPPORTED FUSION_DYNAMIC_TSA_SUPPORTED
// FUSION_HEADEND_METADATA_SUPPORTED FUSION_HOME_NETWORK_SUPPORTED
// FUSION_METADATA_SUPPORTED FUSION_NETWORK_SUPPORTED FUSION_PDL_SUPPORTED
// FUSION_PVOD_SUPPORTED FUSION_PVR_SUPPORTED
// FUSION_TARGETED_MESSAGING_SERVICE_SUPPORTED FUSION_USER_ACTIVITY_SUPPORTED
// FUSION_VIDEOGUARD_NOTIFY_SUPPORTED FUSION_VWS_SUPPORTED
// GUIDE_BSKYB_FORMAT_LOGICAL_CHAN_NO GUIDE_BSKYB_SUBSCRIBER_PROPERTIES_USED
// HEADEND_METADATA_OIGC HOME_NETWORK_MEDIA_RENDERER
// HOME_NETWORK_PLANNER_SERVER HOME_NETWORK_REMOTE_UI HOTPLUG_SUPPORT IPPV
// MCM_PVR_RECORD_CA_HOLES METADATA_SI_XSI_SSR NETWORK_CONFIGURE_LAN
// PDL_NDS_SECURE_AUTH PLAYER_PIN_HANDLING_A PLAYER_REMOTE_UI_HTTP
// PVOD_LINEAR_TRANSPORT PVR_CHECK_XTV_STATUS PVR_CLASSIC_REVIEW_BUFFER
// SERIES_IMPLICIT_SERIES_DELETION SERIES_SYNCHRONIZE_BOOKINGS_WITH_SIGNUPS
// SI_SERVICE_SCAN_XSI SOFTWARE_DOWNLOAD_OTV
// SRM_ELEMENTARY_STREAMS_SELECTION_A
// SRM_USE_PI_SCHEDULE_FLAG_FOR_AVAILABILITY USBTUNER_SUPPORTED USB_SUPPORTED
// USER_ACTIVITY_BARB USER_ACTIVITY_SSP WIFI_SUPPORTED WLM_SUPPORTED"
// NDS_DIAG_MODE:=sync SUN_BUILD:=YES NDS_APP_TYPE:=PICASSO


// FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/MW_Process/makefile
COMPONENT_SOURCE_LIBRARIES+=camm


// FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/fusion2/makefile


={============================================================================
|kt_dev_si_0002| si-build-make-image

<build-variant>
http://hetty.cisco.com/fusionmadesimple/index.php/SIBuildProfiles

Sky_TPT: Production build for Sky testing (point to their own OIG server)
NDS_SI_Devel: Development build with readable diag
Sky_Trials: Testing build with binary diag for performance - logs are uploaded on reboot
Devel_Bin: Testing build with binary diag for performance - INFO logging for key components included
cust_trials: similar to sky_trials, but with a preprod kernel(? tbc)

There are 3 types of kernel or variant:
prod      - Only suitable for a production release of the software
preprod   - Production kernel with a minimum of tools to enable some trace info to be extracted
debug     - Development kernel suitable for component teams and SI to investigate issues


<make-image> make_image.sh

SPK_VARIANT="$2"

SPK_VARIANT=debug
# will be override when use --variant

./make_image.sh --platform ams-drx595 --project picasso --profile "NDS_SI_Devel" 

make_image.sh
{
	# default values
	FULLSTACK="fullstack"
	SPK_VARIANT=debug


	function set_up_platform()
	{
		source /build/tools/nds/si/platform.sh
		{
			ams_595|ams-drx595)
	    	PLATFORM="ams-drx595"
      		NDS_ENDIAN="BigEndian"
      	
			# tools/nds/si/platform/ams-drx890/functions.sh 
			source "$SCRIPTS_PATH/platform/$PLATFORM/functions.sh
			{
				function platform_init() 
				{
					#
					# NDS_VOB_ROOT=/data/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HZ001_01/vobs
					#
					NDS_PLATFORM=DARWIN_SKYDRX595_BCM97350_LNUX_01
					NDS_FUSIONOS_PATH=${NDS_VOB_ROOT}/FUSIONOS_5/BLD_${NDS_PLATFORM}
					  
					#
					NDS_FUSIONOS_INPUT_PATH=${NDS_VOB_ROOT}/FUSIONOS_INPUT_DEL_5/DEL_${NDS_PLATFORM}
					  
					NDS_FUSIONOS_OUTPUT_PATH=${NDS_VOB_ROOT}/FUSIONOS_OUTPUT_DEL_5/KERN_${NDS_PLATFORM}
					NDS_FUSIONOS_TOOLCHAIN_PATH=${NDS_FUSIONOS_PATH}/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound
					SPK_TARBALL_DIR="${NDS_FUSIONOS_INPUT_PATH}/build_platform/spk/"
					SPK_TARBALL=`find "${SPK_TARBALL_DIR}" -maxdepth 1 -name darwin-spk-*.tar.bz2`
					OTV_TOOLS="${NDS_FUSIONOS_INPUT_PATH}/build_platform/image_generation"
					SPK_PLATFORM=ams-drx595
					 
					CDI_DRIVERS_TARBALL_DIR=${NDS_FUSIONOS_INPUT_PATH}/Tarball
					 
					NDS_DRIVERS_TARBALL_DIR=${NDS_FUSIONOS_INPUT_PATH}/Tarball
					CDI_DRIVERS_CONFIG_TARBALL_DIR=${NDS_FUSIONOS_INPUT_PATH}/build_platform/configs
					EOTV_IMAGE_OUTPUT=APPLI_0.FLA
					OTV_IMAGE=flash.out
					OTV_IMAGE_GEN_SCRIPT=generate-otv-image.sh
					OTV_IMAGE_GEN_TARBALL=image-generation-${SPK_PLATFORM}.tar.bz2
					IMAGE_INPUT_TO_GEN_SCRIPT=vmlinux
				}      	
			  }
      platform_init
		}
	} # function set_up_platform
	
   # *input-tarball*
	# vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/DARWIN_SKYDRX595_BCM97350_LNUX_01/BigEndian
	#
	# -rw-r--r--  1 parkkt ccusers 8036938 Apr 19 13:36 mw-epg-ams-drx595-debug-nds_si_devel.tar.bz2
	# -rw-r--r--  1 parkkt ccusers 8037073 Apr 19 11:41 mw-epg-ams-drx595-debug-sky_prod.tar.bz2
	#
	# For 890
   # FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/Tarball
	#
	# -r-xr--r-- 1 parkkt ccusers 2860009 Apr 12 16:17 cdi-drivers-ams-drx595-debug.tar.bz2*
	# -r--r--r-- 1 parkkt ccusers 1950345 Apr 12 16:17 cdi-drivers-ams-drx595-preprod.tar.bz2
	# -r--r--r-- 1 parkkt ccusers 1909451 Apr 12 16:17 cdi-drivers-ams-drx595-prod.tar.bz2
	# -r--r--r-- 1 parkkt ccusers 5478873 Apr 12 16:17 kernel-headers-ams-drx595-debug.tar.gz
	# -r--r--r-- 1 parkkt ccusers 5477086 Apr 12 16:18 kernel-headers-ams-drx595-preprod.tar.gz
	# -r--r--r-- 1 parkkt ccusers 5477524 Apr 12 16:18 kernel-headers-ams-drx595-prod.tar.gz
	# -r-xr-xr-x 1 parkkt ccusers   21349 Apr 12 16:17 nds-drv-ams-drx595-debug.tar.bz2*
	# -r-xr-xr-x 1 parkkt ccusers   21355 Apr 12 16:17 nds-drv-ams-drx595-preprod.tar.bz2*
	# -r-xr-xr-x 1 parkkt ccusers   15675 Apr 12 16:17 nds-drv-ams-drx595-prod.tar.bz2*
	# -r--r--r-- 1 parkkt ccusers   36305 Apr 12 16:18 service-centre-ams-drx595-debug.tar.bz2
	# -r--r--r-- 1 parkkt ccusers   36305 Apr 12 16:18 service-centre-ams-drx595-preprod.tar.bz2
	# -r--r--r-- 1 parkkt ccusers   36305 Apr 12 16:18 service-centre-ams-drx595-prod.tar.bz2
	#
	
	function check_input_tarballs()
	{
    MW_EPG_TARBALL_DIR=${OUTPUT}/${PROJECT}/${NDS_PLATFORM}/${NDS_ENDIAN}/
    
    # PROFILE
    MW_EPG_TARBALL=${MW_EPG_TARBALL_DIR}/mw-epg-${SPK_PLATFORM}-${SPK_VARIANT}-${PROFILE}.tar.bz2
    MW_EPG_WIPEOUT_TARBALL=${MW_EPG_TARBALL_DIR}/mw-epg-${SPK_PLATFORM}-${SPK_VARIANT}-${PROFILE}.wipeout.tar.bz2    
    MW_EPG_SPK_TARBALL_NAME=mw-epg-${SPK_PLATFORM}-${SPK_VARIANT}.tar.bz2
    
	# xtvfs and nvramfs.ko
    NDS_DRIVERS_TARBALL=${NDS_DRIVERS_TARBALL_DIR}/nds-drv-${SPK_PLATFORM}-${SPK_VARIANT}.tar.bz2

    CDI_DRIVERS_TARBALL=${CDI_DRIVERS_TARBALL_DIR}/cdi-drivers-${SPK_PLATFORM}-${SPK_VARIANT}.tar.bz2
    CDI_DRIVERS_CONFIG_TARBALL=${CDI_DRIVERS_CONFIG_TARBALL_DIR}/config-${SPK_PLATFORM}-${SPK_VARIANT}.tar.bz2
    SCS_BINARY_TARBALL=${CDI_DRIVERS_TARBALL_DIR}/service-centre-${SPK_PLATFORM}-${SPK_VARIANT}.tar.bz2

	# + MW_EPG_TARBALL_DIR=.../build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/
	# + MW_EPG_TARBALL=.../build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian//mw-epg-ams-drx890-debug-cust_trials.tar.bz2
	# + MW_EPG_WIPEOUT_TARBALL=.../build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian//mw-epg-ams-drx890-debug-cust_trials.wipeout.tar.bz2
	# + MW_EPG_SPK_TARBALL_NAME=mw-epg-ams-drx890-debug.tar.bz2
	#
	} # function check_input_tarballs


	# untar spk
	set_up_spk
	{
		tar -C /home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR004_002/vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/ -jxvf 
		/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR004_002/vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/darwin-spk-1.18-20111010.tar.bz2

		# output is:
		/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR004_002/vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/darwin-spk-1.18
	}

	function copy_packages() 
	{
	  pwd
	  rm -rvf "$SPK_PATH/dl/*nds*tar*"
	  rm -rvf "$SPK_PATH/dl/*cdi*tar*"

	  # Copy all the required packages
	  cp -f ${MW_EPG_TARBALL} ${SPK_PATH}/dl/${MW_EPG_SPK_TARBALL_NAME} || return $?
	  cp -f ${NDS_DRIVERS_TARBALL} ${SPK_PATH}/dl/ || return $?
	 
	  # darwin-spk-1.17 is made when do clean build.
	  # + SPK_PATH=.../vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/darwin-spk-1.17
	  # + SPK_PATH=.../vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/darwin-spk-1.17/dl
	}
}		



# called in set_up_spk
# get executed once when untarred so need to use clean option to make sure it's run to apply SI patches.
#
patch_spk()

if [ -d ${BUILD_ROOT}/spk_patches/${SPK_PLATFORM}/${SPK_VARIANT} ]; then
  SPK_VARIANT_PATCH_DIR=${BUILD_ROOT}/spk_patches/${SPK_PLATFORM}/${SPK_VARIANT}
echo "KT: ${SPK_VARIANT_PATCH_DIR}"
else
  echo "KT: not exist? ${BUILD_ROOT}/spk_patches/${SPK_PLATFORM}/${SPK_VARIANT}"
fi


SPK_VARIANT_PATCH_DIR=.../vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/spk_patches/ams-drx890/debug
SPK_PATCHES_DIR=.../vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/build_platform/spk/darwin-spk-1.17/patches


# before running configure, uptar and apply pactches on source and configs.
#
configure_spk()
# cust_trials case manually turning off SCS_FLAG
# if SCS FLAG is set to "" then it means that SCS has to be included
#
# ./configure O=${SPK_BUILD_OUTPUT_DIR} $SPK_PLATFORM $SPK_VARIANT $SPK_CONFIG


<to-enable-console>
// from:
//
// # nds_si_devel profile does not boot up with noconsole - but not required as of Nov '09.
// if [ "${PROFILE}" ==  "sky_prod" ] || [ "${PROFILE}" ==  "sky_tpt" ] || [ "${PROFILE}" ==  "sky_trials" ] || [ "${PROFILE}" ==  "mem_trials" ] || [ "${PROFILE}" ==  "cust_trials" ]; then
//   SPK_CONFIG+=" noconsole"
// fi
//
// to:
//
// # nds_si_devel profile does not boot up with noconsole - but not required as of Nov '09.
// if [ "${PROFILE}" ==  "sky_prod" ] || [ "${PROFILE}" ==  "sky_tpt" ] || [ "${PROFILE}" ==  "sky_trials" ] || [ "${PROFILE}" ==  "cust_trials" ]; then
//   SPK_CONFIG+=" console"
// fi
//
// or simply enable for all
//
// SPK_CONFIG+=" console"
//


# (use debug SPK) 
# KT: ./configure O=/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_001/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug ams-drx890 debug initramfs otv fullstack    noconsole
#
+ ./configure O=/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR004_002/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug ams-drx890 debug initramfs otv fullstack noconsole

# cust trial shell
CONFIG_FEATURE_SH_IS_MSH=y

eval : not supported
!: not found

# for cust trials with console change
#
# ./make_image.sh --variant preprod --platform ams-drx595 --profile cust_trials --project picasso --clean
# ./configure O=/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_002/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-preprod 
# ams-drx595 preprod initramfs otv fullstack noscs console

#### 
# from other changes
####
# kernel config.
CONFIG_SERIAL_8250_EXTENDED=y
CONFIG_SERIAL_8250_SHARE_IRQ=y

#### 
# from console options
####
#
# Serial drivers
#
CONFIG_SERIAL_8250=y
CONFIG_SERIAL_8250_CONSOLE=y
CONFIG_SERIAL_8250_NR_UARTS=0
CONFIG_SERIAL_8250_RUNTIME_UARTS=0
# CONFIG_SERIAL_8250_EXTENDED is not set

#
# Non-8250 serial port support
#
CONFIG_SERIAL_CORE=y
CONFIG_SERIAL_CORE_CONSOLE=y

CONFIG_CMDLINE="console=ttyS0,115200n8 ....


# METHOD #01
The build procedure is as follows
1 > First build a normal Cust trials build with variant preprod
2 > This will build all the tarballs necessary and will place them in the location FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/spk/darwin-spk-1.18

3> Now cd to this directory and configure for a preprodbuild 

./configure O=drx595-debugging ams-drx595 preprod initramfs otv dhcp console fullstack noscs

4> As the console is enabled we have to share the IRQ , if this is not enabled it will not allow the extradrivers.ko to be insmoded and we would encounter kernel crashes
		
make O=drx595-debugging kernel-menuconfig
	(D)evice Drivers ? (C)haracter devices ? (S)erial Drivers  ? (E)xtended 8250/16550 serial driver options ? (S)upport for sharing serial interrupts 

5> Then make the image
make O=drx595-debugging

6> Once the vmlinux is made we have to dummy sign the image using the image generation tool and flash it to the box
 
Regards
Krishnendhu Prakasan   

# this makes:
Build outputs at:-
  /home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_002/vobs/FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/spk/darwin-spk-1.18/drx595-debugging/binaries/ams-drx595

# go to followings and and rm all except image-generation-ams-drx595.tar.bz2. untar image-generation-ams-drx595.tar.bz2.
/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_002/vobs/FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/image_generation

# copy vmlinux from 
# /home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_002/vobs/FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/spk/darwin-spk-1.18/drx595-debugging/binaries/ams-drx595
# to 
# /home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR006_002/vobs/FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/image_generation

# run this command.
./generate-otv-image.sh vmlinux .

# get APPLI_0.FLA


# METHOD #02

# comment out ./configure O=/hom.. from make_image.sh

# make changes to followings directly
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-prod/project_build_mips/ams-drx595/linux-2.6.18.8/.config

# run make_image.sh as usual.


# this is dest:
# /home/NDS-UK/parkkt/cc/parkkt_BSKYB_HR004_002/vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug

* Buildroot Configuration
* Sky packages
Allow DNS requests/replies (BR2_PACKAGE_SKY_FIREWALL_ALLOW_DNS) [Y/n/?] y
* Kernel

# output from configurations
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx890-debug/.config

#-----------------------------------------------------------
# make_image.sh: build-kernel-configs
#-----------------------------------------------------------
# This script creates bootloadable images.
#
# SPK_VARIANT=debug(default)
#
# output, should rename it for usb flashing
# picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/image/OTV/APPLI_0.FLA.nds_si_devel -> image\OTV\APPLI_0.FLA
# vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/drivers


# from make_img log
#`target/device/Sky/ams-drx595/kernel-debug.config' -> `/home/NDS-UK/parkkt/cc/parkkt_BSKYB_HZ001_03
# /vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-debug/project_build_mips/ams-drx595/linux-2.6.18.8/.config'

#*
#* Linux Kernel Configuration
#*
#Linux Kernel Configuration
#> 1. .config file (BR2_PACKAGE_LINUX_USE_KCONFIG)
#  2. Run make <board>_defconfig  (BR2_PACKAGE_LINUX_USE_DEFCONFIG)
#  3. Run make ARCH=$(ARCH) [xconfig|menuconfig] before build (BR2_PACKAGE_LINUX_USE_XCONFIG)
#choice[1-3?]: 1
#.config file (BR2_PACKAGE_LINUX_KCONFIG) [target/device/Sky/ams-drx595/kernel-preprod.config] target/device/Sky/ams-drx595/kernel-preprod.config

# vobs\FUSIONOS_INPUT_DEL_5\DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01\build_platform\spk\darwin-spk-1.17 will be created once the build is done previously.
#
vobs\FUSIONOS_INPUT_DEL_5\DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01\build_platform\spk\darwin-spk-1.17\target\device\Sky\ams-drx595\

-rw-r--r-- 1 parkkt ccusers 21178 Apr 21  2010 buildroot-debug.config
-rw-r--r-- 1 parkkt ccusers 20729 Apr 21  2010 buildroot-preprod.config
-rw-r--r-- 1 parkkt ccusers 20658 Mar 16 13:33 buildroot-prod.config
-rw-r--r-- 1 parkkt ccusers 24587 Aug 25  2009 busybox-debug.config
-rw-r--r-- 1 parkkt ccusers 26031 Feb  1  2010 busybox-preprod.config
-rw-r--r-- 1 parkkt ccusers 26173 Feb  1  2010 busybox-prod.config
-rwxrwxr-x 1 parkkt ccusers  7631 Feb 10 13:29 cdi_device_table.txt
-rw-r--r-- 1 parkkt ccusers  2074 Jul 26  2010 device_table.txt
-rw-r--r-- 1 parkkt ccusers 22542 Jan 17 15:33 kernel-debug.config
drwxr-xr-x 2 parkkt ccusers  4096 Jan 28 13:13 kernel-patches
-rw-r--r-- 1 parkkt ccusers 21978 Jan 17 15:33 kernel-preprod.config
-rw-r--r-- 1 parkkt ccusers 21897 Jan 17 15:33 kernel-prod.config
drwxr-xr-x 5 parkkt ccusers  4096 Jan 28 13:13 rootfs


Build outputs at:-
  .../build/picasso/SPK/ams-drx595-prod/binaries/ams-drx595
total 53M
-rwxrwxrwx 1 parkkt ccusers  50K Mar 18 14:56 rootfs.mips.initramfs_list
-rw-r--r-- 1 parkkt ccusers  11M Mar 18 14:57 rootfs.mips.squashfs
-rwxrwxrwx 1 parkkt ccusers  23M Mar 18 14:57 rootfs.mips.tar
-rwxrwxrwx 1 parkkt ccusers  10M Mar 18 14:57 rootfs.mips.tar.bz2
-rwxr-xr-x 1 parkkt ccusers 9.8M Mar 18 14:57 vmlinux


SPK path: 
vobs/FUSIONOS_INPUT_DEL_5/DEL_DARWIN_SKYDRX595_BCM97350_LNUX_01/build_platform/spk/darwin-spk-1.17/

OUTPUT path:
\FUSION_SYSTEM_INTEGRATION\BSKYB_INTEGRATION\build\picasso\SPK\ams-drx890-debug\project_build_mips\ams-drx890\linux-2.6.18.8\include\asm-mips\ucontext.h
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-prod/project_build_mips/ams-drx595/
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-debug/project_build_mips/ams-drx595/root/lib/

actuall config file:
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/SPK/ams-drx595-prod/project_build_mips/ams-drx595/linux-2.6.18.8/.config


={============================================================================
|kt_dev_si_0002| si-build-map-file

/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/processes
-rwxr-xr-x 1 kyoupark ccusers 17832996 Aug  1 16:54 MW_Process*
-rw-r--r-- 1 kyoupark ccusers    22835 Jul 22 09:31 mw_process_main.deps
-rw-r--r-- 1 kyoupark ccusers    16392 Jul 22 09:31 mw_process_main.o
-rw-r--r-- 1 kyoupark ccusers 27298232 Aug  1 16:53 MW_Process.map

  49629  .text.Curl_cookie_add
  49630                 0x000000000076cb40      0xb5c /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION
    /build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg//components/misc_libraries/http/src/libhttp.a(cookie.o)

  49631                 0x000000000076cb40                Curl_cookie_add


={============================================================================
|kt_dev_si_0002| si-build-jpa

download tar:  
BSKYB_JTH-BSKYB_JTH_trunk.97338_BSKYB_JTH_HR014_Int.tar.gz 

jpa fron unzipped tree:
THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/jpa

version.txt:
83.51.00_BSKYB_HR014_Int


={============================================================================
|kt_dev_si_0002| si-sh-theyard

Yard Link: http://theyard.cisco.com/si_logs/translation/

<config>
Use ".cfg" to have settings in other scripts.

/home/si_logs/bin/.cfg
MIRRORMACHINE=theyard
MIRRORDIR=/home/si_logs/mirrored/upload
LOCALUSER=si_logs
...


={============================================================================
|kt_dev_si_0002| si-sh-check-log

Decode and examine a user-trial upload.

~/bin/check_log

check_log: check_log <md5sum or mac address>: do the conversion of the upload file 

note:
check_log darwin_0019fbd18c9a_487032cd821312aea3b11274c2ff7384  // not find
check_log 487032cd821312aea3b11274c2ff7384                      // find


==
[si_logs@ukstbuild01 parkkt]$ check_log 930bfc54ac88565a249ae01328a8a88b
WC=1
File line now {Jul 5 10:22 darwin_0019fbddef0c_930bfc54ac88565a249ae01328a8a88b.tgz}
Using 
...
# from the below log, can get diag_bin_parser from '/home/si_logs/tx/drx890/20.05.00'
diag_bin1 (/home/si_logs/tx/drx890/19.14.00,/home/si_logs/tx/drx890/20.05.00) Pre-parse...


# grep from UPLOAD.LOG
# Uploading to ftp://anonymous@87.86.191.132/upload/darwin_00101800122e_c9a6001730871c2bc4b38f57a34844f9.tgz
+ hwaddr=001018001200
+ md5=080f6bcc972075befa5dc039265e54f6

# get list of uploaded files (890 case)
ls /home/si_logs/mirrored/upload/darwin_00101800122e*

cp /home/si_logs/mirrored/upload/darwin_00101800122e_157cab819be0c785f41d8cdcde7aaead.tgz .


# check_log for eng build
./ftpsky "get darwin_00101800122e_1f0e4cfd6280fce012291bfe8abc6b7e.tgz"
diag_binary
unstripped_processes
check_log -p <path> <file>
    Use "path" as the path for the diag_binary and unstripped_processes
    folders, and otherwise translate <file>.
check_log -p . darwin_00101800122e_1f0e4cfd6280fce012291bfe8abc6b7e.tgz 

# use known bins
check_log darwin_0019fb0bad0c_f6b90f0bd7dd874e65817e34fea126af.tgz

tar -cjvf ~/ktpark/SI-4453.bz2 .

<sh>
declare -ar list=(
    darwin_0019fbd18c9a_487032cd821312aea3b11274c2ff7384
    darwin_0019fbb71c47_c4130c208206b80b3963ee05c861b5c3
    darwin_0019fbb71bb1_d23afbe329e75a1d9bcabc233373d398
)

for item in ${list[@]}; do echo ${item}; pushd ${item};egrep -anH "Leak de|Could not unravel" LOGlastrun_realtime;popd; done


declare -ar list=(
  0019fb2c562c
  0019fb2c5624
  0019fbc3572c
  0019fbe9554c
  0019fbd76222
)

for item in ${list[@]}; do echo ${item}; ssh thyard check_log ${item}; done


<internal>

[si_logs@theyard ~]$ check_log 85c768cdc006973f32b4e98c7c34d582
Looking in /home/si_logs/mirrored/upload...
ls: cannot access *85c768cdc006973f32b4e98c7c34d582*: No such file or directory
WC=1
File line now {}
Nothing found locally - checking remote servers...
ssh si_logs_mirror@theyard grep "^" /home/si_logs/mac_list | cut -d' ' -f2
Using /home/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582
User=si_logs@theyard.cisco.com
See if we can find this log anywhere else (already parsed)...
ssh -o ServerAliveInterval=10 -p 9199 si_logs@newyard.cisco.com build -s USR_request_log -p FILENAME="darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582.tgz" -p DESTINATION="si_logs@theyard.cisco.com:/local/storage/translated_receive"
Started USR_request_log #29910
Completed USR_request_log #29910 : SUCCESS
Looking for /local/storage/translated_receive/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582.lzma...
Running check_log -dir darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582.tgz
Will go to /home/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582
Found /home/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582
/home/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582 to be used
mkdir: cannot create directory `/home/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582': File exists
About to unpack...
Done unpacking
Yard Link: http://theyard.cisco.com/si_logs/translation/darwin_0019fb986706_85c768cdc006973f32b4e98c7c34d582/index.html
If using sad-faced dog and auto-refresh doesn't work, try link above.


# use cfg file
++ CONFIGFILE=/home/si_logs/bin/.cfg

# cfg values
++ MIRRORMACHINE=theyard
++ MIRRORUSER=si_logs_mirror
++ LOGDIR=/home/si_logs/translation
++ MIRRORDIR=/home/si_logs/mirrored/upload
++ TXDIR=/home/si_logs/tx
++ TXUSER=
++ TXMACHINE=
++ TRY_TO_GET=YES
++ WORK_OUT_MACHINE=work_out_machine_bskyb
++ WORK_OUT_VER_BY_MACHINE=
++ PRODUCE_ALOG=YES
++ LOCALUSER=si_logs
++ SORTFILE=/home/si_logs/mac_list
++ TRANSLATIONDIR=/home/si_logs/translation
++ ADDITIONAL_TESTS=note_hudkins.sh
++ USEINFO=YES
++ SEND_COOKED=YES
++ HTTPROOT=http://theyard.cisco.com
++ ADDITIONAL_NOTIFY=hippo_queue_log.sh
++ TIDY_INTERMEDIATE_FILES=
++ UNIFY_KMSG=
++ GREPFOR='darwin_|picassodigi_|rlog_'
++ WOMBAT_DBNAME=uploads
++ WOMBAT_DBCONNECT='-u root'

++ export TXMACHINE

+++ pwd
++ '[' /home/si_logs == /home/si_logs/mirrored/upload ']'
++ ALWAYS_FIND=0
++ FORCE=0
++ NOCASE=0
++ NEVERPARSE=0
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -p ']'
++ DIAGPATH=
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -f ']'
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -neverparse ']'
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -k ']'
++ JUST_DIR=0
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -dir ']'
++ UPDATE_DETAIL=0
++ '[' b558b7a71573867c0b68cb77bfb97e57 = -update_detail ']'
+++ echo b558b7a71573867c0b68cb77bfb97e57

++ echo 'Looking in /home/si_logs/mirrored/upload...'

# A=``ssh $MIRRORUSER@$MIRRORMACHINE "(cd $DIR;ls -lrt *$LOOKFOR*)" | while read perm inode uid gid size mon dt tm fname; do echo "$mon $dt $tm $fname";done | tail -20``

+++ ssh si_logs_mirror@theyard '(cd /home/si_logs/mirrored/upload;ls -lrt *b558b7a71573867c0b68cb77bfb97e57*)'
+++ read perm inode uid gid size mon dt tm fname
+++ tail -20

bash: line 0: cd: /home/si_logs/mirrored/upload: No such file or directory
ls: cannot access *b558b7a71573867c0b68cb77bfb97e57*: No such file or directory

++ echo 'Nothing found locally - checking remote servers...'

# execute other script
++ '[' theyard.cisco.com == theyard.cisco.com ']'
+++ newyard_does_log_exist.sh b558b7a71573867c0b68cb77bfb97e57
++ FNAME=darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz
++ '[' darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz = '' ']'

# remove ext
+++ basename darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz .tgz
++ ADDED_BIT=darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57

# check translation dir
++ D=/home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57

# make dir
++ mkdir /home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57
++ cd /home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57

# newyard_bring_us_log.sh $FNAME && exit 0
# this stops here
++ echo 'See if we can find this log anywhere else (already parsed)...'
++ newyard_bring_us_log.sh darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz

# run `newyard_bring_us_log.sh`
# ssh -o ServerAliveInterval=10 -p 9199 si_logs@newyard.cisco.com build -s USR_request_log -p FILENAME="darwin_0019fbd18c68_a3d4781b9564b2b3d59838ea196ce12f.tgz" -p DESTINATION="si_logs@theyard.cisco.com:/local/storage/translated_receive"
echo "ssh -o ServerAliveInterval=10 -p 9199 si_logs@${WHICH_NEW} build -s USR_request_log -p FILENAME=\"$FILENAME\" -p DESTINATION=\"$DESTINATION\""
ssh -o ServerAliveInterval=10 -p 9199 si_logs@newyard.cisco.com build \
  -s USR_request_log \
  -p FILENAME="darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz" \
  -p DESTINATION="si_logs@theyard.cisco.com:/local/storage/translated_receive"

Started USR_request_log #47724
Completed USR_request_log #47724 : SUCCESS

# runs command on newyard, copy files from newyard to
# /local/storage/translated_receive.
#
# note: 
# requested .tgz but get .lzma
# the .lzma file is one that already translated

# [si_logs@theyard ~]$ ls /local/storage/translated_receive/
# ...
# darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.lzma
# darwin_0019fb4375f3_5bf1255201f33533befb570a54378c1c.lzma

# runs `process_translated`
    if [ -f /local/storage/translated_receive/$FILENAME_LZMA ]
    then
        process_translated $FILENAME_LZMA
        exit 0
    fi

# `process_translated` script in `newyard_bring_us_log.sh`

Looking for /local/storage/translated_receive/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.lzma...

# note: run check_log 2nd

Running check_log -dir darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz

    echo "Running check_log -dir ${OTHER}.tgz"
    DIR=`check_log -dir ${OTHER}.tgz`

# see in pwd which is different from where starts
+++ export TXMACHINE
++++ pwd
+++ '[' /home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57 == /home/si_logs/mirrored/upload ']'

+++ JUST_DIR=1

+++ LOOKFOR=darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz

# runs sql this time since JUST_DIR=1 and exit. update a db?
++++ mysql --batch --skip-column-names -u root uploads '--execute=select directory_name from upload where filename = '\''darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz'\'' or md5sum = '\''darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57.tgz'\'''
+++ LOCATION=/home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57

# echo $LOCATION
# exit 0

+++ exit 0

# will be DIR=LOCATION

# back to `process_translated`
Will go to /home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57
Found /home/si_logs/translation/darwin_0019fb0f53b4_b558b7a71573867c0b68cb77bfb97e57

# `unpacking`
About to unpack...
+ cat /local/storage/translated_receive/darwin_0019fbd18c68_a3d4781b9564b2b3d59838ea196ce12f.lzma
+ unlzma -
+ tar xvf -
+ echo 'Done unpacking'

Done unpacking
        echo "About to unpack..."
        cat $F | unlzma - | tar xvf - > .lzma.out 2>&1
        echo "Done unpacking"

# note: run check_log 3nd
# check_log -update_detail ${OTHER}.tgz > .check_log.out 2>&1
+ check_log -update_detail darwin_0019fbd18c68_a3d4781b9564b2b3d59838ea196ce12f.tgz

++ UPDATE_DETAIL=1

# parse fname
++ MAC=0019fbd18c68
++ MD5=a3d4781b9564b2b3d59838ea196ce12f
++ D=/home/si_logs/translation/darwin_0019fbd18c68_a3d4781b9564b2b3d59838ea196ce12f
+++ ssh si_logs_mirror@theyard grep '^0019fbd18c68' /home/si_logs/mac_list
++ NAME=BrentwoodB328

# if [ $UPDATE_DETAIL -eq 1 ]
# then
#     FULLVER=`get version`
#     MACHINE=`get platform`
#     A=``get parser_result``       # gets parser_result from .detailed_output


# *write_result*
# 
# where does $A comes from?
#
# @1379
# A=
# if [ -f .bestguess ]
# then
#     A=`head -1 .bestguess`
#     P_FOUND=`echo "$A" | cut -d'>' -f1 | cut -c3`
# fi
#

++ `write_results` -update_only   # updates .detailed_output
#    echo "BestGuess (P1): $A" >> .summary

++ HTML=http://theyard.cisco.com/si_logs/translation/darwin_0019fbd18c68_a3d4781b9564b2b3d59838ea196ce12f/index.html

# creates detailed output
#     (
# cat << END
# version=$FULLVER
# parser_result=$A
# ...
# END
#     ) > .detailed_output

++ echo 'Done .detailed_output'

++ `produce_index_html` script

html=`grep "^html=" .detailed_output | sed -e's/html=/Yard Link: /' | sed -e's/theyard.uk.nds.com/theyard.cisco.com/'`
echo "$html"
echo "If using sad-faced dog and auto-refresh doesn't work, try link above."

    add_html "<h3>All p1/p2 log parser results (regarded as test failures)</h3>"


={============================================================================
|kt_dev_si_0002| si-sh-check-back

note:
assumes that all logs are translated. that is they are in translation folder.

++ TRANSLATIONDIR=/home/si_logs/translation
++ WOMBAT_DBNAME=uploads
++ WOMBAT_DBCONNECT='-u root'

<option>

if [ "$1" = "-o" ]
then
    shift
    G=$1
    shift
fi


// number of logs

M=1000
if [ "$1" = "-m" ]
then
    M=$2
    shift;shift
fi

1. cd TRANSLATIONDIR=/home/si_logs/translation
2. run sql statement and result `by upload_time`

mysql --batch --skip-column-names -u root uploads -e  "select directory_name from upload WHERE (version LIKE '%Q003%' OR version LIKE '%Q004%')"

mysql --batch --skip-column-names -u root uploads -e "select platform, version, upload_time, parser_result, html from upload where directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 90000" | grep 'Excessive number of Planner' | grep R015

mysql --batch -u root uploads -e "select * from upload where directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 1000"

project filename        `version` `platform`        boxname mac     md5sum  
`upload_time`     `parser_result`   lastlogtime     corrupt diskerrors      pcat_status     nvram_status    parser_testid   priority      
directory_name   `html`    from_time       to_time skykeycode      iterative       dylan   viewing_card    id

BSKYB   darwin_783e53f4a368_c8f60dd992bb8aa7dddc2cc2d2259c34.tgz        X038.002.21.00C eu-q-falconv2-it        HudsonR24B3     783e53f4a368    c8f60dd992bb8aa7dddc2cc2d2259c34        
  2016-09-14 10:23:00   <p0>No Snnn.CUR/Pnnn.CUR or equivalent .LOG files in log upload (built by hudson)</p0>   
  0                                       0       0       
  /home/si_logs/translation/darwin_783e53f4a368_c8f60dd992bb8aa7dddc2cc2d2259c34 http://theyard.cisco.com/si_logs/translation/darwin_783e53f4a368_c8f60dd992bb8aa7dddc2cc2d2259c34/index.html    
  0000-00-00 00:00:00     0000-00-00 00:00:00             0       0             78949490

BSKYB   darwin_783e53f46ce8_51fd4f16d4ad8619dafc62c1a208c0e0.tgz        Q000.010.46.00U eu-q-falconv2-uk                        783e53f46ce8    51fd4f16d4ad8619dafc62c1a208c0e0        
  2016-09-14 10:22:00   <p3>Tuner failed to lock (built by hudson)</p3>        
  1088.63                                 513     3       
  /home/si_logs/translation/darwin_783e53f46ce8_51fd4f16d4ad8619dafc62c1a208c0e0  http://theyard.cisco.com/si_logs/translation/darwin_783e53f46ce8_51fd4f16d4ad8619dafc62c1a208c0e0/index.html   
  2016-09-14 09:02:45     2016-09-14 09:20:14             0       0       713496685       78949489


mysql --batch --skip-column-names -u root uploads -e "select directory_name  from upload where directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 1000"
...
/home/si_logs/translation/darwin_783e53eb9bb0_303c159641cc331299e1fc89a20e3f92
/home/si_logs/translation/darwin_0019fb54a9eb_6ee84b2d05c8d8fc7b1aea742be63d96
/home/si_logs/translation/darwin_783e53ffd885_86413132ddf506ccb2d3264b0e8785ab
/home/si_logs/translation/darwin_783e53ffd3fd_ce7877cf7c67d5a2b526e7b4d1b02bfb


<run-sql-parser-result>
mysql --batch --skip-column-names -u root uploads -e "select upload_time, version, boxname, directory_name, parser_result from upload where directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 1000"
mysql --batch --skip-column-names -u root uploads -e "select upload_time, diskerrors, boxname, directory_name, parser_result from upload where version LIKE '%R015%' and directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 10"
mysql --batch --skip-column-names -u root uploads -e "select upload_time, diskerrors, boxname, directory_name, parser_result from upload where version LIKE '%R015%' and parser_result LIKE '%DBENGINE%' and directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 10"

mysql -u root uploads --execute='select upload_time, version, parser_testid, parser_result, diskerrors from upload where mac in ("0019FB38E30A", "0019FB0F53B4", "0019FB515474", "0019FB8817BF", "0019FB 384838", "0019FB0F4CBC", "0019FBB71C47", "0019FBB71BB1") order by upload_time desc, version desc limit 10'
mysql --batch --skip-column-names -u root uploads -e "select upload_time, boxname, directory_name, parser_result from upload where mac LIKE '%0019fb42ddb6%' order by upload_time desc"


<run-on-parser>
// sorted by upload_time so the latest comes first. use `tac` to reverse.
mysql --batch --skip-column-names -u root uploads -e "select platform, version, upload_time, parser_result from upload where directory_name is not null and parser_result != 'Not Yet Parsed' order by upload_time desc limit 3000"


3. when "-for" is given, cd and grep the given pattern on LOGlastrun.log.gz.
only when there is a log file.

if [ "$1" = "-for" ]

// check_back -for 'look for this pattern'
// ...would search the logs for any containing "look for this pattern"


4. if not "-for" then the given script on a log.

        else
            E=`$X "$f"`
        fi

// check_back sfm_bad_tpid
// ...would run <git-repo>/tests/sfm_bad_tpid on every log in all the uploads
//
// check_back $HOME/my_new_test
// ...would run $HOME/my_new_test on every log in all the uploads


={============================================================================
|kt_dev_si_0002| si-sh-log-parser

http://hetty.cisco.com/fusionmadesimple/index.php/TEST_LOG

<2> 
check_log
518:    test_log.py $1
1358:    echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> About to run test_log"
1360:    test_log.py $OUTLOGFILE 2>&1 | tee .test_out
1362:    echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Finished running test_log"


<1> for a standalone run?
# run_log_parser

output='_analysis.txt';
OUTFILE=$name$output
cd $path
$WHERE/test_log $1 >> $OUTFILE

# expect to have .bestguess and .bgline from test_log

if [ -f .bestguess ]
then
echo "Best guess is `cat .bestguess` at line `cat .bgline`" >> $OUTFILE
fi


# test_log 
# $FILE should be 'LOGlastrun' or 'LOGlastrun.gz'

#!/bin/bash
test_log.py $FILE $FORCE

note:
.bestguess can be written by someone other than test_log.py from check_log?
`.test_out` has log from test_log

# test_log.py
#
# *1-simple-test*
# while: `while by section_size`
#
#   reads a log file by section_size, 100000 and make it a list
#   ingest_log_bit(log_file, section_size)
#
#   arg "-force_positive" makes run this checks if it comes out of standby:
#   check_positive_states(log_file)
#
#     if ("UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_OUT" in line) or ("FRAME_PRESENTED:" in line):
#       states_found = True
#
#   # starts with simple_test = None, simple_tests = [], found_failures = []  
#   # scan_testlist(log, best_so_far, line_start, all_so_far, optimise_search, failed_so_far):
#   # `found_failures` is to log found tests in this section.
#   simple_test = scan_testlist(log_list, simple_test, line_start, simple_tests, optimise_search, found_failures) 
#
#     simple_tests = get_testlist_cvs():
#       # reads `testlist.txt`, build a list and return it
#
#       # *parser-testlist-format*
#
#       # "\t" is delimeter. prio starts from 1(high)
#
#       # [0] id  [1] prio  [2] message                     [3] *text-to-search*                   [4]       [5] message                     [6] script name
#       # 2<tab>  1<tab>    Failed to lock semaphore<tab>   Failed to lock semaphore<tab>   None<tab> Failed to lock semaphore<tab>   None
#
#       # 18	
#       # 1	
#       # Engage17184/CQ381836 - VRM does not response to planner job request	
#       # Call to PLANNER_SRM_FindRMFJobFromVRMJob function failed	
#       # None	
#       # Engage17184/CQ381836 - VRM does not response to planner job request	
#       # None
#       
#       # run def get_override_list() to see if there are override priority
#       # from $FILE.cfg.
#
#     current_re = produce_whole_re(simple_tests, best_p_so_far, optimise_search, failed_so_far)
#       # skip a test id when "test text" is null
#       # skip a test id if in faild_so_far
#       # build a reg expr made up with `all` `text-to-search` from a list. 
#       `| text |text | ...`
#
#     for line in log:
#
#       if re.search(current_re, line):
#         # found a match in `this line` but which test case? so
#         best_p_so_far, message, test_id = which_test_failed(simple_tests, line, failed_so_far)
#           # for each test in simple_tests
#           #   try to find `highest` prio test matched and if found 1, return
#           #   immediately.
#           #   possible multiple matches but return highest(best)
#
#         # update lists
#         failed_so_far.append(test_id)
#         all_so_far.append((best_p_so_far, line_count, message, test_id))
#         `best_so_far` = (best_p_so_far, line_count, `message`, test_id)
#
#         # `reduce` test list by removing failed_so_far. 
#         # means picks `first occurance` and ignore ones afterwards.
#         current_re = produce_whole_re(simple_tests, int(best_p_so_far), optimise_search, failed_so_far)
#
#     return `best_so_far`
#
# # after all, gets `one highest` test if there is for a whole file.
# logging.info("Simple test found: " + str(simple_test) )
#
#
# *2-run-script* on $FILE
# read testlist.txt and build a list made up with script and test id
#
# NOTE: the *text-to-search* should be empty if you've got a script.
#
# all_scripts = find_scripts_from_list()
#   # scripts_to_run.append((test[6], test[1], test[0]))
#
# script_tests = get_shellscripts( all_scripts )
#   # create a subprocess for each script in the list against `$FILE`
#   # parse the output from each script
#
#   # *script-output-format*
#   #
#   # fail case which is not shell convention. non-zero means failure.
#   # print "0 0" for python
#   # echo 0 for sh
#   #
#   # okay case(found) "line number message" format
#   # print str(lineNo) + " Player blocked"
#   # echo $L "Time:$X, $Y"
#   # echo 1
#
#   # pick first occurance
#   # A=`mycat $1 | grep -n "PC at exception" | head -1`
#
#   # 28:NDS: ^[2016:08:30 13:34:38]0946684934.243088 !INFO <...> config file: pdm_fs.cfg
#   # # line number
#   # L=`echo $A | cut -d':' -f1`
#   # # time 0946684934.243088
#   # X=`echo $A | cut -d'.' -f1 | cut -d'^' -f2`
#   # # mesg config file: pdm_fs.cfg
#   # Y=`echo $A | cut -d'>' -f2 | cut -d',' -f1`
#   # echo $L "Time:$X, $Y"
#   # exit 1
#
#   2016-09-05 10:49:54,482: root - DEBUG - Current script pcat_client_leak
#   2016-09-05 10:49:54,482: root - DEBUG - Output: ('1533776 Time:0946732403, Memory Leak in PCATC pool\n', '')

#   if test_output[0].split( )[0] != '0':
#   logging.debug("Test output: " + test_output[0].split( )[0])
#   bglist.append( ( priority, int(test_output[0].split( )[0] ), script_name, test_id ) )
#
#   note: Q. from .all_tests_found. WHY is it different from the script?
#   1 58 1533776 PCAT Client Memory Leak
#
#   return bglist
#
#
# after all, get a list of matched scripts
#
# print 'simple:', simple_tests
# print 'script:', script_tests
#
# *3-output*
#
# note:
# `.all_tests_found` is used to show detailed parser result in index.html
#
# output_all_finds(simple_tests, script_tests):
#   # writes out result to `.all_tests_found`
#   #
#   # darwin_0019fb0fbe52_282b31666ce276c695623af46e5b5f39$ cat .all_tests_found
#
#   # prio, test id, line, text
#
#   # 1 0 1 Core dump found in MW_Process
#   # 2 247 2730154 Indicates some sort of lockup in the system.
#   # 3 468 29538 Planner error when attempting to rebook missing series link
#   # 3 405 39804 MSM stalled - this could be temporary, but if frozen video observed this could be the reason.
#   # 3 358 2195659 Error receiving PAT section (SkyD: Hinweis 313)
#   # 3 287 2205210 This CAPROC semaphore failure was seen on many STBs with lockup issues.
#   # 3 362 2730081 MW is closing tschannel earlier than tpidfilter attached to tschannel.
#   # 4 438 8110 Client buffer full - Client is not reading data fast enough MHC sections during aquisition
#   # 5 46 24651 PTS errors - check whether this is causing video glitch
#   # 5 151 337718 User could not record a PDL event due to entitlement not being set on the card.
#   # 5 48 1455053 Missing SKEVT-A causing lack of PVOD recordings
#   # 5 410 2067850 May be related to: TV Guide is missing schedule data (NGDEV-20253)
#   # 2 462 1822573 33866 Message appearing too often (97048 times/2733860 lines): (NDS: ^0946689772.205164 !WARN   -MSM_MS                   < p:0x000001f2 P:MW t:0x018d3520 T:EVENT_MGR_THREAD M:transition_contro
#
#   # sort -n -k3 .all_tests_found | while read priority testid lineno text
#
# *4-pick-only-one*
#
# note:
# simple and script has the same priority since simple only have a priority.
#
# choose only one highest from either simple or script tests
# print 'Chosen test:', chosen_test
#
# priority = int(chosen_test[0])
#   if not need_positive or priority <= 2:
#     finalise_bg_files(chosen_test, is_script)
#       only when is_script is False, do create a .bestguess. means only for
#       simple tests
#
#       or for script tests
#
#       *run-verbose* which is why the final log parser result is different
#       from first script run.
#
#       run_verbose_shellscript(chosen_test)           
#       def run_verbose_shellscript(script_to_test):
#       """Given a script to test, runs it in verbose mode and passes the output to make the bestguess files"""
#
#       for both, do:
#
#       # .bestguess
#       create_bestguess(bestguess_text, int(chosen_test[0]))
#       # .bgline
#       create_bgline(bgline)
#       # .bgid
#       create_bgid(test_id)

note:
see `.test_out` for logging.

Chosen test: ('1', 1533776, 'pcat_client_leak', '58')


<py-tests-used-in-testlist-txt>

# search two lines in order
xtvfs_write_error2
play_block.py

kernel_oom.py
ADSMART_test_BDL_monitoring.py
ADSMART_test_time.py
ADSMART_test_wrong_PTS.py
memory_pool_increasing.py
kernel_oops.py
stack_overflow.py
yellowBanner.py
page_allocation_failure.py
check_bt_usb_disconnect.py
core_deleted.py
lanss_tcp_retransmissions.py
lanss_cpu_stats.py
software_download.py
pcat_fail_vlist_create.py
gapflood.py
sbm_queue_find_slow_nodes.py


# if cannot find it from the sky then look for it under theyard
cd /home/si_logs/mirrored/upload
ls -alt picassodigi*

# 890 case
darwin_001018001200_30c26f7d966c03ff4f850a19380182b4.tgz


# on the box
/mnt/nds/dev_2/part_0/BOOTLOG/*
/mnt/nds/dev_2/part_0/*

# fsky?
[parkkt@ukstbuild01 bin]$ more fsky 
ftpsky "dir *$1*"
ftpsky "ls *_001018001200_*" | grep 'Mar 27'
./ftpsky "get darwin_001018001200_30c26f7d966c03ff4f850a19380182b4.tgz"


={============================================================================
|kt_dev_si_0002| si-sh-log-parser-entry

{testlist}
<1>
2	
  "SOMETHING TIMEDOUT in middleware (PLAYER_EVT_COMPONENT_FAIL_TIMEOUT)" message from EPG.Example: NDS: ^[2014:08:17 17:05:52]0946730023.344540 !ERROR  -EPG_ME       < p:0x000001d0 P:APP t:0x2bbab520 T:no name M:SatelliteSignalGainedLostHandler F:handlePlayerEventComponentFail L:214 > T:PooledExecutor#0:SOMETHING TIMEDOUT in middleware (PLAYER_EVT_COMPONENT_FAIL_TIMEOUT)	
  SOMETHING TIMEDOUT		
  "SOMETHING TIMEDOUT" message from EPG (NSS/TF code 30): PLAYER timeout on media selection. Check VRM/MCM/MDM.	

!ERROR  -EPG_ME                      < P:APP t:0x2dfa4520 T:no name M:SatelliteSignalGainedLostHandler F:handlePlayerEventComponentFail L:229 > T:PooledExecutor#2:SOMETHING TIMEDOUT in middleware (PLAYER_EVT_COMPONENT_FAIL_TIMEOUT)
// may see this as well
!WARN   -MCM                         < P:MW t:0x01756520 T:SYSTEMALARM_MAIN M:mcm_mediaconn_event.c F:MCM_Mediaconn_AsyncResponseTimeoutCallback L:1619 > hMC=0x5b Response from device manager expected but not received after 7 seconds


note:
Timeout for 10 secs and looks valid. See *player-something-timeout*


<2>
247	2	This indicates some sort of lockup. Here Planner calls SBM which in-turn calls RMF, but no reply is received at planner.	planner_disk.c F:PLANNER_Disk_GetQuotaStatusFromSBM.*Wait timeout	SI-7792	Indicates some sort of lockup in the system.		Vinay Acharya	2013-08-09		None

!ERROR  -PLANNER < M:planner_disk.c F:PLANNER_Disk_GetQuotaStatusFromSBM L:385 > Wait timeout

if(PLANNER_Cond_TimedWaitRel(&(l_payload->data.sbm_quota_status.cond), 10) !=  PLANNER_API_STATUS_OK)
{
  DIAG_LOG_ERROR(g_planner_diag_segment_id, ("Wait timeout"));
}

note:
Waits for 10 secs and looks valid

<3>
157	2	

Planner pool OOM issue happened only once in R3 Trail after 4 days of
continuous usage of STB and ended up in empty planner pool in 4th day(slow
leak within 4 hours). PCAT has allocated memory for value list to send
notification data and notification should be handled by planner and free those
memory allocated for value lists. Planner will be deleting the PCAT value
lists when planner have processed the notifications. 

We suspect that the main planner thread is blocked for some reason, so the
notifications are not being handled and are building up - however no evidence
of this, or any other suspicious Planner errors in the log. 

Planner ever does not wait for Picasso to do anything either.
We(Planner/PCAT/SI team) are not very sure how we can proceed with this until
we have reproducible scenario.	

VL hdl=0x.*allocated but not freed for view PLANNER.*flags=0, ObType=0, num_rows=	
SI-5559	
Losing Planner Pool Handles SI-5559	


<4>
462	2	Single message occupying too much of the log			A single message is flooding the log file	single_message_flooding

705549 Message appearing too often

single_message_flooding

note:
runs on raw LOG and use -v


<5>
342	2	Planner has detected that an excessive number of Planner booked programme handles is being used. Often this indicates that there is a leak of Planner booked programme handles in the EPG.	booked programme handles in use in session		Excessive number of Planner booked programme handles	

NDS: ^[2016:09:04 21:07:36]0946710163.172216 !WARN   -PLANNER                   < p:0x0000020e P:APP t:0x2df8b520 T:no name M:planner_bookedprogramme_management.c 
  F:PLANNER_BookedProgramme_NoteCreation L:268 > 50 booked programme handles in use in session 0x4:


<6>
468 3       AS error when attempting to rebook missing series link  F:PLANNER_ListElement_UnravelData.*Booking.*not found   NGDEV-39050     Planner error when attempting to rebook missing series link

NDS: ^[2016:09:20 10:26:24]0946688450.689724 !WARN   -PLANNER      		< p:0x0000019c P:APP t:0x01500520 T:PLANNER_CB4 M:planner_list_element.c 
  F:PLANNER_ListElement_UnravelData L:691 > Booking 0x290037D8 not found 


<7>
444	2	Ad viewing Report buffer is full and can cause system to become unresponsive. In SI-9703, this issue was seen when Manifest campaign update was being processed when large number of assets are marked for deletion.
Ads report buff is full - drop Ad report container	SI-9703	Ad viewing Report buffer is full, can cause system to become unresponsive. Refer SI-9703	


107749:NDS: ^[2016:10:01 13:01:01]0946714482.363655 !WARN   -ATM                        < p:0x000001d6 P:MW t:0x01cbc520 T:VRM_SRV M:campman.c F:CAMPMAN_ViewingReport L:372 
> Ads report buff is full - drop Ad report container
>

<<8>
59	1	P1 db_corrupt: Robert Kibble, 11/06/2010 Check for a variety of fatal DBENGINE errors indicating a corrupt database. These are still under investigation as intermittent - 
possibly XTVFS errors.			P1 db_corrupt: Robert Kibble, 11/06/2010 Check for a variety of fatal DBENGINE errors indicating a corrupt database. These are still under investigation as intermittent - possibly XTVFS errors.	
`db_corrupt`

theyard/bin/tests/db_corrupt

note:
<p1>DBENGINE fatal error: status = 0x202000a [PCAT.DB corrupt], PCAT.DB is corrupted (built by hudson)</p1>
<p1>DBENGINE fatal error:  status = 0x203000b  [MFS.DB corrupt]</p1>

Greps on two different issue

!FATAL  -DBENGINE_SRV              < p:0x000001ef P:MW t:0x0188a520 T:MSMDispatcher M:dbengine_api.c F:DBENGINE_API_GetErrcode__ L:1612 > status = 0x203000b

mycat $1 | grep -n "DBENGINE_SRV" 2>/dev/null | grep -Ei 'status = 0x202000a|status = 0x203000b|OUT OF MEMORY|status = 0x2020007' 2>/dev/null | head -1

2016-08-20 04:15:52,254: root - DEBUG - Current script db_corrupt
2016-08-20 04:15:52,254: root - DEBUG - Output: ('2703 Time:0946684974,  status = 0x203000b\n', '')

From *run-verbose*

if [ "$1" = "-v" ]
then
    FIRST=`mycat $2 | grep -n "VACUUM operation has failed with errmsg = out of memory.Ignore it" 2>/dev/null | head -1 | cut -d':' -f1`
    if [ "$FIRST" = "" ]
    then
        FIRST=0
    fi
    A=`find_first_match $2 | cut -d'>' -f2`
    WHICH=""
    for file in *.DB
    do
        if [ -f $file ]
        then
            # check file depending on return from `dbcheck`
            dbcheck $file >/dev/null 2>&1 || WHICH="[$file corrupt]"
        fi
    done
    echo "DBENGINE fatal error: $A $WHICH"
    exit 1
fi

# runs check and if it returns fail, return is back

X=`sqlite3 $1 "pragma integrity_check" 2>&1`
A=$?
echo "$X"
if [ $A -eq 0 ]
then
    if [ "$X" != "ok" ]
    then
        A=1
    fi
fi
exit $A


<9>
96	2	P2 sata_errors: Robert Kibble, 28/10/2010 Look for errors from SATA in KMSG.LOG Often caused by disk failure and/or garbage 
collection errors		SI-6572	P2 sata_errors: Robert Kibble, 28/10/2010 Look for errors from SATA in KMSG.LOG Often caused by disk failure and/or garbage collection errors	
`sata_errors`

theyard/bin/tests/sata_errors

$ egrep "O error" KMSG.LOG
<4>[0946684879.477503]end_request: I/O error, dev sda, sector 3205540

<10>

!WARN   -SYSINIT_S                 < p:0x000001dd P:SCD t:0x00647530 T:STATE_MACHINE_THREAD M:state_machine.c F:stateMachineThread L:1402 > PVR transition failed at ring level 6


{all-benigh}
P4	217	1		Memory pools growing: CAK:DRMM_MEMORY_POOL APP:STBE_POOL MWS:MW_HTTP_POOL APP:ADPT_PLANNER
P5	123	1		PVOD not recorded within 24 hours
P4	546	2829	2016:09:28 08:10:34	Filling time took 838s
P3	291	7161	2016:09:28 08:13:48	Response not received from PREPARING_SIM_MONI_SEI [SIM] to MCM
P4	438	7889	2016:09:28 08:18:56	Client buffer full - Client is not reading data fast enough MHC sections during aquisition
P3	109	8080	2016:09:28 08:20:18	Demux Output buffer overflow detected - (17532) - may lead to TF7
P4	117	8099	2016:09:28 08:20:19	Driver lockup E_MS_PORT_THREAD_TYPE_CDI_WT (17068/17145/17147) - E_REQUEST_TYPE_STOP_OUTPUT at time 1793294853, " "time diff = 570, " "halt value 500
P5	119	9417	2016:09:28 08:26:41	Signal quality/strength has become very poor
P5	122	9473	2016:09:28 08:26:42	RMF_ET in RMF_Server - Possible conflict issue if near time of problem.
P5	46	13580	2016:09:28 08:29:15	PTS errors - check whether this is causing video glitch
P5	410	22175	2016:09:28 09:06:54	May be related to: TV Guide is missing schedule data (NGDEV-20253)
P3	468	22936	2016:09:28 09:08:16	Planner error when attempting to rebook missing series link
P4	447	34568	2016:09:28 09:43:00	Problem with getting network information from NCM - null IP addresses
P3	405	36903	2016:09:28 09:58:39	MSM stalled - this could be temporary, but if frozen video observed this could be the reason.
P4	113	75069	2016:09:28 13:20:36	Driver lockup - generic watchdog taking >2s (17068/17145/17147) - E_REQUEST_TYPE_DEMUX_OUTPUT_RELEASE_CHUNK at time 1811312171, " "time diff = 2, " "warn value 100
P3	358	176576	2016:09:28 22:56:01	Error receiving PAT section (SkyD: Hinweis 313)
P4	523	192954	2016:09:29 01:10:04	Software download seen
P4	106	310149	2016:09:29 16:43:08	E_FSSERVER_REQUEST taking >500ms - could be bad disk (26632)
P3	199	429075	2016:09:30 00:14:01	Poll error fd resulting in a lock-up.
P3	539	567434	2016:09:30 07:43:05	Playout descriptor length failure for campaign which causes manifest failure
P3	540	567437	2016:09:30 07:43:05	Manifest processing failed
P3	549	622048	2016:09:30 16:33:12	User-pressed 444 - indication of user-trial fault.
P4	481	637578	2016:09:30 17:29:15	DNS failed to respond after 3.5s and there is no address to reuse (is the box sluggish?)
P4	482	666928	2016:09:30 18:32:21	Re-using old IP address as DNS quick response timeout expired
P3	167	769918	2016:10:01 03:20:28	VRM shows this warning when user makes booking 2 seconds before the event ends. Planner shows failed recording with TF 10.
P3	170	815343	2016:10:01 04:55:40	815343 number of errors[277], look in ADSMART_test_BDL_monitoring.log for more information. in LOGlastrun.log.gz line #815343 test finds BDL's that started the download flow, started with asset request but didn't reach recording asset end. found error in [{[] [d-rec-asset-end] [None] #[29047790]}] state[state_illegal]


={============================================================================
|kt_dev_si_0002| si-sh-to-dates

#-----------------------------------------------------------
# to_dates
#-----------------------------------------------------------
Readable Any Date

to_dates converts any possible timestamp into a date format.

Usage guide: cat something | to_dates

Example usage:

tail -1 LOGlastrun | to_dates 

NDS: ^[16:28:22]0946744102.035999 ...

To save this to a file, just do

cat LOGlastrun | to_dates > LOG.converted

It is also possible to convert the file "in place":

to_dates LOGlastrun

Additionally, if the time desired is the actual time from the stream, rather than the time related to the box's last boot-time, it is possible to use

to_dates -real LOGlastrun

This uses the first SYSTEMTIME message "Time has been updated to" as callibration, and amends all times relative to that, e.g.

-
NDS: ^[18:21:16]0946685685.229684 !MIL   -SYSTEMTIME   < p:00000064 t:2aeb4830 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD 
 M:systemtime.c F:SYSTEMTIME_SetTime L:00911 > Time has been updated to 18:21:16
NDS: ^[18:21:23]0946685692.827540 !MIL   -aem          < p:00000065 t:010d3c40 T:AEM_INPUT_MONITOR_THREAD 
 M:aem_userinput.c F:AEM_InputMonitorThread L:00429 > KEY_PRESS: code=0x(INFO)e00e
-

={============================================================================
|kt_dev_si_0002| si-sh-alog

# ALOG
key_parser.py


={============================================================================
|kt_dev_si_0002| si-sh-list-log

http://hetty.cisco.com/fusionmadesimple/index.php/MySecondCheckLog

Find a log file given a MAC address

With what you've got, type list_log <what-I've-got>, e.g.

list_log 0019fb0f4471

...
Feb 7 21:10     7329041 SalimEsmailjee  darwin_0019fb0f4471_cb3def20493a8ceee8ec9ad35569bc5a.tgz
Feb 10 17:06    1922793 SalimEsmailjee  darwin_0019fb0f4471_d3aaf5d9876971aefd3dbbf2c13ce2ee.tgz
Feb 17 19:09    2293143 SalimEsmailjee  darwin_0019fb0f4471_5a610fb09c64b2f3c5be6dd693df70a8.tgz
Feb 18 00:17    759514  SalimEsmailjee  darwin_0019fb0f4471_e911603a22f3a5e875f389dd3de82051.tgz

That shows you a series of log files available, by date. In this case there is
also a name, because we know whose box this is.

After this, select the file you want, and then refer to MyFirstCheckLog for
how to decrypt that. 


={============================================================================
|kt_dev_si_0002| si-sh-convert-logs

http://hetty.cisco.com/fusionmadesimple/index.php/FTPUploadOMatic

If you get a FSN_DATA directory by email, you can easily convert the binary
logs to textual logs like so:

diag <platform> <version>

e.g.:

diag thom 30.11

Once you have a log file, you can analyse it with test_log:

test_log LOG


={============================================================================
|kt_dev_si_0002| si-sh-get-logs


={============================================================================
|kt_dev_si_0002| si-sh-wombat

Search through all uploads, with extensive filtering options to find only the
uploads you want. Basically a simplified way of running grep on the logs
uploaded. 

<file>
theyard/public_html/cgibin/Generate_WOMBAT.sh

* Translate cgi string to options based on:

usage ()
{
    set +x
    output_logging
    output_logging "####################################################################"
    output_logging "Usage: $(basename $0) [-p path] [-m message] [-n num_logs|-a]"
    output_logging "                      [-s stream] [-h H/W Platform] [-b baseline] "
    output_logging "                      [-P Priority] [-e error] "
    output_logging
    output_logging "Optional arguments:"
    output_logging "  -h, --help  - Show this help text."
    output_logging "  -p path     - Path to translated logs (default: /home/si_logs/translation)"
    output_logging "  -m message  - Addition to the title"
    output_logging "  -n num_logs - number of most recent logs to parse."
    output_logging "  -a          - parse all logs present"
    output_logging "  -s stream   - Stream to select logs for"
    output_logging "  -H H/W plat - Hardware platform to select logs for"
    output_logging "  -b baseline - Baseline to select logs for"
    output_logging "  -P priority - Priority to select logs for (eg. 1, 2, 3, 4, 5 - but only select one)"
    output_logging "  -e error    - Error message to select logs for"
    output_logging "  -M mac      - MAC address to select logs for"
#    output_logging "  -D date     - Max Date of logs (format: YYYY:MM:DD)"
#    output_logging "  -d date     - Min Date of logs (format: YYYY:MM:DD)"
    output_logging "####################################################################"
    output_logging
}

* Can be run from cgi or command line.

* main is.

  parse_cgibin_query # sets up $FLAGS
  parse_args $FLAGS  # calls add_filter_to_globals depending on options
                     # add_filter_to_globals # add args to FILTERS
                     # don't seem to use FILTERS

  # build `query` string
  generate_sql_filter_options

  <error>
  # seems that only looks for `parser_result` for error string.

    then
        RE=``echo "$REQUESTED_ERROR" | python -c 'import sys,urllib, cgi;print urllib.unquote(cgi.escape(sys.stdin.read().strip()))' | sed -e"s/'/_/g"``
        WHERE_CLAUSE="$WHERE_CLAUSE AND parser_result like '%$RE%'"
        RAW_WHERE=0
    fi

  # calls run_sql whcih calls mysql. means to use DB?
  find_sql_filter_options

  # build `query` string and run
  # run_sql "$QUERY" | sed -e 's/	/|/g' | while read line
  output_log_rows_for_files


# db name
WOMBAT_DBNAME=uploads


<ex> 
// to set params
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?STREAM=&BASELINE=&PRIORITY=&LOGS=100&ERROR=

// decoded string: <p1>Player VTable ref leak found, might cause serious errors once ref count is wrapped around (built by hudson)</p1>
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?STREAM=R014&PLATFORM=drx890&PRIORITY=1&ERROR=%3Cp1%3EPlayer%20VTable%20ref%20leak%20found%2C%20might%20cause%20serious%20errors%20once%20ref%20count%20is%20wrapped%20around%20%28built%20by%20hudson%29%3C/p1%3E&INTERVAL=3%20month&MACLIST=&LOGS=999999

// Out of memory in " "MW_HTTP_POOL" pool
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?STREAM=R015&PLATFORM=drx890&PRIORITY=1&ERROR=SOMETHING%20TIMEDOUT&INTERVAL=3%20month&MACLIST=&LOGS=999999
http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?STREAM=R015&PLATFORM=drx890&PRIORITY=1&ERROR=systemobject&INTERVAL=3%20month&MACLIST=&LOGS=999999

http://theyard.cisco.com/cgi-bin/Generate_WOMBAT.sh?MAC=0019FB63D645&ERROR=Tuner%20failed&LOGS=999999


={============================================================================
|kt_dev_si_0002| si-sh-flipper

http://hetty.cisco.com/fusionmadesimple/index.php/Flipper_SI_scripts

{listtag}
listTags.py Listing the existing tags in one branch

* BM in ETHAN_SI_SCRIPTS/scripts/common/GitClass.py

* BM.listBranches() is simply to look in the dict(nested dict) to show branch name.

    # a dict with {branchname, {repo, branch, pattern}}.
    AVAILABLE_BRANCHES = {
	   "HR014": {'repo' : "ssh://wwwin-git-gpk-2.cisco.com:29418/STB_SW",
            'branch' : 'BSKYB_HR014_Int',
            'pattern' : 'refs/tags/BSKYB_HR014_Int/BSKYB_INTEGRATION_BLD_[0-9][0-9].[0-9][0-9].[0-9][0-9]_BSKYB_HR014_Int' }
        },

  BM.listBranches ():
    for key in BranchManagement.AVAILABLE_BRANCHES:

* BM.listTags (args.tags, args.maxNum):

    tags = self.getListOfTags (branch, number)

      GC = GitClass (self._logger)
      tagList = GC.getListOfTags (BranchManagement.AVAILABLE_BRANCHES [branch]['repo'],
                    BranchManagement.AVAILABLE_BRANCHES [branch]['pattern'], number)

        cmd = ['git', 'ls-remote', '--tags', repo]

        logger.debug ('executeCommand: ' + str(cmd))

// ls-remote output:
fd50131012c5a1b81aabec38e805844946f1ffe4	refs/tags/ADSMART102_CI/D88.0.38.0-master
8213e5feacb24269038f2a967b36bf3d1818d378	refs/tags/ADSMART102_CI/D88.0.38.0-master^{}
61c8416b0a8892791ee840ec6a1b739540d3f591	refs/tags/ADSMART102_CI/D88.0.38.1-master
8213e5feacb24269038f2a967b36bf3d1818d378	refs/tags/ADSMART102_CI/D88.0.38.1-master^{}
21c2b145e02960764d252433f85cd0f91e4aebe2	refs/tags/ADSMART102_CI/D88.0.38.2-master
0cd4b4c654f3fd28a64b065c011e125cef968368	refs/tags/ADSMART102_CI/D88.0.38.2-master^{}
cd81d6681624bea82ad80d8b43e5d814e356f08a	refs/tags/ADSMART102_CI/D88.0.38.3-master
2693ca979382a4067b86b30758d81a22f03c3d42	refs/tags/ADSMART102_CI/D88.0.38.3-master^{}
fb7069df9ae391887e5a3903e295062c0921a723	refs/tags/ADSMART102_CI/D88.0.45.0-master
5c71272600eeefc742b980dfaa3d513a9a028860	refs/tags/ADSMART102_CI/D88.0.45.0-master^{}
d0b6721a8ea5e840a014d5368f1f3866fcfcc7fd	refs/tags/ADSMART102_CI/D88.0.45.1-master
f42aafae25048f7eb198130fb75ef904b9f53304	refs/tags/ADSMART102_CI/D88.0.45.1-master^{}
db842cee35e2a4bcd47ac0c162ce620e3e7c8a7c	refs/tags/ADSMART102_CI/D88.0.54.0-master
b57a6a4e1f4386782e49957644faf0bcbae6ac86	refs/tags/ADSMART102_CI/D88.0.54.0-master^{}
b1535f93a5028797de19ac8eb8eccd471a07a87f	refs/tags/ADSMART102_CI/D88.0.54.1-master
5b23e16dae33e44239723f3dbe6336396127cad4	refs/tags/ADSMART102_CI/D88.0.54.1-master^{}
94cabb4c874b1992aaaafaacd5cb0219bd12cbc6	refs/tags/ADSMART_ATM_CI/D89.0.18.0-master
...

59f36a86e8581ff483f236d83c6fd7ceeede97d0        refs/tags/BSKYB_SI_ETHAN/BSKYB_INTEGRATION_BLD_09.34.00_BSKYB_HQ000_ETHAN_Int

<ex>
./listTags.py -t Q000 -m 3
refs/tags/BSKYB_HQ000_ETHAN_Int/BSKYB_INTEGRATION_BLD_08.08.00_BSKYB_HQ000_ETHAN_Int
refs/tags/BSKYB_HQ000_ETHAN_Int/BSKYB_INTEGRATION_BLD_08.07.00_BSKYB_HQ000_ETHAN_Int
refs/tags/BSKYB_HQ000_ETHAN_Int/BSKYB_INTEGRATION_BLD_08.06.00_BSKYB_HQ000_ETHAN_Int

listTags.py -t HR015 -m 3


{gettag}
Clone the repository and check-out a tag.

* receives three parameters: the branch, tag, as listed by listTag.py and the
  directory where the repository is created. This directory must be empty. 
* clone, run initialize_hooks script, and check-out a tag.
* create jenkins job file

./getTag.py Q000 refs/tags/BSKYB_HQ000_ETHAN_Int/BSKYB_INTEGRATION_BLD_08.08.00_BSKYB_HQ000_ETHAN_Int ~/provis/example/


<jenkins-job-file>

The job files have roughly two "sections" what I call the normal parameters
and the extra parameters.

The normal parameters are between the two '#######' lines. The extra
parameters are added at a later stage after the second '######'. We are trying
to follow the format that hudkins uses with WALRUS builds.

The last three are extra parameters.

note:
Works when use remote tag but no txt files created when use local tag.

$getTag.py HR015 refs/tags/BSKYB_HR015_Int/BSKYB_INTEGRATION_BLD_84.31.00_BSKYB_HR015_Int ~/get_tags/xx

kyoupark@ukstbuild2:~/get_tags/xx$
-rw-r--r--  1 kyoupark ccusers  101 Sep 27 15:50 baseline_details.txt
-rw-r--r--  1 kyoupark ccusers  413 Sep 27 15:50 jobfile.txt
drwxr-xr-x 24 kyoupark ccusers 4096 Sep 27 15:50 STB_SW/

kyoupark@ukstbuild2:~/get_tags/xx$ more baseline_details.txt
SIGM:ENG_84.31.00_5401_MNTEE_BSKYB_HR015_Int
BASELINE:ENG_84.31.00_5401_MNTEE
STREAM:BSKYB_HR015_Int
$
kyoupark@ukstbuild2:~/get_tags/xx$ more jobfile.txt
#######
email_subject=Manually triggered build
baseline=ENG_84.31.00_5401_MNTEE
stream_prefix=HR015
must_pass_test=False
project=bskybgen2
pvob=BSKYB_INTEGRATION_BLD_84.31.00_BSKYB_HR015_Int
branch=BSKYB_HR015_Int
test=False
output=/home/NDS-UK/kyoupark/get_tags/xx
ca_cleanup=False
bin_to_sky=False
#######

BUILD_NUMBER=5401
UseEmailSubject=Re: FLIPPER build: Manually triggered build
SERVER=theyard.cisco.com

$

<clone>
note: always clone from remote repo.

  # GitClass.py

    FOLDER = "STB_SW"

    def getTagCode (self, branch, tag=None):
            if GC.cloneRepository (BranchManagement.AVAILABLE_BRANCHES [branch]['repo'],
                    BranchManagement.AVAILABLE_BRANCHES [branch]['branch'], BranchManagement.FOLDER):

            # cmd = ['git', 'clone', repo, folder, '-b', branch]

            os.chdir (BranchManagement.FOLDER)
            GC.initialise_hooks ():

            if GC.checkout (tag, None):

            # cmd = ['git', 'checkout', tag]


import scripts.common.JenkinsJob as JenkinsJob

note:

# This script creates a jobfile in the parent directory of the git repository.
# You need this file before calling uploadTarball.py. The getTag script will
# generate one but if you have a `random repository` then you need to use this
# script

createJobfile.py


{diag}

# This script is used to change the diag levels of the components. It also
# allows to list the available segments and the configuration flags.
# 
# Example 1 List, with detail, the available segments:
# 
# ./diag.py -l -e
# AFLPROXY: darwin_aflproxy_bindings_AS3
# AIni: darwin_systemcommon_native
# AMS: AMS
# ...
# 
# Example 2 List the available diag configuration flags:
# 
# ./diag.py -c
# A E F I M P R W ! < >
# 
# Example 3 Change the diag level on two components
# 
#  ./diag.py -u  AMS:AFEIMPRW\<\>  MSM:AFEIMPRW\<\> -d ~/provis/example/Ethan/

// flipper/scripts/flipper/diag.py
import scripts.common.Diag as Diag

* getsegment() build a dict from reading a "http://theyard.cisco.com/diagconf.txt"
[
  ...
  [["NCM_SERVER"],	["ncm_server"]],
  [["NCM_CLIENT"],	["ncm_client"]],
  [["WLM_SERVER"],	["wlm_server"]],
  [["WLM_CLIENT"],	["wlm_client"]],
]


* update

parser.add_argument ("-u", "--update", help="List of segment:config values. <> must be escaped. For example AMS:AFEIMPRW\<\>", nargs='+')
parser.add_argument ("-d", "--dir", help="Folder containing the repository to configure.")

./diag.py -u  AMS:AFEIMPRW\<\>  MSM:AFEIMPRW\<\> -d ~/provis/example/Ethan/

1. build a dict from arg, {'AMS', ['A', 'F', 'E'...] }

// def enableDebugConfig (self, segment):
"darwin":"FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk",

==
NDS_BUILD_TYPE_darwin_player_src=debug

# Example entry for building a debug library (darwin_player_src) in a release_dbg or release build 
# NDS_BUILD_TYPE_darwin_player_src = debug

# DO NOT REMOVE THE FOLLOWING INLCUDE
include $(NDS_ROOT)/projects/fusion2/build_options.mk
==


3. for each key(component segment) in a dict, processSegment(key, value)
    add "NDS_BUILD_TYPE_xxx=debug" in debug file.


// def changeSegmentFlags (self, segment, flagStr):
"darwin":"FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/SI_config.xml",

2. set diag and debug file.

adds overrides for `all profiles`:

   <file name="diag.cfg">
    <section name="OVERRIDDEN_VALUES">
     <key name="TRACE_LEVEL_LIBCURL" type="STRING" value="AFEWMI"></key>
    </section>
  </file>


{uploadtarball}
This script receives three parameters: the email, the profile and the kernel
variant. Any STB_SW repository can be used with this script. It expect certain
files to be updated as the previous commands are called.

This script creates a WALRUS_ReceiveTarball job in hudkins and then a hudkins
build_fullstack job does the actual compilation.

The files copies the tarball to a certain folder in the yard. You need to copy
your public key in the yard for that step to work.

Example
./uploadTarball.py -d ~/provis/example/Ethan/ rodolgon@cisco.com sky_trials debug

# parser = argparse.ArgumentParser ("Uploads a repository to be compiled. ")
# parser.add_argument ("-d", "--dir", help="Folder containing the repository to upload.")
# parser.add_argument ("-p", "--platform", help="The plaform to compile as listed by resolveDeps.")
# parser.add_argument ("email", help="Comma separated email list")
# parser.add_argument ("profile", help="Profile to compile")
# parser.add_argument ("variant", help="Variant to compile")

  # assumes that a jobfile is in the parent of cloned repository.
  # create a build number
  JFP = JobFileProcessor.JobFileProcessor (logging, "..")
  JFP.patchBuildNumber ("..")

  # create a tar file
  dest_tarfile = os.path.abspath (os.path.join ("..", "SOURCE.tgz"))
  createTarBall (dest_tarfile):

  # update job file params. What if not set those?      
  updateJobFile (args.email, args.profile, args.variant, args.platform):

  # send a job to Jenkins.
  triggerCompilation (dest_tarfile)

<job-file-from-flipper>
###########
project=
profile=sky_trials
platform=ams-drx890
branch=BSKYB_HR015_Int
stream_prefix=R015
git_tag=00.28.09
server_choice=ukstbuild2.uk.nds.com
repo_location=/home/NDS-UK/kyoupark/STB_SW
output=/home/si_logs/builds/kyoupark_1475087346189
add build opt=--override_location asbo.bskyb.com:/home/asbo/mac 
test=False
must_pass_test=False
ca_cleanup=False
bin_to_sky=False
email=kyoupark@cisco.com
variant=debug
loadrule=
system_details_tag=
check_upload=
emailsubject=tag: 00.28.09, try-duma) add duma files
########


BUILD_NUMBER=330239
SERVER=theyard.cisco.com
UseEmailSubject=Re: WALRUS build: tag: 00.28.09, try-duma) add duma files


={============================================================================
|kt_dev_si_0002| si-tcpdump

For instructions, see SI-10771


={============================================================================
|kt_dev_si_0002| si-dmalloc

<dmalloc-build>

1. change app_process_main.c

+++ b/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/MW_Process/mw_process_main.c
@@ -51,6 +51,8 @@ static uint32_t f_diag_id;
 #define  FSI_UA_PROCESS_SHORT FSI_UA_MWS_PROCESS_SHORT
 #endif

+#include "../../../FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/dmalloc.h"

/* Token 12 */
dmalloc_debug_setup("log-stats,log-non-free,check-fence,error-free-null,print-messages");

pagesize = dmalloc_page_size();
printf("APP_Process dmalloc pagesize = %d system pagesize = %d\n", pagesize, getpagesize());
printf("APP_Process size of long = %d\n", sizeof(long));


2. change makefile to link with dmalloc lib for each process

+++ b/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/MW_Process/makefile
@@ -124,6 +124,11 @@ VGC_PLATFORM_LIB_PREFIX=$(PLATFORM_LIB_PREFIX)
 VGC_PLATFORM_LIB_SUFFIX=$(PLATFORM_LIB_SUFFIX)
 include $(COMPONENTS_DIR)/security_services/vgv/$(NDS_VGV_PROJECT)/src/libraries_mw.mk

COMPONENT_SOURCE_LIBRARIES+=\
	$(NDS_ROOT)/libdmallocth.a
COMPONENT_PREBUILT_OBJECTS+=\
	$(NDS_ROOT)/libdmallocth.a


3. enable console
note: careful since it's different from release to release

+++ b/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/make_image.sh
@@ -277,9 +277,10 @@ function set_up_spk() {
   SPK_BUILD_OUTPUT_DIR=${OUTPUT}/${PROJECT}/SPK/${SPK_PLATFORM}-${SPK_VARIANT}

   # nds_si_devel profile does not boot up with noconsole - but not required as of Nov '09.
-  if [ "${PROFILE}" ==  "sky_prod" ] || [ "${PROFILE}" ==  "sky_tpt" ] || [ "${PROFILE}" ==  "sky_trials" ] || [ "${PROFILE}" ==  "mem_trials" ] || [ "${PROFILE}" ==  "cust_trials" ]; then
-    SPK_CONFIG+=" noconsole"
-  fi
+  #if [ "${PROFILE}" ==  "sky_prod" ] || [ "${PROFILE}" ==  "sky_tpt" ] || [ "${PROFILE}" ==  "sky_trials" ] || [ "${PROFILE}" ==  "mem_trials" ] || [ "${PROFILE}" ==  "cust_trials" ]; then
+  #  SPK_CONFIG+=" noconsole"
+  #fi
+  SPK_CONFIG+=" console"


4. copy two files

vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/dmalloc.h
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/libdmallocth.a


25:08:16 15:46:17 946684826: 593: WARNING: tried to free(0) from 'unknown' 
25:08:16 15:46:17 946684826: 593:   error details: invalid 0L pointer 
25:08:16 15:46:17 946684826: 593:   from 'unknown' prev access 'unknown' 
25:08:16 15:46:17 946684826: 593: ERROR: free: pointer is null (err 20) 
25:08:16 15:46:17 946684826: 600: WARNING: tried to free(0) from 'unknown' 
25:08:16 15:46:17 946684826: 600:   error details: invalid 0L pointer 
25:08:16 15:46:17 946684826: 600:   from 'unknown' prev access 'unknown' 
25:08:16 15:46:17 946684826: 600: ERROR: free: pointer is null (err 20) 
25:08:16 15:46:17 946684826: 607: WARNING: tried to free(0) from 'unknown' 
25:08:16 15:46:17 946684826: 607:   error details: invalid 0L pointer 
25:08:16 15:46:17 946684826: 607:   from 'unknown' prev access 'unknown' 
25:08:16 15:46:17 946684826: 607: ERROR: free: pointer is null (err 20) 
25:08:16 15:46:17 946684826: 628: WARNING: tried to free(0) from 'unknown' 
25:08:16 15:46:17 946684826: 628:   error details: invalid 0L pointer 
25:08:16 15:46:17 946684826: 628:   from 'unknown' prev access 'unknown' 
25:08:16 15:46:17 946684826: 628: ERROR: free: pointer is null (err 20) 


// dmalloc.h

#define malloc(size) \
  dmalloc_malloc(__FILE__, __LINE__, (size), DMALLOC_FUNC_MALLOC, 0, 0)

// shows double free but it was about use-after-free which doesn't seem to
// catch.
https://www.stb.bskyb.com/jira/browse/DRI-1845

        new file:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/duma.h
        new file:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/duma_config.h
        new file:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/libduma.a
        modified:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/make_image.sh
        modified:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/MW_Process/makefile
        modified:   FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/processes/MW_Process/mw_process_main.c


={============================================================================
|kt_dev_si_0003| si-log-commands

$ list_log 0019fb2d3660 | grep R014.083.60.00C | cut -f 4 | cut -f 1 -d'.' | xargs check_log


={============================================================================
|kt_dev_si_0003| si-log-lines


`FRAME_PRESENTED`
!MIL    -MPM         < P:MW T:MPM_PROXYMONITOR_THREAD M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:1374 > FRAME_PRESENTED: hMC=0x2ff7 

`FRAME_DECODED`
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_pres_video_control.c F:MPM_PresHandleVideoDecoderBufferLowEvent L:01577 > FRAME_DECODED on decoder 0

# TransponderId
!MIL   -UAMC         < T:PLAYER_MAIN M:live_pbag.c F:Live_Pbag_Print L:00980 > UAM LIVE EVENT PROGRAM_OPEN
!MIL   -UAMC         < T:PLAYER_MAIN M:live_pbag.c F:Live_Pbag_Print L:00985 > Live params: NetworkId=0x00000002, TransponderId=0x000007F9 ServiceId=0x000023FB

OR

!MIL   -UAMC         < T:PLAYER_MAIN M:live_pbag.c F:Live_Pbag_Print L:00984 > UAM_DCM_PARAM_DATA_TYPE_PROGRAM_OFF
!MIL   -UAMC         < T:PLAYER_MAIN M:live_pbag.c F:Live_Pbag_Print L:00985 > Live params: NetworkId=0x00000002, TransponderId=0x000007F9 ServiceId=0x000023FB


KEY_PRESS
!MIL   -aem          < p:00000076 t:00c47b40 T:AEM_INPUT_MONITOR_THREAD M:aem_userinput.c F:AEM_InputMonitorThread L:00429 > KEY_PRESS: code=0xe007

DECODER_STARTED and DECODER_STOPPED:
!MIL   -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_component_video.c F:MPMComponentVideoStop L:00526 > DECODER_STOPPED: hMC=4
!MIL   -MPM          < p:00000075 t:009d50a0 T:MPM_ITCMAIN_THREAD M:mpm_component_video.c F:MPMComponentVideoStart L:00440 > DECODER_STARTED: hMC=30
!MIL   -MPM          < p:00000075 t:009d50a0 T:MPM_ITCMAIN_THREAD M:mpm_component_audio.c F:MPMComponentAudioStart L:00392 > DECODER_STARTED: hMC=30

`CHANNEL UP`
ioctl VIDEO_DECODER_STOP
ioctl DEMUX_STOP posted OK on /dev/nds/demux0/elementaryfilter
ioctl VIDEO_DECODER_FLUSH_RATE_BUFFER
ioctl DEMUX_STOP posted OK on /dev/nds/demux1/remux0

# remove pids: 0(video), 1(audio)
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_demux.c F:MPMDemuxInvalidateTPid L:01455 > Invalidated tpid for component 0
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_demux.c F:MPMDemuxInvalidateTPid L:01455 > Invalidated tpid for component 1

# remove tipd of remux, do 4 times in total.
ioctl DEMUX_REMUX_REMOVE_TPID posted OK on /dev/nds/demux1/remux0

# change pids:
# 0x04, SYSTEMOBJECT_ESI_STREAM_TYPE_MPEG_2_VIDEO
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_media_connection.c F:MPM_MCProcessESIObject L:01037 > Got ESI object of type 0x4 tpid 0xd00
# 0x02, SYSTEMOBJECT_ESI_STREAM_TYPE_MPEG_2_AUDIO
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_media_connection.c F:MPM_MCProcessESIObject L:01037 > Got ESI object of type 0x2 tpid 0xd01
# 0x0a, SYSTEMOBJECT_ESI_STREAM_TYPE_TELETEXT
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_media_connection.c F:MPM_MCProcessESIObject L:01037 > Got ESI object of type 0xa tpid 0x91d
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_media_connection.c F:MPM_MCProcessESIObject L:01037 > Got ESI object of type 0xa tpid 0x91d
# 0x0d, SYSTEMOBJECT_ESI_STREAM_TYPE_OTV_CAROUSEL
!INFO  -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_media_connection.c F:MPM_MCProcessESIObject L:01037 > Got ESI object of type 0xd tpid 0x901

# 
ioctl DEMUX_ATTACH_TPIDFILTER posted OK on /dev/nds/demux0/elementaryfilter


<si-diag--error-mesg>

# memory
!WARN  -MEMMAN       < M:mem_moveable.c F:MHWMemAlloc L:00152 > Cannot allocate 16444 bytes in pool systemobject, not enough memory

# key buffer overflow
!ERROR -GFXINPUT     < M:gfx_eventbuffer_p.c F:GfxInputEventBufferPostEventSafe L:00109 > EventBuffer Overflow

# mutex deadlock since this mutex is already locked. 
!ERROR -aem          < M:aem_sys.c F:AEM_ThreadPrintError L:02399 > aem_api.c @ 2905 ~~~ !!!!! DEADLOCK detected !!!!!! ~~~ (try SYSTEMUTIL_DEADLOCK_DEBUG_EXT for more info) (mutex = &g_aem_list_mutex)

!ERROR -MSM_MDI      < M:meta_utl.c F:getStringFromArray L:04311 > can not find the string for offset 258, the array lengthis 1, and the array base is 256
!ERROR -MSM_MDI      < M:msm_indexer.c F:handleRecordCloseIndex L:03337 > getMasterContextByIndexHandle failed! stat = unknownString

ERROR cdi/demux/cdi_rasp.c:3467:Cannot corrupt packets unless RASP is used on remux 0


={============================================================================
|kt_dev_si_0003| si-log-lines-mil


"TUNING TO|VIDEO IS|TUNER_LOCKED|FRAME_PRESENTED|CHANNEL CHANGED|RUNNING_STATUS"

!MIL    -P_Api        < T:no name M:player_api_session.c F:PLAYER_API_Session_Play L:4106 > PLAY 
!MIL    -P_Api        < T:no name M:player_api_session.c F:PLAYER_PRV_Session_Play L:6157 > PLAY on target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:1109 > VIDEO IS HIDDEN 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:8959 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000001, status=NOT_RUNNING 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessASI L:9182 > AUDIO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000001 [PROCESSED_ASI (524952) NOT_RUNNING] [SELECTION_ASI (524952) NOT_RUNNING] 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobStopped L:9849 > Job 0x03000001 STOPPED on Display Target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobDestroyed L:10102 > Job 0x03000001 DESTROYED on Display Target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessSSI L:4224 > FRONT END SIGNAL LOCKED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessSCI L:4668 > PMT RECEIVED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1932 > CA STREAM STATUS : ACCESS GRANTED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1932 > CA STREAM STATUS : ACCESS GRANTED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1906 > CA STREAM STATUS : FREE TO AIR 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1906 > CA STREAM STATUS : FREE TO AIR 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessASI L:9182 > AUDIO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000003 [PROCESSED_ASI (524948) RUNNING] [SELECTION_ASI (524948) RUNNING] 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobStarted L:5829 > Job 0x03000003 STARTED on Display Target MAIN_TARGET 

!MIL    -MCM            T:FEM_WORKER_THREAD M:mcm_dev_notifications.c F:MCM_DEV_MAN_ListenerMSO L:134 > hMC=0x257  TUNER_LOCKED: 
!MIL    -MPM            T:MPM_PROXYMONITOR_THREAD M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:1374 > FRAME_PRESENTED: hMC=0x257 

!MIL    -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:1105 > VIDEO IS SHOWN 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:8959 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000003, status=RUNNING 
!MIL    -EPG_ME       < T:no name M:MediaEngine F:tuningIsFinished L:4717 > T:PooledExecutor#4:SYSTEMTEST tuning complete
!MIL    -EPG_ME       < T:no name M:MediaEngine F:channelChanged L:2027 > T:PooledExecutor#4:CHANNEL CHANGED TO Sky1 HD, 106


!MIL    -VRM_SERVER   < T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: pleLive:0x1be0000: E_PLE_STATE_NONE -> (E_PLE_INPUT_SESSION_CREATED) -> E_PLE_STATE_SESSION_CREATED 
!MIL    -MCM          < T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:275 > @@PMON@@,trace,mediacon,mc-create,599,mc-create-mcid=,599,mc_create-str=,mc-live,fsnfmt=,hMC=0x257 


={============================================================================
|kt_dev_si_0001| comp-tree

|-- BUILD_SYSTEM
|   |-- CCACHE
|   |-- COMMON_MAKEFILES
|   |-- FUSION_PROFILE
|   |-- cygwin_win32
|   `-- hosts
|-- CMS_INFORMATION_SERVICES
|   |-- DBENGINE
|   |-- FDM
|   |-- PCAT
|   |-- PSCHED
|   |-- SDM
|   |-- SFM
|   |-- SIM
|   `-- SIM_CO
|-- CMS_MEDIA_SERVICES
|   |-- BEM
|   |-- CAMM
|   |-- CAPPROC
|   |-- CTM
|   |-- FEM
|   |-- FS_FOS
|   |-- MCM
|   |-- MDM
|   |-- MFS
|   |-- MPM
|   |-- MSM
|   |-- MSM_COMMON
|   |-- Media_Streamer
|   |-- RASP_High
|   |-- VRM                   *comp-vrm*
|   |-- metadata
|   `-- msm_import

|-- CMS_PLATFORM_SERVICES
|   |-- AEM                   *comp-aem*
|   |-- CAPPRES
|   `-- GFX                   *comp-gfx*

|-- CMS_SECURITY_SERVICES
|   `-- CA_RANGE
|-- CMS_SYSTEM_INFRASTRUCTURE
|   |-- AVCU
|   |-- CMDC
|   |-- DHCP
|   |-- DIAG                  *comp-diag*
|   |-- FREETYPE2
|   |-- HTTP
|   |-- HTTPSERVER
|   |-- IPC
|   |-- MEMMAN
|   |-- NCM
|   |-- OIGC
|   |-- RTSP
|   |-- SERIAL
|   |-- SSL
|   |-- SYSINIT
|   |-- SYSTEMALARM
|   |-- SYSTEMCOMMON
|   |-- SYSTEMCONFIG
|   |-- SYSTEMITC
|   |-- SYSTEMLANG
|   |-- SYSTEMLOCATOR
|   |-- SYSTEMOBJECT
|   |-- SYSTEMSTRING
|   |-- SYSTEMTIME
|   |-- SYSTEMUTIL
|   |-- UPNP
|   `-- ZLIB
|-- CMS_SYSTEM_RESOURCE
|   |-- PDM
|   |-- RMF                   *comp-rmf*
|   `-- SSM
|-- COMMON_MIDDLEWARE
|   |-- ASMlib
|   |-- EXPAT
|   `-- RNC
|-- DARWIN_PLATFORM
|   |-- DARWIN_AEM_JAVA
|   |-- DARWIN_ATG
|   |-- DARWIN_ATG_JAVA
|   |-- DARWIN_DIAG_JAVA
|   |-- DARWIN_DLM
|   |-- DARWIN_DLM_JAVA
|   |-- DARWIN_GUIDE
|   |-- DARWIN_GUIDE_JAVA
|   |-- DARWIN_OFS
|   |-- DARWIN_OFS_JAVA
|   |-- DARWIN_PCATP
|   |-- DARWIN_PLANNER
|   |-- DARWIN_PLANNER_JAVA
|   |-- DARWIN_PLAYER
|   |-- DARWIN_PLAYER_JAVA
|   |-- DARWIN_PREFS
|   |-- DARWIN_PREFS_JAVA
|   |-- DARWIN_REMBOOK
|   |-- DARWIN_RMFPLUGIN
|   |-- DARWIN_SBM
|   |-- DARWIN_SCM
|   |-- DARWIN_SPC_JAVA
|   |-- DARWIN_SPM
|   |-- DARWIN_SPM_JAVA
|   |-- DARWIN_SRM
|   |-- DARWIN_SYSTEMCOMMON_JAVA
|   |-- DARWIN_SYSTEMCONFIG_JAVA
|   |-- DARWIN_SYSTEMLANG_JAVA
|   |-- DARWIN_SYSTEMLOCATOR_JAVA
|   |-- DARWIN_SYSTEMTIME_JAVA
|   |-- DARWIN_UAM
|   |-- DARWIN_VGC_JAVA
|   |-- DARWIN_WLM_JAVA
|   `-- dms
|-- FUSIONOS
|   |-- CDI_INC
|   |-- FOS_INC
|   `-- STORAGE_HELPER
|-- FUSIONOS_2
|   |-- BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01
|   |-- HOTPLUG_HELPER
|   |-- NETWORK_HELPER
|   |-- NGI_HELPER
|   |-- POWER_HELPER
|   |-- SERIAL_HELPER
|   `-- USB_HELPER
|-- FUSIONOS_INPUT_DEL_2
|   `-- DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01
|-- FUSIONOS_OUTPUT_DEL_2
|   `-- KERN_AMS_BCM_MIPS4K_LNUX_DARWIN_01
|-- FUSION_SYSTEM_INTEGRATION
|   `-- BSKYB_INTEGRATION
|-- MH_MW_SERVICES
|   |-- MHSI
|   `-- MH_BINXML
|-- SYSTEM_BIN
|   |-- TOOLS_FUSIONCONFIG
|   |-- auto_mock
|   |-- doxygen_win32
|   |-- doxymock
|   |-- doxyuml
|   |-- jdk_1.6_linux
|   `-- pclint_win32
|-- SYSTEM_BIN_2
|   `-- mips4k_gcc_x86_linux_hound
|-- THIRD_PARTY_LIBRARIES
|   |-- BSKYB_JTH
|   |-- CRAFTWORK_LAE
|   |-- MODEM_WIPRO_CMP
|   |-- PPPD_WIPRO_CMP
|   |-- S3_WLM
|   `-- SKELMIR_CEEJVM
|-- VGV
|   `-- VGV_DARWIN


comp-JPA
comp-JVM

# CMS_PLATFORM_SERVICES
comp-AEM
cpmp-GFX

# CMS_SYSTEM_RESOURCE
comp-RMF
comp-PDM

# DARWIN_PLATFORM
comp-ATG
comp-GUIDE
comp-FEM
comp-MCM
comp-MDM
comp-MEMMAN
comp-OFS

# CMS_MEDIA_SERVICES
comp-MSM
comp-VRM

# CMS_SYSTEM_INFRASTRUCTURE
comp-DIAG
comp-NCM
comp-DHCP
comp-UPNP

comp-SBM
comp-SFM
comp-SIM
comp-SPM
comp-SRM
comp-PLAYER
comp-PLANNER
comp-PSCHED
comp-SYSTEMUTIL
comp-SYSTEMTIME
comp-SYSINIT
comp-WLM

# CMS_INFORMATION_SERVICES
comp-DBENGINE
comp-PCAT

# CA
comp-VGV
comp-CAMM

# FUSIONOS
comp-HELPER


={============================================================================
|kt_dev_si_0001| comp-term

ATG   Anytime Guide
CTM   Content Transfer Management
DLM   Download Management
DSM   Disk Space Management
PCAT  Program Catalogue
PDL   Progressive Download
PPC   Progressive Playback Control
PPV   Pay Per View
PVOD  Push Video On Demand
PVR   Personal Video Recorder
RB    Review Buffer
RMF   Resource Management Framework
SBM   System Booking Management
SIM   Service Information Management
SPM   System Platform Management
SRM   System record manager
URI   Uniform Resource Identifier
VGC   VideoGuard Client
VGV   VideoGuard Verifier
VRM   Viewing And Recording Management
SCI   Service Component Information


={============================================================================
|kt_dev_si_0001| comp-build enable-comp-diag

NDS_BUILD_SYSTEM=FUSION 

NDS_BUILD_PROJECT=picasso NDS_PLATFORM=AMS_BCM_MIPS4K_LNUX_DARWIN_01 NDS_ROOT=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build NDS_PROJECT=picasso NDS_BUILD_ROOT=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso NDS_BUILD_TYPE=debug make makefile

NDS_ROOT_UNIX=/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build NDS_LOCAL_TOOLS= 

NDS_STB=  NDS_HOST=linux NDS_MAKE=make --debug NDS_PARALLEL=1 NDS_BUILD_TYPE_DEFAULT=release_dbg NDS_DEFINES="" NDS_LOCATION=ST COMPONENTS_DIR="/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components" NDS_TOOLS_ROOT="/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build" VOB_ROOT="/home/NDS-UK/kyoupark/STB_SW" VOB_ROOT_UNIX="/home/NDS-UK/kyoupark/STB_SW" PLATFORMS_TOOLS_ROOT="/home/NDS-UK/kyoupark/STB_SW" NDS_FUSIONOS="FUSIONOS_2" NDS_FUSIONOS_PRE="FUSIONOS" NDS_FUSIONOS_VER=" _2" NDS_USE_CCACHE= NDS_USE_REL_PATHS= NDS_CCACHE_EXE= NDS_HOST_CC=/usr/bin/ NDS_TARGET:=install install

<component-makefile>

Each component makefile defines:

$/comp/src/makefile

  COMPONENT_NAME := darwin_planner_src
  COMPONENT_CC_DEFINES :=

  # this starts the process of refering global make files.
  include $(NDS_ROOT)/projects/$(NDS_PROJECT)/build_options.mk
  {
    // *enable-comp-diag*
    // To enable diag for a component, set NDS_BUILD_TYPE_$COMPONENT_NAME = debug
    // this is where flipper makes changes

    NDS_BUILD_TYPE_darwin_planner_src = debug
    NDS_BUILD_TYPE_ms_mcm_src = debug
    NDS_BUILD_TYPE_rmfplugin = debug      *comp-rmf*

    include $(NDS_ROOT)/projects/fusion2/build_options.mk
  }


  // include $(NDS_ROOT)/projects/fusion2/build_options.mk
  {
    // For example, suppose build "darwin_planner_src" and if NDS_BUILD_TYPE
    // is defined for this component, define macros for debug diag build.
    //
    // ifeq (NDS_BUILD_TYPE_darwin_planner_src, debug)

    ifeq ($(strip $(NDS_BUILD_TYPE_$(COMPONENT_NAME))),debug)
      GLOBAL_DEFINES += DEBUG
      GLOBAL_DEFINES += DIAG_DEBUG    *diag-debug*
    endif

    ifeq ($(strip $(NDS_BUILD_TYPE_$(COMPONENT_NAME))),release)
      GLOBAL_DEFINES += RELEASE
      ifeq (YES,$(DIAG_RELEASE_MIL))
        GLOBAL_DEFINES += DIAG_RELEASE_MIL
      else
        GLOBAL_DEFINES += DIAG_RELEASE
      endif
    endif

    ifeq ($(strip $(NDS_BUILD_TYPE_$(COMPONENT_NAME))),release_dbg)
      ifeq (YES,$(DIAG_ENABLE_ALL_LEVELS))
        GLOBAL_DEFINES += RELEASE_DBG
        GLOBAL_DEFINES += DIAG_DEBUG
      else
        GLOBAL_DEFINES += RELEASE_DBG
        GLOBAL_DEFINES += DIAG_RELEASE_DBG
      endif
    endif
  }


<platform-mk>
// FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/platform.mk

LOCAL_PLATFORM_CC_DEFINE_FLAGS += $(COMPONENT_CC_DEFINES:%=-D%)

ifeq ($(NDS_BUILD_TYPE_$(COMPONENT_NAME)), debug)
  LOCAL_PLATFORM_CC_FLAGS += -O0
else
  ifneq ($(NDS_GCOV_$(COMPONENT_NAME)), YES)
    LOCAL_PLATFORM_CC_FLAGS += -Os
  endif
  LOCAL_PLATFORM_CC_FLAGS += -fno-strict-aliasing
endif

LOCAL_PLATFORM_CC_FLAGS += $(LOCAL_PLATFORM_CC_DEFINE_FLAGS)


// note: to print custom message in make

##################################################################
#
# Dependency builder.Notice that the generated dependency file
# is placed in the build tree.
# gcc is used to build dependencies using the MM option.
# The MT option specifies the name of dependent file.
# Dependency generation works in the same way on all platforms.
#
##################################################################

define PLATFORM_CC_BUILD_DEPENDENCY                                                                                                                                                                        
  @$(COMMANDS_MKDIR_EX) $(dir $@)
  @echo +++ Message from $(NDS_PLATFORM)/platform.mk - building dependencies for $@
  $(LOCAL_PLATFORM_CC) -MM $(LOCAL_PLATFORM_DEP_FLAGS) -MT $@ $< -o $(@:$(PLATFORM_OBJ_SUFFIX)=$(PLATFORM_DEPS_SUFFIX))
endef

<build-option-compile> <build-defines>
# +++ Message from AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform.mk - 
# building dependencies for /home/NDS-UK/kyoupark/STB_SW/\
# FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/\
# /AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/components/\
# darwin_platform_components/darwin_player/src/player_xx_.o

@472
define PLATFORM_CC_BUILD_OBJECT
     echo +++ Message from $(NDS_PLATFORM)/platform.mk - Creating object $@
     echo "KT: $(LOCAL_PLATFORM_CC) $(LOCAL_PLATFORM_CC_FLAGS) $(COMMON_CC_FLAGS) -c $< -o $@"
     $(LOCAL_PLATFORM_CC) $(LOCAL_PLATFORM_CC_FLAGS) $(COMMON_CC_FLAGS) -c $< -o $@
endef

// as of 02/09/2016
//
KT:CC: /home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gcc 
-Os -fno-strict-aliasing -Wall -g -fno-builtin -DNeedFunctioPrototypes=1 -Wmissing-prototypes -Wshadow -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations   

-DAPP_MGMT_SIGNAL_24_7_SERVICE_TYPE_82H -DAPP_MGMT_SIGNAL_ETV_OTV_TRIGGER_MOD -DAPP_MGMT_SIGNAL_RECOMMENDATION_OTV_PROMO_MOD 
-DAUTHENTICATION_NDS_SAC -DBSKYB_SUPPORT_HEP_WITH_OIG -DCALLBACK_PSTN -DCAPTION_TELETEXT_LEGACY_LAYOUT -DCAROUSEL_MHC -DCAROUSEL_OTV -DCA_VIDEOGUARD_NDS_SECURE_RETURN_PATH 
-DCA_VIDEOGUARD_PARENTAL_RESTRICT -DCA_VIDEOGUARD_WATERSHED -DFRONT_END_DTT_USB -DFRONT_END_SAT 
-DFRONT_END_SAT_SCR -DFUSION_APP_MGMT_SUPPORTED -DFUSION_AUTHENTICATION_SUPPORTED -DFUSION_BDL_SUPPORTED 
-DFUSION_CA_VIDEOGUARD_SUPPORTED -DFUSION_DYNAMIC_TSA_SUPPORTED -DFUSION_HEADEND_METADATA_SUPPORTED 
-DFUSION_HOME_NETWORK_SUPPORTED -DFUSION_METADATA_SUPPORTED -DFUSION_NETWORK_SUPPORTED -DFUSION_PDL_SUPPORTED 
-DFUSION_PVOD_SUPPORTED -DFUSION_PVR_SUPPORTED -DFUSION_TARGETED_MESSAGING_SERVICE_SUPPORTED 
-DFUSION_USER_ACTIVITY_SUPPORTED -DFUSION_VIDEOGUARD_NOTIFY_SUPPORTED -DFUSION_VWS_SUPPORTED -DGUIDE_BSKYB_FORMAT_LOGICAL_CHAN_NO 
-DGUIDE_BSKYB_SUBSCRIBER_PROPERTIES_USED -DHEADEND_METADATA_OIGC -DHOME_NETWORK_MEDIA_RENDERER 
-DHOME_NETWORK_PLANNER_SERVER -DHOME_NETWORK_REMOTE_UI -DHOTPLUG_SUPPORT -DIPPV -DMCM_PVR_RECORD_CA_HOLES 
-DMETADATA_SI_XSI_SSR -DNETWORK_CONFIGURE_LAN -DPDL_NDS_SECURE_AUTH -DPLAYER_PIN_HANDLING_A 
-DPLAYER_REMOTE_UI_HTTP -DPVOD_LINEAR_TRANSPORT -DPVR_CHECK_XTV_STATUS -DPVR_CLASSIC_REVIEW_BUFFER 
-DSERIES_IMPLICIT_SERIES_DELETION -DSERIES_SYNCHRONIZE_BOOKINGS_WITH_SIGNUPS -DSI_SERVICE_SCAN_XSI 
-DSOFTWARE_DOWNLOAD_OTV -DSRM_ELEMENTARY_STREAMS_SELECTION_A -DSRM_USE_PI_SCHEDULE_FLAG_FOR_AVAILABILITY 
-DUSBTUNER_SUPPORTED -DUSB_SUPPORTED -DUSER_ACTIVITY_BARB -DUSER_ACTIVITY_SSP 
-DWIFI_SUPPORTED -DWLM_SUPPORTED -DRELEASE_DBG -DDIAG_RELEASE_DBG 
-DDIAG_MIN_FOOTPRINT -DOTV_CAROUSEL_SUPPORTED -DXSI_SUPPORTED -DLINT_ERRORS_ONLY= 
-DLINT_RESTORE= -DPROFILE_A -DDIAG_LOG_NDEBUG -DNDEBUG -DMEMMAN_TRUSTED_CLIENT 
-DGFX_NO_SHAPE -DGFX_IMAGE_NO_DITHERING -DGFX_PAINTER_NO_ARGB16_4444 
-DGFX_PAINTER_NO_ARGB16_4444_PREMULT -DGFX_PAINTER_NO_RGB16_565 
-DGFX_PAINTER_NO_SURFACE_RW -DMSCQ189287_CLOCK_MONOTONIC_NOT_SUPPORTED 
-DCQ171339 -DLEGACY_MIGRATION_SUPPORT -DSUN_BUILD -DNDS_APP_TYPE_PICASSO 
-DDIAG_JAVA_DEBUG -D_XOPEN_SOURCE=600 -DAMS_BCM_MIPS4K_LNUX_DARWIN_01 
-DFUSION_PROFILE -DMEMMAN_TRUSTED_CLIENT -DMSCQ1854424_SP_SCHEMA_ONLY 
-DMSCQ2375670_SET_PROVIDER_CLASS_MEMBERSHIP -DCQ380004_USE_STB_SW_01 
-D`MEMMAN_FORCE_USE_MALLOC_DIRECTLY` -DBUILDING_DISK_PARTITION 

-DCDI_IOCTL_DEFINITIONS="/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc/ioctl_magic.h" 
-DCDI -DIS_BIG_ENDIAN -D__BIG_ENDIAN -D_XOPEN_SOURCE=600 -D__USE_XOPEN2K -D_GNU_SOURCE 

-I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/fusion2/helper_libraries/storage_helper/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_S
YSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemcommon/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemlang/
inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemlocator/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/b
uild/components/system_libraries/systemutil/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemstring/inc -I/home/NDS-UK/kyoupark/STB_SW/FU
SION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemtime/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemi
tc/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemconfig/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION
/build/components/system_libraries/systemobject/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/diag/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION
_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/memman/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemitc/inc -
I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/ssm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/
components/system_libraries/ipc/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/common_middleware/xipc/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRA
TION/BSKYB_INTEGRATION/build/components/system_control_and_diagnostics/sysinit/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/pdm/i
nc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_resource_management/pdm/src/server/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INT
EGRATION/build/components/system_resource_management/pdm/src/common/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/tests/CUnit-2.0-2/CUnit/Headers -I/home/NDS
-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/components/system_libraries/systemalarm/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linu
x/inc/CDI_INC/include -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/nds/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BL
D_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc -I/home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/inc/nds -include /home/NDS-UK/kyoupark/STB_SW/FUSIONOS_2/
BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/nds/inc/clocks.h -ffunction-sections -fdata-sections   -c /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSK
YB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/components/system_resource_management/pdm/makefile_generated_config.c -o /home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTE
GRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/components/system_resource_management/pdm/src/disk_partition//home/NDS-UK/kyoupark/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION
/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/components/system_resource_management/pdm/makefile_generated_config.o

// $(LOCAL_PLATFORM_CC)
// /STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/\
// linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-linux-uclibc-gcc,
//
// $(LOCAL_PLATFORM_CC_FLAGS)
// -Os -fno-strict-aliasing -Wall -g -fno-builtin -DNeedFunctioPrototypes=1 \
// -Wmissing-prototypes -Wshadow -Wpointer-arith -Wstrict-prototypes \
// -Wmissing-declarations -DAPP_MGMT_SIGNAL_24_7_SERVICE_TYPE_82H 
// -DAPP_MGMT_SIGNAL_ETV_OTV_TRIGGER_MOD 
// ...
// -D_GNU_SOURCE \
// -I/... -ffunction-sections -fdata-sections,
//
// $(COMMON_CC_FLAGS)
// -DDIAG_FILE_ID=111, 
//
// -c aem_version.c 
// -o ../build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/\
// components/platform_management/aem/src/aem_version.o

<build-option-link>
define PLATFORM_BUILD_PROCESS_FROM_OBJECTS
    @echo +++ Message from $(NDS_PLATFORM)/platform.mk Linking Process $@
    @echo "KT: $(LOCAL_PLATFORM_LD) -Xlinker -Map -Xlinker $@.map -Xlinker --start-group $(^:$(PLATFORM_LIB_PREFIX)%$(PLATFORM_LIB_SUFFIX)=-l%) $(LOCAL_PLATFORM_PROCESS_LD_FLAGS) -Xlinker --end-group -o $@"
    $(LOCAL_PLATFORM_LD) -Xlinker -Map -Xlinker $@.map -Xlinker --start-group $(^:$(PLATFORM_LIB_PREFIX)%$(PLATFORM_LIB_SUFFIX)=-l%) $(LOCAL_PLATFORM_PROCESS_LD_FLAGS) -Xlinker --end-group -o $@
endef

PLATFORM_STRIP := $(COMPILER_ROOT)/bin/$(MIPS)-linux-uclibc-strip

# BUILD_SYSTEM/COMMON_MAKEFILES/process.mk
ifeq (YES,$(NDS_STRIP_PROCESS))
define LOCAL_PROCESS_STRIP_PROCESS
    $(COMMANDS_MKDIR) $(NDS_BUILD_ROOT)/$(NDS_PLATFORM)/$(NDS_PLATFORM_ENDIAN)/unstripped_processes
    $(COMMANDS_CP) $@ $(NDS_BUILD_ROOT)/$(NDS_PLATFORM)/$(NDS_PLATFORM_ENDIAN)/unstripped_processes/$(notdir $@)
    @echo Removing debug information from $@
    $(PLATFORM_STRIP) $@
endef


={============================================================================
|kt_dev_si_0001| comp-build-define

To set defines for a component, change component's makefile

COMPONENT_CC_DEFINES :=PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
COMPONENT_CC_DEFINES +=PCAT_LOG_POSSIBLE_VL_LEAKS                             

 
={============================================================================
|kt_dev_si_0001| comp-jpa

# diag.cfg
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/fs/NDS/config
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk


# JPA VTABLE(jpa_vtable.c)
#
# NOTE: node handle keeps increasing when created and not to be decreased when
# released. Each vtable has its own handleseed!  this means that need to have
# vtable and node handle to locate a unique node/element.
#
# NOTE: it will alloc note and element when creation is called. node size is 24
# bytes.
#

# VTable_t g_planner_adaptor_IteratorCreateRequest;
#
# INIT: just initialize vtable struct
#
# JPA_VTABLE_InitTable
# ((VTable_t*)&g_planner_adaptor_IteratorCreateReques,
# g_planner_native_mem_pool,
# g_planner_adaptor_api_diag_segment_id,
# NULL,JPA_VTABLE_MAX_UNBALANCED_ADDS)

# CREATE: 
# 	MEMMAN alloc the given size from the pool assigned when initialized and this is new element.
# 	MEMMAN alloc the VTNode(24 bytes) from the pool assigned when initialized and keep this new element's ptr in the node.
# 	return vtable node handle which is increments from its global vtable struct.
# 	return ptr of new element.
#
# out: el(element ptr), handle(node handle(idx) of the vtree).
# JPA_VTABLE_Create(&g_planner_adaptor_IteratorCreateRequest, &iteratorCreateRequest, &vtable_handle,sizeof(PLANNER_JAVA_ITERATOR_CREATE_REQUEST))
# JPA_VTABLE_Create(VTable_t* vtable, void **el, uint32_t *handle, size_t size)
#
# GET ELEMENT:
# 	traverse vtable binary tree using the given node handle, increase node's ref count and return note's ptr(that's element's ptr)
#
# JPA_VTABLE_GetElement(const VTable_t* vtable, uint32_t handle, void **el)
#
# FIND ELEMENT:
# 	traverse vtable tree using the given data ptr(element) and return data ptr(ele) and node handle. Basically to get node handle.
#
# JPA_VTABLE_FindElement(const VTable_t* vtable, VTABLE_CheckElementFunc check, void *data, void **el, uint32_t *handle)
#
# RELEASE ELEMENT:
# 	traverse vtable tree using the given handle and "free" element when node's ref count is 1 and decrease ref count to 0.
#
# JPA_VTABLE_ReleaseElement(VTable_t* vtable, uint32_t handle)

1. when vtable created, ref count of node is 1.
2. function calls which increases/decrease ref count:
	JPA_VTABLE_Create
		CreateNode # 32 bytes in MEMMAN alloc
	JPA_VTABLE_GetElement	
	JPA_VTABLE_ReleaseElement
	JPA_VTABLE_FindElement


={============================================================================
|kt_dev_si_0001| comp-jpa-print-systemstring

# How to print out systemstring

SYSTEM_STATUS KT_SYSTEMCOMMON_Print_SysString(SYSTEMSTRING_Handle l_SysString)
{
    uint8_t     * l_byte_array = NULL;
    uint32_t      l_byte_length= 0U;
    SYSTEM_STATUS l_result = SYSTEMSTRING_STATUS_FAILED;
    uint16_t    * l_unicode_array = 0U;
    uint32_t      i = 0U;
    uint32_t      j = 0U;
    SYSTEMSTRING_Encoding l_encoding = SYSTEMSTRING_ENCODING_UNDEF;

    DIAG_DECLARE_FUNCTION("KT_SYSTEMCOMMON_Print_SysString");

    /* NOTE: If this is being modified, it should be updated to use SYSTEMSTRING's ability
     * to return UTF16 instead of doing the conversion here.
     */
    if (SYSTEMSTRING_NULL_HANDLE == l_SysString)
    {
        l_result = SYSTEMSTRING_STATUS_OK;
    }
    else if (SYSTEMSTRING_GetEncoding((SYSTEMSTRING_Handle)l_SysString, &l_encoding) != SYSTEMSTRING_STATUS_OK)
    {
        DIAG_LOG_ERROR(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: SYSTEMSTRING_GetEncoding failed"));
    }
    else if (SYSTEMSTRING_GetByteLength((SYSTEMSTRING_Handle)l_SysString, l_encoding, &l_byte_length) != SYSTEMSTRING_STATUS_OK )
    {
        DIAG_LOG_ERROR(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: SYSTEMSTRING_GetByteLength failed"));
    }
    else if (l_byte_length == 0U)
    {
	    l_result = SYSTEMSTRING_STATUS_OK;
        DIAG_LOG_ERROR(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: l_byte_length(%d)", l_byte_length ));
    }
    else
    {
        l_byte_array = MEMMAN_API_AllocStaticP(g_systemcommon_mem_pool,l_byte_length);

        if (NULL != l_byte_array)
        {
			/* here are changes */
            if (SYSTEMSTRING_GetBytes((SYSTEMSTRING_Handle)l_SysString,
                l_encoding, l_byte_length, &l_byte_length, l_byte_array ) == SYSTEMSTRING_STATUS_OK)
            {
                    DIAG_LOG_WARN(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: l_encoding(%d), str(%s)", l_encoding, (char*)l_byte_array ));
            }
            else
            {
                DIAG_LOG_ERROR(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: Could not get bytes"));
            }

            (void)MEMMAN_API_FreeStaticP(g_systemcommon_mem_pool, l_byte_array);
        }
        else
        {
            DIAG_LOG_FATAL(g_systemcommon_adaptor_api_diag_segment_id, ("KT_SYSTEMCOMMON_Print_SysString: Failed to allocate memory 0x%x",SYSTEMCOMMON_JAVA_getLeakCount()));
        }
    }

    return l_result;
}

void PLANNER_JAVA_ApiBookedProgrammeGetString(NDSJNI_ENV *l_env)
{
    jint jHandle     = *((jint*)(l_env->params[0]));
    jint jPropertyID = *((jint*)(l_env->params[1]));

    SYSTEMSTRING_Handle l_string = SYSTEMSTRING_NULL_HANDLE;
    jstring jString              = NULL;
    SYSTEM_STATUS status         = PLANNER_API_STATUS_NOT_OK;

    DIAG_DECLARE_FUNCTION("PLANNER_JAVA_ApiBookedProgrammeGetString");
    DIAG_LOG_FN_ENTRY(g_planner_adaptor_api_diag_segment_id);

    status = PLANNER_API_BookedProgramme_GetPropertyString(
        (PLANNER_API_BookedProgramme_Handle)jHandle,
        (PLANNER_API_BookedProgramme_PropId)jPropertyID,
        &l_string);

    if (!SYSTEM_STATUS_IS_OK(status))
    {
        DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("PLANNER_API_BookedProgramme_GetPropertyString failed: 0x%x",status));
    }
    else
    {
		### HERE ###
        KT_SYSTEMCOMMON_JAVA_SysStringtoJavaString(l_env, l_string, &jString);
		
        if (!SYSTEM_STATUS_IS_OK(SYSTEMCOMMON_JAVA_SysStringtoJavaString(l_env, l_string, &jString)))
        {
            DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("Failed to create Java string"));
            status = PLANNER_API_STATUS_NOT_OK;
        }
        else
        {
            /* success */
        }

        (void)SYSTEMSTRING_Destroy(l_string);
    }

    l_env->returnVal = (uint32_t)jString;

    (void)PLANNER_JAVA_ParseReturn(l_env, status);

    DIAG_LOG_FN_EXIT(g_planner_adaptor_api_diag_segment_id, status);
}


void KT_PRINT_SYS_STRING(DIAG_LOG_uiSegmentId_t segment_id, SYSTEMSTRING_Handle str_handle)
{
	SYSTEM_STATUS status;
	SYSTEMSTRING_Encoding encoding = SYSTEMSTRING_ENCODING_UNDEF;
	uint32_t max_length = 0U, actualLength = 0U;
	uint8_t buffer[256] = {0}; /* limit the print buffer size */

	DIAG_DECLARE_FUNCTION("KT_PRINT_SYS_STRING");

	if(str_handle == SYSTEMSTRING_NULL_HANDLE){
		DIAG_LOG_ERROR(segment_id,("string = SYSTEMSTRING_NULL_HANDLE"));
		return;
	}

	status = SYSTEMSTRING_GetEncoding(str_handle, &encoding);

	if (SYSTEM_STATUS_IS_OK(status))
	{
		status = SYSTEMSTRING_GetByteLength(str_handle ,encoding, &max_length);	
	}

	if ( (max_length > 0U) && (SYSTEM_STATUS_IS_OK(status)))
	{
		status = SYSTEMSTRING_GetBytes(str_handle,encoding, 256U,&actualLength,buffer);
	}

	/* make sure there is a null terminator at end of buffer for print */
	if(SYSTEM_STATUS_IS_OK(status)){
		if(actualLength>256U){
			buffer[255U] = 0U;
		}else{
			buffer[actualLength] = 0U;
		}
	}else{
		buffer[0] = 0U;
	}
	
	DIAG_LOG_ERROR(segment_id,("KT_PRINT_SYS_STRING: string = %s",buffer));
}


#
# DARWIN_PLATFORM\DARWIN_DIAG_JAVA
#

# as of Jan. 2012
#
(DiagFactory.java)
final public class DiagFactory 
{
	private final String DEFAULT_SEGMENT = "J_GC";


NDS_BUILD_TYPE_darwin_diag_native = debug
#define DIAG_JAVA_DIAGNAME "JDiag"
#
# use this call for all levels except info from Picasso
logChunksExtended
	Java_com_nds_fusion_diagimpl_DiagImpl_natLogExt
		DIAG_JAVA_natLogExt

# APP is actually using different diag segment and this causes confusion.
#
J_GC                |  on   | _ _ E W _ _ _ _ _ _ _

\DARWIN_PLATFORM\DARWIN_SYSTEMCOMMON_JAVA\impl\SystemCommonObjectImpl.java
	public static Diag diag = DiagImpl.create("J_GC", Diag.Trace.WARN | Diag.Trace.ERROR ); /*singleton instance, there can't be more than one DIAG Instance with the same segment name */
	protected boolean isValid = false; /* isValid and nativeHandle are protected because they need to be visible in derived classes so can be set directly from C code*/

DiagImpl.java
    public static Diag create(String segmentName, int traceBitPattern)
    {
        Diag newDiag = create(segmentName);
        newDiag.setTraceSettings(traceBitPattern);
        return newDiag; 
    }

# lists as of 14 Sept 2011
#
**KT: DIAG_JAVA_natCreate(l_string:J_GC, pSegmentID:0xbeef005a
**KT: DIAG_JAVA_natCreate(l_string:PICASSO, pSegmentID:0xbeef006a
**KT: DIAG_JAVA_natCreate(l_string:EPG_PRFM, pSegmentID:0xbeef006b
**KT: DIAG_JAVA_natCreate(l_string:MST_SSR, pSegmentID:0xbeef006c
**KT: DIAG_JAVA_natCreate(l_string:MST_ET, pSegmentID:0xbeef006d
**KT: DIAG_JAVA_natCreate(l_string:EPG_ANYT, pSegmentID:0xbeef006e
**KT: DIAG_JAVA_natCreate(l_string:EPG_ME, pSegmentID:0xbeef006f
**KT: DIAG_JAVA_natCreate(l_string:EPG_CONF, pSegmentID:0xbeef0070
**KT: DIAG_JAVA_natCreate(l_string:EPG_SCR, pSegmentID:0xbeef0071
**KT: DIAG_JAVA_natCreate(l_string:EPG_KEY, pSegmentID:0xbeef0072
**KT: DIAG_JAVA_natCreate(l_string:MST_DFIL, pSegmentID:0xbeef0073
**KT: DIAG_JAVA_natCreate(l_string:EPG_BOOK, pSegmentID:0xbeef0074
**KT: DIAG_JAVA_natCreate(l_string:EPG_LISD, pSegmentID:0xbeef0075
**KT: DIAG_JAVA_natCreate(l_string:MST_EVT, pSegmentID:0xbeef0076
**KT: DIAG_JAVA_natCreate(l_string:EPG_DEV1, pSegmentID:0xbeef0077
**KT: DIAG_JAVA_natCreate(l_string:EPG_UI, pSegmentID:0xbeef0078
**KT: DIAG_JAVA_natCreate(l_string:EPG_DEV2, pSegmentID:0xbeef0079
**KT: DIAG_JAVA_natCreate(l_string:EPG_TVVM, pSegmentID:0xbeef007a
**KT: DIAG_JAVA_natCreate(l_string:EPG_DEV3, pSegmentID:0xbeef007b
**KT: DIAG_JAVA_natCreate(l_string:EPG_DEV4, pSegmentID:0xbeef007c
**KT: DIAG_JAVA_natCreate(l_string:EPG_DEV5, pSegmentID:0xbeef007d
**KT: DIAG_JAVA_natCreate(l_string:EPG_DLG, pSegmentID:0xbeef007e
**KT: DIAG_JAVA_natCreate(l_string:PICO, pSegmentID:0xbeef007f
**KT: DIAG_JAVA_natCreate(l_string:EPG_PLAY, pSegmentID:0xbeef0080
**KT: DIAG_JAVA_natCreate(l_string:EPG_ALM, pSegmentID:0xbeef0081
**KT: DIAG_JAVA_natCreate(l_string:MST, pSegmentID:0xbeef0082
**KT: DIAG_JAVA_natCreate(l_string:EPG_LIST, pSegmentID:0xbeef0083
**KT: DIAG_JAVA_natCreate(l_string:MST_ASP, pSegmentID:0xbeef0084
**KT: DIAG_JAVA_natCreate(l_string:EPG_PRF, pSegmentID:0xbeef0085
**KT: DIAG_JAVA_natCreate(l_string:EPG_FS, pSegmentID:0xbeef0086
**KT: DIAG_JAVA_natCreate(l_string:EPG_MISC, pSegmentID:0xbeef0087
**KT: DIAG_JAVA_natCreate(l_string:MST_TEST, pSegmentID:0xbeef0088
**KT: DIAG_JAVA_natCreate(l_string:EPG_BAN, pSegmentID:0xbeef0089
**KT: DIAG_JAVA_natCreate(l_string:EPG_TVG, pSegmentID:0xbeef008a
**KT: DIAG_JAVA_natCreate(l_string:EPG_COMP, pSegmentID:0xbeef008b
**KT: DIAG_JAVA_natCreate(l_string:EPG_GNOM, pSegmentID:0xbeef008c
**KT: DIAG_JAVA_natCreate(l_string:EPG_CA, pSegmentID:0xbeef008d
**KT: DIAG_JAVA_natCreate(l_string:MST_AR, pSegmentID:0xbeef008e
**KT: DIAG_JAVA_natCreate(l_string:EPG_INIT, pSegmentID:0xbeef008f
**KT: DIAG_JAVA_natCreate(l_string:EPG_AFRM, pSegmentID:0xbeef0090
**KT: DIAG_JAVA_natCreate(l_string:VGC_JAVA, pSegmentID:0xbeef0091


#
# DARWIN_PLATFORM\DARWIN_PLAYER_JAVA
#
COMPONENT_NAME:= darwin_player_native
DARWIN_PLATFORM\DARWIN_GUIDE_JAVA\src\inc\natPlayerCommon.h: #define PLAYER_JAVA_DIAGNAME "J_PLAYER"


#
# DARWIN_PLATFORM\DARWIN_SYSTEMCOMMON_JAVA
#
COMPONENT_NAME:= darwin_systemcommon_native
\DARWIN_PLATFORM\DARWIN_SYSTEMCOMMON_JAVA\src\inc\natSystemCommon.h #define SYSTEMCOMMON_JAVA_DIAGNAME "J_SYSTEMCOMMON"
NDS: ^0946686835.523503 !ERROR -AIni         < 


#
# SYSINIT. From sysinit point of view, there is one 'ADAPTOR_INIT' component and it manages all actual jpa components. 
# So each jpa component is not SYSINT aware. 
#
ADAPTOR_INIT_AddRunlevelListeners(adaptor_init_list)
	f_adaptor_init_adaptors = adaptor_init_list

ADAPTOR_INIT_StartInitialiseListeners

ADAPTOR_INIT_RunLevelRequest
	ADAPTOR_INIT_MainThread
		SYSINIT_RunLevelRequestShutdown
			ADAPTOR_INIT_ChangeWrapperEndState
				f_adaptor_init_adaptors[i](newstate,&env)
					SYSINIT_API_NotifyRunLevelChanged


={============================================================================
|kt_dev_si_0001| comp-jvm

COMPONENT_NAME := javaengine

#
DIAG_LOG_RegisterTraceSegment("JAE", 3, NULL, &g_javaengine_segment_id)) 

# Function for initialising the JavaEngine component, and registering 
# its callbacks with the AEM component. 
#
jpa/modules/jvm-glue/src/c/src/je_aem.c

SYSTEM_STATUS JE_AEM_Register(void)
{
  .launch_fn              = JE_AEM_LaunchCallback,
  .user_input_fn          = JE_AEM_UserInputCallback,

  callback.terminate_fn = JE_TerminateFunctionCB; 
  callback.user_input_fn = JE_UserInputFunctionCB; 
  ...(more callbacks)

  AEM_API_RegisterApplicationEngine(callback); 
}


(vobs\THIRD_PARTY_LIBRARIES\BSKYB_JTH\build\engines\java\src\ceej_bsp.c)
JE_UserInputFunctionCB
	CEEJ_BSP_PostKeyEvent # point where pumping keys to app


<mem>
[JAVAENGINE_MEM_CONFIG]
POOL_FLAGS=123
POOL_NAME="JAVAENGINE"
POOL_SIZE=24117248

jpa/modules/jvm-glue/src/c/src/ceej_bsp.c

static BSP sBSPStorage = {
	.version                        = BSP_VERSION,

	.InitPostflight                 = InitPostflight,

	.Memory_Alloc                   = Memory_Alloc,
	.Memory_AllocCode               = Memory_AllocCode,
	.Memory_Dispose                 = Memory_Dispose,
	.Memory_DisposeCode             = Memory_DisposeCode,
	.Memory_TotalPhysical           = Memory_TotalPhysical,
	.Memory_MaximumHeapSize         = Memory_MaximumHeapSize,
};


/** -----------------------------------------------------------------------------*
* @function Memory_Alloc
*
* @description
* This method is used by the VM to allocate memory.  Since the VM
* has its own internal memory manager, it will only allocate
* large chuncks of memory with this method.
* 
* @param inBSP The BSP pointer.
* @param outPtr The returned memory allocated.
* @param inSize The amount of memory to allocate.
*                 
* @return Returns BSP_NOERR on success, BSP_ERR otherwise.  If
* successful, the pointer to the memory is returned in outPtr.
* -----------------------------------------------------------------------------*/
static ooInt BSPCALL Memory_Alloc(BSP* inBSP, void** outPtr, UInt32 inSize)
{
	return CEEJ_Memory_Alloc(outPtr,inSize);
}

jpa/modules/jvm-glue/src/c/src/ceej_mem.c

ooInt CEEJ_Memory_Alloc(void** outPtr, UInt32 inSize)
{
	DIAG_DECLARE_FUNCTION(__FUNCTION__);

 	if (hMemoryPool == 0L)
	{
		CEEJ_Memory_Init();
	}

	ooInt result = BSP_NOERR;
	*outPtr = MEMMAN_API_AllocStaticP(hMemoryPool, inSize);

	return result;
}


={============================================================================
|kt_dev_si_0001| comp-aem

#-----------------------------------------------------------
# contacts
#-----------------------------------------------------------
Aourik, Rachid(Owner, FR);

#-----------------------------------------------------------
# diag and debug build
#-----------------------------------------------------------
COMPONENT_NAME := aem

#
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/gaudi_orchid/build_options.mk
# picasso
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk

NDS_BUILD_TYPE_aem = debug

\components\platform_management\aem\src


AEM_API_STATUS_ERROR 0x421008


#-----------------------------------------------------------
# WP
#-----------------------------------------------------------
# STB performs the iTV application authentication prior to download is started. This includes validation of the iTV application certificate. 
# The certificate is validated by AEM.  
FSION-DSN-2657 WP471 iTV Application CertificatesÂ” covers all aspects of the iTV application download and relevant content authentication process.

The AEM relies on the PLAYER component to signal the presence of applications that can be launched, and on the GUIDE component to retrieve stream information for the service currently tuned to and the services containing applications that are able to be launched.

Interactive Main Menu

IMS: Interactive Menu Service (or Pure Interactive Service) Â– service which is mainly used to launch interactive applications. It may or may not contain video/audio content

The System shall display the Interactive Trigger graphic to the Viewer when it loads an Interactive Trigger module that contains a graphic, while presenting Live TV in full-screen.

transer file: FSION-DSN-2563_WP469_-_Application_Transitions_and_Communications.doc. 3.3.
The EPG and the AE use cookies to transfer information between the EPG and interactive applications and vice versa. These cookies are handled by the OFS. 

The AEM passes this URI to the AE as a parameter to pre-registered launch call-back. 
The AEM parses passed URIs to determine which application engines support specific content types, and therefore which application engine should be used to launch any specified URI.

type of interactive applications 

Â¾	The Trigger Interactive Applications.
The application of this type can be started automatically by regular tuning (by DCA, TV Guide, etc.) to the service after back-off period if this application was defined as an auto-launched linked trigger application or by pressing GREEN trigger on the channel. An Interactive Trigger application can be local or remote. 
The Local Trigger application means that the linked service is the same as the currently tuned. The each part of triplet (network id, transport stream id and service id) should be defined as 0.
The Remote Trigger application means that the linked service is different to the currently tuned.

Â¾	The Auto-launch Interactive Applications.
The Applications of this type can be started by regular tuning (by DCA, TV Guide, etc.) to the service that is defined as auto-launch interactive service.

Â¾	The Pure Interactive applications.
The Applications of this type can be started by selecting an interactive application from the Interactive Main Menu.


#-----------------------------------------------------------
# internal
#-----------------------------------------------------------
# threads:
# AEM_StateMonitorThread
# AEM_InputMonitorThread
#
# rcu flows:
# GfxInputStartDirect->GfxInputDispatcher(poll)->GfxInputPostReadEvents(read)->
#
# (aem_userinput.c)
# AEM_InputMonitorThread::
# 	GFX_INPUT_EVENTBUFFER_WaitForEventWithTimeout 
# 	GFX_INPUT_EVENTBUFFER_GetEvent
#	
#	if(anEvent.type == GFX_INPUT_KEYPRESS) 
# 		DIAG_LOG_MIL(g_aem_segment_id, ("KEY_PRESS: code=0x%.4x", anEvent.key_code));
# 
#
# (to use a key to do something specific, see below. Need to edit 'AEM/inc/dependencies.mk' to include necessary files to compile.)
# MEMCHECK
#
# print out decimal as well as app use its decimal value
#
# if (anEvent.type == GFX_INPUT_KEYPRESS)
# {
# 	input_type = AEM_USER_INPUT_TYPE_KEYPRESS;
# 	DIAG_LOG_MIL(g_aem_segment_id, ("KEY_PRESS: code=0x%.4x", anEvent.key_code));
# 
# 	/* USER_INPUT_KEY_BACK */
# 	if((anEvent.key_code == 0xE002U) && (g_planner_native_mem_pool) )
# 	{
# 		DIAG_LOG_WARN(g_aem_segment_id, ("KT_JPA_UP: code=0x%.4x, free=%d", anEvent.key_code, MEMMAN_API_GetMemorySizeP(g_planner_native_mem_pool, MEMMAN_API_MemInfoPoolFreeSize) ));
# 		DUMP_USED_BLOCKS(g_planner_native_mem_pool);
# 		/*MemCheckMemory(g_planner_native_mem_pool, MEMSTATUS_LOGLEVEL(MEMMAN_API_MEMSTATUS_ALL, MEMSTATUS_LOGLEVEL_WARN)); */
# 	}
# }
# 
#
# (app)
#class KeyPressedTask implements Runnable
#{
#	public void run()
#	{
#		Zapper.getInstance().getKeyProcessor().keyPressed(keyEvent);
#	}
#}
# 
#
# (define app key codes)
# /Tools/CEUIFramework/src/java/picasso/framework/IKeyCode.java
#
(\Picasso\picasso\Picasso\src\java\picasso\ui\epg15\KeyProcessor.java)
(1)
public void setIgnoreKeyEvents(boolean b)
{
    LOGGER.logWarn("=" + b);
    System.err.println("KT: setIgnoreKeyEvents=" + b );
}

(2)
public void keyPressed(final KeyEvent e)
{
    System.err.println("KT: keyPressed=" + e.getKeyCode() );
    if (respondingToKeyPresses)
    {
        respondingToKeyPressed(e);
    }
    else
    {
        LOGGER.logInfo("We're in 'responding to key releases' mode', so ignoring key press "
                + e.getKeyCode());
    }
    e.consume();

}


(\Picasso\picasso\Picasso\src\java\picasso\ui\epg15\presentationmgr\PresentationManager.java)
public boolean dispatchKey(IKeyCode key)
{
}


# AEM_API_xxx is an interface to upper app(epg). from vobs/CMS_PLATFORM_SERVICES/AEM/inc/aem_api.h
# call shm_open for a promo
# The only case where AEM creates a shared memory object for Promo applications is when AEM_API_Signalling_GetParameters is called
# AEM_API_Signalling_GetParameters


# ADPT_AEM. g_vt_aem_adaptor_invite_listeners and g_vt_aem_adaptor_application_data
#

COMPONENT_NAME:= darwin_aem_native


DARWIN_ADAPTOR_AEM_AllocateMemory
[AEM_MEM_CONFIG]
GFX_PIXEL_FMT=0x00000002
POOL_FLAGS=123
POOL_NAME="ADPT_AEM"
POOL_SIZE=1000

# this pool is used only in AEM_JAVA_Invite_RegisterStateListener/AEM_JAVA_Invite_DeregisterStateListener
#
g_aem_native_mem_pool. 	/* ADPT_AEM */
=================================
AEM_JAVA_API_SetKeyFilterList
	MEMMAN_API_AllocStaticP(g_aem_native_mem_pool,)

DARWIN_ADAPTOR_AEM_Init	
	/* ADPT_AEM */
	DARWIN_ADAPTOR_AEM_AllocateMemory
		SYSTEMCOMMON_JAVA_AllocateMemory(&g_aem_native_mem_pool, AEM_JAVA_MEMORY_POOL_SECTION_NAME, sizeof(AEM_JAVA_MEMORY_POOL_SECTION_NAME))
	DARWIN_ADAPTOR_AEM_InitVTables
		DARWIN_ADAPTOR_AEM_InitVTable(&g_vt_aem_adaptor_invite_listeners,)
		DARWIN_ADAPTOR_AEM_InitVTable(&g_vt_aem_adaptor_application_data,)
			DARWIN_ADAPTOR_AEM_InitVTable
				JPA_VTABLE_InitTable(vtable, g_aem_native_mem_pool, g_aem_adaptor_diag_seg_id, NULL, JPA_VTABLE_MAX_UNBALANCED_ADDS)))

				
g_vt_aem_adaptor_invite_listeners. 
=================================
AEM_JAVA_Invite_RegisterStateListener: JPA_VTABLE_Create
AEM_JAVA_Invite_DeregisterStateListener: JPA_VTABLE_ReleaseElement
AEM_JAVA_InviteStateListener: JPA_VTABLE_GetElement and JPA_VTABLE_ReleaseElement

		uint32_t vtable_cnt=0;
		
		if(JPA_VTABLE_GetCount(&g_vt_aem_adaptor_invite_listeners, &vtable_cnt) != JPA_VTABLE_STATUS_SUCCESS)
		{
			DIAG_LOG_ERROR(g_aem_adaptor_diag_seg_id, ("JPA_VTABLE_GetCount failed" ));
		}
		
		DIAG_LOG_ERROR(g_aem_adaptor_diag_seg_id, ("KT: DSL: %d, %d", g_cnt_invite_listener, vtable_cnt ));

g_vt_aem_adaptor_application_data
=================================
		uint32_t vtable_cnt=0;
		
		/* KT */
		if(JPA_VTABLE_GetCount(&g_vt_aem_adaptor_application_data, &vtable_cnt) != JPA_VTABLE_STATUS_SUCCESS)
		{
			DIAG_LOG_ERROR(g_aem_adaptor_diag_seg_id, ("JPA_VTABLE_GetCount failed" ));
		}
		
		DIAG_LOG_ERROR(g_aem_adaptor_diag_seg_id, ("KT: AT: adata vtable %d", vtable_cnt ));
		/* KT */

AEM_JAVA_Application_Terminate: Find and Release
AEM_JAVA_ApplicationEventListener: AEM_API_ApplicationEventCreated and AEM_API_ApplicationEventDeleted. Callback from AEM.
AEM_JAVA_DeregisterCleanup_DeleteAllApplicationData: Clean Up.


# -2
public class ALMManager extends BaseManager implements IALMManager
{
	private EventListener					eventListener;
	...
	eventListener = new EventListener(EXECUTOR, model);
	...
}

# 0: DARWIN_AEM_JAVA/api/AemApplicationEventListner
public interface AemApplicationEventListener


# -1
public class EventListener implements IExecutorTaskDispatcher, AemApplicationEventListener
{
  ...
	public EventListener(IExecutor executor, InteractiveApplicationModel model)
	{
		tde = TaskDispatchingExecutorFactory.getInstance().create(executor, this);
		this.model = model;
	}
	public void register(AemApi aemApi)
	{
		##
		aemApi.registerApplicationEventListener(this, DUMMY_USERTAG);
	}
	...
}


# 1
public class AemApiImpl extends AemApi
{
	  ...
    public void registerApplicationEventListener(AemApplicationEventListener listener, Object userTag) 
    throws AemAlreadyRegisteredException
    {
        natAemRegisterApplicationEventListener(listener, userTag);
    }
    ...
}

# 2: DARWIN_AEM_JAVA/src_sun/sunnatAemRegisterNatives.c
const JNINativeMethod com_nds_fusion_aemimpl_AemApiImpl[]	=	{
  ...
    { (char*)"natAemRegisterApplicationEventListener",    (char*)"(Lcom/nds/fusion/aem/AemApplicationEventListener;Ljava/lang/Object;)V",
        (void*)Java_com_nds_fusion_aemimpl_AemApiImpl_natAemRegisterApplicationEventListener}, 
  ...
};

# 3: DARWIN_AEM_JAVA/src_sun/sunnatAemApiImpl.c
JNIEXPORT void JNICALL Java_com_nds_fusion_aemimpl_AemApiImpl_natAemRegisterApplicationEventListener
  (JNIEnv *THIS, jclass jClass, jobject param1, jobject param2)
{
    NDSJNI_ENV env;

    env.THIS = THIS;
    env.jClass = &jClass;
    env.params[0] = (void*)&param1; /* listener */
    env.params[1] = (void*)&param2; /* user tag */

    AEM_JAVA_API_RegisterApplicationEventListener(&env);
}

# 4: DARWIN_AEM_JAVA/src/natAemApiImpl.c
void AEM_JAVA_API_RegisterApplicationEventListener(NDSJNI_ENV *env)
{
        status = AEM_API_Application_RegisterStateChangeListener(AEM_JAVA_ApplicationEventListener,
                        (uint32_t)AEM_JAVA_APPLICATION_EVENT_LISTENER_USERTAG);
}


<key-pressed>
// these three are pair
!MIL    -aem          		< p:0x000001f6 P:APP t:0x01400520 T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(GREEN)e201 
!MIL    -EPG_KEY      		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:KeyProcessor F:keyPressed L:159 > T:CEE-J EventQueue Reader 0:Keycode is 1:GREEN x1 @946792115994-946792118495
!MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": 
  "`KeyPressRemote`","action": "GREEN","title": "Key Press GREEN","label": "","currentscreen": "/tv/live/108/banner"}

NDS: ^MIL   -EPG_UI       < M:PresentationManager F:dispatchKey L:00739 > KEYPRESS 1:35 handled by Screen FULLSCREEN layer=0, id=0 View 458756
NDS: ^MIL   -EPG_UI       < M:PresentationManager F:dispatchKey L:00739 > KEYPRESS 1:145 handled by Screen FULLSCREEN layer=0, id=0 View 458756
NDS: ^MIL   -EPG_UI       < M:PresentationManager F:dispatchKey L:00739 > KEYPRESS 1:140 handled by Screen OPTIONS layer=3, id=8 View 65544

or

NDS: !MIL    -EPG_UI      < P:APP M:ScreenDirectingKeyListener F:dispatchKeyToViewOf L:57 > 
  T:CEE-J EventQueue Reader 0:KEYPRESS 1:PLAY x1 @946694137138-946694151311 handled by Screen FULLSCREEN layer=0, id=0 View 458756

={============================================================================
|kt_dev_si_0001| comp-ams comp-uam

AMS component

DARWIN_PLATFORM/DARWIN_UAM/src/interface_mgr/inc/uam_ssf_interface.h        SSF_RECORD_TYPE_EV_RETURN_TO_LAST_LIVE  = 0x0c, /* 12 */
XTV_High_Level_VOB/EGEN/DataClient/AGF/src/AGFData.cpp         case EV_RETURN_TO_LAST_LIVE:
XTV_High_Level_VOB/EGEN/DataClient/FileSys/src/fusionfs/fileSysAdapter.cpp                 case EV_RETURN_TO_LAST_LIVE:
XTV_High_Level_VOB/EGEN/DataClient/FileSys/src/ssf_fusion/fileSysAdapter.cpp             case EV_RETURN_TO_LAST_LIVE:
XTV_High_Level_VOB/EGEN/DataClient/framework/src/compactor.cpp      case EV_RETURN_TO_LAST_LIVE:
XTV_High_Level_VOB/EGEN/DataClient/framework/src/dataClient.cpp         case EV_RETURN_TO_LAST_LIVE:
XTV_High_Level_VOB/EGEN/DataClient/iOS/src/iOSData.cpp      case EV_RETURN_TO_LAST_LIVE:


={============================================================================
|kt_dev_si_0001| comp-lae

# comp-LAE : CMS_PLATFORM_SERVICES

# From: Rune Petersen [mailto:rune.petersen@craftwork.dk] 
#
AppEngineSm.cpp
	LAE_RunLevelRequest:

void Globals::DarwinInit()

void IframeSm::idleHandler(Message &msg)
	PLAYER_API_VideoFrame_Open(m_iframeHandle, PLAYER_VIDEO_FRAME_STREAM_FORMAT_ES|PLAYER_VIDEO_FRAME_TYPE_MPEG2_VIDEO);
		MPM_PRES_OpenVideoFrame(l_mpm_info, PLAYER_VIDEO_FRAME_MPM_EventHandler))

void AemSm::registerAemCallbacks()
	AEM_API_RegisterApplicationEngine


={============================================================================
|kt_dev_si_0001| comp-gfx

# gfx.cfg
POOL_SIZE_GFX_REGION=125000


={============================================================================
|kt_dev_si_0001| comp-atm comp-adsmart

http://hetty.cisco.com/fusionmadesimple/index.php/BSkyB_AdSmart_SI_Helpers

<bdl-job>
// seems it do not have shrec
!MIL    -VRM_SERVER   P:MW T:SRM_HP_THREAD M:job_man_srv.c F:JobManSrvStart L:4948 > VRM_JOB_START: jtVRM=`jb-jb-bdl-record`, jhVRM=0x2000051 
!MIL    -VRM_SERVER   P:MW T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: `bdl:0x50`,0x2907286b: E_BDL_INT_STATE_NONE -> (E_BDL_INPUT_START) -> E_BDL_INT_STATE_WAIT_MCON_STARTED 
!MIL    -VRM_SERVER   P:MW T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:6353 > Initiaizing Record FSM: rec_handle:0x53001f, item_ID:0x2907286b 

<log>
This parsed log attached may help you save time. It is parsed for the following strings -
keyPressed", "splicer", "failed to find index", "no streaming for 3000 ms", â€œHandleInjectionCompleteEvent"


={============================================================================
|kt_dev_si_0001| comp-atg comp-oigc

COMPONENT_NAME:=darwin_atg

Ian Moore was looking at ATG beforeÂ… now Steven Williams 

#
OIGC	On demand Information Generator Client

# suppose that atgs gets listing and info from OIG and get actuall DN from DLM.
ATG uses OIGC to get listings and information from OIG Server. (request to send to OIGC)
ATG uses DLM to get network status.

# from atg doc
Figure 5	Asset List Retrieval: Creation of the Iterator
[3][4] Then, the Client has to register the server connection to be warned if the OIG Server is alive and if the DLM connection status is OK.
[5][6] Then the client checks the network connection status and the VOD Catalogue Server status [7][8].

The server is Â“aliveÂ” if the Catalogue ID is retrieved successfully. Otherwise, it is Â“not aliveÂ”.


# VCS is Vod Catalog Server status.
Figure 15	Retrieval of Catalogue ID
This diagram represents the static behaviour. It does not take into account the different events that can occur during the process of Retrieval of the Catalogue ID like the removal of the card or a connection loss. 
ATG has to retrieve the Catalogue ID:
[2]ATG calls the method ATG_RetrieveCatalogId() which triggers the following process for the Catalogue ID retrieval.
[3] ATG needs an open session with PREF before it can get the lang value [4].
[5][6] ATG gets the user interface object from PREF, then the anytime handle [7][8].
[9] to [25] ATG uses VGC API to get the bouquet ID and subbouquet ID.
[26][27] ATG retrieves the STB version string from SYSINIT.
Finally, ATG retrieves the catalogue ID from OIGC and sends the status to its Clients.
# 
Class AtgSessionImpl::natAtgGetVcsStatus
	ATG_JAVA_GetVcsStatus
		ATG_API_GetVcsStatus

# Registers a listener to receive OIG server status
registerServerConnection
		ATG_API_RegisterServerConnection

# oigc cfg
[MEM_CONFIG]
POOL_FLAGS_OIGC=0
POOL_NAME_OIGC="OIGC"
POOL_SIZE_OIGC=58900
[OIGC_DNS]
DNS_FLAG=1
DOMAIN_NAME="oig.sky.com"	# read into g_oig_server_dns. used in dns_input_parameter(). 
DOMAIN_PORT=3700
OIGC_DNS_RESPONSE_TIMEOUT=3500
TTL=3600
[OIG_CLIENT]
OIGC_CLIENT_PORT=12345
OIGC_PACKET_CAPTURE=0
OIGC_TIMEOUT=3500
[OIG_SERVER]
IP="80.238.12.230"
PORT=3700


ATG_API_STATUS_PROPERTY_NOT_AVAILABLE	0x13020007
ATG_API_STATUS_ERROR                    0x13020006


# use planner ses id 0
#
ATG_CLIENT_Evt_Handler_Thread
	PLANNER_API_Iterator_CreateNextElement
		PLANNER_Iterator_CreateElementAtIndex
			PLANNER_BookedProgramme_Create

#
ATG_VODCL_Session_RetrievePvodThumbnails
	PLANNER_API_Session_GetBookedProgramme
		PLANNER_Session_Get_Catalogue_ItemID
			PLANNER_DBINTERFACE_FindItem
				PLANNER_PostMessage(PLANNER_EV_FIND_ITEM)
				PLANNER_DBINTERFACE_FindItemID
					PLANNER_BookedProgramme_Create


={============================================================================
|kt_dev_si_0001| comp-bem

COMPONENT_NAME:=ms_bem_server_src
COMPONENT_NAME:=ms_bem_client_src

<bem-thread>
BEM thread "BEM_INTERNAL_EVENT_THREAD"
BEM_PRIVATE void* BEM_InternalEvent_ThreadEntry(void * arg)


<poll-interval>
// NDS: ^[2016:08:22 04:50:42]0946737989.393631 !WARN   -BEM          		< p:0x000001df P:MW t:0x0177e520 
// T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdcpStatus L:2419 > HDMI_HDCP_GET_BSTATUS failed, errno 145 

void BEM_InternalEvent_CheckHdcpStatus(BEM_DB_PRIMITIVE_DEVICE_ROW *hdmi_row)
{
  if (BEM_IOCTL(hdmi_row->device_fd, HDMI_HDCP_GET_BSTATUS, &status) == BEM_POSIX_OK)
  {
  }
  else
  {
    hdcp_state = BEM_OC_HDMI_HDCP_STATE_UNAVAILABLE;
    DIAG_LOG_WARN(g_BEM_ServerDiagSegId, ("HDMI_HDCP_GET_BSTATUS failed, errno %i", errno));
  }
}


void BEM_InternalEvent_StartHDMIAlarm(void)
{
  f_BEM_HdmiAlarmInfo.alarm_data.rel_info.callback = BEM_InternalEvent_PostHdmiStatusAlarm;
  post BEM_INTERNAL_EV_`HDMI_STATUS`_ALARM which leas to 
  calls BEM_InternalEvent_Do`HdmiStatus`Alarm()
  calls BEM_InternalEvent_`CheckHdmiAndStatus`()
}


bem.cfg:24:HDCP_STATUS=1000

    else if (SYSTEMCONFIG_GetIntegerValue(cfg_handle,
                                          BEM_CONFIG_HDMI_CONFIG_SECTION,
                                          BEM_CONFIG_`HDCP_STATUS`,
                                          &`g_BEM_HdmiHdcpStatusPollDelay`) != SYSTEMCONFIG_STATUS_OK)

bem.cfg:37:HDMI_CONNECTION_STATUS=1000

    else if (SYSTEMCONFIG_GetIntegerValue(cfg_handle,
                                          BEM_CONFIG_HDMI_CONFIG_SECTION,
                                          BEM_CONFIG_HDMI_CONNECTION_STATUS,
                                          &g_BEM_HdmiConnStatusPollDelay) != SYSTEMCONFIG_STATUS_OK)

BEM_InternalEvent_CheckHdmiAndStatus()
{
  // when auth is failed
  DIAG_LOG_INFO(g_BEM_ServerDiagSegId, ("Authentication/encryption failed"));

  BEM_InternalEvent_StartPollingBstatus();
  {
    // `relative`
    f_BEM_HdcpStatusAlarmInfo.is_absolute = false;
    f_BEM_HdcpStatusAlarmInfo.alarm_data.rel_info.callback = BEM_InternalEvent_PostHdcpStatusAlarm;
    f_BEM_HdcpStatusAlarmInfo.alarm_data.rel_info.is_repeating = true;

    // post BEM_INTERNAL_EV_HDMI_`BSTATUS`_ALARM 
    // calls BEM_InternalEvent_Do`HdcpStatus`Alarm
    // calls BEM_InternalEvent_CheckHdcpStatus()

    f_BEM_HdcpStatusAlarmInfo.alarm_data.rel_info.callback = BEM_InternalEvent_Post`HdcpStatus`Alarm;
    f_BEM_HdcpStatusAlarmInfo.alarm_data.rel_info.is_repeating = true;
    f_BEM_HdcpStatusAlarmInfo.alarm_data.rel_info.timeout = g_BEM_HdmiHdcpStatusPollDelay;

    // typedef struct SYSTEMALARM_ALARM_REL_INFO_TAG
    // {
    // 	uint32_t  timeout; /*!< @brief Relative timeout value in `msecs` (for relative alarm). */
    // 	bool is_repeating;/*!< @brief Determines if the alarm should reset itself after timeout. The new timeout it calculated before the callback is called. */
    // } SYSTEMALARM_ALARM_REL_INFO;
  }
}

// BEM_InternalEvent_TerminateAlarms 1305 CMS_MEDIA_SERVICES/BEM/src/server/bem_path_attach.c     if (BEM_InternalEvent_TerminateAlarms() != BEM_STATUS_OK)
// BEM_InternalEvent_TerminateAlarms 1224 CMS_MEDIA_SERVICES/BEM/src/server/bem_server.c     if (BEM_InternalEvent_TerminateAlarms() != BEM_STATUS_OK)
SYSTEM_STATUS BEM_InternalEvent_TerminateAlarms(void)
{
  DIAG_LOG_INFO(g_BEM_ServerDiagSegId,("Stopping HDMI connection alarm"));
  if (SYSTEMALARM_Cancel(f_BEM_HdmiConnAlarmHandle) != SYSTEMALARM_STATUS_OK)
  {
    status = BEM_STATUS_NOT_OK;
  }

  /* Stop polling the HDCP connection status */
  DIAG_LOG_INFO(g_BEM_ServerDiagSegId, ("Stopping HDCP bstatus polling %08x",f_BEM_HdcpStatusAlarmHandle));
  if (SYSTEMALARM_Cancel(f_BEM_HdcpStatusAlarmHandle) == SYSTEMALARM_STATUS_OK)
  {
    f_BEM_HdcpStatusAlarmHandle = SYSTEMALARM_HANDLE_ILLEGAL;
  }
}

^[2016:07:30 06:01:42]0946685045.717415 !WARN   -BEM          		< T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdcpStatus L:2419 > HDMI_HDCP_GET_BSTATUS failed, errno 145 
^[2016:07:30 06:01:43]0946685046.880410 !WARN   -BEM          		< T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdcpStatus L:2419 > HDMI_HDCP_GET_BSTATUS failed, errno 145 
^[2016:07:30 06:01:45]0946685048.043415 !WARN   -BEM          		< T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdcpStatus L:2419 > HDMI_HDCP_GET_BSTATUS failed, errno 145 
^[2016:07:30 06:01:46]0946685049.207411 !WARN   -BEM          		< T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdcpStatus L:2419 > HDMI_HDCP_GET_BSTATUS failed, errno 145 

<normal-sequence>
NDS: ^0946740354.061941 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_server.c F:BEM_Util_Ioctl L:01911 > BEM IOCTL f=bem_internal_event.c l=1668 rv=0 fd=297 req=`HDMI_GET_EVENTS`
NDS: ^0946740354.062079 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdmiAndStatus L:01672 > HDMI events 0x0
NDS: ^0946740354.062192 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdmiAndStatus L:01686 > calling HDMI_GET_CONNECTION_STATUS
NDS: ^0946740354.062365 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_server.c F:BEM_Util_Ioctl L:01911 > BEM IOCTL f=bem_internal_event.c l=1688 rv=0 fd=297 req=`HDMI_GET_CONNECTION_STATUS`
NDS: ^0946740354.062488 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_internal_event.c F:BEM_InternalEvent_CheckHdmiAndStatus L:01694 > display attached:1 powered:1
NDS: ^0946740354.062605 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_device_configure.c F:BEM_DevConfig_UpdateHdmiState L:02012 > HDMI state unchanged
NDS: ^0946740354.062770 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_eedid.c F:BEM_EEDID_AcquireEdid L:00679 > EEDID hash not required
NDS: ^0946740354.079490 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_server.c F:BEM_Util_Ioctl L:01911 > BEM IOCTL f=bem_eedid.c l=702 rv=0 fd=297 req=`HDMI_GET_EEDID_BLOCK_EX`
NDS: ^0946740354.079691 !INFO  -BEM          < T:BEM_INTERNAL_EVENT_THREAD M:bem_eedid.c F:BEM_EEDID_AcquireEdid L:00733 > Got EEDID Block 0


={============================================================================
|kt_dev_si_0001| comp-guide

#-----------------------------------------------------------
# contacts
#-----------------------------------------------------------
Bunce, Stewart <SBunce@nds.com>; Edwards, Lee <LEdwards@nds.com>

# NOTE: make sure if it's guide_ not quide. otherwise, will waste time to get debugs
#
COMPONENT_NAME := darwin_guide_src
TRACE_LEVEL_G_Sess="AFEWMI"

#
# DARWIN_PLATFORM\DARWIN_GUIDE_JAVA
#
COMPONENT_NAME:= darwin_guide_native
DARWIN_PLATFORM\DARWIN_GUIDE_JAVA\src\inc\natGuideCommon.h(274): #define GUIDE_JAVA_DIAGNAME "J_GUIDE"

#
# JPA MEM
#
(java_adapters.cfg)
[GUIDE_MEM_CONFIG]
POOL_FLAGS=123
POOL_NAME="ADPT_GUIDE"
POOL_SIZE=4000

g_guide_native_mem_pool
DARWIN_ADAPTOR_GUIDE_InitVTables
	vtables:
	g_guide_adaptor_vtable_list
	g_guide_adaptor_vtable_objects
	g_guide_adaptor_vtable_schedule
	g_guide_adaptor_vtable_iterator
	g_guide_adaptor_vtable_short_list


# guide.cfg
[MEMORY_CONFIGURATION]
POOL_FLAGS=0
POOL_NAME="GUIDE"
POOL_SIZE=590248
# 
ConfigureMemory
	MEMMAN_API_MemoryPoolCreateP(&g_guide_mem_pool,)

CreateGuideComponentObject
/* Schedule table */
else if(VTABLE_STATUS_SUCCESS!=GUIDE_VTABLE_InitTable(&((*l_component_object_data)->schedule_table),
                                                g_guide_mem_pool, g_guide_diag_detailed_segment_id,
                                                &(g_guide_component->sched_mutex), 100))


#-----------------------------------------------------------
# internals
#-----------------------------------------------------------
1)	Due to the way Relative Iterators are implemented in GUIDE (Using SIM relative lists) we have no way of knowing exactly which position the iterator is using at a particular time (only SIM does). Thus we cannot know we are at the beginning of the Iterator without attempting to move beyond it.

3)	When using GUIDE Relative Iterators it is expected that if a Client receives GUIDE_API_STATUS_FAILED_BEYOND_BEGINNING when attempting to move the Iterator that the client should handle this situation and call GUIDE_API_IteratorMoveByRelative() with parameters origin=GUIDE_API_ITERATOR_ORIGIN_BEGINNING and offset=0U. This will safely move the Iterator back to the beginning of the list. 


Container objects

An object can contain other objects, for instance most objects contain strings. Some objects such as Simple List are explicitly intended as containers of other objects. In both cases a user of the object can get from it a reference to a contained object.

It is to be noted that the life span of contained object is not dependent on the life span of the container. The contained object may continue to live even if the containers has been deleted. It is the responsibility of the client to explicitly set an object to NULL once it has been used. 

List

A ShortList object is used for any list that can be retrieved in a single asynchronous operation. After the list is retrieved the application can get references to objects in the list and access their properties immediately. A ShortList is unchangeable once it is retrieved, and is unaffected by events on the SI streams feeding data to the STB.

A LongList object is intended to be used for lists that may be too large for being retrieved in one operation, or that need to be monitored for changes. The application creates one such list with an asynchronous operation, and then requests segments of the total list with further asynchronous operations. Each retrieved segment is accessed as a ShortList and is unchangeable once retrieved. The application can operate on multiple segments at the same time, but is advised to set each segment to NULL as soon as possible to conserve memory.

The application can optionally register a listener method to be notified whenever a change happens in a LongList. If the application retrieves further segments after it has been notified of a change, these segments will contain data from the new version of the LongList. The segments obtained before the notification of change and not yet released are still available but contain data from the old version of the LongList, which may be inconsistent with the new version. 


Program or Program Instance?

A programme is an editorially coherent item of content, considered independently from the time and channel it is broadcast. A programme broadcast at a specific time on a specific channel is programme instance. There is a one to many correspondence between programmes and programme instances.

When a programme is broadcast multiple times, the programme object represents the attributes that are common to all instances of broadcast, while the programme instance objects represent the attributes that are specific to each broadcast, such as the start time.


#-----------------------------------------------------------
# status
#-----------------------------------------------------------
#define GUIDE_COMP_ID         ((uint32_t)(15))
#define SEVERITY_SEVERE  ((uint32_t)(0x2))
#define GUIDE_API_ID        (0)
            
(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((15 & 0x3FF) << 22) | ((0x2 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )
hex(((15 & 0x3FF) << 22) | ((0x2 & 0x3) << 16) | ((0 & 0xF) << 12) | (11 & 0xFFF) )

GUIDE_API_STATUS_OK							0x3c00000
GUIDE_API_STATUS_FAILED 					0x3c20000
GUIDE_API_STATUS_FAILED_BEYOND_BEGINNING	0x3c2000b
GUIDE_API_STATUS_ATTRIBUTE_NOT_RETRIEVED_YET 0x3c20006

#-----------------------------------------------------------
# GuideServiceIteratorImpl::moveToLocator(SystemLocator locator) -> JAVA -> GUIDE_API_ITERATOR_H
# so this 'locator' should be a the list of service?. SYSTEMLOCATOR_TYPE_SERVICE.
#-----------------------------------------------------------
GUIDE_API_Iterator_MoveToLocator -> GuideIteratorMoveToLocator -> SIM_SI_List_MoveCursor(GuideIteratorMoveCursorListener) 
-> GuideWaitForAsyncCallback -> SYSTEMUTIL_THR_CondTimedWait(callback_cond)

SIM_SI_List_MoveCursor(SIM_SI_MOVE_LISTENER listener) -> SIM_ListMoveCursor() -> SIM_IPC_COMMS_SendCommand 
-> SIM_sc_cmd_ListenerHandlerThread:SIM_sc_cmd_ListenerEventHandler (SIM_SC_IPC_SERVER_THREAD) -> SIM_SC_SI_ListMoveCursor -> 

GuideIteratorMoveCursorListener -> GuideSignalCallbackReceived -> SYSTEMUTIL_THR_CondSignal(callback_cond)


#-----------------------------------------------------------
# GuideSessionImpl::retrieveLogicalChannelNumberServiceLocator( Sting logicalChannelNumber )
# natGuideApiSessionRetrieveLogicalChannelNumberServiceLocator -> JAVA -> 
# Retrieve the service system locator of a Logical Channel Number. Initiates the asynchronous retrieval of the locator of a service locator.
#-----------------------------------------------------------

GuideSessionImpl.java (\darwin_platform\darwin_guide_java\impl):363:        
retrieveLogicalChannelNumberServiceLocator()
{
	return new GuideRequestImpl(natGuideApiSessionRetrieveLogicalChannelNumberServiceLocator()) 
}

-> GUIDE_JAVA_SessionRetrieveLogicalChannelNumberServiceLocator


#-----------------------------------------------------------
# GuideSessionImpl:: Create a filtered iterator of programme instances. Note it's plural.
# createProgrammeInstanceIteratorEx()
# natGuideApiSessionRetreiveProgrammeInstanceIteratorEx -> JAVA : 
# -> GUIDE_JAVA_FilterCreateArray : alloc filter objects and can see various filter types MW supports.
# -> GUIDE_API_Session_RetrieveProgrammeInstanceIteratorEx -> SIM_SI_Dbase_CreateRelativeProgrammeInstanceList
# 
# (later) SIM calls GUIDE_Iterator_CreateListener: post GUIDE_EVENT_ITERATOR_CREATED.
#-----------------------------------------------------------

#-----------------------------------------------------------
# natGuideApiProgrammeInstanceGetLocator -> JAVA -> 
#-----------------------------------------------------------

GuideProgrammeInstanceImpl.java (\darwin_platform\darwin_guide_java\impl):191:
public synchronized SystemLocator getLocator()
{
    return new SystemLocatorImpl(natGuideApiProgrammeInstanceGetLocator(nativeHandle));      
}

-> GUIDE_API_ProgrammeInstance_CreateLocator


# Service
class GuideServiceImpl::getLocator
	natGuideApiServiceGetLocator(nativeHandle)
		GUIDE_JAVA_ServiceGetLocator(&env);

#-----------------------------------------------------------
# GuideProgrammeInstanceIteratorImpl.java::moveRelative -> natGuideIteratorMoveByRelative -> GUIDE_JAVA_IteratorMoveByRelative -> 
#-----------------------------------------------------------
public int moveRelative(int origin, int offset) throws SystemException
{
    assertValid();
    return GuideIteratorImpl.natGuideIteratorMoveByRelative(nativeHandle,origin,offset);
}

#-----------------------------------------------------------
# Iterator can be one for ProgramInstance, Service and otehrs
#
# hasPrevious -> GuideIteratorImpl.natGuideIteratorHasPrevious -> GUIDE_API_Iterator_HasPreviousElement 
# hasNext -> GuideIteratorImpl.natGuideIteratorHasPrevious -> GUIDE_API_Iterator_HasNextElement 
# next -> GuideIteratorImpl.natGuideIteratorNext -> GUIDE_JAVA_IteratorNext -> GUIDE_API_Iterator_CreateNextElement 
# previous -> GuideIteratorImpl.natGuideIteratorNext -> GUIDE_JAVA_IteratorPrevious -> GUIDE_API_Iterator_CreatePreviousElement 
#-----------------------------------------------------------

GuideSessionImpl.java
----------------------
public GuideRequest createProgrammeInstanceIteratorEx(
    GuideProgrammeFilter[] filters,
    int order,
    GuideProgrammeInstanceIteratorCreationListener creationListener,
    GuideProgrammeInstanceIteratorChangeListener changeListener,
    Object userTag)
{
    assertValid();

    GuideProgrammeInstanceIterator programmeInstanceIterator = 
        new GuideProgrammeInstanceIteratorImpl(creationListener,changeListener, userTag);

		# programmeInstanceIterator An empty service iterator object to be populated on the native side of JNI
		#
    GuideRequest guideReq = (GuideRequest)new GuideRequestImpl(
            natGuideApiSessionRetreiveProgrammeInstanceIteratorEx(
                nativeHandle, 
                ((null == filters) ? 0 : filters.length),
                filters,
                order,
                programmeInstanceIterator));

    return guideReq;
}

# returns 'requestId' to app
# 
GUIDE_JAVA_SessionRetrieveProgrammeInstanceIteratorEx
{
	# Retrieve an iterator of filtered programmes. When the iterator is ready, the listener method the user has provided will be
	# called back and given a handle of the iterator.
	# When the user has finished with the iterator, it must release it by calling GUIDE_API_Iterator_Delete.
	#
	GUIDE_API_Session_RetrieveProgrammeInstanceIteratorEx('GUIDE_JAVA_IteratorRetrievalListener', /* out */ &requestId )
	{
		GUIDE_VTABLE_Create( &iterator_request_data, &request_handle);

		SIM_SI_Dbase_CreateRelativeProgrammeInstanceList('GUIDE_Iterator_CreateListener', request_handle )

		*request = (GUIDE_API_REQUEST_HANDLE)request_handle;
	}	
	env->returnVal = (uint32_t)requestId;
}

# call from SIM
# it's the only place to post this event
GUIDE_Iterator_CreateListener

	l_guide_msg_payload.request_handle = (uint32_t)l_user_tag;

	SYSTEMITC_API_PostEvent(GUIDE_EVENT_ITERATOR_CREATED)

MessageThread: 
	GUIDE_Iterator_CreatedHandler( requset_handle )
		# alloc for list object in GUIDE
		CreateGuideListObject
			GUIDE_ALLOC
		CreateGuideIteratorObject(&l_iterator_object_data)
			GUIDE_ALLOC

		GUIDE_VTABLE_Create(&l_iterator_object_data, &l_iterator_handle);

		# Start acquisition of iterator blocks
		GuideIteratorAcquire(l_iterator_handle);
			GuideIteratorMoveToIndex
				GuideRelativeIteratorRetrieveBlock

					# register to SIM
					GUIDE_Int_List_RetrieveElementsFromCursor:SIM_SI_List_RetrieveElementsFromCursor
					SIM_SI_List_RetrieveCollapsedElementsFromCursor('GuideIteratorSimpleListRetrievalListener')
						GuideIteratorSimpleListRetrievalListener( post 'GUIDE_EVENT_ITERATOR_SIMPLELIST_CREATED' )


		l_callback_message.payload.list_created.list_handle = (GUIDE_API_HANDLE)l_iterator_handle;	

		GuidePostCallbackMessage(GUIDE_CALLBACK_LIST_CREATED)

			
GuideProcessCallbackMessage:
	call 'GUIDE_JAVA_IteratorRetrievalListener'(GUIDE_API_ITERATOR_HANDLE iteratorHandle)	
	{
		"nativeHandle" = &iteratorHandle;
	}


# SIM calls
GuideIteratorSimpleListRetrievalListener
	SYSTEMITC_API_PostEvent(GUIDE_EVENT_ITERATOR_SIMPLELIST_CREATED)


MessageThread: GUIDE_EVENT_ITERATOR_SIMPLELIST_CREATED
	'GUIDE_Iterator_SimpleListRetrievalHandler'
	{
		CreateGuideSimpleListObject

		create l_simple_list_handle from vtable

		# to get count of simple list
		SIM_SI_SimpleList_GetCount
		SYSTEMUTIL_THR_MutexLock(&l_iterator_object_data->block_ready_mutex);
	   	SYSTEMUTIL_THR_CondSignal('&l_iterator_object_data->block_ready_cond)'
		SYSTEMUTIL_THR_MutexUnlock(&l_iterator_object_data->block_ready_mutex);
	}



GUIDE_JAVA_IteratorNext
	# return item_handle from the iterator handle
	GUIDE_API_Iterator_CreateNextElement(GUIDE_API_ITERATOR_HANDLE)jNativeHandle, &(env->returnVal))
		# get GUIDE_ITERATOR_OBJECT_DATA from iterator handle
		GuideIteratorCommonApiEntry(l_handle, &l_iterator_object_data);
		# Retrieve the handle of the next element to the iterator
		GuideIteratorGetNextElementHandle(l_handle, l_item_handle)


GUIDE_JAVA_IteratorMoveByRelative
	GUIDE_API_Iterator_MoveByRelative(GUIDE_API_ITERATOR_ORIGIN_CURRENT: 0x2)
		GuideIteratorMoveToIndex
			GuideIteratorOrganiseSingleBlockMode
				GuideRelativeIteratorRetrieveBlock
					SIM_SI_List_RetrieveElementsFromCursor(GuideIteratorSimpleListRetrievalListener)

		# ONLY place to wait a condition
		GuideIteratorGetCurrentBlockAccess
			SYSTEMUTIL_THR_MutexLock(&l_iterator_object_data->block_ready_mutex)
			'SYSTEMUTIL_THR_CondTimedWait(&l_iterator_object_data->block_ready_cond, &l_iterator_object_data->block_ready_mutex, 30 secs)'
			# unlock when it's not okay
			SYSTEMUTIL_THR_MutexUnlock(&l_iterator_object_data->block_ready_mutex);
					
#
# so if you see belows, then that maybe mean SIM got stuck or gone dead so failed to do callback to GUIDE?
!ERROR  -G_Sess       < p:0x00000000 P:APP t:0x2c402520 T:no name M:guide_api_iterator.c F:GuideIteratorGetCurrentBlockAccess L:1077 > Call to SYSTEMUTIL_THR_CondTimedWait failed 
!ERROR  -G_Sess       < p:0x00000000 P:APP t:0x2c402520 T:no name M:guide_api_iterator.c F:GUIDE_API_Iterator_CreatePreviousElement L:4420 > Call to GuideIteratorGetCurrentBlockAccess failed 
!ERROR  -J_GUIDE      < p:0x00000000 P:APP t:0x2c402520 T:no name M:natGuideIteratorImpl.c F:GUIDE_JAVA_IteratorPrevious L:281 > Failed to create previous element 


#-----------------------------------------------------------
# calls when do search from the epg. PR#23566: relative iterator
#
# Limitations of hasPrevious from GUIDE team:
# As currently implemented the GUIDE relative Iterators have the limitation that they cannot detect the start of the list 
# if it occurs on a block boundary, this was raised as a limitation when they were first implemented.
# 
#-----------------------------------------------------------
!MIL   -aem          < M:aem_userinput.c F:AEM_InputMonitorThread L:00430 > KEY_PRESS: SELECT, 57345

!ENTER -J_GUIDE      < t:2c46a520 T:no name M:natGuideSessionImpl.c F:GUIDE_JAVA_SessionRetrieveProgrammeInstanceIteratorEx L:01492 > 

!INFO  -J_GUIDE      < M:natGuideServiceImpl.c F:GUIDE_JAVA_ProgrammeFilterServiceFlags L:00386 > Service filter type: SIM_SI_PROGRAMME_FILTER_SERVICE_FLAG_MATCH
!INFO  -J_GUIDE      < M:natGuideServiceImpl.c F:GUIDE_JAVA_ProgrammeFilterServiceFlags L:00386 > Service filter type: SIM_SI_PROGRAMME_FILTER_SERVICE_FLAG_MATCH
!INFO  -J_GUIDE      < M:natGuideServiceImpl.c F:GUIDE_JAVA_ProgrammeFilterTimePeriod L:00173 > Programme filter type: SIM_SI_PROGRAMME_FILTER_TIME_PERIOD

MessageThread: case GUIDE_EVENT_ITERATOR_SIMPLELIST_CREATED:
!INFO  -G_Sess       < M:guide_api_iterator.c F:GUIDE_Iterator_SimpleListRetrievalHandler L:02978 > 7 elements in block

!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasNextElement L:04511 > *l_next 1

!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasPreviousElement L:04554 > KT: relative_list(1), next_element_index(0), relative_block_position(0), num_elements_in_block(7)

# this is error since we're on the first item of the list.
#
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasPreviousElement L:04584 > *l_previous 1 

# create 6 items for the first page
#
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_CreateNextElement L:04284 > next_element_index 0
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasNextElement L:04511 > *l_next 1
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_CreateNextElement L:04284 > next_element_index 1
...
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasNextElement L:04511 > *l_next 1
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_CreateNextElement L:04284 > next_element_index 5

# when pressing up key on the first item on the list. GUIDE_API_ITERATOR_ORIGIN_CURRENT(0x02)
#
!MIL   -aem          < M:aem_userinput.c F:AEM_InputMonitorThread L:00430 > KEY_PRESS: UP, 57600

# app tries to see if there is next page since it has already one page(6 items) and if it can move -12 back then means there is a previous page
# this page means a block in GUIDE/SIM terms.
#
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05187 > handle 0xd000006, origin 0x2, offset -12
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05199 > KT: relative_list(1), next_element_index(6), relative_block_position(0), num_elements_in_block(7)
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05241 > KT: GuideIteratorMoveToIndex: next_element_index(6), offset(-12), origin(2)

!ERROR -G_Sess       < M:guide_api_iterator.c F:GuideIteratorGetCurrentBlockAccess L:01105 > KT: moved_out_of_bounds(1), relative_list(1)

!ERROR -G_Sess       < t:2c46a520 T:no name M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05262 > Call to GuideIteratorGetCurrentBlockAccess failed


# try to set GUIDE_API_ITERATOR_ORIGIN_BEGINNING.
# 
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05187 > handle 0xd000006, origin 0x1, offset 0
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05199 > KT: relative_list(1), next_element_index(0), relative_block_position(0), num_elements_in_block(7)
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05241 > KT: GuideIteratorMoveToIndex: next_element_index(0), offset(0), origin(1)


!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasNextElement L:04511 > *l_next 1

# this is error
# --
# It essentially boils down to the fact that block_position can be one of either GUIDE_ITERATOR_BLOCK_POS_END(2),
# GUIDE_ITERATOR_BLOCK_POS_BEGINNING(1) or GUIDE_ITERTOR_BLOCK_POS_UNKNOWN for relative iterators. In the case you have described
# technically the block is both the beginning and end block, but it is set to be GUIDE_ITERATOR_BLOCK_POS_END, due to
# logic elsewhere in the GUIDE code.
# 
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasPreviousElement L:04554 > KT: relative_list(1), next_element_index(0), relative_block_position(0), num_elements_in_block(7)
!ERROR -G_Sess       < M:guide_api_iterator.c F:GUIDE_API_Iterator_HasPreviousElement L:04584 > *l_previous 1


# when backing out of the collapsed app changes iterator to the previous
#
NDS: ^0946689802.716996 !MIL   -aem          < t:01257940 T:AEM_INPUT_MONITOR_THREAD M:aem_userinput.c F:AEM_InputMonitorThread L:00430 > KEY_PRESS: BACK, 57346

NDS: ^0946689803.154069 !ENTER -J_GUIDE      < t:2c46a520 T:no name M:natGuideIteratorImpl.c F:GUIDE_JAVA_IteratorMoveToLocator L:00202 > |-> GUIDE_JAVA_IteratorMoveToLocator
NDS: ^0946689803.154342 !PARAM -G_Sess       < t:2c46a520 T:no name M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveToLocator L:04187 > l_handle 0xd000026, l_locator 0xfd20002a


# !NOTE:
# this is not an error since it can happen when use 'relative iterator' and offest beyond possible move. In that case, guide returns 'out of bound'
# error code
#
NDS: ^0946689820.407034 !ERROR -G_Sess       < t:2c46a520 T:no name M:guide_api_iterator.c F:GUIDE_API_Iterator_MoveByRelative L:05262 > Call to GuideIteratorGetCurrentBlockAccess failed

#-----------------------------------------------------------
# schedule
#-----------------------------------------------------------
g_guide_adaptor_vtable_schedule:

GUIDE_JAVA_SessionCreateSchedule
GUIDE_JAVA_ScheduleDelete
GUIDE_JAVA_ScheduleListener


class GuideSessionImpl::createSchedule
{
	natGuideApiSessionCreateSchedule(this.nativeHandle, 
	        serviceList, windowStartTime, windowDuration, firstRowIndex,
	        windowRowCount,  guideSchedule);
	        
	/* Return the schedule object */
	return guideSchedule;	        
}

# createSchedule
(GuideServiceLongList serviceList,
SystemTime windowStartTime,
int windowDuration,
int firstRowIndex,
int windowRowCount,
GuideScheduleListener scheduleListener,
Object userTag)
# 
# Create a schedule. Creates a GuideSchedule object based on an existing list of services. The schedule will contain all and only those services that are part of the service list. The schedule object is created synchronously and a handle to it is available immediately. However the schedule data will become available asynchronously, and may become available row by row. It may also change while the schedule is in existence, either because the user moves the window through the schedule, or because the set top box receives new service information. All such changes in the status of the data are notified through a GuideScheduleListener. When the user has finished with the Schedule, it must be set to NULL. This is to prevent the resources from being unnecessarily tied up and to enable garbage collection. 
#

# SetTimeWindow
# public void SetTimeWindow(SystemTime windowStartTime, int windowDuration)


# SetServiceWindow
# public void SetServiceWindow(int firstRowIndex,
#                             int windowRowCount)
# GUIDE_JAVA_ScheduleSetServiceWindow

GUIDE_JAVA_SessionCreateSchedule
{
	GUIDE_API_SCHEDULE_HANDLE scheduleHandle;
	
	# create a req.
	JPA_VTABLE_Create(&g_guide_adaptor_vtable_schedule, &genPtr,
	
	GUIDE_API_Session_CreateSchedule( , GUIDE_JAVA_ScheduleListener, &scheduleHandle );
	
	NDSJNI_CallMethodSetNativeHandle(env, jSchedule, "nativeHandle", "I", &scheduleHandle);
	
	currentScheduleRequest->scheduleHandle = scheduleHandle;
}

#
# GUIDE_JAVA_ScheduleListener
#
# Listener for schedule changes from native GUIDE component. This function is called by the GUIDE component to indicate
# that a row within the schedule object has changed
void GUIDE_JAVA_ScheduleListener(GUIDE_API_TAG userTag, SYSTEM_STATUS completionStatus, uint32_t readyRowIndex)
{
	# Obtain the schedule request corresponding to this value of user_tag
	JPA_VTABLE_GetElement(&g_guide_adaptor_vtable_schedule, userTag, &genPtr);
	
	#
	only pass readyRowIndex to an app. ??
}	

# retrieveSynopsis
# public GuideRequest retrieveSynopsis(int rowIndex,
# Retrieve the synopsis of programme based on row index and programme instance index. 

# run seq
#
GUIDE_JAVA_ScheduleRetrieveSynopsis
GUIDE_JAVA_RetrievalListener # this is used for various objects such as program instance, schedule and etc.
GUIDE_JAVA_ScheduleSetTimeWindow
GUIDE_JAVA_ScheduleListener
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 1, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 2, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 3, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 4, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 5, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 6, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 7, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03817 > num_complete_rows 8, requested_rows 8, row_count 8 num_services 629
!INFO  -G_Sess       < M:guide_api_schedule.c F:GuideScheduleFinishSimpleProgrammeInstanceListRetrieval L:03823 > SCHEDULE_COMPLETE
GUIDE_JAVA_ScheduleGetIntegerProperty
GUIDE_JAVA_ScheduleGetRowStringProperty
GUIDE_JAVA_ScheduleGetRowIntegerProperty
GUIDE_JAVA_ScheduleGetLocator
GUIDE_JAVA_ScheduleSetServiceWindow
...


#
# GUIDE_JAVA_ScheduleListener
#
class GuideRequestImpl implements GuideRequest 
    public synchronized void abort() throws GuideTooLateToAbortException
    {
    	natGuideAPIRequestAbort(requestId);
    }

natGuideAPIRequestAbort
	GUIDE_JAVA_RequestAbort
		GUIDE_API_Request_Abort
		{
			# data->tag
			GUIDE_REQUEST_TAG_GENERAL:
			GUIDE_REQUEST_TAG_ITERATOR:
			GUIDE_REQUEST_TAG_SESSION:
			GUIDE_REQUEST_TAG_PROG_INST_SIMPLE_LIST:
		}

# and it basically means that SIM (or GUIDE) is about to send the response so it canÂ’t be cancelled now. So its expected really.
#
!ERROR  -G_Sess       	< p:0x00000000 P: t:0x2c0a8520 T:no name M:guide_api_schedule.c F:GUIDE_API_Schedule_CreateRowStringProperty L:1089 > No service data available 
!ERROR  -J_GUIDE      	< p:0x00000000 P: t:0x2c0a8520 T:no name M:natGuideScheduleImpl.c F:GUIDE_JAVA_ScheduleGetRowStringProperty L:600 > GUIDE_API_Schedule_CreateRowStringProperty failed: 0x3c20006 

#
# (from James C. architect)
# Failure to abort just means that you should expect the callback for the previous request.  
# As such, it needs to be handled gracefully by the EPG, so the associated memory is freed up when the response is eventually received.
# Good point about JPAs, but itÂ’s still the case that we need to be efficient with memory, so if Picasso can reduce the number of requests, 
# then it will be better.
# 
WARN  -G_Sess       < M:guide_api_request.c F:GUIDE_API_Request_Abort L:00351 > Too late to perform SIM abort
WARN  -J_GUIDE      < M:natGuideRequestImpl.c F:GUIDE_JAVA_RequestAbort L:00202 > JPA_GUIDE: GUIDE_API_Request_Abort failed 


={============================================================================
|kt_dev_si_0001| comp-fem

COMPONENT_NAME := ms_fem_src


T:FEM_WORKER_THREAD M:fem_device.c F:FEM_DEVICE_IOCTL L:00753 > FD: 293 (0x1001), request 0x80044108, argp 0x1e3b020

KT: TUNER_SUBSCRIBE_EVENTS(0x20044200), CDI_FE_ID(0x42), CDI_DEV_TUNER_BASE(0x0)
#define TUNER_SUBSCRIBE_EVENTS             (int)CDI_IOW_I(CDI_FE_ID, (CDI_DEV_TUNER_BASE+0U))
#define CDI_FE_ID			('B') 66. 0x42


# LNB_TONE_CONTROL
F:FEM_DEVICE_IOCTL L:00753 > FD: 212 (0x1001), request 0x80044109, argp 0x1ee5ddc
# LNB_VOLTAGE_CONTROL
F:FEM_DEVICE_IOCTL L:00753 > FD: 212 (0x1001), request 0x80044108, argp 0x1ed19e8


#define MDM_DEVICE_FE_BASE                   ((MDM_DEVICE_TYPE)0x1000)
#define MDM_DEVICE_FE_LNB                    ((MDM_DEVICE_TYPE)0x0001 | MDM_DEVICE_FE_BASE)      /* LNB controller device. Replaced by #MDM_DEVICE_FE_INPUT_CONNECTION */
#define MDM_DEVICE_FE_TUNER                  ((MDM_DEVICE_TYPE)0x0002 | MDM_DEVICE_FE_BASE)      /*!< @brief Tuner */

#-----------------------------------------------------------
# internal
#-----------------------------------------------------------

FEM_PLUGIN_Satellite_ConfigureInputPath
	# FEM_DEVICE_Configure(front_end, TUNER_TUNE)


# M:fem_plugin_satellite_scr.c

# TUNER_EVENT_SYNC_UNLOCKED (0x20)
!INFO  -FEM          < T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:01126 > 
Device event: 0x20, Tuner Lock 1
# 
FEM_DS_DeviceEvent(FEM_IC_INPUT_PATH * input_path, uint32_t event)
	FEM_PLUGIN_CALL(fem_delivery_system, GetTunerModes, (tuner_modes));
	# g_fem_plugin_functions_satellite
		FEM_PLUGIN_Satellite_DeviceEvent(FEM_IC_INPUT_PATH * input_path, uint32_t event)
		{
			FEM_DEVICE * front_end = &fem_devices[input_path->u.satellite.front_end->device_index];

			else if (event & TUNER_EVENT_SYNC_LOCKED)
				DIAG_LOG_MIL(FEM_Logging_ID, ("Locked  f=%d fo=%d fs=%d fec=%p",
			else if (event & TUNER_EVENT_SYNC_UNLOCKED)
				DIAG_LOG_MIL(FEM_Logging_ID, ("*WARN* not locked  f=%d fo=%d fs=%d fec=%p",
		}

# uint32_t FEM_TUNER_TIMEOUT = 2000U;
# FEM_INTERNAL_SetConnSignalTimeout
FEM_INTERNAL_Prepare_ConfigureFrontEnd
FEM_INTERNAL_SetConnSignalTimeout
	# cancel alarm and set alarm WHEN 
	# lock_status = fem_devices[front_end_index].details.tuner.locked;
	# is false
	SYSTEMALARM_Cancel(conn->alarm_handle);

	bool lock_status = false;
	alarmInfo.alarm_data.rel_info.timeout = FEM_CONFIG_GetConfig()->tuner_timeout;

    alarmInfo.alarm_data.rel_info.is_repeating = false;
    alarmInfo.alarm_data.rel_info.callback = 'FEM_INTERNAL_PREPARE_tune_timeout';
	
FEM_INTERNAL_PREPARE_tune_timeout
	SYSTEMITC_API_PostEvent(FEM_DEVMON_EV_LOCK_TIMEOUT)

# FEM thread: alram was fired. Before timeout alarm fired, there should be event from a driver.
#
FEM_DEVMON_QueueEvent
case FEM_DEVMON_EV_LOCK_TIMEOUT :
	FEM_SS_HandleTuneTimeoutAlarm
		# Connection is hMC
		# !WARN  -FEM          
		# < p:000000d2 t:01648140 T:FEM_WORKER_THREAD M:fem_signalstatus.c F:FEM_SS_HandleTuneTimeoutAlarm L:00387 > Connection 428 has failed to lock
		# if conn->lock_status is false, send SSI
		# FEM_SS_NotifySSIListeners
	tmp_event = (conn->lock_status) ? TUNER_EVENT_SYNC_LOCKED : TUNER_EVENT_SYNC_UNLOCKED;

	'FEM_DS_DeviceEvent'(&(conn->input_path), tmp_event))

details.tuner.debounce_timer


#-----------------------------------------------------------
# signal quality and strength
#-----------------------------------------------------------
typedef struct TunerStatusDVBS2_cdi
{
	...
  uint32_t         berWindow;
  uint32_t         berCount;
} TunerStatusDVBS2;

static SYSTEM_STATUS FEM_PLUGIN_Satellite_GetTunerStatusInfo
(const FEM_DEVICE *tuner, uint32_t *sig_locked, uint32_t *sig_strength, uint32_t *sig_max_strength, uint32_t *sig_min_strength, uint32_t *berWindow, uint32_t *berCount)
{
	*berCount = tuner_status.u.DVBS2.berCount;
	*berWindow = tuner_status.u.DVBS2.berWindow;
}

# where GET_TUNER_STATUS ioctl is called
FEM_PLUGIN_Satellite_GetTunerStatusInfo

# where do some math. here simple math is: 'berCount:berWin = x : billion bits' so x = (berCount*billion)/berWindow.
# #define FEM_WORST_SIGNAL_QUALITY (1.000.000.000) 0x3b9aca00
# CMS_MEDIA_SERVICES/FEM/src/fem_delivery_system.c

# FEM_DEVICE_Open
# 	else if (device->device_type == MDM_DEVICE_FE_TUNER)
#
#	FEM_WORKER_IntAddMonitor(device->current_fd, FEM_DevMonHandleDeviceEvent);
#		worker_fd_callback_list[worker_num_fds] = callback_fn;
#
# FEM_InitThreads
# 	FEM_ThreadCreate("FEM_WORKER_THREAD", FEM_WORKER_ThreadEntry)
#
# FEM_WORKER_ThreadEntry
#
# 	poll(worker_fd_watch_list, (nfds_t) worker_num_fds, SYSTEMITC_API_PEND_FOREVER);
#
# 	worker_fd_callback_list[poll_index](worker_fd_watch_list[poll_index].fd);
#
FEM_DevMonHandleDeviceEvent
{
	# only place to call GET_EVENT
	status = FEM_DEVICE_IOCTL(&fem_devices[device_index], (int) TUNER_GET_EVENTS, &events);

	'FEM_DS_GetTunerStatusInfo'()
	{
	# fem_plugin_satellite_scr.c for BSKYB
	FEM_PLUGIN_CALL: this maps to FEM_PLUGIN_Satellite_GetTunerStatusInfo
		
		# debug mesg
		# fprintf(stderr, "KT: mode(%d), ss max-min-cur (%d,%d,%d), ber c-win (%d, %d)\n", 
	    #	tuner_status.mode, *sig_max_strength, *sig_min_strength, *sig_strength, *berCount, *berWindow  );
		#
		# For 890 case:
		# TUNER_MODE_SAT_DVB_S(1)
		# KT: mode(1), ss max-min-cur (245,125,167), ber c-win (0, 20000000)
	

		*sig_locked = (uint32_t)tuner_status.u.DVBS.signalStatus;      /* bitfield indicating the 3 levels of lock */
		#
		#define TUNER_SIGNAL_NO_CARRIER (0x00)
		The tuner has detected a carrier. This can be reported only in Tuning mode.
		#define TUNER_SIGNAL_CARRIER (0x01)
		The tuner is demodulating the signal. This can be reported only in Tuning
		mode.
		#define TUNER_SIGNAL_DEMOD (0x02)
		The tuner has successfully acquired the signal. This can be reported only in
		Tuning mode.
		#define TUNER_SIGNAL_SYNC (0x04)
		The tuner has completed acquisition of the signal while in Scanning 
		#
		*sig_strength = (uint32_t)tuner_status.u.DVBS.signalStrength;  /* 255 = 0dBm, 0 = -127.5 dBm */
		*berCount = tuner_status.u.DVBS.berCount;
		*berWindow = tuner_status.u.DVBS.berWindow;

		*sig_quality = xuint64_t_low(&sig_quality64); or
		*sig_quality = FEM_WORST_SIGNAL_QUALITY;

		DIAG_LOG_MIL(FEM_Logging_ID, ("sig_locked 0x%x sig_strength 0x%x sig_quality 0x%x", *sig_locked, *sig_strength, *sig_quality));
		# MIL    -FEM          	< M:fem_delivery_system.c F:FEM_DS_GetTunerStatusInfo L:512 > sig_locked 0x7 sig_strength 0xb2 sig_quality 0x186a
	}
		
	# when it was not locked before and is locked now
	if (fem_devices[device_index].details.tuner.locked == true) and if (events & (uint32_t)TUNER_EVENT_SYNC_LOCKED)
		FEM_DevMon_HandleSignalTransition
		{
			fem_devices[device_index].details.tuner.locked = true;
			or
			fem_devices[device_index].details.tuner.locked = false;
		}

	'FEM_DevMon_NotifyPlugins'
		'FEM_DS_DeviceEvent'(&(saved_input_path), events)
}

# where do math for bar % (/spm/src/server/spm_mcm_module): not use this in Picasso.
SPM_MCM_ComputeBaragrahQuality

# For Picasso, refer to WP811.
UI value displayed	Error count/billion samples
0	>100000000
1	100000000 - 80000001
2	80000000 - 65000001
3	65000000 - 50000001
4	50,000,000 - 25000001
5	25000000 - 10000001
6	10,000,000 - 6000001
7	6000000 - 2000001
8	2000000 - 500001
9	<=500000
# 

#-----------------------------------------------------------
# freq
#-----------------------------------------------------------
fprintf(stderr, "KT:S: Locked  rf=%d f=%d fo=%d fs=%d fec=%p",
			input_path->u.satellite.front_end_configuration.u.DVBS.frequency,
			input_path->u.satellite.front_end_configuration.u.DVBS.frequency + *(input_path->u.satellite.lnb->current_lo),
			*(input_path->u.satellite.lnb->current_lo),
			input_path->u.satellite.front_end_configuration.u.DVBS.symbolRate,
			input_path->u.satellite.front_end_configuration.u.DVBS.fec);

(BOOT)   KT:S: Locked  rf=1178000 f=11778000 fo=10600000 fs=27500000 fec=0x40
(CH 908) KT:S: Locked  rf=1334000 f=11934000 fo=10600000 fs=27500000 fec=0x40
(CH 503) KT:S: Locked  rf=1052750 f=10802750 fo=9750000 fs=22000000 fec=0x200


# lnb is simple constant from
#
[spm.cfg]
HI_BAND_LO=10600
LOW_BAND_LO=9750

# LOW. lnb->lo0 = value;
fem_status |= FEM_IC_Lnb_SetInteger(f_SPM_FEM_instances[instanceIdx].lnbObject[new_idx],
								   FEM_IC_LNB_PROPID_LO0,
								   1000U * spmConfigPtr->lnb_defaults[SPM_API_LNB_PROPID_LOW_BAND_LO_FREQ_MHZ]);

# HIGH. lnb->lo0 = value;
fem_status |= FEM_IC_Lnb_SetInteger(f_SPM_FEM_instances[instanceIdx].lnbObject[new_idx],
								   FEM_IC_LNB_PROPID_LO1,
								   1000U * spmConfigPtr->lnb_defaults[SPM_API_LNB_PROPID_HI_BAND_LO_FREQ_MHZ]);

# 
# Freq: where f = freq + lnb lo/high, fo = lnb lo/high, fs = sym rate, fec so in this case, actuall freq is f-fo.
NDS: ^0946685438.909545 !MIL   -FEM          < M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:01234 > Locked  f=11778000 fo=10600000 fs=27500000 fec=0x40
NDS: ^0946686263.219451 !MIL   -FEM          < M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_ConfigureInputPath L:00607 > DVBS0 Tuning Param Freq[1178000] SymRate[27500000] FEC[64] Inv[255] RollOff[0]

# for BSKYB
S has 2 SD channels and S2 has three HD channels.

#
!MIL   -FEM          < T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_ConfigureInputPath L:00545 > DVBS0 Tuning Param Freq[1038000] SymRate[22000000] FEC[512] Inv[255] RollOff[0]
!MIL   -FEM          < T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_ConfigureInputPath L:00552 > DVBS0 Mod Param QAM[0] PSK[0] ALOG[0] VSB[0]
!MIL   -FEM          < T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:01236 > *WARN* not locked  f=10788000 fo=9750000 fs=22000000 fec=0x200

10788000-9750000 = 1,038,000


={============================================================================
|kt_dev_si_0001| comp-drv

DRV: ^[23:07:50]0946768070.432141 KERN_WARNING <<< Remote Key >>> key 0xe307 ( USER_INPUT_KEY_NUMERIC_SEVEN ) is DOWN 

DRV: ^[00:10:43]0946685443.806142 KERN_WARNING SPLICE_DBG:F:ioctl_VIDEO_DECODER_STOP L:4440   
DRV: ^[00:10:43]0946685443.831142 KERN_WARNING SPLICE_DBG:F:ioctl_VIDEO_DECODER_FLUSH_RATE_BUFFER L:4569   

<driver-delivery>
note:
This is not a source delivery.

~/STB_SW/deps/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/Tarball$ ls -al
total 24764
drwxr-xr-x 2 kyoupark ccusers    4096 May 18  2010 .
drwxr-xr-x 6 kyoupark ccusers    4096 Oct 26  2009 ..
-r-xr--r-- 1 kyoupark ccusers 3328721 May 20 13:33 cdi-drivers-ams-drx890-debug.tar.bz2
-r-xr--r-- 1 kyoupark ccusers 2289139 May 20 13:33 cdi-drivers-ams-drx890-preprod.tar.bz2
-r-xr--r-- 1 kyoupark ccusers 2275247 May 20 13:33 cdi-drivers-ams-drx890-prod.tar.bz2
-r--r--r-- 1 kyoupark ccusers 5497731 May 20 13:33 kernel-headers-ams-drx890-debug.tar.gz
-r--r--r-- 1 kyoupark ccusers 5495679 May 20 13:33 kernel-headers-ams-drx890-preprod.tar.gz
-r--r--r-- 1 kyoupark ccusers 5495446 May 20 13:33 kernel-headers-ams-drx890-prod.tar.gz
-r--r--r-- 1 kyoupark ccusers  281610 May 20 13:33 nds-drv-ams-drx890-debug.tar.bz2
-r--r--r-- 1 kyoupark ccusers  281583 May 20 13:33 nds-drv-ams-drx890-preprod.tar.bz2
-r--r--r-- 1 kyoupark ccusers  268582 May 20 13:33 nds-drv-ams-drx890-prod.tar.bz2
-r-xr--r-- 1 kyoupark ccusers   40110 Jun  7  2012 service-centre-ams-drx890-debug.tar.bz2
-r--r--r-- 1 kyoupark ccusers   40110 Jun  7  2012 service-centre-ams-drx890-preprod.tar.bz2
-r--r--r-- 1 kyoupark ccusers   40110 Jun  7  2012 service-centre-ams-drx890-prod.tar.bz2


={============================================================================
|kt_dev_si_0001| comp-mcm

COMPONENT_NAME := ms_mcm_src
NDS_BUILD_TYPE_ms_mcm_src = debug

note:
one tuner can have three jobs(live, rb, and rec) and two MC(live and recordings)


#-----------------------------------------------------------
# MCM_Mediaconn_StateDebug when debug ON
#-----------------------------------------------------------
DIAG_LOG_INFO(g_mcm_diag_handle, ("%d (0x%x) %s (0x%x) %s (0x%x : 0x%x) %s (0x%x) %s (0x%x)",
  line,
  p_media_connection->h_media_connection,
  t,                            // p_media_connection->mc_type, MC type, live etc
  p_media_connection->mc_type,
  s,                            // p_media_connection->status
  p_media_connection->state,
  p_media_connection->status,
  a,                            // preparing mesg?
  p_media_connection->sequence_index,
  e,
  event));

!INFO  -MCM          < M:mcm_mediaconn_event.c F:MCM_Mediaconn_StateDebug L:00577 > 
1835 
(0x9) MCM_MEDIACONN_TYPE_CAPTURE 
(0x3000006) STATE_STARTING SYSTEM_EXCEPTION_TYPE_NO_EXCEPTION 
(0x10000103 : 0x64) STARTING_STATE_INITIAL (0x13) ITC_EV_STARTING (DM ??? (00) Activity 0) (0x2008)

<mc-type>
p_media_connection->mc_type

MCM_MEDIACONN_TYPE_LIVEVIEWING  
  (MCM_MEDIACONN_TYPE_TUNER + MCM_MEDIACONN_TYPE_SCI +  MCM_MEDIACONN_TYPE_CASI + (uint32_t)0x00000002)
  /*!< @brief Live: frontend to display */

MCM_MEDIACONN_TYPE_LIVEVIEWING   (0x01000000 + 0x02000000 +  0x04000000 + 0x00000002) = 0x7000002
MCM_MEDIACONN_TYPE_SCAN          (MCM_MEDIACONN_TYPE_TUNER + (uint32_t)0x00000001) = 0x1000001
MCM_MEDIACONN_TYPE_CAPTURE       (MCM_MEDIACONN_TYPE_TUNER + MCM_MEDIACONN_TYPE_SCI + (uint32_t)0x00000006) = 0x3000006

#
= SEQ #01
create and start live job to main display
create live MC 0x55

STOP RB PLAY MC ( NOT DELETE? )
STOP RB MC 
RELESE RB MC

OR

STOP and RELEASE RB
STOP and RELEASE LIVE

locked live 0x55
run live MC 0x55

create and start RB job
create RB MC 0x56

PAUSE KEY

run RB MC 0x56
create RB play job and to main display

STOP Live decoder
start RB play job and crate MC 0x57

RELEASE Live MC.
run RB play MC.

PLAY KEY

= SEQ #02
create and start live job to main display

STOP RB PLAY MC ( NOT DELETE? )
STOP RB MC 
RELESE RB MC

<ex>
70499:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:275 > 
  @@PMON@@,trace,mediacon,mc-create7,mc-create-mcid=,12237,mc_create-str=,mc-live,fsnfmt=,hMC=0x2fcd 

70501:!MIL    -MDM          		< T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > 
  mdm_handle =0x11a9f hMC=0x2fcd tud =1 and job_type =LIVE_VIEWING 

70503:!MIL    -MPM          		< T:MPM_ITCMAIN_THREAD M:mpm_mediaconn_event.c F:MPM_Mediaconn_Open L:947 > 
  MCM_MEDIACONN_STATE_OPENED hMC=0x2fcd replace hMC=0x2fcc type=0x07000002 

  note: replace MC

70505:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:340 > 
  @@PMON@@,trace,mediacon,mc-create37,fsnfmt=,hMC=0x2fcd 

70506:!MIL    -VRM_SERVER   		< T:VRM_SRV M:pvp_gen.c F:PANEL_CreateCon L:333 > 
  [API_CALL::""MCM""] " "MCM_MEDIACreateEx type: 0x7000002 returned [SYSTEM_STATUS_OK 0x04401000] ""hMC=0x2fcd 

70508:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Prepare L:404 > 
  @@PMON@@,trace,mediacon,mc-prepar37,fsnfmt=,hMC=0x2fcd 

70541:!MIL    -MPM          		< T:MPM_ITCMAIN_THREAD M:mpm_mediaconn_event.c F:MPM_Mediaconn_PrepareOpenConfigureTSChannel L:2152 > 
  MCM_MEDIACONN_STATE_OPENCONFIGURENNEL hMC=0x2fcd tschannel1 

70542:!WARN   -VRM_SERVER   		< T:VRM_SRV M:pvp_gen.c F:PANEL_HandleInternalMcmMconStateChangedMsg L:1669 > 
  got MCM_MEDIACONN_STATE_PENDING oMC=0x2fcd"" PANEL_MCON_TYPE_LIVE NO_EXCEPTION 

70591:!MIL    -FEM          		< T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_ConfigureInputPath L:646 > 
  DVBS2 Tuning Param Freq[1097000] te[23000000] FEC[64] Inv[255] RollOff[2] tuner=1 hMC=0x2fcd 

70592:!MIL    -FEM          		< T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_ConfigureInputPath L:656 > 
  DVBS2 Mod Param QAM[0] PSK[2] ALOVSB[0] tuner=1 hMC=0x2fcd 

70593:!MIL    -FEM          		< T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:1562 > 
  *WARN* not locked f=10847000 fo=90 fs=23000000 fec=0x40 tuner=1 LNB=1 hMC=0x2fcd 

70670:!WARN   -FEM          		< T:FEM_WORKER_THREAD M:fem_signalstatus.c F:FEM_SS_HandleTuneTimeoutAlarm L:410 > 
  Connection hMC=0x2fcd has failed ck 

70671:!MIL    -FEM          		< T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:1562 > 
  *WARN* not locked f=10847000 fo=90 fs=23000000 fec=0x40 tuner=1 LNB=1 hMC=0x2fcd 

70673:!WARN   -VRM_SERVER   		< T:VRM_SRV M:pvp_gen.c F:PANEL_HandleInternalMcmMconStateChangedMsg L:1669 > 
  got MCM_MEDIACONN_STATE_PENDING oMC=0x2fcd"" PANEL_MCON_TYPE_LIVE SIGNAL_LOSS 

70867:!MIL    -MDM          		< T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > 
  mdm_handle =0x11a9f hMC=0x2fcd tuner_id =1 and job_type =LIVE_VIEWING 

70869:!MIL    -MPM          		< T:MPM_ITCMAIN_THREAD M:mpm_mediaconn_event.c F:MPM_Mediaconn_Open L:947 > 
  MCM_MEDIACONN_STATE_OPENED hMC=0x2fce replace hMC=0x2fcd type=0x07000002 

70880:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Free L:593 > 
  @@PMON@@,trace,mediacon,mc-free,12237,fsnfmt=,hMC=0x2fcd 

70887:!MIL    -MPM          		< T:MPM_ITCMAIN_THREAD M:mpm_mediaconn_event.c F:MPM_Mediaconn_Free L:1989 > 
  MCM_MEDIACONN_STATE_FREETSCHANNEL hMC=0x2fcd 

70892:!MIL    -MCM          		< T:MCM_ITCMAIN_THREAD M:mcm_mediaconn_event.c F:MCM_Mediaconn_ActionFreeing L:5201 > 
  @@PMON@@,trace,mediacon,mc-freed,12237,fsnfmt=,hMC=0x2fcd 

70893:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Destroy L:660 > 
  @@PMON@@,trace,mediacon,mc-destroy,12237,fsnfmt=,hMC=0x2fcd 

70898:!WARN   -FDM_SVR      		< T:MCM_ITCMAIN_THREAD M:fdm_svr_deviceman.c F:releaseConnection L:441 > 
  deleting hMC=0x2fcd 

70899:!MIL    -MPM          		< T:MPM_ITCMAIN_THREAD M:mpm_mediaconn_event.c F:MPM_Mediaconn_Close L:2107 > 
  MCM_MEDIACONN_STATE_CLOSED hMC=0x2fcd 

70900:!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Destroy L:729 > 
  @@PMON@@,trace,mediacon,mc-destroyed,12237,fsnfmt=,hMC=0x2fcd 


<locked-unlocked>
DRV: KERN_WARNING  TUNER1 LOCKED
NDS: !MIL    -MCM                  < T:FEM_WORKER_THREAD M:mcm_dev_notifications.c F:MCM_DEV_MAN_ListenerMSO L:134 > hMC=0x6  TUNER_LOCKED:
NDS: !MIL    -EPG_ME               < M:SatelliteSignalGainedLostHandler F:allSatSignalInputsAreLocked L:331 > T:CEE-J EventQueue Reader 0:TWO AVAILABLE TUNERS (LOCKED)

DRV: KERN_WARNING  TUNER0 UNLOCKED
DRV: KERN_WARNING  TUNER0 UNLOCKED


={============================================================================
|kt_dev_si_0001| comp-memman

note:
No master config xml.

$ grep MEMMAN dms_master_config.xml
99:    <key name="TRACE_LEVEL_MEMMAN" type="STRING" value="AFEWM">

Making mem pool growable has been forbidden, even if the MEMMAN API propose it !

// sample memcheck shot
// ONLY WHEN #if (!defined(DIAG_RELEASE) && !defined(__DIAG_RELEASE)), means
// it'll be seen only in debug


// see AEM for more)
MHWMemAllocStatic
  MEMORY_PRINT_W(("Cannot allocate %d bytes in pool " POOLNAME_FMT ", not
        enough memory", size, PNAME(pool)));
  if (smax <= size)
  {
     MEMORY_PRINT_W(("   Biggest block is %d bytes", smax));
  }
  DUMP_USED_BLOCKS(pool);

#define DUMP_USED_BLOCKS(POOL) \
	(void) membuster_plus_pool_oom(POOL); \
   (void) MemCheckMemory(POOL, MEMSTATUS_LOGLEVEL(MEMMAN_API_MEMSTATUS_ALL,
         MEMSTATUS_LOGLEVEL_WARN))

 
// DUMP_USED_BLOCKS(g_planner_native_mem_pool);
// MemCheckMemory(g_planner_native_mem_pool,
//  MEMSTATUS_LOGLEVEL(MEMMAN_API_MEMSTATUS_ALL, MEMSTATUS_LOGLEVEL_WARN));

M:mem_static.c F:MHWMemAllocStatic L:00065 > Cannot allocate 132 bytes in pool ADPT_PLANNER, not enough memory
M:mem_static.c F:MHWMemAllocStatic L:00068 >    Biggest block is 0 bytes
M:mem_info.c F:MemCheckMemory L:00333 > MEMCHECK: BEGIN Check Pool: ADPT_PLANNER
M:mem_info.c F:MemCheckMemory L:00343 > MEMCHECK: Chunk 0 addresses: [[ 0x1306ee8 ]] -> [[ 0x1307e87 ]]
M:mem_info.c F:MemCheckMemory L:00350 > MEMCHECK: Offset range in chunk:  0      +0 ->  0   +3999[    4000]
M:mem_info.c F:MemCheckMemory L:00466 > MEMCHECK: Checking block pool
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      0 : used block  0      +0[     136] S------ [0x01306efc]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      1 : used block  0    +136[      44] S------ [0x01306f84]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      2 : used block  0    +180[     132] S------ [0x01306fb0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      3 : used block  0    +312[      44] S------ [0x01307034]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      4 : used block  0    +356[     132] S------ [0x01307060]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      5 : used block  0    +488[      44] S------ [0x013070e4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      6 : used block  0    +532[     132] S------ [0x01307110]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      7 : used block  0    +664[      44] S------ [0x01307194]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      8 : used block  0    +708[     132] S------ [0x013071c0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:      9 : used block  0    +840[      44] S------ [0x01307244]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     10 : used block  0    +884[     132] S------ [0x01307270]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     11 : used block  0   +1016[      44] S------ [0x013072f4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     12 : used block  0   +1060[     132] S------ [0x01307320]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     13 : used block  0   +1192[      44] S------ [0x013073a4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     14 : used block  0   +1236[     132] S------ [0x013073d0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     15 : used block  0   +1368[      44] S------ [0x01307454]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     16 : used block  0   +1412[     132] S------ [0x01307480]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     17 : used block  0   +1544[      44] S------ [0x01307504]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     18 : used block  0   +1588[     132] S------ [0x01307530]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     19 : used block  0   +1720[      44] S------ [0x013075b4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     20 : used block  0   +1764[     132] S------ [0x013075e0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     21 : used block  0   +1896[      44] S------ [0x01307664]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     22 : used block  0   +1940[     132] S------ [0x01307690]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     23 : used block  0   +2072[      44] S------ [0x01307714]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     24 : used block  0   +2116[     132] S------ [0x01307740]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     25 : used block  0   +2248[      44] S------ [0x013077c4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     26 : used block  0   +2292[     132] S------ [0x013077f0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     27 : used block  0   +2424[      44] S------ [0x01307874]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     28 : used block  0   +2468[     132] S------ [0x013078a0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     29 : used block  0   +2600[      44] S------ [0x01307924]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     30 : used block  0   +2644[     132] S------ [0x01307950]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     31 : used block  0   +2776[      44] S------ [0x013079d4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     32 : used block  0   +2820[     132] S------ [0x01307a00]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     33 : used block  0   +2952[      44] S------ [0x01307a84]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     34 : used block  0   +2996[     132] S------ [0x01307ab0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     35 : used block  0   +3128[      44] S------ [0x01307b34]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     36 : used block  0   +3172[     132] S------ [0x01307b60]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     37 : used block  0   +3304[      44] S------ [0x01307be4]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     38 : used block  0   +3348[     132] S------ [0x01307c10]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     39 : used block  0   +3480[      44] S------ [0x01307c94]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     40 : used block  0   +3524[     128] S------ [0x01307cc0]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     41 : used block  0   +3652[      44] S------ [0x01307d40]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     42 : used block  0   +3696[     128] S------ [0x01307d6c]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     43 : used block  0   +3824[      44] S------ [0x01307dec]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00565 > MEMCHECK:     44 : used block  0   +3868[     132] S------ [0x01307e18]  <no-owner> 0
M:mem_info.c F:MemCheckMemory L:00575 > MEMCHECK: Checking free block lists
M:mem_info.c F:MemCheckMemory L:00692 > MEMCHECK: Pool size summary:
M:mem_info.c F:MemCheckMemory L:00694 > MEMCHECK:  free     |      0 blocks [       0]
M:mem_info.c F:MemCheckMemory L:00696 > MEMCHECK:  static   |     45 blocks [    4000]
M:mem_info.c F:MemCheckMemory L:00698 > MEMCHECK:  moveable |      0 blocks [       0]
M:mem_info.c F:MemCheckMemory L:00762 > MEMCHECK: END Check Pool: ADPT_PLANNER

note: that there is 20 bytes overhead for each block. For example, if you
allock 24 bytes and it will 44 bytes memman block like above.

http://hetty.cisco.com/fusionmadesimple/index.php/Debugging_memory_issues#Double_free

<double-free>
If you see a core dump with a crash in MHWMemFreeStatic or MHWMemElementIsFree
then you are probably dealing with memory that has been freed twice.

MHWMemFreeStatic checks MEMBLOCK_IS_HANDLED. The first time you call it, it
returns false, which means the memory was allocated with malloc and MEMMAN
does not have to do anything, but when it is freed all the MEMMAN flags get
reset. This means that if you erroneously call MHWMemFreeStatic a second time
on the same memory, MEMBLOCK_IS_HANDLED erroneously returns true, which causes
IS_HANDLE and MHWMemElementIsFree to be called, which try to dereference some
pointer that never pointed anywhere. In previous cases I've found it is caused
by the same thing being freed from two different threads. 


={============================================================================
|kt_dev_si_0001| comp-membuster

note:
no COMPONENT_NAME for this and no master config xml.

01: merge membuster source into 'vobs\CMS_SYSTEM_INFRASTRUCTURE\MEMMAN\'

02: modify
'vobs\FUSION_SYSTEM_INTEGRATION\BSKYB_INTEGRATION\build\processes\*.c'
depending on which process have to use membuster

03: build mw

04: run 'trace_table' on output binary of process in question and which should
be 'unstripped_processes'. This command will modify that process.

/home/NDS-UK/parkkt/fob/membuster_plus/trace_table
/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/unstripped_processes

192768 bytes required for unwind tables
Trace table magic found at 11126272
done - table of 192768 bytes written successfully # take this number

STEP05: get table magic number from output of trace_table and use it with xxx_process.c

STEP06: build mw again and run trace_table on bins in unstripped_processes.

STEP07: copy these bins into build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/fs/NDS/bin

STEP08: use usual package commands.

/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound/bin/mips-uclibc-addr2line -f -s -e 

# If the file name or function name can not be determined, addr2line will print two question marks in their place. 
# If the line number can not be determined, addr2line will print 0

mips-uclibc-addr2line -f -s -e fs/NDS/bin/MW_Process 5dd134 5dbe00 5d3ee4 5d6cb4 5ddb64 5cef3c a5f298   

$ /home/kyoupark/STB_SW/FUSIONOS_2/BLD_AMS_BCM_MIPS4K_LNUX_DARWIN_01/platform_cfg/linux/compiler/mips4k_gcc_x86_linux_hound_2/bin/mips-uclibc-addr2line
-f -s -e unstripped_processes/MW_Process 7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518
NDS_HTTP_strdup
strdup.c:53
NDS_HTTP_strdup_DEBUG
libcurl_portage.c:35
Curl_cookie_add
cookie.c:437
Curl_http_readwrite_headers
http.c:3711
readwrite_data
transfer.c:492
Transfer
transfer.c:1479
curl_easy_perform
easy.c:552
HTTP_API_Perform
http_api.c:1789
CTM_SVR_HTTP_PerformStandard
ctm_svr_standard_communication.c:74
CTM_SVR_FTM_Download_Thread
ctm_svr_file_transfer_manager.c:2339
SYSTEMUTIL_THR_P_ThreadPrologue
systemutil_thread.c:612


# instrumented memman ifs
#
MEMMAN_API_Handle *MEMMAN_API_AllocP(MEMMAN_API_MemoryPoolHandle *pool, uint32_t size, int32_t gcollect)
void   *MEMMAN_API_AllocStaticP(MEMMAN_API_MemoryPoolHandle * pool, uint32_t size)        
void   *MEMMAN_API_CallocStaticP(MEMMAN_API_MemoryPoolHandle * pool, uint32_t nbelem, uint32_t size)
void   *MEMMAN_API_AllocStaticAlignP(MEMMAN_API_MemoryPoolHandle * pool, uint32_t size, uint32_t align)
void   *MEMMAN_API_AllocMaxStaticP(MEMMAN_API_MemoryPoolHandle * pool, uint32_t * paramsize)
void   *MEMMAN_API_ReallocStaticP(MEMMAN_API_MemoryPoolHandle * pool, void *ptr, uint32_t askedSize)
void   *MEMMAN_API_ReallocStaticAlignP(MEMMAN_API_MemoryPoolHandle * pool, void *ptr, uint32_t askedSize, uint32_t align)
{
	# alloc calls
	ptr = (void *) MHWMemAllocStatic(pool, size);

	# add list
	alloc_list_add(pool, (uint32_t)ptr, size, ALLOC_TYPE_MV);
	{
		struct stacktrace_frame f;
			struct stacktrace_frame
			{
			  int             size;       /* Frame size */
			  uint32_t *      fp;         /* Frame pointer */
			  uint32_t *      pc;         /* Program counter */
			  uint32_t *      func;       /* Start of current function */
			  uint32_t *      caller;     /* Address of caller */
			};

		# this is the very first function
		# as it's already in the called frame, sp was moved and ra has return addr.
		stacktrace_start(&f);
		{
			# asm code
			f->fp     = $sp;
			f->caller = $ra;
			f->func   = stacktrace_start;

			# get a idx of symble table
			i = jump_table[(((uint32_t)(f->func) & 0x1FFF000) >> 12)-1];

			# get a nearest addres in the sym table

			# get a frame size
			f->size = frame_info[info_index[i-1]] & 0xFFFF;

			stacktrace_unwind(f);
		}

		while(stacktrace_unwind(&f) != -1)
		{
			# build a backtrace(bt)
			pool->bt_temp[i++] = f.caller;
		}
		
		# calc a checksum
		checksum = fletcher32(pool->bt_temp, i);

		# get a idx of alloc list
		idx = get_alloc_index(pool);

		# get a idx of bt list and if not found one, call bt_add
		bt_idx = bt_find(pool, checksum);
		if(bt_idx==-1)
			bt_idx = bt_add(pool, pool->bt_temp, num_of_item_in_bt_temp, checksum);
				{ 
					# copy bt_data[] <- bt_temp
					pool->bt_list_idx++; 
				}
			pool->bt_list[bt_idx].size = 0;
			
		#
		pool->alloc_list[idx].addr = ptr;                  # allocated ptr from memman	
		pool->alloc_list[idx].size = size;                 # allocated size
		pool->alloc_list[idx].bt_index = (uint16_t)bt_idx; # idx of this bt
		pool->alloc_list[idx].type = type;                 # allocated type
		pool->alloc_list[idx].time = time_get();
		pool->bt_list[bt_idx].size += size;                # accumulated size for this bt
	} # end alloc_list_add
}


SYSTEM_STATUS MEMMAN_API_FreeP(MEMMAN_API_MemoryPoolHandle *pool, MEMMAN_API_Handle *handle)
SYSTEM_STATUS MEMMAN_API_FreeStaticP(MEMMAN_API_MemoryPoolHandle * pool, void *ptr)
{
	alloc_list_remove(pool, (uint32_t) addr);
	{
		# search alloc list for this addr and if found, mark it freed.
		if(pool->alloc_list[i].addr == addr)
			pool->bt_list[pool->alloc_list[i].bt_index].size -= pool->alloc_list[i].size;
			add_recent_freed(pool, idx of alloc list);
	}
}


(mem_defs.h)
typedef struct _BT_LIST
{
	uint32_t checksum;
	uint16_t pos;
	uint16_t len;
	uint32_t size;
} BT_LIST;

typedef struct _ALLOC_LIST
{
	uint32_t addr;
	uint32_t time;
	uint32_t size;
	uint16_t bt_index;
	uint16_t type;
} ALLOC_LIST;

struct MEMMAN_API_MemoryPoolHandleTag
{
	# added for membuster
	uint32_t *bt_data; 
	uint32_t bt_data_idx, bt_list_idx, bt_list_len, bt_data_len;
	uint32_t alloc_list_idx, alloc_list_len;
	int32_t recent_freed[5];
	BT_LIST *bt_list;
	ALLOC_LIST *alloc_list;
	uint32_t bt_temp[MAX_CALL_DEPTH (64) ]; /* temp buffer for holding backtraces */
} MEMMAN_API_MemoryPoolHandle


(memman_pinit.c)
# so added more structures for membuster when pool gets created. So it's per pool.
#
PoolCreate(MEMMAN_API_MemoryPoolHandle **handle,
{
	poolHandle = (MEMMAN_API_MemoryPoolHandle *) malloc(sizeof(MEMMAN_API_MemoryPoolHandle));

	poolHandle->alloc_list = malloc(sizeof(ALLOC_LIST) * ALLOC_LIST_INIT_SIZE);
	poolHandle->bt_list = malloc(sizeof(BT_LIST) * BT_LIST_INIT_SIZE);
	poolHandle->bt_data = malloc(sizeof(uint32_t) * BT_DATA_INIT_SIZE);
	...
	*handle = poolHandle;
}

uint32_t MHWMemCheckBank(MEMMAN_API_MemoryPoolHandle * mpool, uint32_t size, uint32_t mem_nb_bank)
{
	membuster_plus_pool_oom(mpool);
}

MEMMAN_API_Init
{
	membuster_plus_init();
}


<check-interval>

mb_check_sleep = 180;

static void membuster_thread(void)
{
  membuster_plus_check_all();
  {
    "start check at: %.3d:%.2d:%.2d.%.3d\n",
  }

  sleep(mb_check_sleep);
}


// from membuster_plus_check_all() to dump bt and allocs for all poools.

start check at: 000:04:38.883

pool HN_UD_POOL size=204800:
size=1978 (1064558 1055448 10507b0 108d974 ef52d4 ) [e237d2a0]
allocs:6
...

pool usage: 2112/204800 peak: 22296


{oom-from-log-and-from-membuster}

Found that OOM from log is far behind in OOM in MEM.TXT.

void   *MHWMemAllocStatic(MEMMAN_API_MemoryPoolHandle *pool, uint32_t size)
{
        MEMORY_PRINT_W(("Cannot allocate %d bytes in pool " POOLNAME_FMT ", not enough memory", size, PNAME(pool)));
        if (smax <= size)
        {
            MEMORY_PRINT_W(("   Biggest block is %d bytes", smax));
        }
        DUMP_USED_BLOCKS(pool);
}

#define DUMP_USED_BLOCKS(POOL) \
	(void) membuster_plus_pool_oom(POOL); \
	(void) MemCheckMemory(POOL, MEMSTATUS_LOGLEVEL(MEMMAN_API_MEMSTATUS_ALL, MEMSTATUS_LOGLEVEL_WARN))


void membuster_plus_pool_oom(MEMMAN_API_MemoryPoolHandle *p)
{
#ifdef MEMBUSTER_OOM_ONLY
    membuster_plus_check_pool(0, mb_file_path, p);
#else
    membuster_create_output_path();
    membuster_plus_check_pool(mb_output, mb_file_path, p);
#endif /* MEMBUSTER_OOM_ONLY */
}


// static void membuster_plus_check_pool() is used by MEMMAN API but not from
// membuster thread.
// CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/mbuster_pinit.c

static void membuster_plus_check_pool()
{
  // to MEM_xx file
  fprintf(of,
      "OOM Detected at: %.3d:%.2d:%.2d.%.3d\n",
      hour,
      minute,
      sec,
      msec);

  // to LOG
  MEMORY_PRINT_E(("MEMBUSTER: pool %s, count %d size %d, bt(%s)", p->name,alloc_count,b[j].size,buf));
}


// MEMORY_PRINT_E(("MEMBUSTER: pool %s, count %d size %d, bt(%s)", p->name, `alloc_count`, `b[j].size`, buf));

                                       M:mem_blockpool.c F:MHWMemCheckBank L:310 > CHECK_BANK Size:1448 FreeSize:788 Bank:1 PoolMAX:387248 
P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mem_static.c F:MHWMemAllocStatic L:75 > Cannot allocate 2580 bytes in pool " "MW_HTTP_POOL"
P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mem_static.c F:MHWMemAllocStatic L:78 > Biggest block is 712 bytes
P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 1 size 520, bt(007aff90 00ef5c30 007afe08 00795b3c 006e1a60 00ef52d4 )
...


<ex>
218996:start check at: 013:20:10.348
219890:OOM Detected at: 013:32:09.086


// first OOM in MEM_xx.TXT
size=25032 (7f4f64 7dcff4 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [f688c2a7]
allocs:`447`
size=12963 (7c63bc 7dfab8 7dd838 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [0225da76]
allocs:447
size=76897 (7c63bc 7dfab8 7dd864 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [0619daa2]
allocs:447
size=2235 (7c63bc 7dfab8 7dcf4c 7dd670 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [e33ba878]
allocs:447
size=40319 (7c63bc 7dfab8 7dcf4c 7dd3f4 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [aa17a5fc]
allocs:447
size=5364 (7c63bc 7dfab8 7dcf4c 7dd57c 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [cd4fa784]
allocs:447


// first OOM in the log
// note: MEMBUSTER log is available for membuster build

269075:NDS: ^[2016:08:21 20:14:30]0946879384.632875 !`WARN`   -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mem_static.c F:MHWMemAllocStatic L:75 > Cannot allocate 2580 bytes in pool " "MW_HTTP_POOL"  
269076:NDS: ^[2016:08:21 20:14:30]0946879384.632891 !WARN   -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mem_static.c F:MHWMemAllocStatic L:78 > Biggest block is 712 bytes 
269077:NDS: ^[2016:08:21 20:14:30]0946879384.635031 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 1 size 520, bt(007aff90 00ef5c30 007afe08 00795b3c 006e1a60 00ef52d4 ) 
...
269217:NDS: ^[2016:08:21 20:14:30]0946879384.903082 !`ERROR`  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, 
  count `504 size 28224`, bt(007f4f64 007dcff4 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 
269218:NDS: ^[2016:08:21 20:14:30]0946879384.929905 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 504 size 14616, bt(007c63bc 007dfab8 007dd838 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 
269219:NDS: ^[2016:08:21 20:14:30]0946879384.951279 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 504 size 86482, bt(007c63bc 007dfab8 007dd864 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 
269220:NDS: ^[2016:08:21 20:14:30]0946879384.992061 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 504 size 2520, bt(007c63bc 007dfab8 007dcf4c 007dd670 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 
269221:NDS: ^[2016:08:21 20:14:31]0946879385.016120 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 504 size 45248, bt(007c63bc 007dfab8 007dcf4c 007dd3f4 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 
269222:NDS: ^[2016:08:21 20:14:31]0946879385.040478 !ERROR  -MEMMAN       		< p:0x000001bb P:MW t:0x01e19520 T:CTM_SVR_DL_CONTENT M:mbuster_pinit.c F:membuster_plus_check_pool L:755 > MEMBUSTER: pool MW_HTTP_POOL, count 504 size 6048, bt(007c63bc 007dfab8 007dcf4c 007dd57c 007eefa0 007a15a4 007a2adc 007a3b54 007a5028 007a53c0 0079dfd4 0079a950 0051038c 0050ae0c 00ef52d4 ) 


WHY not match between 447 and 504?


1462439:OOM Detected at: 032:02:23.066

// this `matches`. this is from normal periodic check but not from OOM check.
size=`28224` (7f4f64 7dcff4 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [f688c2a7]
allocs:`504`

// next OOM
1700024:OOM Detected at: 043:55:06.053


note: 
* #ifndef MEMBUSTER_OOM_ONLY in the code
* For one alloc, size is start and allocs is end
* `size` is the sum of all allocs in the bt

start check at: 013:47:02.091
OOM Detected at: 013:48:22.102
pool MW_HTTP_POOL size=388036:

allocs:2
size=3216 (bfdc34 118ccb0 bfe4f0 bffd6c 4fd500 4f3714 4e2c38 4e3b20 ef52d4 ) [3e785703]
allocs:268
size=720 (bfdc34 119013c bfe4f0 bffd6c fba6c0 faaff0 fab198 f11544 f2df94 f09cec f15f7c fb4590 5d0f9c 5d1158 5e5498 5dd504 5ad648 ef52d4 ) [061d805b]
allocs:60

`size`=25032 (7f4f64 7dcff4 7eefa0 7a15a4 7a2adc 7a3b54 7a5028 7a53c0 79dfd4 79a950 51038c 50ae0c ef52d4 ) [f688c2a7]
# bt idx, alloc address, `alloc size`, alloc time
252 02542cf8     56 013:16:29.236
...
allocs:447

note:
25032 = 447*56

...
estimated pool usage 6292/8000	# here 'usuage' is the sum of all bt.


$ grep "size=|allocs:447" MEM_MW_1.TXT


<ex>

// shows upward trends
$ egrep -anA 1 '638dbc5c' MEM_MW.TXT | more
--
381588:size=63522 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
381589-allocs:373
--
383300:size=63522 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
383301-156 02355fe4    163 005:27:58.477
--
387430:size=63522 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
387431-156 02355fe4    163 005:27:58.477
--
391577:size=63522 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
391578-156 02355fe4    163 005:27:58.477
--
395505:size=63856 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
395506-allocs:375
--

// to find out max allocs in OOM section
sed -n '382030,386153p' MEM_MW.TXT | egrep -an 'allocs' | sort -n -t : -k 3

size=10817 (7c8db8 7a6c54 7b1a78 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [616dbc3c]
1270:allocs:373

size=63522 (7c8db8 7a6c54 7b1a98 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [638dbc5c]
1645:allocs:373

size=1865 (7c8db8 7a6c54 7b0fa4 7b19bc 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [7dc0cb9f]
2020:allocs:373

size=32943 (7c8db8 7a6c54 7b0fa4 7b1880 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [68c4ca63]
2395:allocs:373

size=4476 (7c8db8 7a6c54 7b0fa4 7b1934 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [74b8cb17]
2770:allocs:373

size=20888 (7a059c 7b16a0 7b64b8 7c3670 7c4850 7a7524 7986e0 5101d8 50abe8 e91518 ) [d599c377]
893:allocs:373


#
# example analysis between LOG, MEMP and MEMB
#
(MPROF) # it's the same as MEM uses for its main output
                      # name, peak, used, total, g_count
                      ADPT_GUIDE,    7960,    7448,    8000,     114
                      ADPT_GUIDE,    7960,    7448,    8000,     115
                      
(LOG)                      
NDS: ^[00:58:34]0946688314.070912 !WARN  -MEMMAN       < M:mem_static.c F:MHWMemAllocStatic L:00065 > 
Cannot allocate 44 bytes in pool ADPT_GUIDE, not enough memory
...
F:MemCheckMemory L:00765 > MEMCHECK: Pool size summary:
F:MemCheckMemory L:00767 > MEMCHECK:  free     |      1 blocks [      40]
F:MemCheckMemory L:00769 > MEMCHECK:  static   |     83 blocks [    7960]
F:MemCheckMemory L:00771 > MEMCHECK:  moveable |      0 blocks [       0]

(MEM:changed)
#                 used(free): checksun: alloc: size (back trace) 
BT: ADPT_PLANNER: 1452(4548): 7fe1aa50: 3: 72 (46f570 438ef8 43a210 552c30 551fec 8c35b8 )

# membuster_plus_check_all()
#
# p->initialSize : is pool size
# fprintf(of, "BT: %s: %d(%d): %.8x: %d: %d (", p->name, (p->initialSize - p->s_WholeMem[0].blockPool.totalFreeSize),
#	p->s_WholeMem[0].blockPool.totalFreeSize, b[j].checksum, alloc_count, b[j].size);
#
# changed to print alloc size than bt size itself as alloc size means the size of each allocation in this bt.
#
# fprintf(of, "BT: %s: %d(%d): %.8x: %d: %d (", p->name, (p->initialSize - p->s_WholeMem[0].blockPool.totalFreeSize),
#	p->s_WholeMem[0].blockPool.totalFreeSize, b[j].checksum, alloc_count, alloc_size);
#

pool ADPT_PLANNER size=6000: 000:22:44.854
-------
BT: ADPT_PLANNER: 1452(4548): 79dda9c4: 3: 36 (46f4e4 438ef8 43a210 552c30 551fec 8c35b8 )
-------
BT: ADPT_PLANNER: 1452(4548): 7fe1aa50: 3: 72 (46f570 438ef8 43a210 552c30 551fec 8c35b8 )
pool usage: 1452/6000 peak: 1452

# to get data for plot
egrep '7fe1aa50' MEM325.TXT | cut -d':' -f2-3 | sed 's/[\:\(\)]/ /g' | more
echo "set terminal jpeg; set title 'ADPT_PLANNER-1st'; set grid; set output 'ADPT_PLANNER-1st.jpg'; set xlabel 'time'; set ylabel 'memory'; plot \"1stcall.out\" using 3 title 'used', \"1stcall.out\" using 2 title 'free' with lines;" | gnuplot

egrep -an "pool PCAT_VIEW_CLNT_POOL" MEM121.TXT 
egrep -an -B 1 "pool usage" MEM121.TXT | egrep -A 1 "PCAT_VIEW_CLNT_POOL"




membuster_thread
membuster_plus_check_all(, ignore) # time in seconds to ignore since startup of the process. this helps you ignore the allocations done at startup
{
	for(gPoolList[i])
	{
		# for each bt
		for(p->bt_list_idx; bt++)
		{
			#
			set time;

			for(p->alloc_list_idx; al++)
			{
				# find the alloc that matches this bt
				# when this alloc is valid(alloc_list[al].addr != 0) and alloc_list[al].bt_idx == bt and its alloc time > igore then
				get alloc time and list allocs from low to high in time

				/* capture from a run
				al[80].time = 0x3df3b < tlo = 0xffffffff
				al[80].time = 0x3df3b > thi = 0x0
				span 138 3df3b 3df3b 0
				# set hi and lo with the first
				al[84].time = 0x3df94 < tlo = 0xffffffff
				al[84].time = 0x3df94 > thi = 0x0
				# set hi with others
				al[86].time = 0x3dffa > thi = 0x3df94
				al[88].time = 0x3e060 > thi = 0x3dffa
				# so get hi and lo between alloc lists
				span 139 3e060 3df94 204
				al[85].time = 0x3dfaf < tlo = 0xffffffff
				al[85].time = 0x3dfaf > thi = 0x0
				al[87].time = 0x3e00a > thi = 0x3dfaf
				span 140 3e00a 3dfaf 91				
				*/
			}

			# so get time span for allocs and means that want to see allocs that lasts for more than span time. 
			tspan = thi - tlo;

			if((tspan / 1000) >= span)
			{
				# print pool name and size
				# print selected bt data
				# loop alloc list and print alloc lists that belongs(matches) to this bt. note that it prints out in no order in time.
			}
		} # end of bt loop

		# print pool usuage and peak
		usage = (p->initialSize - p->s_WholeMem[0].blockPool.totalFreeSize)

	} # end of pool loop
}

# run on one pool that OOM happens.
#
membuster_plus_check_pool(*p)
{
	# loop through all bt_list in this pool
	for(j=0; j < p->bt_list_idx; j++)
		# loop throuth alloc list and print out allocs belongs to this bt_list if there are.
		# so there are bt_lists that don't have allocs.
		for(x=0; x < p->alloc_list_idx; x++)	
		   if(a[x].bt_index == j)
		
		pool_usage +=  bt_list[j].size;

	# print out usage and initial size
	pool_usage, p->initialSize
}


<diag>
static void membuster_plus_check_all(char* filename);
KIT(/mnt/nds/dev_6/part_0/FSN_DATA/MEM_MW.TXT), start check at: 000:12:10.097

NDS: ^[2016:08:30 09:12:44]0946685156.922346 !MIL    -MEMBUSTER                 < p:0x0000019c P:PWM t:0x2aab2450 T:no name M:mbuster_pinit.c F:membuster_plus_init L:224 > membuster default config: 300, 1, /
flash0/fs/NDS, 300, 150, 180

note:
 201:NDS: ^[2016:08:30 11:19:56]!MIL    -MEMBUSTER    		< P:CA t:0x2aab2310 T:no name M:mbuster_pinit.c F:membuster_plus_init L:224 > membuster default config: 300, 1, /flash0/fs/NDS, 300, 150, 180 
 202:NDS: ^[2016:08:30 11:19:56]!MIL    -MEMBUSTER    		< P:CA t:0x2aab2310 T:no name M:mbuster_pinit.c F:membuster_plus_init L:267 > membuster opening process /NDS/bin/CA_Process for analysis 

From start, default file path is /flash0/fs/NDS/ and suddenly changes to
/mnt/nds/dev_6/part_0/FSN_DATA/ when starts a thread from each process. HOW?

3952:NDS: ^[2016:08:30 11:24:54]!MIL    -MEMBUSTER    		< P:STM t:0x2ad9b530 T:no name M:mbuster_pinit.c F:membuster_thread L:809 > membuster thread for STM_Process started 
3953:NDS: ^[2016:08:30 11:24:54]!MIL    -MEMBUSTER    		< P:STM t:0x2ad9b530 T:no name M:mbuster_pinit.c F:membuster_thread L:824 > Path used for membuster logs : /mnt/nds/dev_6/part_0/FSN_DATA 

This works since

-sh-3.2# cat /tmp/diag
/mnt/nds/dev_6/part_0/FSN_DATA

    if( config_read == 0 )
    {
        fh = fopen("/tmp/diag", "r");
        if ( fh == NULL )
        {
            MEMBUSTER_PRINT_W(("Path for membuster logs doesn't found in /tmp/diag! Using default path %s", mb_file_path));
        }
        else
        {
            memset(&mb_file_path[0], 0U, MAX_PATH_NAME);
            fscanf(fh, "%s", mb_file_path);
            MEMBUSTER_PRINT_M(("Path used for membuster logs : %s", mb_file_path));
            fclose(fh);
        }
    }

CMS_SYSTEM_INFRASTRUCTURE/DIAG/src/common/src/diag_cmn_log_management.c
	/* in the config file, for the data partition, the user can either use the exact path or the string "data partition".
	 * in that case, check in /tmp/diag what is the mount point of the data partition
	 */

CMS_SYSTEM_RESOURCE/PDM/src/server/inc/pdm_srv_fs_support.h
#define PDM_FS_DIAG_LINK "/tmp/diag"

PDM_FS_DIAG_LINK 1727 CMS_SYSTEM_RESOURCE/PDM/src/server/fs/pdm_srv_fs_support.c                     
PDM_FS_WriteMntPointToFile((const uint8_t *)g_pdm_fs_diagDir, PDM_FS_DIAG_LINK,false);


={============================================================================
|kt_dev_si_0001| comp-memman-membuster

*interface-to-outside*

// CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/mem_internals.h

#ifdef MEMMAN_MEMBUSTER
/* alloc type flags */
#define ALLOC_TYPE_STATIC               0x01
#define ALLOC_TYPE_ALLOCATOR            0x02
#define ALLOC_TYPE_ELEM	                0x03
#define ALLOC_TYPE_MV                   0x04
#define ALLOC_TYPE_ST_REALLOC           0x05

void membuster_plus_init(void);
void membuster_plus_term(void);

void alloc_list_remove(MEMMAN_API_MemoryPoolHandle *pool, uint32_t addr);
uint32_t alloc_list_add(MEMMAN_API_MemoryPoolHandle *pool, 
                        uint32_t                     addr, 
                        uint32_t                     size, 
                        uint32_t                     type);
uint32_t get_max_call_in_bt(void);

void membuster_plus_pool_oom(MEMMAN_API_MemoryPoolHandle *p);



#endif /* MEMMAN_MEMBUSTER */


*use-outsied*

// CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_fx.c

void   *MEMMAN_API_AllocElement(MEMMAN_API_Allocator *theAllocator)
{
#ifdef MEMMAN_MEMBUSTER
    alloc_list_add(defaultPool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
#endif
}

void   *MEMMAN_API_AllocElementP(MEMMAN_API_MemoryPoolHandle *pool,
                                 MEMMAN_API_Allocator *theAllocator)
{
#ifdef MEMMAN_MEMBUSTER
    alloc_list_add(pool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
#endif
}


// alloc_list_add    387 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(pool, (uint32_t) ptr, size, ALLOC_TYPE_STATIC);

void   *MEMMAN_API_AllocStaticP(MEMMAN_API_MemoryPoolHandle * pool, uint32_t size)
{
#ifdef MEMMAN_MEMBUSTER
    alloc_list_add(pool, (uint32_t) ptr, size, ALLOC_TYPE_STATIC);
#endif
}

note:
This means that user have to know what to use depending on alloc type?

alloc_list_add    152 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_fx.c     alloc_list_add(defaultPool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
alloc_list_add    188 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_fx.c     alloc_list_add(pool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
alloc_list_add    110 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_fxdbg.c       alloc_list_add( defaultPool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
alloc_list_add    149 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_fxdbg.c       alloc_list_add( pool, (uint32_t) elem, theAllocator->elemSize, ALLOC_TYPE_ELEM);
alloc_list_add    316 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_mv.c  alloc_list_add(pool, (uint32_t)handle, size, ALLOC_TYPE_MV);
alloc_list_add     68 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_mvdbg.c     alloc_list_add(defaultPool,(uint32_t) handle, size, ALLOC_TYPE_MV);
alloc_list_add    119 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_mvdbg.c     alloc_list_add(defaultPool, (uint32_t) handle, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add    306 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_mvdbg.c     alloc_list_add(pool, (uint32_t) handle, size, ALLOC_TYPE_MV);
alloc_list_add    358 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_mvdbg.c     alloc_list_add(pool, (uint32_t) handle, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add     54 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(defaultPool, (uint32_t) ptr, size, ALLOC_TYPE_STATIC);
alloc_list_add     92 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(defaultPool, (uint32_t) ptr, nbelem * size, ALLOC_TYPE_STATIC);
alloc_list_add    135 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(defaultPool, (uint32_t) ptr, size, ALLOC_TYPE_STATIC);
alloc_list_add    173 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(defaultPool, (uint32_t) ptr,*paramsize, ALLOC_TYPE_STATIC);
alloc_list_add    212 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(defaultPool, (uint32_t) mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add    279 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c         alloc_list_add(defaultPool, (uint32_t)mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add    425 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(pool, (uint32_t)ptr, size * nbelem, ALLOC_TYPE_STATIC);
alloc_list_add    469 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(pool, (uint32_t)ptr, size, ALLOC_TYPE_STATIC);
alloc_list_add    506 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c     alloc_list_add(pool, (uint32_t)ptr, *paramsize, ALLOC_TYPE_STATIC);
alloc_list_add    545 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c  alloc_list_add(pool,(uint32_t)  mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add    629 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_st.c             alloc_list_add(pool, (uint32_t)mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add     72 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(defaultPool,(uint32_t) staticBlock, size, ALLOC_TYPE_STATIC);
alloc_list_add    129 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(defaultPool, (uint32_t) staticBlock, size * nbelem, ALLOC_TYPE_STATIC);
alloc_list_add    203 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(defaultPool, (uint32_t) staticBlock, size, ALLOC_TYPE_STATIC);
alloc_list_add    258 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(defaultPool, (uint32_t) staticBlock, *paramsize, ALLOC_TYPE_STATIC);
alloc_list_add    314 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(defaultPool, (uint32_t)mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);
alloc_list_add    451 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(pool, (uint32_t) staticBlock, size, ALLOC_TYPE_STATIC);
alloc_list_add    508 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(pool, (uint32_t) staticBlock, nbelem * size, ALLOC_TYPE_STATIC);
alloc_list_add    583 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(pool, (uint32_t) staticBlock, size, ALLOC_TYPE_STATIC);
alloc_list_add    638 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(pool, (uint32_t) staticBlock, *paramsize, ALLOC_TYPE_STATIC);
alloc_list_add    694 CMS_SYSTEM_INFRASTRUCTURE/MEMMAN/src/memman_stdbg.c     alloc_list_add(pool, (uint32_t)mem_ptr, askedSize, ALLOC_TYPE_ST_REALLOC);


*calltrace*
#1  0x2ab534c8 in malloc (bytes=1044) at libc/stdlib/malloc-standard/malloc.c:964
#2  0x2ab53dfc in calloc (n_elements=33, elem_size=2880054767) at libc/stdlib/malloc-standard/calloc.c:93
#3  0x006fe954 in AllocStaticBlockFromMalloc (pool=<optimized out>, size=1044, blockPool=0x1558f28) at mem_blockpool.c:60
#4  0x00702a20 in MHWMemAllocStatic (pool=0x124b130, size=1044) at mem_static.c:85
#5  0x006fb7dc in MEMMAN_API_AllocStaticP (pool=0x124b130, size=1024) at memman_st.c:381


*creat-pool*

// allocate membuster structures inside a pool

// not used anywhere
// SYSTEM_STATUS MEMMAN_API_MemoryInit(void *baseAddr, uint32_t initialSize, uint32_t chunkSize,
//                                     uint32_t maxSize)
// {
//   MEMMAN_API_MemoryPoolHandle *poolHandle = NULL;
//   status = PoolCreate(&poolHandle, NAME_OF_DEFAULT_POOL, 0U, baseAddr, initialSize, chunkSize, maxSize);
// }
// 
// SYSTEM_STATUS MEMMAN_API_MemoryPoolCreateFixedSizeP(MEMMAN_API_MemoryPoolHandle **pool,
//                                                    char *name, void *baseAddr, uint32_t maxSize)
// {
//     return MEMMAN_API_MemoryPoolCreateP(pool, name, flags, baseAddr);
// }

SYSTEM_STATUS MEMMAN_API_MemoryPoolCreateP(MEMMAN_API_MemoryPoolHandle **pool,
                                           char *name, uint32_t flags, void *baseAddr,
                                           uint32_t initialSize, uint32_t chunkSize,
                                           uint32_t `maxSize`)
{

  status = PoolCreate(&poolHandle, poolName, flags, baseAddr, initialSize, chunkSize, `maxSize`);
  *pool = poolHandle;
}


static SYSTEM_STATUS PoolCreate(MEMMAN_API_MemoryPoolHandle **handle, char *name, uint32_t flags,
                          void *baseAddr, uint32_t initialSize, uint32_t chunkSize, uint32_t maxSize)
{
  // poolHandle has housekeeping structure about a pool
  poolHandle = (MEMMAN_API_MemoryPoolHandle *) `malloc`(sizeof(MEMMAN_API_MemoryPoolHandle));

#ifdef MEMMAN_MEMBUSTER
  // alloc membuster structures
  poolHandle->alloc_list = `malloc`(sizeof(ALLOC_LIST) * ALLOC_LIST_INIT_SIZE);
  // ... 
#endif /* MEMBUSTER */

  poolHandle->initialSize = initialSize;
  poolHandle->chunkSize = chunkSize;
  poolHandle->maxSize = maxSize;

  // #define MEMMAN_API_MEMORY_POOL_NO_CHUNK (0U)          /*!< @brief used to create a non-expandable memory pool */

  if (chunkSize == `MEMMAN_API_MEMORY_POOL_NO_CHUNK`)
  {
    /* Non-growable memory pool, maxSize is ignored */
    MPOOL_SET_NOT_GROWABLE(poolHandle);
    poolHandle->maxSize = initialSize;
  }

  // #define NB_BANK_MAX(PH) (((PH)->chunkSize == MEMMAN_API_MEMORY_POOL_NO_CHUNK) ? (1U) : \
  //    (IS_UNLIMITED_POOL(PH) ? ((PH)->nb_bank) : (1U + (((PH)->maxSize - (PH)->initialSize)/(PH)->chunkSize))))

  nb_bank_max = NB_BANK_MAX(poolHandle);

  poolHandle->s_WholeMem = (MemWholeMemory *) `malloc`((size_t)(nb_bank_max * sizeof(MemWholeMemory)));

  if(0U == initialSize)
  {
    poolHandle->s_WholeMem[0].base = NULL;
    MEMORY_PRINT_I(("%s is an empty pool", poolHandle->name));
  }
  else    /* CQ584593 END */
  {
    poolHandle->s_WholeMem[0].base = (void *) `calloc`((size_t) `initialSize`, 1U);
    if (poolHandle->s_WholeMem[0].base == NULL)
    {
      free(poolHandle->s_WholeMem);
      free(poolHandle);
      return MEMMAN_API_STATUS_NO_MORE_MEMORY;
    }
  }

  // mutex
  (SYSTEMUTIL_THR_MutexInit(&poolHandle->lock, NULL, MEMMAN_Ctx) != SYSTEMUTIL_STATUS_OK);

  *handle = poolHandle;
}


SYSTEM_STATUS PoolDestroy(MEMMAN_API_MemoryPoolHandle *poolHandle, bool unregister)
{
  /* Free s_WholeMem array */
  `free`(poolHandle->s_WholeMem);
  poolHandle->s_WholeMem = NULL;

  /* Free pool handle */
  free(poolHandle);
}


*example-use*

MEMMAN_API_MemoryPoolHandle *httpMemmanHandle;

{

  if (MEMMAN_API_Init() != MEMMAN_API_STATUS_OK)
  {
  }

  /* Initialize main pool */
  if (SYSTEMUTIL_THR_CreateMemoryPool(&httpMemmanHandle,
        SYSCONFIG_HTTP_FILENAME,        // "http.cfg"
        SYSCONFIG_HTTP_POOL_PREFIX,     // "HTTP_POOL"
        true)
      != SYSTEMUTIL_STATUS_OK)
  {}
}

// reads values from config file and create a pool. this is not deprecated.

HTTP_POOL_FLAGS=0
HTTP_POOL_NAME="MW_HTTP_POOL"
HTTP_POOL_SIZE=388036

SYSTEM_STATUS SYSTEMUTIL_THR_CreateMemoryPool(MEMMAN_API_MemoryPoolHandle ** pool,
                                              const char *configFileName,
                                              const char *poolNamePrefix, bool appendProcessName)
{
  MEMMAN_API_MemoryPoolCreateP(pool, poolName, poolFlags, `NULL`, poolSize,
      0U, `MEMMAN_API_MEMORY_POOL_NO_CHUNK`);
}


void *prvHTTP_MEMMAN_Malloc(size_t size)
{
    return (MEMMAN_API_`AllocStaticP`(httpMemmanHandle, (uint32_t)size));
}

void prvHTTP_MEMMAN_Free(void *ptr)
{
    (void)MEMMAN_API_`FreeStaticP`(httpMemmanHandle, ptr);
}

void *prvHTTP_MEMMAN_Realloc(void *ptr, size_t size)
{
    return (MEMMAN_API_`ReallocStaticP`(httpMemmanHandle, ptr, (uint32_t)size));
}

void *prvHTTP_MEMMAN_Calloc(size_t nmemb, size_t size)
{
    void *p;

    p = MEMMAN_API_`AllocStaticAlignP`(httpMemmanHandle,(uint32_t)nmemb*size, 8U);

    if(NULL != p)
    {
        memset(p, 0, nmemb * size);
    }

    return p;
}


*from-malloc-or-pool*

MemBlock *AllocStaticBlock(MEMMAN_API_MemoryPoolHandle *pool, uint32_t size, MemBlockPool * blockPool)
{
#ifdef MEMMAN_FORCE_USE_MALLOC_DIRECTLY
    if (MPOOL_IS_DYNAMIC_MALLOC(pool))
    {
        return AllocStaticBlockFromMalloc(pool, size, blockPool);
        // {
        //    base = (void *) calloc((size_t) size, 1U);;
        // }
    }

    else
    {
        return AllocStaticBlockFromPool(pool, size, blockPool);
    }
#else
    return AllocStaticBlockFromPool(pool, size, blockPool);
#endif
}

Use `MEMMAN_FORCE_USE_MALLOC_DIRECTLY` to force it to use calloc.


={============================================================================
|kt_dev_si_0001| comp-memprof

in si_devel, didn't worked well even if used --memprof in build command. worked well with trial build.

sits on \build\processes\common\ and each process add this thread depending on MEMPROF comp flag.

for example, app_process_main.c has:

int main()
{

#ifdef MEMPROF
            memprof_init(); # sleep(60)
#endif
}	

	/* output filename*/
	sprintf(memprof_fname, "/mnt/nds/dev_5/part_0/FSN_DATA/MPROF%d.TXT", mb_pid);


this has only two files which create one thread to call MEMMAM api to print out all pools for every sleep(60).

(MPROF*.txt)
                        poolname,    peak, current,    size
               ALARM_MEMORY_POOL,   28016,   28016,   30720
                 BEM_SERVER_POOL,   48708,   48508,   52000
(*.map)
ADPT_GUIDE 928 736 8000

so 4 is size, 3 is current, and 2 is peak


plotmemprof.sh

# no need to run the below as can plot using a raw text
grep " ${eachpool}," ${filesinmprof} | sed 's/ //g' | sed 's/,/ /g' > ${mapfile}
grep "PCAT_VIEW_CLNT_POOL," MPROF336.TXT | sed 's/ //g' | sed 's/,/ /g' > out.txt

# out.txt
ADPT_PLANNER 872 696 6000
ADPT_PLANNER 1300 1300 6000
ADPT_PLANNER 1300 696 6000


# set range
echo "set terminal jpeg; set title 'PCAT'; set grid; set output 'PCAT.jpg'; set xlabel 'time'; set ylabel 'memory'; set xrange [1071:1100]; plot \"out-pcat.txt\" using 4 title 'size', \"out-pcat.txt\" using 3 title 'current', \"out-pcat.txt\" using 2 title 'peak' with lines;" | gnuplot

echo "set terminal jpeg; set title 'ADPT_GUIDE 8K'; set grid; set output 'ADPT_GUIDE.jpg'; set xlabel 'time'; set ylabel 'memory'; plot \"out.txt\" using 4 title 'size', \"out.txt\" using 3 title 'current', \"out.txt\" using 2 title 'peak' with lines;" | gnuplot


# MPROFMWS.CSV
# See FSI_UA_CMD_PoolsUsage_Callback and FSI_UA_ServerCommand_PoolsUsage_Client: FSI_UA_POOLSUSAGE_CSVFILE_HEADER
#
#1               #2(free)           #3                  #4                         #5 (peek)
Memory_pool_name free_size_in_bytes total_size_in_bytes block_header_size_in_bytes max_allocated_in_bytes
systemobject     24464              51200               20                         51140


={============================================================================
|kt_dev_si_0001| comp-timedoctor

DRV: ^[2016:09:26 06:12:47]0946792106.446265 KERN_WARNING <<< Remote Key >>> key 0xe304 ( USER_INPUT_KEY_NUMERIC_FOUR ) is DOWN 
DRV: ^[2016:09:26 06:12:47]0946792106.449265 KERN_NOTICE [TimeDoctor] stopped
DRV: ^[2016:09:26 06:12:47]0946792106.472265 KERN_WARNING 
DRV: ^[2016:09:26 06:12:47]0946792106.472265 KERN_WARNING [TimeDoctor] logging /mnt/nds/dev_5/part_0/FSN_DATA/TD01.LOG


={============================================================================
|kt_dev_si_0001| comp-ofs

COMPONENT_NAME := OFS

OFS, which acts as NCM proxy for the Legacy Application Engine in WP 655. In WP 547, the LAE calls NCM directly.
OFS provides a RAM based file system which clients can use for data storage and retrieval.

# appears that APP and LAE are users of this comp.
# dir name is given by the app so if see these errors then may suggest something wrong in the app?
#
natRamfsApiOpenDir
	OFS_RAMFS_JAVA_OpenDir
		if(!OFSRamFSPathIsValid())
		# !ERROR -OFS M:ofs_ramfs.c F:OFS_RAMFS_OpenDir L:01786 > Directory invalid


={============================================================================
|kt_dev_si_0001| comp-mfs

## comp-MFS (vfile, pfile, shrec) : CMS_MEDIA_SERVICES

MFS is the component that implements the TFS abstraction.

shrec(shared recording) si the object that binds a set of vifiles to a pfile.

#define MFS_LOW_SESSION_HANDLE_ILLEGAL (0xFFFFFFFF)

#(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((22 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((4 & 0xF) << 12) | (1 & 0xFFF) ) = 0x2010013

# MSM_MFS_STATUS_ERROR 	0x5824001(92422145)


={============================================================================
|kt_dev_si_0001| comp-msm

Media Streamer Support - Fusion <MediaStreamerSupport-Fusion@nds.com>

<status>

#define MSM_COMP_ID         ((uint32_t)(22)) /*!< @brief Media Streaming Management */
#define MSM_INDEXER_IF_ID   (3)
#define SEVERITY_SEVERE     ((uint32_t)(0x2))

#(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )


0x5802000 (92282880) `MSM_DEVICEMAN_STATUS_OK`
hex(((22 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((2 & 0xF) << 12) | (0 & 0xFFF) )


#define `MSM_INDEXER_STATUS_OK`
0x5803000 (92286976) `MSM_IND_STAT_VAL_OK`
hex(((22 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((3 & 0xF) << 12) | (0 & 0xFFF) )


<msm-handle>
#define `MSM_INDEXER_STATUS_INVALID_INDEX_HANDLE`
  (SYSTEM_MAKE_COMPONENT_STATUS(MSM_COMP_ID, MSM_INDEXER_IF_ID, SEVERITY_SEVERE, `MSM_IND_STAT_VAL_INVALID_INDEX_HANDLE`))
MSM_IND_STAT_VAL_INVALID_INDEX_HANDLE(10)
hex(((22 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((3 & 0xF) << 12) | (10 & 0xFFF) )
'0x582300a'

/** @brief MSM_INDEXER_HANDLE Defines a handle to an index */
typedef uint32_t MSM_INDEXER_HANDLE;

#define MSM_INDEXER_ILLEGAL_HANDLE  (0XFFFFFFFF)  /*!< @brief Illegal handle value for MSM_INDEXER_HANDLE */


0x582300b (92418059) `MSM_IND_STAT_VAL_INDEX_DOES_NOT_EXIST`
hex(((22 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((3 & 0xF) << 12) | (11 & 0xFFF) )

!FATAL -VGV          < T:no name M:p_posix.c F:VGV_VER L:01030 > VGV_StreamDataRead. MSM_INDEXER_OpenIndexByMCMHandleIPC returned ERROR expected  92286976(0x5803000) actual 92418059 (0x582300B)


# MSM_DEVICEMAN
Open -> Create -> Prepare [-> Run -> Stop] -> Free -> Close. Means that Run and Stop can be skipped. 


<msm-pts>

UseVideoDecoderPTS value in MS.CFG
UseVideoDecoderPTS=True

MSCPP::DISPLAY_FILTER::PrepareVideoDecoderCallback
{
	    if (UseVideoDecoderPTS == XTRUE)
	    { 
		p_display->m_is_video_decoder_support_pts = 
		    p_data->data.video_decoder_prepared_data.is_video_decoder_support_pts;
	    }
	    else
	    {
		p_display->m_is_video_decoder_support_pts = XFALSE;
	    }	   	 
}


HandleChunkInputTPIDMonitorData
	CheckPTSFromDrivers

inline PTS_SOURCE MSCPP::DISPLAY_FILTER::GetPTSSource()const 
{
    PTS_SOURCE    pts_source;
    /* pts from the audio decoder is not supported yet, in future when it will be supported it should be added here */
    if ((m_is_video_decoder_support_pts == XTRUE) && (m_is_video_enabled))
    {
			pts_source = E_CDISERVER_PTS_SOURCE_VIDEO_DECODER;
    }
    else
    {
			pts_source = E_CDISERVER_PTS_SOURCE_CLOCK_SYNC;
    }
    return  pts_source;
}

void MSCPP::DISPLAY_FILTER::GetPosition (_in_ GET_POSITION_METHOD      		method,
					 _in_ FILTER_GET_POSITION_CALLBACK  	callback)
{
    XDEBUG_DEFINE_FUNC_INFO("GetPosition");
    
    PTS_SOURCE    pts_source = GetPTSSource(); 

    XDEBUG_TRACE3_0("IN");
    
    /* remember the callback */
    m_get_pos_callback = callback;

    XDEBUG_TRACE1_1("get position using method %d", method);
    switch (method)
    {
				case E_GET_POS_METHOD_DISPLAYED_PTS:
				    /* get pos by pts only */
				    CDISERVER_GetPts(ITEM_GetXconnection(m_p_item),
						     m_clock_sync_fd,
						     m_video_decoder_fd,
						     pts_source,
						     GetPtsCallbackForUserPosByPts,
						     this);
				    break;
}


CDISERVER_GetPts(cdi_server.c)
	send E_REQUEST_TYPE_GET_PTS
	
# ERROR  -MSM_MS       		< p:0x00000000 P: t:0x01150610 T:EVENT_MGR_THREAD M:watchdog.c F:WatchdogEventMgrCb L:432 > -MS_WATCHDOG- thread E_MS_PORT_THREAD_TYPE_CDI_WT, " "pid = 301, tid = 18155024, " "called E_REQUEST_TYPE_GET_DEMUX_OUTPUT_STATUS at time [2027:09:26 09:55:37]1821952537, " "time diff = 706, " "halt value 500 
CdiServerThread(cdi_server.c, 'E_MS_PORT_THREAD_TYPE_CDI_WT' thread name )
	case E_REQUEST_TYPE_GET_PTS:
		'HandleGetPts'
		{
			switch(pts_source)
				E_CDISERVER_PTS_SOURCE_VIDEO_DECODER: MS_CDI_PROXY_VideoDecoderGetPts
				E_CDISERVER_PTS_SOURCE_CLOCK_SYNC: MS_CDI_PROXY_ClockSyncGetValue
				
			XDEBUG_TRACE1_2("-MS_CDI_CONTROL- returning PTS [%u,%u]", pts.high, pts.low);

			(lead to the below)	
			
			SYSTEM_STATUS MPM_DEVICE_GetVideoDecoderPTS(MCM_MEDIACONN_HANDLE h_media_connection, PTS * pts)
			{
			  MPM_STATUS status = MPM_STATUS_NOT_OK;
			  MPM_MEDIA_CONNECTION * p_media_connection;
			
			  DIAG_DECLARE_FUNCTION("MPM_DEVICE_GetVideoDecoderPTS");
			  DIAG_LOG_FN_ENTRY(g_MPM_Logging_ID);
			
			  p_media_connection = MPM_MCGetMediaConnection(h_media_connection);
			
			  if (NULL != p_media_connection)
			  {
			      if (NULL != p_media_connection->p_video_decoder)
			      {
			          if (p_media_connection->p_video_decoder->supported_formats.decoder_features & VIDEO_DECODER_FEATURE_PTS_AVAILABLE)
			          {
			              status = MPM_DEVICE_LockDevice(h_media_connection, MPM_DEVICE_DECODE_VIDEO_DECODER);
			              if (status == MPM_STATUS_OK)
			              {
			                  /*lint -save -e923    Authorised by S Taylor. See email attached to CQ196440 */
			                  status = 'MPM_DEVICE_DoIoctl'(h_media_connection, MPM_DEVICE_DECODE_VIDEO_DECODER, VIDEO_DECODER_GET_PTS, (void *)pts);
			                  /*lint -restore */
			                  MPM_DEVICE_UnlockDevice(h_media_connection, MPM_DEVICE_DECODE_VIDEO_DECODER);
			              }
			          }
			          else
			          {
			              status = MPM_STATUS_NOT_SUPPORTED;
			              DIAG_LOG_WARN(g_MPM_Logging_ID, ("hMC=0x%x - video decoder doesn't support getting PTS",h_media_connection));
			          }
			      }
			      else
			      {
			          status = MPM_STATUS_NO_DEVICE;
			          DIAG_LOG_WARN(g_MPM_Logging_ID, ("hMC=0x%x - No video decoder assigned",h_media_connection));
			      }
			  }
			
			  DIAG_LOG_FN_EXIT(g_MPM_Logging_ID,status);
			  return status;
			}
		
# print out when playing back
#
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1458528462]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1458528462]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1458532062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1458928062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1459828062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1460728062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1460810862]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1460818062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1461628062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1462528062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1463431662]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1463510862]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1463518062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1464331662]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1465231662]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1466131662]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1466210862]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1466218062]
KT: psrc(1) -MS_CDI_CONTROL- returning PTS [1,1467035262]


# DEST_FINISHED_CONSUMING_DATA
#
NDS: ^[00:05:02]0946685102.219069 !WARN  -MSM_MS       < p:0000023c t:01256dd0 T:EVENT_MGR_THREAD M:display_chunk.cpp F:DecoderMonitorFsm_HandleTimerTicked L:03716 > -MS_DISPLAY- Timer ticked ! Raise DEST_FINISHED_CONSUMING_DATA.

StartDecoderMonitoring
{
	if (MSFeatureUseEofDecodersEvents == XTRUE)
	{
		VIDEO_DECODER_EVENT_NO_FRAME_TO_PRESENT
		AUDIO_DECODER_EVENT_NO_SAMPLES_TO_PLAY
	}
	else
	{
		VIDEO_DECODER_GET_RATE_BUFFER_STATE
	}
}

VIDEO_DECODER_EVENT_NO_FRAME_TO_PRESENT -> E_DISPLAY_DECODER_MONITOR_EV_EVENT_ARRIVED
DecoderMonitorFsm_HandleDecoderEventArrived

DecoderMonitorFsm_SetState

void MSCPP::DISPLAY_FILTER::StepFsm_HandleFrameDecodedEvent()
{
	/*
	  cleanup after frame decoded -
	  decrement num_i_frames_released, report to read FSM...
	*/
	FinishStep(XTRUE);
}

void MSCPP::DISPLAY_FILTER::ContinueToNextStep()
{
	XDEBUG_WARN1_0("-MS_DISPLAY- Missing I-frame in trick modes. "
	   "Raise DEST_FINISHED_CONSUMING_DATA.");
}


#
# write error
#
MSCPP::DISKDEST_FILTER::ReadNeeded

MSCPP::DISKDEST_FILTER::HandleWrite(*p_read_needed_info)
	# no return check on the below call
	PrepareWriteParams
	
	# fs_server.c, thread E_MS_PORT_THREAD_TYPE_FS_WT,
	FS_SERVER_ExtendedWrite(, p_read_needed_info->header.p_src, )
	(thread msg passing)
	HandleExtendedWrite
		PerformWrite(, p_ext_write_params->p_src_buf "write data source buffer", )
		# misleading?
	    # case XTVFS_E_ARGUMENT:
        #        *p_write_stat = E_FSSERVER_STATUS_INVALID_ALIGNMENT;
        #        XDEBUG_ERR1_1("XTVFS_WriteEx failed,returned value:"
	    #	      " E_FSSERVER_STATUS_INVALID_ALIGNMENT\n"
	    #	      ", File handle = %d\n",
	    #		      handle);
        #        break;
		
			XTVFSSTATUS XTVFS_WriteEx(xtvfsFile handle, const char *buffer, int numbytes, int *pNumBytes)
				  bytesWritten = fs_fos_write((int)handle, buffer, numbytes); 
					xdirect_write((int)handle, buffer, (size_t) numbytes))
						DBUG_RETURN(write(fd, (char *)buf, nbyte ) );
			
FileWriteCallback
	E_FSM_EVENT_DISK_WRITE_COMPLETE
	FsmWaitingDiskWriteCompleteState
		HandleWriteDone(p_data->p_fs_response);

PrepareWriteParams:			
NDS: ^[07:46:05]0946712765.356992 !FATAL -MSM_MS       < p:000000bf t:0129dbf0 T:EVENT_MGR_THREAD M:xdebug2diag.c F:PrepareWriteParams L:00148 > ~~~~~~~~~~~~~~~~~~~~ XDEBUG_ASSERT at file=<diskdest.cpp>, func=PrepareWriteParams, line=1274, failed on:(((((uint32_t)(p_read_needed_info->header.p_src))) & (((unsigned)m_disk_required_alignment)-1)) == 0)

#
# this write buffer should be aligned as to XTVFS alignment requiremet. % 511. 
#
PerformWrite::
330080:NDS: ^[07:46:05]0946712765.358190 !ERROR -MSM          < p:000000bf t:01273520 T:FS_WT_THREAD1 M:xtvfspc.c F:XTVFS_WriteEx L:01092 >  XTVFS: 42-To-POSIX: XTVFS_WriteEx: write failed for handle = 429 (buffer = 0x2BE693A4, numbytes = 24064), errno = 22 (Invalid argument), XTVFS status = 33057 !!!!!
330081:NDS: ^[07:46:05]0946712765.358585 !FATAL -MSM_MS       < p:000000bf t:01273520 T:FS_WT_THREAD1 M:fs_server.c F:PerformWrite L:01943 > XTVFS_WriteEx failed,returned value: E_FSSERVER_STATUS_INVALID_ALIGNMENT

HandleWriteDone::
330083:NDS: ^[07:46:05]0946712765.358999 !FATAL -MSM_MS       < p:000000bf t:0129dbf0 T:EVENT_MGR_THREAD M:diskdest.cpp F:HandleWriteDone L:01650 > MS_STATUS_FILE_WRITE_ERROR occured in Diskdest Filter 0x2b01c728
330084:NDS: ^[07:46:05]0946712765.358999 !ERROR -MSM_MS       < p:000000bf t:0129dbf0 T:EVENT_MGR_THREAD M:xdebug2diag.c F:HandleWriteDone L:00164 > ~~~~~~~~~~~~~~~~~~~~ XERR_RAISE at file-<diskdest.cpp>, func=HandleWriteDone, line=1651: err=MS_STATUS_FILE_WRITE_ERROR

void MSCPP::REMUX_FILTER::FsmWaitDataWasReadState
330085:NDS: ^[07:46:05]0946712765.358999 !FATAL -MSM_MS       < p:000000bf t:0129dbf0 T:EVENT_MGR_THREAD M:xdebug2diag.c F:FsmWaitDataWasReadState L:00148 > ~~~~~~~~~~~~~~~~~~~~ XDEBUG_ASSERT_ZERO at file=<remux.cpp>, func=FsmWaitDataWasReadState, line=730, msg=Error in 'Data Was Read'!


# this alignment requirement comes from xtvfs
#
XTVFSSTATUS XTVFS_RequiredAlignment(XULONG *pReqAlign, XULONG *pSectorSize)
{
    XDEBUG_DEFINE_FUNC_INFO("XTVFS_RequiredAlignment");
    CHECK_INIT("XTVFS_RequiredAlignment")

    /* Check function parameters */
    if ( !pReqAlign && !pSectorSize ) {
        XTVFS_POS_DEBUG_ERR_0("XTVFS_RequiredAlignment : wrong parameters: both pReqAlign and pSectorSize are NULL !!!!!\n");
        return XTVFS_E_ARGUMENT;
    }

    if (pSectorSize)
    {
        *pSectorSize = 512U;
    }
    if (pReqAlign)
    {
        *pReqAlign = 511U;
    }

    XTVFS_POS_DEBUG_FULL_4("XTVFS_RequiredAlignment: pSectorSize = %d%s, pReqAlign = %d%s (hardcoded data)\n",
                           pSectorSize ? *pSectorSize : 0, pSectorSize ? "" : " (pSectorSize is NULL)",
                           pReqAlign ? *pReqAlign : 0, pReqAlign ? "" : " (pReqAlign is NULL)");
    return XTVFS_SUCCEED;
}


# when change channels. WriteEx fail.
# 
# (mcm_common.h) MCM_MEDIACONN_TYPE
#define MCM_MEDIACONN_TYPE_RECORDING  0x7000003 (117440515)

MSM_DEVICEMAN_Open(mcm_handle,
		   0,
		   MCM_MEDIACONN_TYPE_PLAYBACK,
		   MslSrvInteractiveCatalog[catalogIdx].playVfileLocator,
		   0);

egrep -an "(VRM_JOB_START:|playService|MSM_DEVICEMAN_Open|MSM_DEVICEMAN_Stop|MS_DEVICEMAN_)"

# more compact
egrep -an "(VRM_JOB_START:|playService|MS_DEVICEMAN_Run|MS_DEVICEMAN_Stop)"

239998:NDS: !MIL   -EPG_ME       < T:no name M:MediaEngine F:playService L:01316 > TUNING TO BBC 1 London, 101
240047:NDS: !MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=3, jhVRM=0x30003f1
240065:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Stop L:01074 > Milestone : MSM_DEVICEMAN_Stop hMC=0x3f9, Starts... 
240068:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Stop L:01955 > Milestone : -MS_API- hMC=0x3f9
240267:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Free L:01975 > Milestone : -MS_API- hMC=0x3f9 activity=MSM_MC_ACT_OPEN_CONFIGURE_DEMUX_OUTPUT
240557:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Free L:01975 > Milestone : -MS_API- hMC=0x3f9 activity=MSM_MC_ACT_OPEN_INDEX_FILES
240571:NDS: !INFO  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Close L:01992 > -MS_API- hMC=0x3f9
241275:NDS: !MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=5, jhVRM=0x30003f2
241418:NDS: !INFO  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00374 > hMC=0x3fb, mc_type= 117440515, source_locator=0xc5a08060, destination_locator=0xc6e08013 
241419:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00382 > Milestone : MSM_DEVICEMAN_Open hMC=0x3fb, mc_type=0x7000003, source_locator=0xc5a08060, destination_locator=0xc6e08013 Starts... 
241420:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00415 > Milestone : MSM_DEVICEMAN_Open for record: hMC=0x3fb, shrec=s504 Starts...
241428:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Open L:01874 > Milestone : -MS_API- open hMC=0x3fb for recording, source=unknown source, destination=s504
241695:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00881 > Milestone : MSM_DEVICEMAN_Open hMC=0x3fb, mc_type=0x7000003, Ends with status[0x5802000] 
241704:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Prepare L:01910 > Milestone : -MS_API- hMC=0x3fb activity=MSM_MC_ACT_OPEN_INDEX_FILES
241712:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Prepare L:01910 > Milestone : -MS_API- hMC=0x3fb activity=MSM_MC_ACT_OPEN_CONFIGURE_DEMUX_OUTPUT
241887:NDS: !INFO  -MSM_MS       < T:MCM_ITCMAIN_THREAD M:ms_fusion.c F:MS_DEVICEMAN_UpdateMediaSelectionObject L:02109 > -MS_API-hMC=0x3fb mso_handle=-909099001
242078:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Run L:01933 > Milestone : -MS_API- hMC=0x3fb


243464:NDS: !MIL   -EPG_ME       < T:no name M:MediaEngine F:playService L:01316 > TUNING TO Sky Living HD, 107
243493:NDS: !MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=3, jhVRM=0x30003f3
243505:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Stop L:01074 > Milestone : MSM_DEVICEMAN_Stop hMC=0x3fb, Starts... 
243508:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Stop L:01955 > Milestone : -MS_API- hMC=0x3fb
(***)
243539:NDS: !ERROR -MSM          < T:FS_WT_THREAD1 M:xtvfspc.c F:XTVFS_WriteEx L:01092 >  XTVFS: 42-To-POSIX: XTVFS_WriteEx: write failed for handle = 417 (buffer = 0x2BE2AD1C, numbytes = 48128), errno = 22 (Invalid argument), XTVFS status = 33057 !!!!!

243676:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Free L:01975 > Milestone : -MS_API- hMC=0x3fb activity=MSM_MC_ACT_OPEN_CONFIGURE_DEMUX_OUTPUT
243958:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Free L:01975 > Milestone : -MS_API- hMC=0x3fb activity=MSM_MC_ACT_OPEN_INDEX_FILES
243972:NDS: !INFO  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Close L:01992 > -MS_API- hMC=0x3fb
244676:NDS: !MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=5, jhVRM=0x30003f4
244819:NDS: !INFO  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00374 > hMC=0x3fd, mc_type= 117440515, source_locator=0xdde08012, destination_locator=0xdf2080ab 
244820:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00382 > Milestone : MSM_DEVICEMAN_Open hMC=0x3fd, mc_type=0x7000003, source_locator=0xdde08012, destination_locator=0xdf2080ab Starts... 
244821:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00415 > Milestone : MSM_DEVICEMAN_Open for record: hMC=0x3fd, shrec=s505 Starts...
244829:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Open L:01874 > Milestone : -MS_API- open hMC=0x3fd for recording, source=unknown source, destination=s505
245096:NDS: !WARN  -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00881 > Milestone : MSM_DEVICEMAN_Open hMC=0x3fd, mc_type=0x7000003, Ends with status[0x5802000] 
245105:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Prepare L:01910 > Milestone : -MS_API- hMC=0x3fd activity=MSM_MC_ACT_OPEN_INDEX_FILES
245113:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Prepare L:01910 > Milestone : -MS_API- hMC=0x3fd activity=MSM_MC_ACT_OPEN_CONFIGURE_DEMUX_OUTPUT
245281:NDS: !INFO  -MSM_MS       < T:MCM_ITCMAIN_THREAD M:ms_fusion.c F:MS_DEVICEMAN_UpdateMediaSelectionObject L:02109 > -MS_API-hMC=0x3fd mso_handle=-510640125
245573:NDS: !WARN  -MSM_MS       < T:MSMDispatcher M:ms_fusion.c F:MS_DEVICEMAN_Run L:01933 > Milestone : -MS_API- hMC=0x3fd


#define MCM_MEDIACONN_ACTIVITY_TYPE_BASE                ((uint32_t)0x00000000)
#define MCM_MEDIACONN_ACTIVITY_TYPE_PREPARE             (MCM_MEDIACONN_ACTIVITY_TYPE_BASE + (uint32_t)0x00000001U) /*!< @brief Prepare activity */
#define MCM_MEDIACONN_ACTIVITY_TYPE_RUN                 (MCM_MEDIACONN_ACTIVITY_TYPE_BASE + (uint32_t)0x00000002U) /*!< @brief Run activity */
#define MCM_MEDIACONN_ACTIVITY_TYPE_STOP                (MCM_MEDIACONN_ACTIVITY_TYPE_BASE + (uint32_t)0x00000003U) /*!< @brief Stop activity */
#define MCM_MEDIACONN_ACTIVITY_TYPE_FREE                (MCM_MEDIACONN_ACTIVITY_TYPE_BASE + (uint32_t)0x00000004U) /*!< @brief Free activity */

typedef enum MSM_DEVICEMAN_ActivityTag
{
    MSM_MC_ACT_UNDEF=0,                     /*!< @brief Undefined */
    MSM_MC_ACT_OPEN_CONFIGURE_CHUNK_INPUT,  /*!< @brief Opens and configures chunk input and starts buffering (requires free) */
    MSM_MC_ACT_BUFFER_STREAM,               /*!< @brief Waits until sufficient data is buffered in the chunk input for playback to start */
    MSM_MC_ACT_OPEN_INDEX_FILES,            /*!< @brief (Requires free) */
    MSM_MC_ACT_OPEN_CONFIGURE_DEMUX_OUTPUT, /*!< @brief Opens and configures the demux output(requires free) */
    MSM_MC_ACT_OPEN_CONFIGURE_RASP,         /*!< @brief (requires free) */
    MSM_MC_ACT_PLAY_STREAM,                 /*!< @brief Starts streaming from IP to demux for SI parsing requires free) */
	MSM_MC_ACT_OPEN_CONTENT_FILE,			/*!< @brief Open GHN content file ,parse its content, and create MESI object(requires free) */
    MSM_MC_ACT_LastValue                    /*!< @brief Last Value */
} MSM_DEVICEMAN_Activity;

#
!WARN   -MSM_MDI      		< p:0x00000000 P: t:0x01213f80 T:MCM_ITCMAIN_THREAD M:meta_mem.c F:MetaMemAllocateContext L:906 > Milestone : context 5, was allocated for META_CONTEXT 0x8000000e, memoryConnectionType META_MEMORY_CONNECTION_TYPE_PLAY_OF_PLAYBACK [11] 

typedef enum _META_MEMORY_CONNECTION_TYPE
{
	META_MEMORY_CONNECTION_TYPE_INVALID = 0,
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_RECORD,
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_GC,		/* real gc (but not gc that is part of record) */
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_IMPORT,	/* PDL */
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_GENERAL,	/* master of minimal play for conversion (time to byte)*/
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_PLAYBACK,
	META_MEMORY_CONNECTION_TYPE_MASTER_OF_CLEAR_PLAYBACK,
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_RECORD, '7'
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_GC,
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_IMPORT,
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_GENERAL,  	/* minimal play for conversion (time to byte)*/
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_PLAYBACK, '11'
	META_MEMORY_CONNECTION_TYPE_PLAY_OF_CLEAR_PLAYBACK,
	META_MEMORY_CONNECTION_TYPE_SHARED, 			/* shared memory, memory that is used for more than one connection 
													   e.g. refresh resources that shared between all the recordings */
	META_MEMORY_CONNECTION_TYPE_NO_MEMORY_USED, 	/* e.g bdl */
	META_MEMORY_CONNECTION_TYPE_LAST,
} META_MEMORY_CONNECTION_TYPE;



# used only to check stop and start of video decoder
!ERROR  -MSM_MS       		< p:0x00000000 P: t:0x01150610 T:EVENT_MGR_THREAD M:watchdog.c F:WatchdogEventMgrCb L:432 > -MS_WATCHDOG- thread E_MS_PORT_THREAD_TYPE_CDI_WT, " "pid = 301, tid = 18155024, " "called E_REQUEST_TYPE_UPDATE_VIDEO_DECODER_MONITOR at time [2027:08:08 12:36:51]1817728611, " "time diff = 538, " "halt value 500 

# DEMUX OUTPUT BUFFER OVERFLOW
After the output buffer overflow, the MSM goes through a stop->free->prepare->run cycle so as to be able to align the indexing data from RASP with the stream data.


<xcon-mc>
NDS: ^[2016:09:25 16:26:29]0946861585.839292 !MIL    -MSM_MS                     < p:0x000001f6 P:MW t:0x018d9520 T:EVENT_MGR_THREAD M:disksrc.cpp F:(HandleReadDoneEvent) L:900 > 
< splicer=0xef `hMC=0xf2` >" "-MS_EOF- Source Filter of `xcon=0xf2` Reached EOF. Total number of bytes in header is 0


={============================================================================
|kt_dev_si_0001| comp-rmf

Anna Silberman	Component Owner	Israel

When a job wants to perform a task that requires resources, it must request
permission from the RMF.  The RMF is responsible for the 'logical' aspect of
granting permissions to use resources. It is not involved in allocating them
physically. 

The `job manager`, prior to requesting resources (or performing tasks that
    require resources) from the `physical resource managers`, must call the
RMF and get permissions to do so.

RMF manages resources that are mapped to certain permissions according to the
specific project requirements and characteristics of the STB. For example, in
one project permission to perform playback may require a disk bandwidth
resource and in another project it would not. (Actually, in all projects disk
    bandwidth is required, but in some projects the disk bandwidth is not a
    bottleneck and the RMF does not need to be aware of it.)

Supporting a waiting `queue` (A physical resource manager)
For instance, the MCM allows requesting a media connection and the request
will be valid even if there are no free devices for the media connection. In
such a case, the request shall be granted once the devices become available.
On the other hand, the physical resource manager of the disk space (the file
    system) does not support such a mechanism. 


The MCM supports the following types of media connections:

1) LIVEVIEWING 
Used for viewing live streams from a tuner front end. This media connection
type requires the following device managers: FEM, 'MPM', CAMM, SIM, FDM, SDM.

2)	RECORDING 
Used for recording streams from a tuner front end to files on disk. This media
connection type requires the following device managers: FEM, MPM, MSM, CAMM,
SIM, SDM.

3)	PLAYBACK 
Used for playing streams from disk. This media connection type requires the
following device managers: MPM, MSM, CAMM, SIM.

4)	CAPTURE 
Used for capturing service information data. This media connection type
requires the following device managers: FEM, MPM, CAMM, SIM, FDM, SDM.

5)	SCAN 
Used for determining what transponder frequencies contain valid streams. This
media connection type requires the following device managers: FEM, MPM, SIM.


COMPONENT_NAME := rmfplugin

<job-type> see *vrm-job-type*
// 146746:!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c 
// F:RMF_ALLOCATE_ControlPermissions L:1012 > 
// job=0x201072f(0)[L] request=0x10000020 released=0xf0000000 change request if fails. 

char* JobTypeToString(SYSTEMJOB_Type jobType)
{
    char *typeStr="Er";

    switch(jobType)
    {
    case SYSTEMJOB_TYPE_SCAN:
        typeStr = "S";
        break;
    case SYSTEMJOB_TYPE_CAPTURE:
        typeStr = "C";
        break;
    case SYSTEMJOB_TYPE_LIVE_VIEWING:
        typeStr = "L";
        break;
    case SYSTEMJOB_TYPE_RECORD:
        typeStr = "R";
        break;
    case SYSTEMJOB_TYPE_REMINDER:
        typeStr = "Rm";
        break;
    case SYSTEMJOB_TYPE_PLAYBACK:
        typeStr = "P";
        break;
        ...
    }

    return typeStr;
}


<conflict-quota> see *rmf-auto-resolution-to-qic*

!INFO  -SBMS_USERBOOKING < p:000000eb t:021e5520 T:SBM_UB_MAIN M:sbm_server_ub_bookedprogramme_properties.c F:SBM_SERVER_USERBOOKING_GetQuotaStatus L:00435 > Quota (user): MaxSize 0x00000000,5c868d3e, UsedSize 0x00000000,001dc5fe, usedPct 0x0
!INFO  -RMF          < p:000000eb t:021e5520 T:SBM_UB_MAIN M:rmf_quota.c F:RMF_QUOTA_GetQuotaStatus L:00590 > maxSize =  0,[2019:03:11 16:30:54]1552321854(high,low)
!INFO  -RMF          < p:000000eb t:021e5520 T:SBM_UB_MAIN M:rmf_quota.c F:RMF_QUOTA_GetQuotaStatus L:00591 > usedSize =  0,1951230(high,low)
!INFO  -RMF          < p:000000eb t:021e5520 T:SBM_UB_MAIN M:rmf_quota.c F:RMF_QUOTA_GetQuotaStatus L:00592 > UsedPercents = 0


// CMS_SYSTEM_RESOURCE/RMF/src/plugins/quota_immediate_conflict.c

// this is only place to register QIC_Listener

    /* register to ControlPermission listener */
    stat = RMF_SRV_Listener_Register(QIC_Listener, NULL,
                &QICListenerHandle);

    stat = RMF_SRV_Listener_SetEventsMask(QICListenerHandle,
      RMF_SRV_LISTENER_EVENT_CONTROL_PERMISSIONS);


RMF_ALLOCATE_ControlPermissions() to check permission
{
  fire up to notify permission result to client
    stat = RMF_SRV_TriggerListeners(RMF_SRV_LISTENER_EVENT_CONTROL_PERMISSIONS, cookieJar);

  SYSTEM_STATUS RMF_SRV_TriggerListeners(uint32_t event, RMF_COOKIE_JarHandle cookieJar)
    listenersTable[i].trigger(event, cookieJar, listenersTable[i].data);
}

PRVFUNC void QIC_Listener(uint32_t event, RMF_COOKIE_JarHandle	cookieJar, void *data)
{
  bool						handleConflict = true;

  // read the field from cookie and if it is set then "handleConflict = false"

  stat = RMF_COOKIE_Jar_ReadCookie(cookieJar,
      RMF_COOKIE_TYPE_CTRL_PERM_FAILED_REQUEST_TYPE,
      (uint16_t)(sizeof(RMF_ALLOCATE_REQUEST_FLAGS)), &flags);

  if ( flags & RMF_ALLOCATE_REQUEST_FLAGS_RETRY)
  {
    DIAG_LOG_INFO(gRmfSegmentId, ("deny request with no conflict resolution!"));
    handleConflict = false;
  }

  // RMF_ALLOCATE_REQUEST_FLAGS_RETRY  (0x01U)  /*!< @brief No conflict
  // resolution required, request is called to insure job retry */

  // note: This is not set and means that conclict is required

  if (handleConflict == true)
  {
    stat = QIC_Construct(QIC_Type_FailAssign, jobInJar, quota_part_id, cookieJar, successInAutoResolution, strategy);
    STATUS_CHECK_AB(stat);
  }
}

// /* conflict due to fail assign */
// QIC_Type_FailAssign,
//
// /* conflict due to trigger of quota resource */
// QIC_Type_TriggerWarning,

// raise quota conflict
stat = QIC_Construct(QIC_Type_FailAssign, 
    jobInJar, quota_part_id, cookieJar, successInAutoResolution, strategy)
{

  /* Find a resolution to the conflict */
  stat = QIC_Resolve(pConf, &uiRequired, cookieJar, successInAutoResolution, strategy);

  DIAG_LOG_MIL(gRmfSegmentId, ("Conflict on %s UI %s required",
    RMF_JOB_Instance_ToString(subject),
    (uiRequired ? "" : "NOT ")));
}


<conflit-change-quota-size> *user-quota*
HOWTO artificially reduce the size of the user quota of the planner

Edit `flash0/fs/NDS/config/rmf.cfg` and change max_size in section.

[quota1_internal]
conflictCriticalLimitInMinutes=3
conflictThresholdLimitInMinutes=7
max_size_units="MB"
max_size=4000
partition_name="RECORDING"
quota_name="user"
quota_type="user_type"
statistics_required=1
strategy="Fixed"


The user quota do not use size_unit to set size since set it with all
remaining size. Have to use max_size with real size or do have calc in code.


max_size_units="MB"
max_size=4000

104857600     100(1024*1024)


Do two things:

1.
QuotasOnDevice_Add: 
        /* max_size entry should be present for all strategies expect for
         * units: Remaining, system limitation, system quota per model,
         * Recycle */
        if ((info.strategy != RMF_QUOTA_STRATEGY_REMAINING) &&
                (info.strategy != RMF_QUOTA_STRATEGY_SYSTEM_QUOTA_LIMITATION) &&
                (info.strategy != RMF_QUOTA_STRATEGY_NO_SIZE_SET))
        {
        }
        else
        {
            info.max_size = i64zero;

            // KIT
            if (strcmp(info.type, "user_type") == 0) 
            {
                raw_size = 1000;
                info.max_size = i32_to_xint64_t(0, raw_size);
                DIAG_LOG_ERROR(gRmfSegmentId, ("KIT: <%s> raw_size: %u, max_size: %u,%u(high,low) ",
                            info.name,
                            raw_size,
                            xint64_t_high(&info.max_size),
                            xint64_t_low(&info.max_size)));

            }
        }

2. QuotasOnDevice_SetSizes()
comment out this in QuotasOnDevice_SetSizes() since this do calc and set
user quota with the remaining size
// KIT: DO NOT SET WITH REMAINING SIZE
// quotas[Idx]->creationInfo.max_size = remainingSize;


// CMS_SYSTEM_RESOURCE/RMF/src/plugins/quota_resource.c
// reads rmf.cfg and set values for all quotas
QuotasOnDevice_Add(SYSTEMCOMMON_DEVICE_HANDLE device_handle)

// reads from pdm but not uses model configuraton. use stragegy.
PRVFUNC SYSTEM_STATUS QuotasOnDevice_SetSizes(SYSTEMCOMMON_DEVICE_HANDLE device_handle)

    /* get the size of recording partition on disk  */
    stat = QuotasOnDevice_GetPartitionSize(device_handle,
            quotas[quotas_count-1U]->creationInfo.partition_name,
            &partitionSize);

!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_Add L:03773 > quota[3] name recycle device_handle: 0x6, disk_uid  part_id 0x50003
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_GetPartitionSize L:04557 > PDM partition size  465,3228270592(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_GetPartitionSize L:04568 > 1TB is in bytes: 256,0(high, low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_GetPartitionSize L:04614 > DATA part size in bytes: 2,2212160949(high, low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_GetPartitionSize L:04620 > Final stream partition size in bytes: 463,1016109643(high, low)

!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04159 > manufactured HDD size in GiB 1500
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04167 > device size in GB (10^9 bytes) 2000
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04238 > The current model is not part of the exception.

!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_LimitQuotaSize L:04052 > quota: <user> max_size is 0,1000(high,low)

!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04466 > quota user: size: 0,1000(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04466 > quota system: size: 83,3526103040(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04466 > quota NDS_Dynamic: size: 9,1345294336(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04466 > quota recycle: size: 0,0(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04481 > partitionSize: 463,1016109643(high,low), all quotas size: 93,576431080(high,low)
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04497 > quota[0]: <user> max size = 0,1000(high,low) on device handle 0x6
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04497 > quota[1]: <system> max size = 83,3526103040(high,low) on device handle 0x6
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04497 > quota[2]: <NDS_Dynamic> max size = 9,1345294336(high,low) on device handle 0x6
!INFO  -RMF < T:RMF_Server M:quota_resource.c F:QuotasOnDevice_SetSizes L:04497 > quota[3]: <recycle> max size = 0,0(high,low) on device handle 0x6


<check-disk-size>
-sh-3.2# fdisk -lu

Disk /dev/sda: 2000.3 GB, 2000398934016 bytes
255 heads, 63 sectors/track, 243201 cylinders, total 3907029168 sectors
Units = sectors of 1 * 512 = 512 bytes

   Device Boot      Start         End      Blocks  Id System
/dev/sda1              64  3907007999  1953503968   1 FAT12


note: 
Usual size

M:quota_resource.c F:QuotasOnDevice_SetSizes L:04427 > remaining size: 370,439679563(high,low)
M:quota_resource.c F:QuotasOnDevice_SetSizes L:04443 > remaining quota[0]: <user> max_size: 370,439679563(high,low)
M:quota_resource.c F:QuotasOnDevice_SetSizes L:04457 > quota user: size: 370,439679563(high,low)
M:quota_resource.c F:QuotasOnDevice_SetSizes L:04457 > quota system: size: 83,3526103040(high,low)
M:quota_resource.c F:QuotasOnDevice_SetSizes L:04457 > quota NDS_Dynamic: size: 9,1345294336(high,low)
M:quota_resource.c F:QuotasOnDevice_SetSizes L:04457 > quota recycle: size: 0,0(high,low)

>>> ((370<<32) | (439679563))
1589577579083L
>>> (1589577579083L)/(1024*1024*1024)
1480L
1.4 TB


<conflict>

// from RMF ppt
A conflict can be characterized by: 
Which resources are involved:
	Tuner
	Quota
Time: 
	Immediate 
	Imminent (immediate conflict is expected shortly) 
	Future (booking) 
Trigger of conflict:
	Solicited  - requested by EPG
	Unsolicited - notified by RMF
How it is resolved:
	Automatically 
	Involving the user 

// channel change conflict

if there's no response within the timeout, the platform cancels the
channel-change request.


<state-code>
# STATE (COMP, SEV, IF, STA)
hex(((30 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((2 & 0xF) << 12) | (1 & 0xFFF) )
hex(((30 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((2 & 0xF) << 12) | (1 & 0xFFF) )

#define RMF_COMP_ID         ((uint32_t)(30)) 
#define SEVERITY_SEVERE     ((uint32_t)(0x2))
#define RMF_ALLOCATE_IF_ID  (2)

#define RMF_ALLOCATE_STATUS_OK 
(SYSTEM_MAKE_COMPONENT_STATUS(RMF_COMP_ID, RMF_ALLOCATE_IF_ID, SEVERITY_NONE,   0)) /*!< @brief Status for RMF_ALLOCATE */
  0x07802000

#define RMF_ALLOCATE_STATUS_FAILURE (SYSTEM_MAKE_COMPONENT_STATUS(RMF_COMP_ID, RMF_ALLOCATE_IF_ID, SEVERITY_SEVERE, 1)) /*!< @brief General failure status for RMF_ALLOCATE. */
  0x07822001

RMF_CONFLICT_STATUS_OK        (0x7800000)
RMF_CONFLICT_STATUS_FAILURE   (0x7802001)

#define RMF_QUOTA_IF_ID		(5) /*!< @brief File id for rmf_quota.h for creating specific statuses */
#define RMF_QUOTA_STATUS_UNKNOWN_QUOTA	 RMF_COMP_ID, RMF_QUOTA_IF_ID, SEVERITY_SEVERE, 2	(0x07825002)


<permission>
/*
   (perm1 & perm2), 
   (perm1 | perm2): 
   
   Check if both operands are in the same permissions group. If yes, execute
   the operator regularly. If not, return PERMISSION_NONE (because they are
   not included in each other and they are not allowed to be added to each
   other).  PERMISSION_BITWISE_AND special cases: 1. When 2 operands are from
   the same group, but are not overlapping, the result might be 0x10000000
   which means nothing and can cause errors on further bitwise operations. So
   we identify this case and return PERMISSION_NONE instead.  2. When one of
   the operands is 0xffffffff (this can come from ~(PERMISSION_NONE) ), then
   perm1,perm2 are not from the same group, but we want to return the actual
   bitwise AND operation on them.  PERMISSION_BITWISE_OR special case: when
   one of the operands is NONE (so the "group bits" is 11111111), we don't
   want the OR operation to return all the group bits of the result as 1, but
   to return the real group of the other operand.
*/


#define PERMISSION_BITWISE_AND(perm1, perm2) RMF_ALLOCATE_permissionBitwiseAnd((perm1), (perm2))
#define PERMISSION_BITWISE_OR(perm1, perm2)  RMF_ALLOCATE_permissionBitwiseOr((perm1), (perm2))

RMF_ALLOCATE_REQUEST_STATUS_SUCCESS(1)

RMF_ALLOCATE_PERMISSION_NONE    (0xf0000000U) /*!< @brief no permission */	
RMF_ALLOCATE_PERMISSION_RECORD  (0x10000008U) /*!< @brief Recording to disk */	
RMF_ALLOCATE_PERMISSION_EXTEND  (0x10001000U) /*!< @brief Extend quota storage  */	


note:
result and status returns okay but released permission is not.
!MIL    -RMF < T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x20107b0(0)[R] request=0x10000008 released=0xf0000000 change request if fails. 
!MIL    -RMF < T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1022 > result=1 " " status: OK[0x07802000] 



#
# ERRORS
#
NDS: ^0946699796.092852 !ERROR  -RMF      < T:VRM_SRV M:rmf_job.c F:RMF_JOB_SRV_GetJobByHandle L:917 > **** RMF_ET in rmf_job.c 917\n 

RMF_JOB_SRV_GetJobByHandle
{
	# if cond is false(0), then print out mesg but if there's no more errors after that, it should be ignored.
	CONDITION_CHECK_GO(RMF_JOB_HANDLE_ILLEGAL != handle);
}

#define CONDITION_CHECK_GO(cond) CONDITION_CHECK_GO_SET_ERROR(cond, stat, RMF_STATUS_FAILURE)
#define CONDITION_CHECK_GO_SET_ERROR(cond, variable, status) \
	if((cond)==0) {(variable) = (status); THROW_EXCEPTION}(void)0
#define THROW_EXCEPTION {DIAG_LOG_ERROR( COMP_SGMNT_ID, ("**** RMF_ET in %s %d\n",__FILE__, __LINE__) ); goto exception_handler_label;}

NDS: ^0946684997.681695 !ERROR  -RMF < T:SBM_UB_MAIN M:rmf_conflict.c F:RMF_CONFLICT_ReleaseConflictHandle L:805 > **** RMF_ET in rmf_conflict.c 805\n 
#define CONDITION_CHECK_AB(cond) CONDITION_CHECK_AB_SET_ERROR(cond, stat, RMF_STATUS_FAILURE)
#define CONDITION_CHECK_GO_SET_ERROR(cond, variable, status)

RMF_STATUS_FAILURE(0x7821001)


<conflict-noti-type>

typedef enum RMF_CONFLICT_NOTIFICATION_TYPE_TAG
{
  RMF_CONFLICT_NOTIFICATION_TYPE_UNDEF = 0,
  RMF_CONFLICT_NOTIFICATION_TYPE_CREATED, /*!< Conflict was created. This value also means the conflict is ready. */
  RMF_CONFLICT_NOTIFICATION_TYPE_UPDATED, /*!< Conflict was updated */
  RMF_CONFLICT_NOTIFICATION_TYPE_RESOLVED, /*!< Conflict was resolved without resolver intervention */
  RMF_CONFLICT_NOTIFICATION_TYPE_LAST
} RMF_CONFLICT_NOTIFICATION_TYPE;


<conflict-resolution>
notifyConflict@picasso/bookingmgr/conflicts/ConflictResolver.java

-EPG_CONF     < T:PLANNER_CB4 M:ConflictResolver F:notifyConflict L:00130 > 
PlannerConflictType=3 Imminent Tuner, ConflictStatus=TO-RESOLVE, conflict=com.nds.fusion.plannerimpl.PlannerImminentTunerConflictImpl

typedef enum PLANNER_API_ConflictResolutionTag
{
  PLANNER_API_CONFLICT_RESOLUTION_UNDEF = 0U,
  PLANNER_API_CONFLICT_RESOLUTION_CANCEL  (1)     /**< Cancel the cause of the conflict. */
  PLANNER_API_CONFLICT_RESOLUTION_BASIC,          /**< Accept the automatic suggestion to resolve the conflict. */
  PLANNER_API_CONFLICT_RESOLUTION_ADVANCED,       /**< Manual selection to resolve the conflict. */
  PLANNER_API_CONFLICT_RESOLUTION_ACCEPT,         /**< Accept the conflict situation with no resolution. */
  PLANNER_API_CONFLICT_RESOLUTION_CONTINUE,       /**< Continue with the original action that caused the conflict if it is automatically resolved */
  PLANNER_API_CONFLICT_RESOLUTION_AUTO_RESOLVE    /**< Resolve the conflict automatically means without user interaction */
} PLANNER_API_ConflictResolution;

!MIL   -EPG_CONF     < M:BaseConflict F:trackStatic L:00137 > 
T:CEE-J EventQueue Reader 0:>>> [CONFLICT=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl@5964e29] commitConflictResolution(resolutionType=1) <<<


<conflict-if>

// public interface PlannerSession

checkForServiceConflict

// Checks whether tuning to a given service will result in a channel change
// conflict. 
//
// The result of the conflict check is returned as the status in the notify #
// method of the callback. If there is no conflict or if the conflict was
// resolved in favour of the existing booking then the status will be OK,
// otherwise the status will be CONFLICT. 
//
// If resolveConflict is TRUE, the conflict resolver will be called to allow
// resolution of the conflict.  If FALSE, the callback returns immediately
// with notify. 

	natPlannerApiSessionCheckForServiceConflict


checkForBookingConflict

// Check if adding a new booking will result in a conflict. Currently, this
// function can only be used to check whether changing the type of an EXISTING
// scheduled event (e.g. from a reminder to a recording) will result in a
// conflict. The result of the conflict check is returned as the status in the
// callback as notify method.  If there is no conflict or if the conflict was
// resolved in favour of the existing booking then the status will be OK,
// otherwise the status will be CONFLICT.  If resolveConflict is TRUE, the
// conflict resolver will be called to allow resolution of the conflict.  If
// FALSE, the callback returns immediately with notify. 

	natPlannerApiSessionCheckForBookingConflict
		PLANNER_JAVA_ApiSessionCheckForServiceConflict


void PLANNER_JAVA_ApiSessionCheckForServiceConflict(NDSJNI_ENV *env)
{
  // size(112) + 20 = 132
  JPA_VTABLE_Create('&g_planner_adaptor_ABPRequest', &genPtr, &vtable_handle, sizeof(PLANNER_JAVA_ADD_BOOKED_PROGRAMME_REQUEST))

    PLANNER_API_Session_CheckForServiceConflict( /* callback */ PLANNER_API_CheckForConflictCb 'PLANNER_JAVA_CheckForConflictListener' )
    {
      l_payload->payload_type = PLANNER_MSG_PAYLOAD_TYPE_CHECK_FOR_CONFLICT;
      l_payload->data.check_for_conflict.callback = callback;
      l_payload->data.check_for_conflict.conflict_resolution_required = call_resolver;

      SBM_USERBOOKING_CheckForServiceConflict( (SBM_USERBOOKING_CheckForConflictCb) 'PLANNER_NotifySBMCheckForServiceConflictFinished' )
        ipc_message.payload.userbooking_CheckForServiceConflict_request.callback = callback;
    }

  SBM_SERVER_USERBOOKING_HandleExternalMessage	
  {
    case SBM_IPC_EVENT_USERBOOKING_CheckForServiceConflict_Request:
      SBM_SERVER_USERBOOKING_CheckForServiceConflict

        l_payload->data.check_channel_change_conflict.callback = callback;

      SBM_USERBOOKING_PostMessage(SBM_USERBOOKING_EV_CHECK_SERVICE_CONFLICT)

        // sbm_server_ub_common.c
        static const SBMUserBookingEventCallback_t f_function_table[] = {

          SBM_SERVER_USERBOOKING_CheckForServiceConflict_Handler(RMF_CONFLICT_TYPE_LIVE_TUNE)
            SBM_SERVER_USERBOOKING_Conflict_CheckChannelChangeConflict(l_payload->data.check_channel_change_conflict.callback)
            {
              RMF_CONFLICT_CreateConflictParams
                RMF_CONFLICT_SetJobHandle
                RMF_CONFLICT_SetConflictType

                l_conflict->conflict_user_tag          = callback_user_tag;
              l_conflict->callback_user_tag          = callback_user_tag;

              RMF_CONFLICT_GetConflictHandle(&(l_conflict->conflict_handle))
            }
        }				
  }
}


PLANNER_NotifySBMCheckForServiceConflictFinished
{
  else if(status == SBM_USERBOOKING_STATUS_OK)
  {
    l_status = PLANNER_API_STATUS_OK;
  }
  else if(status == SBM_USERBOOKING_STATUS_CONFLICT)
  {
    l_status = PLANNER_API_STATUS_CONFLICT;
  }

  PLANNER_Callback_Post(PLANNER_EV_CB_CHECK_CONFLICT)
}	

void 'PLANNER_JAVA_CheckForConflictListener'(PLANNER_API_UserTag l_user_tag, # this vtable handle
                                           SYSTEM_STATUS l_completion_status)
{
  if (JPA_VTABLE_GetElement(&g_planner_adaptor_ABPRequest, l_user_tag, &genPtr) != JPA_VTABLE_STATUS_SUCCESS)
    ;

  if (!NDSJNI_CallJavaMethod2(&env, currentABPListenerObject,
        "notify", "(Ljava/lang/Object;I)V",
        currentUserTag, l_completion_status))
}


// natDeleteConflict

void PLANNER_JAVA_ConflictDeleteConflict(const NDSJNI_ENV *env)
{
  PLANNER_API_Conflict_Delete();

  if (JPA_VTABLE_FindElement(&g_planner_adaptor_ABPRequest,
        &PLANNER_JAVA_FindConflictElement,
        (void *)jConflictHandle, &genPtr, &vtable_handle) != JPA_VTABLE_STATUS_SUCCESS)
  {
    DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("Failed to find conflict data: 0x%x", jConflictHandle));
  }
  else
  {
    conflict_data = genPtr;

    /* Twice to destroy this item */
    (void)JPA_VTABLE_ReleaseElement(&g_planner_adaptor_ABPRequest, vtable_handle);
    (void)JPA_VTABLE_ReleaseElement(&g_planner_adaptor_ABPRequest, vtable_handle);
  }
}


// RESOLVE CH from app and RELEASE 

commitConflictResolution(int resolutionType)
	natCommitConflictResolution
		PLANNER_JAVA_ConflictCommitConflictResolution
			PLANNER_API_Conflict_CommitConflictResolution
				PLANNER_Conflict_CommitResolution
					SBM_CONFLICT_ReleaseConflictHandle

					SBM_CONFLICT_ReleaseConflictHandle
					SBM_SERVER_CONFLICT_ReleaseConflictHandle(conflictHandle)
						RMF_CONFLICT_ReleaseConflictHandle((RMF_CONFLICT_Handle)conflictHandle)
						# release SBM conflict structure
						VTABLE_ReleaseElement(&g_sbm_userbooking_conflicts)



// NOTY from RMF -> APP

RMF_CONFLICT_SRV_NotifyConfUpdated
	RMF_CONFLICT_CLT_HandleIPCMsg
		RMF_CONFLICT_CLT_NotifyConfStatus


SBM_SERVER_CONFLICT_NotifyListener(RMF_CONFLICT_NOTIFICATION_TYPE notifyType, RMF_CONFLICT_Handle conflictHandle)
	PostMessage(SBM_USERBOOKING_EV_CONFLICT_NOTIFICATION);

/* SBM_USERBOOKING_EV_CONFLICT_NOTIFICATION,*/
SBM_USERBOOKING_ConflictNotificationHandler
{
	notifyType == RMF_CONFLICT_NOTIFICATION_TYPE_CREATED
	SBM_SERVER_CONFLICT_Call_NotifyListener(notifyType, conflictHandle, l_userData);
}


*conflict-type*

typedef enum PLANNER_API_ConflictTypeTag
{
    PLANNER_API_CONFLICTTYPE_UNDEF = 0U,
    PLANNER_API_CONFLICTTYPE_BOOKING_TIME,      /**< Caused by insufficent resources at record time when adding a new booking */
    PLANNER_API_CONFLICTTYPE_CHANNEL_CHANGE,    /**< Caused by insufficent resources when changing the Live play. */
    PLANNER_API_CONFLICTTYPE_IMMINENT_TUNER,    /**< Caused by insufficent resources for an imminent recording. i.e clash with Live */
    PLANNER_API_CONFLICTTYPE_IMMINENT_DISK,     /**< Caused by imminent insufficent disk resources for current recordings */
    PLANNER_API_CONFLICTTYPE_BOOKING_DISK_FAIL  (5), /**< Caused by insufficent disk resources at booking time */
    PLANNER_API_CONFLICTTYPE_PDL_REPLACEMENT_DISK, /**< Caused by imminent insufficient disk resources for PDL recording replacement with PVOD asset */
    PLANNER_API_CONFLICTTYPE_REMINDER_BOOKING,  /**< Caused by clashing reminders. */
    PLANNER_API_CONFLICTTYPE_LIVE_RESERVATION,  /**< Caused by insufficient resources when reserving resources for an interactive application */
    PLANNER_API_CONFLICTTYPE_IMMINENT_LIVE_RESERVATION, /**< Caused by insufficient resources for an imminent recording, when an interactive application is running. */
    PLANNER_API_CONFLICTTYPE_UPDATED,            /* Caused by automatic conflict update */
    PLANNER_API_CONFLICTTYPE_RESOLVED, (11, 0xb)            /* Caused by automatic conflict resolve, ie) without the resolver intervention */
    PLANNER_API_CONFLICTTYPE_IMMEDIATE_RECORDING, /* Caused by booking a second child event while watching an interactive application and recording the current child event.*/
    PLANNER_API_CONFLICTTYPE_QUOTA_CHANGE, /**< Caused by imminent insufficient disk resources when moving an asset to the user disk quota */
    PLANNER_API_CONFLICTTYPE_EXTEND_DISK_QUOTA, /**< Caused by when the viewer performs SFRB for a past event, and the user disk quota does not contain enough space for the new booking  */
    PLANNER_API_CONFLICTTYPE_LASTVALUE
} PLANNER_API_ConflictType;

PLANNER_ConflictNotificationHandler
{
	PLANNER_PRV_NotifyConflictListenersInAllSessions
		PLANNER_PRV_NotifyConflictListeners
			PLANNER_ExecuteUserCallback: PLANNER_EV_CB_CONFLICT
				PLANNER_JAVA_Conflict_ResolverCb
				{
					PLANNER_JAVA_Conflict_ResolverCb_NewConflict # matches to PLANNER_JAVA_Conflict_ResolverCb_ResolvedConflict
						JPA_VTABLE_Create

					PLANNER_JAVA_Conflict_ResolverCb_ResolvedConflict
				}
}

// from app to regieter a resolver callback
PLANNER_JAVA_ApiSessionRegisterConflictResolver
	# size(108) + 20 = 128 g_planner_adaptor_ConflictResolverListener
	PLANNER_API_Session_RegisterConflictResolver(PLANNER_JAVA_Conflict_ResolverCb)


//
PLANNER_JAVA_Conflict_ResolverCb_NewBookingConflict L:02669 > JPA_VTABLE_Create failed (44bytes)

// from SBM, register listeners.
else if (RMF_CONFLICT_STATUS_OK != RMF_CONFLICT_RegisterResolver(
            SBM_SERVER_CONFLICT_NotifyListener,
            SBM_SERVER_CONFLICT_ConflictControlListener,
            SBM_SERVER_CONFLICT_QueryControlListener,
            SBM_SERVER_CONFLICT_RequestResultListener,
            &g_sbm_userbooking_conflict_resolver_handle))


<conflict-log>

// PLANNER_API_CONFLICTTYPE_CHANNEL_CHANGE
-P_Planner    	< T:PLANNER_CB4 M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0xcd, 0x44, 0x2 
-J_PLANNER    	< T:PLANNER_CB4 M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0xcd, ConflictHandle: 0x0x44, ConflictType: 0x0x2 
PLANNER_JAVA_Conflict_ResolverCb:PLANNER_JAVA_Conflict_ResolverCb_NewConflict

// PLANNER_API_CONFLICTTYPE_RESOLVED
-P_Planner    	< T:PLANNER_CB4 M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0xcd, 0x44, 0xb 
-J_PLANNER    	< T:PLANNER_CB4 M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0xcd, ConflictHandle: 0x0x44, ConflictType: 0x0xb 
PLANNER_JAVA_Conflict_ResolverCb:PLANNER_JAVA_Conflict_ResolverCb_ResolvedConflict

// PLANNER_JAVA_ConflictDeleteConflict
// as below, called when there's no interest on it and in that case, there's no resolved event.

-P_Planner  M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0x158, 0x78, 0x1 
-J_PLANNER  M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0x158, ConflictHandle: 0x0x78, ConflictType: 0x0x1 
-EPG_CONF   > T:threadtracker:PlannerConflictType=1 Booking Time, ConflictStatus=TO-RESOLVE, conflict=com.nds.fusion.plannerimpl.PlannerBookedProgrammeConflictImpl
-EPG_CONF   > T:CEE-J EventQueue Reader 0:>>> [CONFLICT=com.nds.fusion.plannerimpl.PlannerBookedProgrammeConflictImpl@59aa3bb] commitConflictResolution(resolutionType=2) <<<
-J_PLANNER  M:natPlannerConflictImpl.c F:PLANNER_JAVA_ConflictDeleteConflict L:187 > KT: Delete: vtable_handle=0x159 


-P_Planner  M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0x0, 0x79, 0x3 
-J_PLANNER  M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0, ConflictHandle: 0x0x79, ConflictType: 0x0x3 
-EPG_CONF   > T:threadtracker:PlannerConflictType=3 Imminent Tuner, ConflictStatus=TO-RESOLVE, conflict=com.nds.fusion.plannerimpl.PlannerImminentTunerConflictImpl
-EPG_CONF   > T:CEE-J EventQueue Reader 0:>>> [CONFLICT=com.nds.fusion.plannerimpl.PlannerImminentTunerConflictImpl@59cee23] commitConflictResolution(resolutionType=3) <<<
-J_PLANNER  M:natPlannerConflictImpl.c F:PLANNER_JAVA_ConflictDeleteConflict L:187 > KT: Delete: vtable_handle=0x15d 


# usual case, there's notification and delete
 -P_Planner  PLANNER_CB4 M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0x162, 0x7b, 0x1 
 -J_PLANNER  PLANNER_CB4 M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0x162, ConflictHandle: 0x0x7b, ConflictType: 0x0x1 
-EPG_CONF    ct L:00154 > T:threadtracker:PlannerConflictType=1 Booking Time, ConflictStatus=TO-RESOLVE, conflict=com.nds.fusion.plannerimpl.PlannerBookedProgrammeConflictImpl
-EPG_CONF    137 > T:CEE-J EventQueue Reader 0:>>> [CONFLICT=com.nds.fusion.plannerimpl.PlannerBookedProgrammeConflictImpl@59a70a7] commitConflictResolution(resolutionType=1) <<<
 -J_PLANNER  no name M:natPlannerConflictImpl.c F:PLANNER_JAVA_ConflictDeleteConflict L:187 > KT: Delete: vtable_handle=0x163 

 -P_Planner  PLANNER_CB4 M:planner_callback.c F:PLANNER_ExecuteUserCallback L:240 > KT: 0x1, 0x169, 0x7f, 0xb 
 -J_PLANNER  PLANNER_CB4 M:natPlannerCommon.c F:'PLANNER_JAVA_Conflict_ResolverCb' L:3014 > ResolverUserTag: 0x0x1, BookingUserTag: 0x0x169, ConflictHandle: 0x0x7f, ConflictType: 0x0xb 
-EPG_CONF    ct L:00154 > T:threadtracker:PlannerConflictType=2 Channel Change, ConflictStatus=RESOLVED, conflict=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl
 -J_PLANNER  no name M:natPlannerConflictImpl.c F:PLANNER_JAVA_ConflictDeleteConflict L:187 > KT: Delete: vtable_handle=0x16a 

# sequence logs
#
!INFO  -P_Planner    < M:planner_callback.c F:PLANNER_ExecuteUserCallback L:00209 > Executing the callback of type 13. (PLANNER_EV_CB_CHECK_CONFLICT)
!ENTER -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_CheckForConflictListener L:03136 > |-> PLANNER_JAVA_CheckForConflictListener

# PLANNER_API_STATUS_OK in case there's no conflict
#
!ERROR -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_CheckForConflictListener L:03162 > KT: Listener: l_user_tag=0xe, l_comp_status=0x642200c (PLANNER_API_STATUS_CONFLICT)

!INFO  -P_Planner    < M:planner_callback.c F:PLANNER_ExecuteUserCallback L:00209 > Executing the callback of type 13. (PLANNER_EV_CB_CHECK_CONFLICT)
!ENTER -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_CheckForConflictListener L:03136 > |-> PLANNER_JAVA_CheckForConflictListener
!ERROR -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_CheckForConflictListener L:03141 > JPA_VTABLE_GetElement could not find usertag: 0xe
!ERROR -SBMS_USERBOOKING < M:sbm_server_ub_conflict.c F:SBM_SERVER_CONFLICT_ReleaseConflictHandle L:01028 > KT: rmf_status(0x7804000), RMF_STATUS_FAILURE(0x7821001)


!INFO  -P_Planner    < M:planner_callback.c F:PLANNER_ExecuteUserCallback L:00209 > Executing the callback of type 8. (PLANNER_EV_CB_CONFLICT)
!ENTER -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:03010 > |-> PLANNER_JAVA_Conflict_ResolverCb
!WARN  -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:03032 > Could not find booking usertag in ABP  Vtable :0xe
!WARN  -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb L:03042 > Could not find booking usertag in RBP  Vtable :0xe

# PLANNER_API_CONFLICTTYPE_RESOLVED
#
!ENTER -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb_ResolvedConflict L:02861 > |-> PLANNER_JAVA_Conflict_ResolverCb_ResolvedConflict
!ENTER -J_PLANNER    < M:natPlannerCommon.c F:PLANNER_JAVA_Conflict_ResolverCb_GetConflictObject L:02905 > |-> PLANNER_JAVA_Conflict_ResolverCb_GetConflictObject
!MIL   -EPG_CONF     < M:ConflictResolver F:notifyConflict L:00154 > T:threadtracker:PlannerConflictType=2 Channel Change, ConflictStatus=RESOLVED, conflict=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl


// EPG LOG
!MIL   -EPG_CONF     < M:ConflictResolver F:notifyConflict L:00154 > T:threadtracker:PlannerConflictType=2 Channel Change, ConflictStatus=RESOLVED, conflict=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl
!MIL   -EPG_CONF     < M:ConflictResolver F:notifyConflict L:00154 > T:threadtracker:PlannerConflictType=2 Channel Change, ConflictStatus=TO-RESOLVE, conflict=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl
!MIL   -EPG_CONF     < M:BaseConflict F:trackStatic L:00137 > T:CEE-J EventQueue Reader 0:>>> [CONFLICT=com.nds.fusion.plannerimpl.PlannerChannelChangeConflictImpl@59aa83d] commitConflictResolution(resolutionType=3) <<<


$ sed -n '1,69926p' LOGlast | egrep 'T:threadtracker:PlannerConflictType' | egrep 'RESOLVED' | wc -l
120
$ sed -n '1,69926p' LOGlast | egrep 'T:threadtracker:PlannerConflictType' | egrep 'TO-RESOLVE' | wc -l        
180 (180-120=60, from MEMMAN log, there's about 64 items so it's about match)
$ sed -n '1,69926p' LOGlast | egrep 'commitConflictResolution' | wc -l                                         
179


={============================================================================
|kt_dev_si_0001| comp-rmf-conclict

*si-jira* SI-10601

"The reason of failure is No tuner Available and Technical fault - 10 (28)"

To resolve the imminent tuner conflict in favor of going ahead with both
recordings, picasso needs to tune away from the event it is currently tuned
to.

In order to determine what to tune to Picasso :

1: Prioritizes the event it wishes to tune to (picks one of the recordings
    channels according to business rules).

2: Makes a call to middleware to retrieve a list of "Tuning Options", checks
if the prioritized event is contained in the TuningOptions result set, and
  tunes to it if it is.

3: If the prioritized event is not contained in the result set then it tunes
to the first event in the tuning options list.

In the failure scenario, what we are seeing is that picasso fails to find it's
`prioritized event` (one of the two recordings) in the `tuning options` result
set. We then pick the `first event` from the tuning options and tune to that.
In this failure scenario, It appears that this event is also not one of the
recordings. This is what causes the failed recording.

If the assumption is incorrect - then how can we ensure that both recordings
are made ?

the assumption made by EPG is `correct` i.e. TuningOptions will contain the
recording event that `caused` the conflict. 


<case>
This is okay case when there is right options.

???, UEFA           |
136, records        | 
                    | 133, failed record
                    | 164, okay

Seen|Rec |2016:06:16 22:28:00|2016:06:16 23:00:36|The Big Bang Theory                     | s1221|  136| 100|E4 HD        | rec x
Book|Rec |2016:06:16 22:57:00|                   |Rick Stein's Food Heroes:...            |      |  133| 15 |Good Food HD | rec 1
Seen|Rec |2016:06:16 23:00:04|2016:06:16 23:31:59|Bullseye                                | s1222|  164| 100|Challenge+1  | rec 0

 15: NO_TUNER_AVAILABLE
 28: UNKNOWN_ERROR

// On ??? which is live. Gets conflict between 136 against 133 and 164.
// "MOTD: UEFA Euro 2016 Highlights" is on and see conflict with 133 and 164

^[2016:06:16 22:58:53]
-EPG_CONF < M:ImminentTunerConflict F:retrieveSuccess L:243 > T:CEE-J EventQueue Reader 0:Subject created `for` -  MOTD: UEFA Euro 2016 Highlights
-EPG_CONF < M:EpgConflict F:getConflictEvent L:193 > T:CEE-J EventQueue Reader 0:Created ConflictEvent Bullseye
-EPG_CONF < M:EpgConflict F:getConflictEvent L:193 > T:CEE-J EventQueue Reader 0:Created ConflictEvent Rick Stein's Food Heroes:...
 
// `first-conflict` from ???
// EPG shows conflict dialog, choose 133, prioritizedEvent, and get tuning
// options from MW 

*rmf-conflict-dialog*
-EPG_DLG < F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog 1004

^[2016:06:16 22:59:03]
-EPG_CONF < M:ConflictTuner$1$1 F:run L:125 > T:PooledExecutor#2:prioritizedEvent guide service is Good Food HD, 133
-EPG_CONF < M:ConflictResolver F:instructionEventReceived L:426 > T:PooledExecutor#1:*** INSTRUCTION EVENT ***

-P_Api    < F:PLAYER_API_Session_CreateLiveTuningOptionsList L:8774 > SI_BUILD_TEST: i = 0, tuning options service locator(URI) = locator:5:3:10EC 
-P_Api    < F:PLAYER_API_Session_CreateLiveTuningOptionsList L:8774 > SI_BUILD_TEST: i = 1, tuning options service locator(URI) = locator:5:3:FE3 
-EPG_CONF < M:TuningOptions F:containsEvent L:30 > T:PooledExecutor#1:Found cached serviceLocator in tuning options list at (index = 1)

// <rec-1> 133
^[2016:06:16 22:59:54]
-EPG_ME   < F:playService L:1485 > T:PooledExecutor#1:TUNING TO Good Food HD, 133 locator:5:3:FE3

// <second-conflict> for 133 against 164 and 136

-EPG_CONF < M:ChannelChangeConflict F:retrieveSuccess L:175 > T:CEE-J EventQueue Reader 0:Subject created for -  Rick Stein's Food Heroes:...
-EPG_CONF < M:EpgConflict F:getConflictEvent L:193 > T:CEE-J EventQueue Reader 0:Created ConflictEvent Bullseye
-EPG_CONF < M:EpgConflict F:getConflictEvent L:193 > T:CEE-J EventQueue Reader 0:Created ConflictEvent The Big Bang Theory
-EPG_CONF < M:ChannelChangeConflict F:displayDialogOrAutoTune L:240 > T:CEE-J EventQueue Reader 0:Auto tuning

// EPG gets options list returns one of the recording events. But one of them
// is not a recording event(locator:5:3:FEC)

-P_Api    < F:PLAYER_API_Session_CreateLiveTuningOptionsList L:8774 > SI_BUILD_TEST: i = 0, tuning options service locator(URI) = locator:5:3:10EC 
-P_Api    < F:PLAYER_API_Session_CreateLiveTuningOptionsList L:8774 > SI_BUILD_TEST: i = 1, tuning options service locator(URI) = locator:5:3:FEC

// <136>
-EPG_ME   < M:MediaEngine F:playService L:1485 > T:PooledExecutor#4:TUNING TO E4 HD, 136 locator:5:3:FEC
-EPG_ME   < M:MediaEngine F:channelChanged L:2027 > T:PooledExecutor#0:CHANNEL CHANGED TO E4 HD, 136

-EPG_CONF < M:ConflictResolver F:instructionEventReceived L:426 > T:PooledExecutor#3:*** INSTRUCTION EVENT ***
-EPG_CONF < M:ConflictAuthorizer F:mapInterestingStatusValues L:237 > T:PooledExecutor#2:Conflict check complete - CONFLICT STATUS = OK


<rmf-conflict-resolve-log>
!MIL    -EPG_CONF     < M:EpgConflict F:commitResolution L:205 > 
  T:PooledExecutor#0:Committing resolution type 3


We have analysed the logs so far. The current understanding is as follows

LIVE      |
REC0      | overrun by 8 seconds..
          | REC1 | REC3
          | REC2 | REC4

    `get-first-conflit`

    1. We have LIVE and recording (REC0) till the time of conflict, and 2 more
    recordings set to start at the same time (REC1 and REC2)

    2. Just before the new recordings start and imminent conflict is raised
    with REC1 and REC2 in suggestion list

    3. No action is taken as we do not have any user here, which means that
    displayed OSD times out when REC0 is scheduled to end and REC1/REC2 are
    scheduled to start

    4. As OSD timeout, there is general strategy in EPG to set the conflict as
    `resolved` with no recordings marked for deletion since the idea is that
    LIVE would be one of the recordings. Therefore, protection removed from MW
    RMF.

    5. EPG decides to tune to one of the recording channels (REC1) from the
    list of recordings available from conflict and queries MW for tuning
    options. The idea is to `double-check` that channel we are trying to tune is
    in the options. 

    6. However, in this instance tuning options returns REC0 and REC2 (because
        REC0 has overrun), which means that EPG would now have to choose one
    of these two. 

    7. EPG makes choice to tune to REC0

    "EPG resolve the first conflict (imminent tuner) in favor of making the
     two new recordings by attempting to tune to one of them."

    "The epg prioritizes the event to tune to here and we end up tuning to the
    event which has overrun - which means one of the other recordings will
    correctly not go ahead.
    
    When there is no user intervention via the conflict dialog, the default
    behavior in R-11 is now to continue to record the over-run recording."

    `get-second-conflict`

    8. Right at that time REC0 finishes, i.e. just before EPG would attempt to
    tune to REC0

    9. Since REC0 has finished tuner is allocated for REC1 so we get a
    channel-change conflict as REC1 and REC2 are about to start, tuning to
    REC0 channel would cause conflict

    10. The new channel change conflict is notified to EPG

    `no channel change from EPG`

    11.There is no apparent action taken on this new conflict, as LIVE channel
    never changes. This is because the general strategy for channel change
    conflict is to cancel conflict (calling Commit API with CANCEL parameter)
    and remain on the same channel

    "This is standard behavior for the EPG perspective when a dialog times out
    on a channel change conflict."

    note:
    Due to overrun event, no live changes from EPG and therefore record
    failing is expected under current EPG design.

    This results in REC1 failure and REC2 continues. 
    
    note:
    Difference on R11.

    "As stated at the beginning of this comment, in R-10, prior to the EPG
    changes to retrieve/check against the tuning options - we would have
    `blindly` tuned to REC1 in this scenario.  This would have resulted in the
    recordings being successful on REC1 and REC2 - but we would have lost the
    over-run portion of the recording. These changes were introduced to
    address an issue whereby the EPG ended up locked out of one tuner
    completely so the changes are necessary.

    For more why EPG can lockup the tuner from R10:
    https://www.stb.bskyb.com/jira/browse/SCR-12659
    

    note:
    Up to this this explains NO_TUNER_AVAILABLE on failed records and
    contiunes on "28: UNKNOWN_ERROR"

    REC3 and REC4 are set to
    start when REC2 finishes and should cause a conflict with LIVE. However,
    there is no raised conflict

    note:
    Question is why MW not raise conflict on REC3 and REC4?

    It appears that since channel-change conflict was never resolved MW is not
    going to raise another conflict.


On why MW not raise conflict?

RMF state machine maintains a `protector state` variable, only when this is
set to `enable`, it raises a conflict.

By default, on a channel change this is set to Enable, but this will be set to
Disable when an Imminent tuner conflict is resolved.

In most of the cases the recordings are successful because on an imminent
tuner conflict, EPG tunes away from the current Live channel.

In the failure case, although it initiates a Tune to GOLD, but the tune
request is not completed as RMF raises a channel change conflict. EPG resolves
the channel change conflict by staying back on the same channel. This means
protector state variable is Disable and no conflict will be raised until a
channel change is performed. 

EPG:
The current behaviour for a channel-change conflict dialog time-out is to "to
cancel the new channel change to resolve the conflict". 
 
When the channel-change dialog times out, Picasso calls mw to resolve the
conflict by:
PLANNER_API_Conflict_CommitConflictResolution(PLANNER_API_CONFLICT_RESOLUTION_CANCEL);

PLANNER_API_CONFLICT_RESOLUTION_CANCEL

means "cancel the new channel change to resolve the conflict." according to
the planner header file.


What is actually happening?

No conflict is raised at step 13 for REC3 and REC4 to start

Why is Middleware not raising conflict? 

This is because on step 3 LIVE is marked as not-protected. As a result of this
MW has the impression that it has lower priority so it canâ€™t be causing any
conflict for recordings to start

How did it work earlier?

The reason this used to work is that we used to tune to one of the recordings.
It was felt that this was a blind tune and I think we could lose some of the
end of REC0.  So we were asked to request the tuning options. That is why
behaviour has changed.


Where is the crux of the problem?

The main step that is causing problem here is that when EPG tries channel
change we get a channel-change conflict, which means EPG backs out and remain
on the channel where it is now.  This is the first time we have run into this
scenario because prior to asking for tuning options since EPG would always
tune to one of the recording channels there would be no channel change
conflict.  When resolution for imminent conflict was committed at step 4, with
advanced option and no recordings is marked for deletion. This is an
indication that Middleware does not need to do anything and EPG would be
moving LIVE to channel that does not cause any tuner conflicts. Without this
successful movement of LIVE to non-conflicting channel the resolution would
not be complete.  

What can be done now?  

The simplest way to handle this situation is to make sure that channel-change
conflict is handled in a slightly better way.


={============================================================================
|kt_dev_si_0001| comp-vrm

// Dan Toubiana
COMPONENT_NAME := vrm_server

// try this to get detailed MILs
#ifdef MW_DETAILED_MILESTONE_DEBUG

<vrm-job-type>
typedef enum SYSTEMJOB_TYPE_TAG
{
    SYSTEMJOB_TYPE_UNDEF = 0,

    SYSTEMJOB_TYPE_SCAN,               /*!< @brief manual or frequential scan to acquire SI */
    SYSTEMJOB_TYPE_CAPTURE,            /*!< @brief generic job for SI, carousel, software downloads */
    SYSTEMJOB_TYPE_LIVE_VIEWING,       /*!< @brief live viewing job "3" */
    SYSTEMJOB_TYPE_IP_VOD_PLAYBACK,    /*!< @brief IP VOD playback job */
    SYSTEMJOB_TYPE_RB_RECORD,          /*!< brief review buffer record job. "5" */
    SYSTEMJOB_TYPE_RB_PLAY,            /*!< brief review buffer play job "6" */
    SYSTEMJOB_TYPE_RECORD,             /*!< @brief record job. "7" */
    SYSTEMJOB_TYPE_REMINDER,           /*!< @brief reminder job */
    SYSTEMJOB_TYPE_PLAYBACK,           /*!< @brief playback job "9" */
    SYSTEMJOB_TYPE_LIVE_RESERVATION,   /*!< @brief live reservation job type "10" */
    SYSTEMJOB_TYPE_DOWNLOAD,           /*!< @brief download job */
    SYSTEMJOB_TYPE_DOWNLOAD_RESET_JOB, /*!<@brief sw download reset job */
    SYSTEMJOB_TYPE_PASSIVE_STANDBY,    /*!<@brief Passive Standby job */
    SYSTEMJOB_TYPE_AUTOMATIC_SYSTEM_MAINTAINANCE_TASK,    /*!<@brief scheduled system maintenance job */
    SYSTEMJOB_TYPE_MANUAL_SYSTEM_MAINTAINANCE_TASK,    /*!<@brief scheduled system maintenance job */
    SYSTEMJOB_TYPE_SW_UPDATE_SCAN,     /*!<@brief sw download scan job  */
    SYSTEMJOB_TYPE_BDL_RECORD,         /*!< @brief BDL (Broadcast Download) record job */
    SYSTEMJOB_TYPE_LIVE_TO_HTTP,       /*!< @brief destination of this job will be a Network Destination Locator */
    SYSTEMJOB_TYPE_PLAY_TO_HTTP,       /*!< @brief destination of this job will be a Network Destination Locator */
    SYSTEMJOB_TYPE_STREAM_FROM_HTTP,   /*!< @brief destination of this job will be an Output Device Locator*/
    SYSTEMJOB_TYPE_PLAY_FROM_HORIZONTAL_FILE,     /*!< @brief play from horizontal file */    
    SYSTEMJOB_TYPE_OTT_ABR_LIVE,                  /*!< @brief OTT(Over the Top) adaptive bitrate live job */
    SYSTEMJOB_TYPE_PLAY_NFF_TO_HTTP,              /*!< @brief play NFF to HTTP */
    SYSTEMJOB_TYPE_LAST
} SYSTEMJOB_Type;


// VRM_JOB_Create(SYSTEMJOB_TYPE_RB_RECORD, l_vrm_params, PLAYER_RB_EventListener, &l_rb_data->vrm_handle)
// matches to
!MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=3, jhVRM=0x30003f3


<tune-to-live>
// Now it shows job-type as string
//
// #define DIAG_PMON_SYSTEMJOB_TYPE_RB_RECORD          "jb-rbrec" 				/*!< brief review buffer record job */
//

// `live` uses `vrm-job-handle` across components
// maps `VRM-FSM: job_man:0x300009a` -> `pleLive and hMC`

!MIL    -EPG_ME       		< T:no name M:MediaEngine F:playService L:1485 > T:PooledExecutor#2:TUNING TO Sky News HD, 501 locator:5:3:FD2
!MIL    -P_Api        		< T:no name M:player_api_session.c F:PLAYER_API_Session_Play L:4106 > PLAY 
!MIL    -P_Api        		< T:no name M:player_api_session.c F:PLAYER_PRV_Session_Play L:6157 > PLAY on target MAIN_TARGET 
!MIL    -P_Api        		< T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_CreateVRMJob L:1805 > Job 0x0300009a Created on Display Target MAIN_TARGET type=3 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: job_man:0x300009a: E_JOB_MAN_SRV_INT_ST_NULL -> (E_JOB_MAN_SRV_INP_RUN) -> E_JOB_MAN_SRV_INT_ST_CREATING 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:live.c F:LIVE_Create L:1361 > @@PMON@@,mark,job,job-create,3,job-create-type=,jb-live,job-srcloc=,locator:5:3:FD2,job-destloc=,locator:3:2E:47:0 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: Live(  0): E_LIVE_STATE_NONE -> (E_LIVE_INPUT_NEW_REQUEST) -> E_LIVE_STATE_CREATING 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: Live(  0): E_LIVE_STATE_CREATING -> (E_LIVE_INPUT_CREATED) -> E_LIVE_STATE_CREATED 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: job_man:0x300009a: E_JOB_MAN_SRV_INT_ST_CREATING -> (E_JOB_MAN_SRV_INP_CREATED) -> E_JOB_MAN_SRV_INT_ST_CREATED 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:4947 > VRM_JOB_START: `jtVRM=jb-live`, jhVRM=0x300009a 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: pleLive:0xa80002: E_PLE_STATE_NONE -> (E_PLE_INPUT_SESSION_CREATED) -> E_PLE_STATE_SESSION_CREATED 
!MIL    -MCM          		< T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:275 > @@PMON@@,trace,mediacon,`mc-create`,234,mc-create-mcid=,234,mc_create-str=,mc-live,fsnfmt=,`hMC=0xea` 
!MIL    -P_Api        		< T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobStarted L:5829 > Job `0x0300009a` STARTED on Display Target MAIN_TARGET 


// `rb-rec` which seems to get created automatically
// maps `VRM-FSM: job_man:0x300009b(50331803)` -> `rec_handle:0xb9001e, item_ID:0x2c0934bc`

!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: job_man:0x300009b: E_JOB_MAN_SRV_INT_ST_NULL -> (E_JOB_MAN_SRV_INP_RUN) -> E_JOB_MAN_SRV_INT_ST_CREATING 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:rb_record.c F:RB_RECORD_Create L:3828 > @@PMON@@,mark,job,job-create,5,job-create-type=,jb-rbrec,job-srcloc=,locator:5:3:FD2,job-destloc=,locator:3:2E:47:0 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: RB Record h:0x3c: E_RB_RECORD_STATE_CREATING -> (E_RB_RECORD_INPUT_CREATED) -> E_RB_RECORD_STATE_CREATED 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:job_man_srv.c F:VRM_JOB_SERVER_Start L:1808 > @@PMON@@,mark,job,job-start,50331803,job-start-type=,jb-rbrec 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:4947 > VRM_JOB_START: `jtVRM=jb-rbrec`, jhVRM=0x300009b 

// *map-vrm-to-rmf*
// maps `VRM-FSM: job_man:0x300009b(50331803)` -> `rmf job instance=0x20107af, rec_handle, item_ID` 

!MIL    -RMF          		< T:VRM_SRV M:shrec_group_manager.c F:RMP_SHREC_GROUP_MANAGER_FindShrecSharing L:980 > No sharing found, create new shrec group. Job new assigned quota instance: 0x10000 
!MIL    -RMF          		< T:VRM_SRV M:shrec_group_manager.c F:RMP_SHREC_GROUP_MANAGER_TriggerGetShrec L:381 > Job `0x20107af(0)[Rb]` - shrec found: 0x0 
!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_GetShrecSharingInfo L:1106 > job=0x20107af - shrecLocator=0x0 

!MIL    -VRM_SERVER   		< T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:6264 > Initiaizing Record FSM: `rec_handle:0xb9001e, item_ID:0x2c0934bc` 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: rec:0xb9001e,0x2c0934bc: E_RECORD_INT_STATE_NONE -> (E_RECORD_INPUT_START) -> E_RECORD_INT_STATE_STARTING 

!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=`0x20107af(0)[Rb]` request=0x10000008 released=0xf0000000 change request if fails. 


// *tuner-status*
!MIL    -MDM          		< T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x52e hMC=0x81 tuner_id =1 and job_type =RECORD 
!MIL    -MDM          		< T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x4b0 hMC=0x6e tuner_id =0 and job_type =RECORD 
!MIL    -MDM          		< T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x529 hMC=0x80 tuner_id =1 and job_type =LIVE_VIEWING 


<when-record-from-rb>
// create a recording from review buffer
// map `RB rmf job instance 0x20107af` to `rmf job instance 0x20107b0(0)[R]`

!MIL    -aem          		< T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(RECORD)e403 
!MIL    -EPG_BOOK     		< T:no name M:ScheduledBookingAgent F:proceedWithBooking L:453 > T:PooledExecutor#4:Making booking with middleware - addScheduledBookedProgramme

!MIL    -VRM_SERVER   		< T:`SBM_UB_MAIN` M:fsm.c F:FSMRun L:921 > VRM-FSM: `job_man:0x2000082`: E_JOB_MAN_SRV_INT_ST_NULL -> (E_JOB_MAN_SRV_INP_RUN) -> E_JOB_MAN_SRV_INT_ST_CREATING 
!MIL    -RMF          		< T:RMF_Server M:shrec_group_manager.c F:isSharingInActiveJob L:677 > shared active RB `0x20107af`, shrec locator 0x2e01808f 
!MIL    -RMF          		< T:RMF_Server M:shrec_group_manager.c F:RMP_SHREC_GROUP_MANAGER_FindShrecSharing L:1004 > Shared shrec locator 0x2e01808f, job `0x20107b0(0)[R]` final shrec quota instance: 0x10000 
!MIL    -RMF          		< T:RMF_Server M:shrec_group_manager.c F:isSharingInActiveJob L:677 > shared active RB 0x20107af, shrec locator 0x2e01808f 

!MIL    -RMF          		< T:RMF_Server M:quota_booking_conflict.c F:QuotaBookConf_GetConflictHandle L:299 > Quota booking conflict not found for job 0x20107b0 

!MIL    -EPG_BOOK     		< T:no name M:ScheduledBookingAgent F:completeBooking L:477 > T:PooledExecutor#4:futurelistener booking completed: completionStatus = 104865794

note:
bookingJobID = `0x290934c2` and item_ID:`0x290934c2` are the same and this
is the *booking-job-id* in PCAT db.

!MIL    -PCATS        		< T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:3077 > client id = 0x5,bookingJobID = `0x290934c2`
!MIL    -VRM_SERVER   		< T:SRM_HP_THREAD M:job_man_srv.c F:JobManSrvStart L:4947 > VRM_JOB_START: jtVRM=`jb-record`, `jhVRM=0x2000082` 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:6264 > Initiaizing Record FSM: rec_handle:`0xbc001d`, item_ID:`0x290934c2` 
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: rec:0xbc001d,0x290934c2: E_RECORD_INT_STATE_NONE -> (E_RECORD_INPUT_START) -> E_RECORD_INT_STATE_STARTING 

// `Sxxx`
!MIL    -VRM_SERVER   		< T:VRM_SRV M:fsm.c F:FSMRun L:921 > VRM-FSM: rec:0xbc001d,0x290934c2: E_RECORD_INT_STATE_ALLOCATING_DISK -> (E_RECORD_INPUT_DISK_ALLOCATED) -> E_RECORD_INT_STATE_DISK_ALLOCATED 
!WARN   -MSM_MDI      		< T:VRM_SRV M:meta_mfs.c F:(MetaMfsGetCurrentRecordPosition) L:978 > Milestone : MetaMfsGetCurrentRecordPosition: bNeedAccuracy=true dir (/mnt/nds/dev_4/part_0/S79696) return time 0_000baf03 and" " packet 0_004edfe6 


*job-destory*
!MIL    -VRM_SERVER   		< T:VRM_SRV M:job_man_srv.c F:VRM_JOB_SERVER_Destroy L:1601 > @@PMON@@,mark,job,job-destroy,50331668,job-destroy-type=,jb-rbrec 


<when-auto-resolution-to-qic>
// job=0x20107b0(0)[R] where 0x?? is rmj job instance
// snprintf(str, (size_t)STR_LEN, "0x%x(%d)[%s]", RMF_JOB_Instance_GetHandle(original), generation, typeStr);

!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x20107b0(0)[R] request=0x10001008 released=0xf0000000 change request if fails. 
!MIL    -RMF          		< T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type FailAssign on 0x20107b0(0)[R] 


// 0x2010094 comes from candidateList[i].jobInstance and means candidates to
// delete? Looks like to delete it and marks it with a reason.
//
//  case QIC_JobDeletionMode_Auto:
//
//    DIAG_LOG_MIL(gRmfSegmentId, ("Adding job 0x%x to Auto resolution",
//      RMF_JOB_Instance_GetHandle(candidateList[i].jobInstance)));
//
//    stat = AddDeleteInstruction(candidateList[i].jobInstance, 
//    SYSTEM_EXCEPTION_TYPE_INSUFFICIENT_DISK_SPACE);


!MIL    -RMF          		< T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Resolve L:2233 > Adding job 0x2010094 to Auto resolution 

// /** @brief Mask of permissions to release */
// RMF_ALLOCATE_PERMISSION permissionsToRelease;
// RMF_ALLOCATE_PERMISSION_STORE (0x10000004U)		/*!< @brief Store recording on disk */	

!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_SRV_CommitResolution L:2756 > Instruction job=0x2010094 toRelease=0x10000004 

!MIL    -RMF          		< T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20107b0(0)[R] UI NOT  required 
!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1022 > result=1 " " status: OK[0x07802000] 

!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x20107b0(0)[R] request=0x10000008 released=0x10001000 change request if fails. 
!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1022 > result=1 " " status: OK[0x07802000] 

!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x2010094(0)[R] request=0xf0000000 released=0x10000004 change request if fails. 
!MIL    -RMF          		< T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1022 > result=1 " " status: OK[0x07802000] 


<when-stopping-rb-when-conflict>
Shows the dialog when disk is near full. Log shows that when a pause key is
pressed for a long time and live pause is going on while other recording is
going on. Log shows there are conflicts which keeps deleting or stoping
recordins to make a space and eventually stop a RB.

"Live pause is not available.
There is currently insufficient disk space.
Press BACK UP to cancel."


// tune 01
 65143:!MIL    -EPG_ME < T:no name M:MediaEngine F:playService L:1498 > T:PooledExecutor#4:TUNING TO Eurosport 1 HD, 410 locator:5:3:FA4

 70234:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x2010256(0)[Rb] UI NOT  required 
 71604:!MIL    -aem    < T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(PAUSE)e401 
 77329:!MIL    -aem    < T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(PAUSE)e401 
208922:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x2010271(0)[R] 
208950:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x2010271(0)[R] UI NOT  required 
209463:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x2010272(0)[R] 
209491:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x2010272(0)[R] UI NOT  required 
327749:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x2010285(0)[R] 
327777:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x2010285(0)[R] UI NOT  required 
329001:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x2010286(0)[R] 
329029:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x2010286(0)[R] UI NOT  required 
441291:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x201029b(0)[R] 
441319:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x201029b(0)[R] UI NOT  required 
445309:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x201029b(0)[R] 
445337:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x201029b(0)[R] UI NOT  required 
446251:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x201029b(0)[R] 
446279:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x201029b(0)[R] UI NOT  required 
448462:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x201029b(0)[R] 
448490:!MIL    -RMF    < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x201029b(0)[R] UI NOT  required 

// tune 02

564660:!MIL    -EPG_ME < T:no name M:MediaEngine F:playService L:1498 > T:PooledExecutor#2:TUNING TO Eurosport 1 HD, 410 locator:5:3:FA4

// start rb
565347:!MIL    -VRM_SERVER < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:4947 > VRM_JOB_START: jtVRM=jb-rbrec, jhVRM=0x3000014 
565350:!MIL    -RMF        < T:VRM_SRV M:shrec_group_manager.c F:RMP_SHREC_GROUP_MANAGER_TriggerGetShrec L:381 > Job `0x20102c1`(0)[Rb] - shrec found: 0x0 

// did not get premissions
565355:!MIL    -RMF     < T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x20102c1(0)[Rb] request=0x10000008 released=0xf0000000 change request if fails. 
565503:!MIL    -RMF     < T:VRM_SRV M:rmf_allocate.c F:RMF_ALLOCATE_ControlPermissions L:1012 > job=0x20102c1(0)[Rb] request=0x10000008 released=0xf0000000 change request if fails. 

571468:!MIL    -MDM     < T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x469 hMC=0x8e tuner_id =0 and job_type =LIVE_VIEWING 
571469:!MIL    -MDM     < T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x46c hMC=0x8f tuner_id =0 and job_type =RECORD 
571470:!MIL    -MDM     < T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x4db hMC=0x91 tuner_id =1 and job_type =RECORD 

577323:!MIL    -RMF     < T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Construct L:994 > Building conflict of type FailAssign on 0x20102c4(0)[R] 
577349:!MIL    -RMF     < T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Resolve L:2234 > Adding job 0x20101da to Auto resolution 
577351:!MIL    -RMF     < T:VRM_SRV M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20102c4(0)[R] UI NOT  required 

// conflict on rb
580427:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x20102c1(0)[Rb] 

// rb deleted
580453:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Resolve L:2333 > Stopping subject 0x20102c1(0)[Rb] because there are no candidates 

580455:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20102c1(0)[Rb] UI NOT  required 
580946:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x20102c4(0)[R] 
580972:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Resolve L:2233 > Adding job 0x20101dc to Auto resolution 
580974:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20102c4(0)[R] UI NOT  required 
586603:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:994 > Building conflict of type TriggerWarning on 0x20102c4(0)[R] 
586629:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Resolve L:2233 > Adding job 0x20101e5 to Auto resolution 
586631:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20102c4(0)[R] UI NOT  required 
588826:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:993 > Building conflict of type TriggerWarning on 0x20102c4(0)[R] 
588852:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Resolve L:2233 > Adding job 0x20101e6 to Auto resolution 
588854:!MIL    -RMF     < T:RMF_Server M:quota_immediate_conflict.c F:QIC_Construct L:1027 > Conflict on 0x20102c4(0)[R] UI NOT  required 

599193:!MIL    -VRM_SERVER < T:VRM_SRV M:job_man_srv.c F:VRM_JOB_SERVER_Destroy L:1601 > @@PMON@@,mark,job,job-destroy,50331668,job-destroy-type=,jb-rbrec 

593555:!ERROR  -EPG_DEV1 < T:no name M:NotificationConverter F:setLastScreenSeen L:11 > T:CEE-J EventQueue Reader 0:setting last screen seen to /tv/live/410/live_pause_not_available_insufficient_disk_space_id
593556:!MIL    -EPG_MISC < T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "ScreenChange","changed to": "/tv/live/410/live_pause_not_available_insufficient_disk_space_id"}
593576:!MIL    -EPG_MISC < T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "KeyPressRemote","action": "REWIND","title": "Key Press REWIND","label": "","currentscreen": "/tv/live/410/live_pause_not_available_insufficient_disk_space_id"}
594132:!MIL    -aem      < T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(PAUSE)e401 


<when-record-from-start-to-end>
:!MIL   -aem          < T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:00245 > KEY_PRESS: code=0x(RECORD)e403
:!MIL   -PCATS        < T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:03077 > client id = 0x5,bookingJobID = 0x290000dd *booking-job-id*
:!INFO  -PCATS        < T:PCAT_SRV_THREAD M:pcat_prepare.c F:PrepareRunSelectNotificationOnCommitJob L:03911 > Add a new row for view 0x5000067 id 0x290000dd inserted ( will be sent if the view is registered on insertion)
:!INFO  -VRM_SERVER   < T:VRM_SRV M:booking_record.c F:BookingRecordPcatObjInit L:03042 > item_ID: 0x290000dd, start_time: 08:00:00, duration: 7200000
:!MIL   -VRM_SERVER   < T:VRM_SRV M:record_state.c F:RecordStateCalculateBySkevt L:01604 > RecordState for itemId 0x290000dd (by SKEVT): RECORD_STATE_BODY
:!MIL   -VRM_SERVER   < T:VRM_SRV M:record_state.c F:RecordStateCalculateRecordState L:01477 > RECORD: 'VRM' RecordStateCalculateRecordState - PCAT update
:!INFO  -SRM          < T:SRM_HP_THREAD M:srm_job_starter.c F:JobStarterHandleJobTriggered L:01162 > Before calling project specific action before start for booking 0x290000dd
:!INFO  -VRM_SERVER   < T:SRM_HP_THREAD M:find_jobs_man_srv.c F:FindJobsManSrvActualSearch L:00565 > job_type: 7,[VRM:STATUS_OK 0x0B401000]
:!INFO  -VRM_SERVER   < T:SRM_HP_THREAD M:job_man_srv.c F:###1 L:03421 > ===================== job manager srv debug start =====================
:!INFO  -SRM          < T:SRM_HP_THREAD M:srm_utils_fsm.c F:FSM_Run L:00858 > --------- [SRMj:0x00000001] ---------
:!INFO  -SRM          < T:SRM_HP_THREAD M:srm_utils_fsm.c F:FSM_Run L:00861 > state:     E_JOB_STARTER_STATE_IS_RECORDABLE_CHECK
:!INFO  -SRM          < T:SRM_HP_THREAD M:srm_utils_fsm.c F:FSM_Run L:00864 > input:     E_JOB_STARTER_INP_IS_RECORDABLE_CHECK_PASSED
:!INFO  -SRM          < T:SRM_HP_THREAD M:srm_utils_fsm.c F:FSM_Run L:00867 > new state: E_JOB_STARTER_STATE_STARTING_JOB
:!MIL   -VRM_SERVER   < T:SRM_HP_THREAD M:job_man_srv.c F:VRM_JOB_SERVER_Start L:01808 > @@PMON@@,mark,job,job-start,33554436,job-start-type=,jb-record
:!MIL   -VRM_SERVER   < T:SRM_HP_THREAD M:job_man_srv.c F:JobManSrvStart L:04947 > VRM_JOB_START: jtVRM=jb-record, jhVRM=0x2000004
:!MIL   -VRM_SERVER   < T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:06264 > Initiaizing Record FSM: rec_handle:0x3001e, item_ID:0x290000dd
:!MIL   -VRM_SERVER   < T:VRM_SRV M:fsm.c F:FSMRun L:00921 > VRM-FSM: rec:0x3001e,0x290000dd: E_RECORD_INT_STATE_NONE -> (E_RECORD_INPUT_START) -> E_RECORD_INT_STATE_STARTING
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:ContentInfoPrintDebug L:01045 > ----------------begin--09:45:02----------------
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:ContentInfoPrintDebug L:01056 >
:basicParams.objectIdBookingJob: 0x290000dd
:                                                                               basicParams.objectIdBooking: 0x210000dd
:                                                                               basicParams.recordStatus: RECORD_STATUS_RECORDING
:                                                                               basicParams.isFailed: 0
:                                                                               isLegacyContent: 0
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:ContentInfoPrintDebug L:01063 >
:basicParams.vFileInfo.isAVContentExist: 1
:                                                                               basicParams.objectIdAVContent: 0x250000df
:                                                                               basicParams.vFileInfo.vFileSegment: [09:14:37,09:45:00]
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:ContentInfoPrintDebug L:01072 >
:vlExceptionInfo: 0xb5d
:                                                                               vlShrecExtent: 0xb5f
:                                                                               vlBookingInfo: 0xb5c
:                                                                               vlShrecItems: 0x0
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:ContentInfoPrintDebug L:01077 > ----------------end------------------
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:JobContent_RecordContentHandler L:00387 > 09:45:02 bookingJob: 0x290000dd PCAT_CAT_CONTENT_STATUS_PARTIAL, SYSTEM_EXCEPTION_TYPE_VIEWER_BOOKED_TOO_LATE, stat:0x11400000
:!MIL   -VRM_SERVER   < T:VRM_SRV M:fsm.c F:FSMRun L:00921 > VRM-FSM: rec:0x3001e,0x290000dd: E_RECORD_INT_STATE_WAIT_PLE_SESSION_DESTROY -> (E_RECORD_INPUT_VRM_PLE_SESSION_DESTROYED) -> E_RECORD_INT_STATE_WAIT_DESTROY
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:JobContent_RecordContentHandler L:00380 > 10:02:00 End processing bookingJob: 0x290000dd
:!INFO  -SRM          < T:VRM_SRV M:srm_job_content_status.c F:JobContent_RecordContentHandler L:00387 > 10:02:00 bookingJob: 0x290000dd PCAT_CAT_CONTENT_STATUS_PARTIAL, SYSTEM_EXCEPTION_TYPE_VIEWER_BOOKED_TOO_LATE, stat:0x11400000

// updates PCAT
:!INFO  -VRM_SERVER   < T:VRM_SRV M:booking_record.c F:BookingRecordHandleStopped L:06363 > ended record handle:0xb, item_ID: 0x290000dd, is_failed: 0, content status:PARTIAL, exception_type:VIEWER_BOOKED_TOO_LATE, av_content_id: 0x250000df, reschedule: 0, keep_history: 1, stop_to_destroy: 0, stat:0x5c01000


# 
# Job_man_srv.c
static VRM_FSM_ENTRY JobManSrvEntries[] = {

    VRM_FSM_E(  E_JOB_MAN_SRV_INT_ST_CREATED,   			/* state */
        E_JOB_MAN_SRV_INP_START_CALLED,  			/* input */
        E_JOB_MAN_SRV_INT_ST_COMMITTING,			/* new state */
        (VRM_FSM_ACTION)JobManSrvCommittingState ),     /* action */

    VRM_FSM_E(  E_JOB_MAN_SRV_INT_ST_COMMITTED,   			/* state */
        E_JOB_MAN_SRV_INP_START_CALLED,  			/* input */
        E_JOB_MAN_SRV_INT_ST_STARTING,				/* new state */
        (VRM_FSM_ACTION)JobManSrvStartingState ),       /* action */
}

# VRM_JOB_STATE_COMMITTED
#
JobManSrvCommittedState
	JobManSrvStateNotify (this, VRM_JOB_STATE_COMMITTED);

	E_JOB_MAN_SRV_INP_START_CALLED

JobManSrvStartingState
JobManSrvStart
	BOOKING_PLAY_Start
		PLAY_Start
			PlayAllocateNew (p_play_params, &pPlaySession);
			{
				PlayInitializeEntry (&(BasicPlay[new_index]), p_play_params);
					PlaySetPosition
						PlaySendPositionRequest
							PANEL_PlaySetPosition
			}
			PlaySendFSMInput (pPlaySession, E_PLAY_INPUT_START, ASYNCHRONOUS);
		
		
/* Possible Play state machine states */
typedef enum E_PLAY_INTERNAL_STATE_
{
	E_PLAY_INT_STATE_NONE = 0,
	E_PLAY_INT_STATE_STARTING,				/*	play is starting process					*/
	E_PLAY_INT_STATE_ALLOCATING_RESOURCES,  /*	play is allocating RMF resources			*/
	E_PLAY_INT_STATE_WAIT_RMF_RETRY,		/*	play is waitng for retry instruction from RMF  */
	E_PLAY_INT_STATE_RESOURCES_ALLOCATED,	/*	play RMF resources were allocated			*/
	E_PLAY_INT_STATE_CONFIGURING,			/*	play is configuring connection				*/
    E_PLAY_INT_STATE_WAIT_PANEL_CONFIG,		/*	play is waitng for connection to be configured */
	E_PLAY_INT_STATE_CONFIGURED,			/*	play connection is configured				*/
    E_PLAY_INT_STATE_WAIT_RUN,				/*	play is waitng for connection to be running	*/
    E_PLAY_INT_STATE_RUNNING,				/*	play connection is running					*/
	E_PLAY_INT_STATE_WAIT_STOP,				/*	play is waitng for connection to be stopped	*/
	E_PLAY_INT_STATE_STOPPED_MEDIACONN,		/*	play connection was stopped					*/
	E_PLAY_INT_STATE_WAIT_FULL_STOP,		/*  play is waiting for request to stop fully   */
	E_PLAY_INT_STATE_RELEASE_MEDIACONN,		/*  play is waiting for connection to be released */
	E_PLAY_INT_STATE_RELEASED_MEDIACONN,	/*	play connection was released				*/
	E_PLAY_INT_STATE_WAIT_DESTROY,			/*	play is waiting to be destroyed				*/
	E_PLAY_INT_STATE_LAST
} E_PLAY_INTERNAL_STATE;

static VRM_FSM_ENTRY PlayEntries[] = {

    VRM_FSM_E(  E_PLAY_INT_STATE_NONE,        	/* state */
        E_PLAY_INPUT_START,   				/* input */
        E_PLAY_INT_STATE_STARTING,        	/* new state */
		(VRM_FSM_ACTION) PlayActionStartingState ),	/* action */	# MSM_MFS_Vfile_Open, MSM_MFS_Vfile_GetStart
		
	VRM_FSM_E(  E_PLAY_INT_STATE_RESOURCES_ALLOCATED,/* state */
        E_PLAY_INPUT_PANEL_CONFIGURE,   	/* input */
        E_PLAY_INT_STATE_CONFIGURING,       /* new state */
		(VRM_FSM_ACTION) PlayActionConfiguringState ), /* action */
}
		
(\CMS_MEDIA_SERVICES\VRM\src\server\engine\basic_play.c)
PlayActionConfiguringState

PANEL_PlaySetPosition
	MSM_SP_SetPosition(mcon, units, pPosition);
	

(basic_rec.c)
static VRM_FSM_ENTRY RecordEntries[] = {

	VRM_FSM_E(  VRM_FSM_ALL_STATES,				/* state */
		E_RECORD_INPUT_STOP, 					/* input */
		E_RECORD_INT_STATE_WAIT_DESTROY,	/* new state */
		(VRM_FSM_ACTION)RecordActionGeneralTrap ),	/* action */
}

# debug
#
NDS: ^[00:29:47]0946686587.795399 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02605 > ===================== job manager srv debug start =====================
NDS: ^[00:29:47]0946686587.795527 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02621 > [0]: h=0x2000001, STARTED, RECORD, request_mask = 0x3
NDS: ^[00:29:47]0946686587.795647 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02621 > [1]: h=0x2000002, COMMITTED, RECORD, request_mask = 0x3
NDS: ^[00:29:47]0946686587.795768 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02621 > [2]: h=0x2000003, COMMITTED, RECORD, request_mask = 0x3
NDS: ^[00:29:47]0946686587.795886 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02621 > [3]: h=0x3000006, STARTED, LIVE_VIEWING, request_mask = 0x1
NDS: ^[00:29:47]0946686587.796015 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02621 > [4]: h=0x2000006, STARTED, RECORD, request_mask = 0x3
NDS: ^[00:29:47]0946686587.796339 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02627 > valid jobs: 5
NDS: ^[00:29:47]0946686587.796440 !INFO  -VRMS         < M:job_man_srv.c F:###1 L:02629 > ======================= job manager debug end =======================


# PCAT_VIEW_OBJECT_ID itemId(BJOBID)
# search a pair of jhVRM and Jobid

NDS: ^[2013:03:15 09:49:05]0946700258.060668 !MIL    -VRMS         		< p:0x00000000 P:MW t:0x01793fa0 T:SRM_HP_THREAD M:job_man_srv.c F:JobManSrvStart L:4376 > VRM_JOB_START: jtVRM=jb-record, jhVRM='0x2000007' 

NDS: ^[2013:03:15 09:49:04]0946700257.295691 !MIL    -PCATS        		< p:0x00000000 P:MW t:0x017fd1c0 T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:2869 > client id = 0x5,bookingJobID = '0x290005bf' 

NDS: ^0946685069.386406 !MIL    -VRMS         		< T:VRM_SRV M:record_state.c F:RecordStateCalculateBySkevt L:1556 > MILESTONES: timeline: itemId: '0x290005bf', curr: [2012:03:28 19:21:14]1332962474; PT:[2012:03:28 18:57:00]1332961020, SGT:[2012:03:28 18:58:00]1332961080, SREX:[2012:03:28 19:00:00]1332961200, BODY:[2012:03:28 19:00:00]1332961200, EREX: [2012:03:28 20:00:00]1332964800, EGT:[2012:03:28 20:00:00]1332964800, ENDED:[2012:03:28 20:02:00]1332964920

# item_ID is BJOBID. Need to search itemid as non-case
NDS: ^0946685070.695400 !MIL    -VRMS         		< T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:5279 > MILESTONES: Initiaizing Record FSM: rec_handle:0x10009, item_ID:'0x290005bf'

NDS: ^[2013:03:15 09:49:05]0946700258.116921 !MIL    -VRMS         		< p:0x00000000 P:MW t:0x016b8b60 T:VRM_SRV M:fsm.c F:FSMRun L:904 > VRM-FSM: rec:0xa0008,'0x290005bf': E_RECORD_INT_STATE_ALLOCATING_TUNER -> (E_RECORD_INPUT_TUNER_ALLOCATED) -> E_RECORD_INT_STATE_TUNER_ALLOCATED 

# jhVRM=0x300014a
90339:NDS: ^[00:58:22]0946688302.009422 !MIL   -VRMS         < p:000000d2 t:01790ec0 T:VRM_SRV M:fsm.c F:FSMRun L:00904 > VRM-FSM: job_man:0x300014a: E_JOB_MAN_SRV_INT_ST_COMMITTING -> (E_JOB_MAN_SRV_INP_COMMITTED) -> E_JOB_MAN_SRV_INT_ST_COMMITTED
90340:NDS: ^[00:58:22]0946688302.025429 !MIL   -VRMS         < p:000000d2 t:01790ec0 T:VRM_SRV M:fsm.c F:FSMRun L:00904 > VRM-FSM: job_man:0x300014a: E_JOB_MAN_SRV_INT_ST_COMMITTED -> (E_JOB_MAN_SRV_INP_START_CALLED) -> E_JOB_MAN_SRV_INT_ST_STARTING
90342:NDS: ^[00:58:22]0946688302.027753 !MIL   -VRMS         < p:000000d2 t:01790ec0 T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:04169 > VRM_JOB_START: jtVRM=jb-live, jhVRM=0x300014a


# query using job id and get event id
#
sqlite3 PCAT.DB 'select j.booking_job_id, b.booking_id, b.event_id from booking_jobs j, booking_info b where b.booking_id = j.booking_id and j.booking_job_id =  687866053'

# get event name from event id
sqlite3 PCAT.DB 'select i.event_name from item i where i.event_id = 570426813' | tostr


<vrm-playback-record>
note: both do create shrec for nomal records but not for bdl

!MIL    -VRM_SERVER   P:MW t:0x01cae520 T:VRM_SRV M:booking_play.c F:BOOKING_PLAY_Create L:853 > @@PMON@@,mark,job,job-create,9,
  job-create-type=,`jb-playback`,job-srcloc=,locator:3:11:`2907220A`:0,job-destloc=,locator:3:2E:47:0 
!MIL    -VRM_SERVER   P:MW t:0x01cae520 T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:4948 > VRM_JOB_START: jtVRM=jb-playback, jhVRM=0x3000003 

!MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvCreate L:03799 > 
  @@PMON@@,mark,job,job-create,50331651,job-create-type=,`jb-playback`,job-srcloc=,locator:3:11:290000C5:0,job-destloc=,locator:3:1F:4B:19:54:0

locator:3:11:`2907220A`:0   // 0x2907220A *booking-job-id*

MIL   -MSM          < T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:MSM_DEVICEMAN_Open L:00502 > Milestone : MSM_DEVICEMAN_Open for playback: hMC=0x5, shrec=s1, vfile=0x50000006 Starts... 

!MIL    -MSM          P:MW t:0x01c8c520 T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:(getParamBagValue) L:4410 > 
  MSM_DEVICEMAN_Open for playback: " "hMC=0x2c, shrec=s69677, vfile=0x500142b0 Starts...  

(BOOKING_JOBS) BOOKING JOB ID: 687866053, BOOKING ID -> (BOOKING_INFO) BOOKING ID: 553648325 -> EVT ID: 570425541 -> (ITEM) EVT ID: , EVT NAME: 110013ffa4194361736820696e20746865204174746963 (Cash in the Attic)
                                                                                             -> AV CON: 620757195 -> (AV_CONTENT) SH LOC: locator:3:14:1:s1

!MIL    -VRM_SERVER   P:MW T:SRM_HP_THREAD M:job_man_srv.c F:JobManSrvStart L:4948 > VRM_JOB_START: jtVRM=jb-record, jhVRM=0x2000001 
!MIL    -VRM_SERVER   P:MW T:VRM_SRV M:basic_rec.c F:RecordActiveInitialize L:6353 > Initiaizing Record FSM: rec_handle:0x13001e, item_ID:0x29072735 
!MIL    -MCM          P:MW T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:275 > @@PMON@@,trace,mediacon,mc-create,21,mc-create-mcid=,21,mc_create-str=,mc-record,fsnfmt=,hMC=0x15 
!MIL    -MDM          P:MW T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x1b hMC=0x15 tuner_id =1 and job_type =RECORD 
!MIL    -MSM          P:MW T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:(MSM_DEVICEMAN_Open) L:466 > MSM_DEVICEMAN_Open " "hMC=0x15, mc_type=0x7000003, source_locator=0xffe18144, " "destination_locator=0x721801e Starts...  
!MIL    -MSM          P:MW T:MCM_ITCMAIN_THREAD M:msm_deviceman.c F:(getParamBagValue) L:4336 > MSM_DEVICEMAN_Open for record: " "hMC=0x15, `shrec=s69897` Starts... 


={============================================================================
|kt_dev_si_0001| comp-diag

Rochkind, Michael <MRochkind@nds.com>; Yakirevich, Yonatan <YYakirevich@nds.com>

<default>
The following trace levels are always available for Fusion Debug output:

   A: AssertAssertion in the code has been violated (usually a serious error).
   F: FatalFatal error
   E: ErrorAll recoverable errors
   W: Warningsomething that should not have happened but may allow the
   operation to continue.
   M: MilestonesUsed for significant information.

Collectively these traces are referred to as AFEWM, and comprise the default
trace level for all components segments.


# FUSION_SYSTEM_INTEGRATION\BSKYB_INTEGRATION\build\projects\picasso\makefile

# preprod. BUILD_TYPE=release_dbg
-DDIAG_RELEASE_DBG -DDIAG_BINARY_MODE -DDIAG_PERFORMANCE_MODE -DDIAG_FILE_ID=10 
-DDIAG_LOG_NDEBUG -DDIAG_JAVA_DEBUG 

# prod case. BUILD_TYPE=release
-DDIAG_RELEASE 
-DDIAG_LOG_NDEBUG -DDIAG_JAVA_DEBUG 

# debug. BUILD_TYPE=release_dbg
-DDIAG_RELEASE_DBG
-DDIAG_LOG_NDEBUG -DDIAG_JAVA_DEBUG


\CMS_SYSTEM_INFRASTRUCTURE\DIAG\src\helpers\src\debug\
diag_hlp_debug.c

*diag-debug*
/* Define at compile time */
#ifndef	__DIAG_DEBUG_LEVEL
#if (defined(DIAG_DEBUG) || defined(__DIAG_DEBUG) || defined(DIAG_RELEASE_DBG) || defined(__DIAG_RELEASE_DBG))
/* #define __DIAG_DEBUG_LEVEL	DIAG_HLP_DBGLEVEL_WARN | DIAG_HLP_DBGLEVEL_ERROR|DIAG_HLP_DBGLEVEL_FATAL */
#define __DIAG_DEBUG_LEVEL	DIAG_HLP_DBGLEVEL_ALL
#else

use DIAG_HLP_DBGLEVEL_ALL for more debugs

# to get enter/exit diag debug, define the following
# Note that the __DIAG_HLP_DEBUG_ENABLE_FN_ENTER_EXIT needs to be defined at the top of diag_hlp_debug.h file 
# (as opposed to the other define that is defined in the diag_hlp_debug.c file).
diag_hlp_debug.h
#define __DIAG_HLP_DEBUG_ENABLE_FN_ENTER_EXIT


<diag-format>

// 10-6  1 `microsecond`  us

__DIAG_LOG_FormatAndLogTraceBuffer
	DIAG_LOG_GetFormattedTraceBuffer
	{
		clock_gettime(CLOCK_REALTIME, &tTimeStamp);	
		#define DIAG_LOG_TRACE_TIMESTAMP    		"%.010lu.%.06lu "
		sprintf(pOutputString, DIAG_LOG_TRACE_TIMESTAMP,(unsigned long) tTimeStamp.tv_sec, (unsigned long) (tTimeStamp.tv_nsec / 1000));
	}


<diag-macro>

CURL_DBG_PRINT_E(("KIT: %d, co = calloc(%d)", count_alloc, sizeof(struct Cookie)));

#if defined _USE_DIAG && (defined (DEBUG) || defined (RELEASE_DBG)) OR
#if (!defined(DIAG_RELEASE) && !defined(__DIAG_RELEASE))

#define CURL_DBG_PRINT_I(MESSAGE)    DIAG_LOG_INFO(libcurlDiagHandlerId, MESSAGE)
#define CURL_DBG_PRINT_W(MESSAGE)    DIAG_LOG_WARN(libcurlDiagHandlerId, MESSAGE)
#define CURL_DBG_PRINT_E(MESSAGE)    DIAG_LOG_ERROR(libcurlDiagHandlerId, MESSAGE)
#define CURL_DBG_PRINT_F(MESSAGE)    DIAG_LOG_FATAL(libcurlDiagHandlerId, MESSAGE)
#define CURL_DBG_PRINT_EV(MESSAGE)   DIAG_LOG_EVENT(libcurlDiagHandlerId,MESSAGE)

#else

  #if !defined (DEBUG) && !defined (RELEASE_DBG) /* RELEASE */
  #define CURL_DBG_PRINT_I(MESSAGE)
  #define CURL_DBG_PRINT_W(MESSAGE)
  #define CURL_DBG_PRINT_E(MESSAGE)
  #define CURL_DBG_PRINT_F(MESSAGE)
  #define CURL_DBG_PRINT_EV(MESSAGE)
  #endif

#endif

#define CURL_DBG_DECLARE(MESSAGE)        DIAG_DECLARE_FUNCTION(MESSAGE)
#define CURL_DBG_ENTER(MESSAGE)          DIAG_DECLARE_FUNCTION(MESSAGE); DIAG_LOG_FN_ENTRY(libcurlDiagHandlerId)
#define CURL_DBG_RETURN(MESSAGE, ret)    do { DIAG_LOG_RETURN(libcurlDiagHandlerId, MESSAGE); DIAG_LOG_FN_EXIT(libcurlDiagHandlerId, ret); return(ret); } while (0)
#define CURL_DBG_VOID_RETURN(MESSAGE)    do { DIAG_LOG_RETURN(libcurlDiagHandlerId, MESSAGE); DIAG_LOG_FN_EXIT(libcurlDiagHandlerId, 0); return; } while (0)
#define CURL_DBG_PRINT_PARAMS(MESSAGE)   DIAG_LOG_PARAMS(libcurlDiagHandlerId, MESSAGE);


CMS_SYSTEM_INFRASTRUCTURE/DIAG/inc/diag_common.h

    /**
     * @def DIAG_DECLARE_FUNCTION
     * 
     * Declare the function name to the DIAG component.
     *
     * `Must` be declared just after variable declaration block:
     * @code
     * void fn(int arg)
     * {
     *	int ivar;
     *      short svar;
     *	DIAG_DECLARE_FUNCTION("fn");
     *	[...]
     * }
     * @endcode
     * and, avoid:
     * @code
     * void fn(int arg)
     * {
     *	DIAG_DECLARE_FUNCTION("fn");
     *	int ivar;
     *      short svar;
     *	[...]
     * }
     * @endcode 
     */
#define DIAG_DECLARE_FUNCTION(fcn)	__DIAG_DECLARE_FUNCTION(fcn)


<comp-diag-segments>

#define MEMBUSTER_SEGMENT_NAME "MEMBUSTER"
DIAG_LOG_uiSegmentId_t MEMBUSTER_segId;

        (void) DIAG_LOG_RegisterTraceSegment((const char *)MEMBUSTER_SEGMENT_NAME , 
                                             (uint32_t) strlen(MEMBUSTER_SEGMENT_NAME), 
                                             ptRPCTable, 
                                             &MEMBUSTER_segId);
        (void) DIAG_LOG_FormatTraceSegment(MEMBUSTER_segId, "", "", "%p %t %f@%l");

/**
 * @brief	Format trace string to print optional informations (thread identifier, source line number...) about a component.
 *		The expanded string is in the trace header fragment.
 * 
 * @param[in] uiSegmentId	Identifier of the segment being examined obtained by DIAG_LOG_RegisterTraceSegment() call.
 * @param[in] pProcessName	Name of the current process (used to distinguish traces from a same component in several processes : i.e. "MW", "SCD", "SC"...).
 * @param[in] pModuleName	Module/class of a component (i.e : API, SYS, MGR...).
 * @param[in] pFormat		String format
 * 
 * @retval  #DIAG_LOG_STATUS_SUCCESS		The string pattern is valid and will be used to format traces.
 * @retval  #DIAG_LOG_STATUS_PARAM_FAILURE        One or more parameter(s) is(are) invalid (e.g. NULL-pointer).
 * 
 * @par About the trace format
 *
 * The string format uses the following key to (optionally) display component information:
 *	- %m	: file name 			(string is truncated after 32 characters),
 *	- %f	: function name			(string is truncated after 32 characters),
 *	- %p	: process identifier	(hexadecimal format),
 *	- %P	: print process name	(string is truncated to 16 chars)   
 *	- %t	: thread identifier		(hexadecimal format),
 *	- %T	: thread name		    (string, available only when thread is created using SYSTEMUTIL),
 *	- %l	: source line number	(decimal number),
 *	- %%	: print '%' character.
 *
 * The following string format :
 *	- "%P %p" becomes "P:SCD P:0x12345678",
 *	- "%P,%p" becomes "P:SCD,P:0x12345678",
 *	- "%P %p %t %f@%m@%l" becomes "P:SCD p:0x12345678 t:0xDEADBEEF F:foobar.c@M:COMP_API_MyFunc@L:124".
 * 
 * @code
 * DIAG_LOG_uiSegmentId_t mySegmentId;
 * [...]
 * DIAG_LOG_RegisterTraceSegment("COMP", 4, , NULL, &mySegmentId);
 * DIAG_LOG_FormatTraceSegment(mySegmentId, "SCD", "API", "%p %t %m %f@%l"); // Full debug
 * DIAG_LOG_FormatTraceSegment(mySegmentId, "SCD", "API", ""); // No extra information, only segment name & timestamp will be displayed
 * [...]
 * @endcode
 *
 * @par Overriding trace format for all segments
 *
 * It is possible to override trace format for all components and thus have a more coherent trace output.
 * To override it, put this section in the configuration file <b>diag.cfg</b> :
 *
 * @code
 * [OVERRIDDEN_VALUES]
 * TRACE_FORMAT_FOR_ALL=" %p %t %P %T %m %f %l "
 * @endcode
 *
 * @return DIAG_LOG_STATUS_SUCCESS	Optional header trace format successfully set.
 */

extern SYSTEM_STATUS	__DIAG_LOG_FormatTraceSegment(DIAG_LOG_uiSegmentId_t uiSegmentId, const char * pProcessName, const char * pModuleName, const char * pFormat);


registered diag segments as of 12th Sep 2011

DIAG: - I - DIAG_LOG_RegisterTraceSegment : registering segment 'MEMMAN'
...
DIAG: - I - ] DIAG_LOG_RegisterTraceSegment : registering segment 'VGC_JAVA'


<error-on-si-devel-profile>
However, works on UT profile.

static void CTM_SVR_FTM_CleanUpRequest( const CTM_Download_Request_t* request )
{
    /* IRH: HIJACK: */
    CTM_SVR_DBG_ERROR(("** KIT: SI-10728: IRH: HIJACK { **"));
}


#define CTM_SVR_DBG_ERROR(a)            DIAG_LOG_ERROR(g_ctm_svr_diag_id, a)

#ifdef DIAG_BINARY_MODE
#define DIAG_LOG_ERROR(id, msg)		DIAG_LOG_F2B_WRITE((id), DIAG_CMN_TRACE_ERROR, msg)
#else
#define DIAG_LOG_ERROR(id, msg)		DIAG_LOG_F2S_PRINT((id), DIAG_CMN_TRACE_ERROR, DIAG_CMN_TRACE_DETAIL_DEFAULT, msg)
#endif


={============================================================================
|kt_dev_si_0001| comp-diag-cli


/mnt/nds/dev_7/part_0/FSN_DATA/LOG


<diag-level>

diag-level (refer to diag_log_formatter.c, DIAG_LOG_GetFormattedTraceBuffer)

Please note that release debug will not give you any more debug than FEW.


<diag-config>

// diagctl.cfg
/BSKYB_INTEGRATION/build/projects/picasso/fs/NDS/config/diagctl.cfg
asterisk, dot, asterisk
{
        file
    {
        path = /DATA_PARTITION/LOG;
        size = 209715200;
        format = 3/3;
        zlevel = 0;
    };

    stdout
    {
        buffersz = 1024;
    };

}

// diag.cfg which defines format and level
// CMS_SYSTEM_INFRASTRUCTURE/DIAG/inc/config/diag_master_config.xml

[DEFAULT_VALUES]
TRACE_FORMAT=" %p %t %f @ %l"
TRACE_LEVEL="AFEWM"
[LOGGING]
[OVERRIDDEN_VALUES]
TRACE_FORMAT_FOR_ALL=" %p %t %T %m %f %l "
TRACE_LEVEL_AMS="AFEWM"
TRACE_LEVEL_ASM="AFEWM"
TRACE_LEVEL_ATG_API="AFEWM"
TRACE_LEVEL_ATG_LOCK="AFEWM"
...


CMS_SYSTEM_INFRASTRUCTURE/HTTP/inc/config/http_master_config.xml
11:    <key name="TRACE_LEVEL_LIBCURL" type="STRING" value="AFEWM">


<diag-cli>
get table SYS

possible trace levels: assert fatal error warn mil info fn_entry fn_exit event p
arams return none all

set level P_Api  assert fatal error warn mil info fn_entry event params
get level P_Api

set level SYSINIT_S info


={============================================================================
|kt_dev_si_0001| comp-config

<config>
// config overrides
// make.sh

mkdir -p ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config

// run 'FusionConfigExport' which creates most cfg files.

STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/FusionConfig/FusionConfigExport 
  --ignore_missing_inc AUTO /STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/si/config/ 
  projects/picasso/SI_config.xml BASESET BSKYB_HD_PVR ams0201 si_bskyb ams-drx890 release_dbg pdl_sky_production  sky_trials  si_filldisk_inactive

// echo "${OUTPUT}/FusionConfig/FusionConfigExport AUTO 
// ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config/ 
// projects/${PROJECT}/"SI_config.xml" BASESET ${BSKYB_CONFIG_PROFILE} ${DMS_PLATFORM_CONFIG} si_bskyb ${PLATFORM} ${BUILD_TYPE} pdl_${PDL_SERVER} ${SERIALISATION}"

// Copy across Fusion formatted Platform config files for CFG2BIN conversion.
cp -f ../../../${FUSIONOS}/BLD_${PLATFORM_DIR}/platform_cfg/linux/${ENDIAN}Endian/${OS_BUILD_TYPE}/config/fusion_os_cdi_labels.cfg ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config/
cp -f ../../../${FUSIONOS}/BLD_${PLATFORM_DIR}/platform_cfg/linux/${ENDIAN}Endian/${OS_BUILD_TYPE}/config/fusion_os_storage_labels.cfg ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config/

// Copy project config files that override DMS
cp projects/${PROJECT}/fs/NDS/config/overrides/* ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config/


# run dms config

${OUTPUT}/FusionConfig/FusionConfigExport AUTO
${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/dms/config/
projects/${PROJECT}/SI_config.xml BASESET ${BSKYB_CONFIG_PROFILE}
${DMS_PLATFORM_CONFIG} ${PLATFORM} ${BUILD_TYPE}

/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/FusionConfig/FusionConfigExport
AUTO
/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/dms/config/
projects/picasso/SI_config.xml BASESET BSKYB_HD_PVR ams0201 ams_bcm
release_dbg


<bin-to-cfg>
~/STB_SW/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/picasso/FusionConfig/FusionConfigImport BIN2XML x.xml bsysconfig.bin


<cfg-to-bin>
// this will create bin from cfgs and kepp cfgs once done.
${OUTPUT}/FusionConfig/FusionConfigImport CFG2BIN ./ *

# copy configs across to output
cp -f ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/si/config/* ${OUTPUT}/${PLATFORM_DIR}/${ENDIAN}Endian/fs/NDS/config


<si-config-xml>

<fusion_config_database>
 <include name="../dms/dms_master_config.xml" />
 ...

# SI_config.xml which defines 'si_bskyb' profile
 <include name="projects/dms/fs/NDS/dms_master_config.xml" />

// Exporting profile BASESET...
// Exporting profile BSKYB_HD_PVR...
// Overriding key ConnectionEstablishmentTimeout with same value in section
// MS_SYSTEMCONFIG_SECTION in file MS.CFG in profile BSKYB_HD_PVR
// ...
//
// Exporting profile ams0201...
// Exporting profile si_bskyb...
// Exporting profile ams-drx890...
// Exporting profile release_dbg...
// Exporting profile sky_trials...
//

<dms-master-config-xml>
// STB_SW/DARWIN_PLATFORM/dms/public/config/dms_master_config.xml
`dms_master_config.xml` which includes each comp's config and defines BASESET,
and BSKYB_HD_PVR profile.

// <fusion_config_database>
//  <include_path name="../../" />
//  <include name="components/comms_services/ncm/inc/config/ncm_master_config.xml" />
//  <include name="components/darwin_platform_components/darwin_atg/inc/config/darwin_atg_master_config.xml" />
//  <include name="components/darwin_platform_components/darwin_ofs/inc/config/darwin_ofs_master_config.xml" />
//  <include name="components/darwin_platform_components/darwin_planner/inc/config/darwin_planner_master_config.xml" />
//  <include name="components/darwin_platform_components/darwin_search/inc/config/search_master_config.xml" />
//  <include name="components/comms_services/ncm/inc/config/ncm_master_config.xml" />
//  ...


<ex-rmf>
// STB_SW/CMS_SYSTEM_RESOURCE/RMF/inc/config/rmf_master_config.xml

   <section name="quota1_internal">
    <key name="quota_name" type="STRING" value="user">
    </key>
    <key name="quota_type" type="STRING" value="user_type">
    </key>
    <key name="statistics_required" type="INTEGER" value="1">
    </key>
    <key name="partition_name" type="STRING" value="RECORDING">
    </key>
    <key name="max_size" type="INTEGER" value="80000">

// also SI_config.xml can override default values from the comp's xml.


<outputs>
Once build is done, can see outputs:

drwxr-xr-x  3 kyoupark ccusers    4096 Jul 18 13:37 fs/
drwxr-xr-x  3 kyoupark ccusers    4096 Jul 18 13:58 FusionConfigCommon/
drwxr-xr-x  3 kyoupark ccusers    4096 Jul 18 13:59 si/

note:
Only can see cfg files in the output when cfg changes are right. If cfg
changes is wrong then build goes okay but not give you an error. However, a
box cannot boot up with that image. 

// build/projects/picasso/fs/NDS/config
diagctl.cfg          guide_cms_cde_3.cfg  guide_cms_cde.cfg  guide_cms_num.cfg  siege_def.cfg  version.cfg
guide_cms_cde_2.cfg  guide_cms_cde_4.cfg  guide_cms_dsc.cfg  lae.cfg            stbe.ini

// build/projects/picasso/fs/NDS/etc
sysinit.cfg


={============================================================================
|kt_dev_si_0001| comp-mil

#
# STANDBY MIL
# egrep -an "(KEY_PRESS:|PLAYER_API_Session_Play|STANDBY|MOVING TO)" LOGlast
NDS: ^[23:46:23]0946770383.725609 !MIL    -UAM          	< p:0x00000000 P:MW t:0x0125a120 T:UAM_HP_THREAD M:internal_pbag.c F:Internal_Pbag_Print L:420 > UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_OUT 

NDS: ^[20:07:23]0946757243.169361 !MIL   -EPG_INIT     < p:00000168 t:2c0da520 T:no name M:InitialisationManager F:moveToAc
tive L:00633 > MOVING TO ACTIVE

NDS: ^[03:19:17]0946696757.277312 !MIL    -UAM          	< p:0x00000000 P:MW t:0x0125a120 T:UAM_HP_THREAD M:internal_pbag.c F:Internal_Pbag_Print L:415 > UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_IN 

NDS: ^[03:31:52]0946697512.320800 !MIL   -EPG_INIT     < p:00000168 t:2c08f520 T:no name M:InitialisationManager F:moveToSt
andby L:00668 > MOVING TO STANDBY

#
#
#
NDS: ^0946932953.403753 !MIL   -P_Api        < p:00000079 t:010df920 T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:01230 > VIDEO IS HIDDEN
NDS: ^0946932953.404077 !MIL   -P_Api        < p:00000079 t:010df920 T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:06274 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000027, status=NOT_RUNNING

# this is pair to play a service
# LOGGER.logMilestone("TUNING TO " + data.getGuideService().getName() + ", "
# + data.getGuideService().getNumber());
# 
NDS: ^0946932968.608922 !MIL   -EPG_ME       < p:00000079 t:2be76520 T:no name M:MediaEngine F:playService L:01314 > TUNING TO BBC 1 London, 101
NDS: ^0946932968.609234 !MIL   -P_Api        < p:00000079 t:2be76520 T:no name M:player_api_session.c F:PLAYER_API_Session_Play L:03151 > PLAY

NDS: ^0946932970.592436 !MIL   -P_Api        < p:00000079 t:010df920 T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:01226 > VIDEO IS SHOWN
NDS: ^0946932970.592873 !MIL   -P_Api        < p:00000079 t:010df920 T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:06274 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000029, status=RUNNING


# IP Address
NDS: ^0946932953.045506 !WARN  -EPG_INIT     < p:00000079 t:2be8f520 T:no name M:InitialisationManager F:printVersionDebugAndStandbyMessage L:00573 > THE REAL IPADDRESS: , ipaddr 172.18.201.47, mask  THE REAL IPADDRESS:


={============================================================================
|kt_dev_si_0001| comp-ncm

NDS_BUILD_TYPE_ncm_server = debug

# to DHCP
# !ERROR -NCM_SERVER   < M:ncm_server_main.c F:NCM_DHCP_CallBack L:01469 > DHCP fails on the interface eth0 and returns the following error:
# !ERROR -NCM_SERVER   < M:ncm_server_main.c F:NCM_DHCP_CallBack L:01474 > Server Timeout.
# 
ncm_server_dhcp_start_unprotected
	s_dhcp_reg->start(NCM_DHCP_CallBack)

NCM_DHCP_CallBack
	DHCPEvent.eventType
	DHCPEvent.errorStatus


#
# logs
#
275:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03411 > Sending SPM_API_NETWORK_MAIN_CONFIG_UNSET event
581:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03394 > Sending SPM_API_NETWORK_MAIN_CONFIG_SET event

# switch wired to wireless
#
3839:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03373 > Ethernet cable unplugged in interface "eth0"
3860:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03411 > Sending SPM_API_NETWORK_MAIN_CONFIG_UNSET event

# wireless on
#
4114:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03358 > Ethernet cable plugged in interface "eth0"

4125:!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00325 > Starting the DHCP on the interface "eth0"...
4131:!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00432 > DHCP has been started on eth0.

7459:!ERROR -NCM_SERVER   < M:ncm_server_main.c F:NCM_DHCP_CallBack L:01469 > DHCP fails on the interface eth0 and returns the following error:
7460:!ERROR -NCM_SERVER   < M:ncm_server_main.c F:NCM_DHCP_CallBack L:01474 > Server Timeout.

7481:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03411 > Sending SPM_API_NETWORK_MAIN_CONFIG_UNSET event

8243-8322: App called SPM api to get a main config and failed to get as below errors were shown:

# !ERROR -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_get_options L:00778 > DHCP has not yet started or failure.
# !ERROR -NCM_SERVER   < M:ncm_server_interface.c F:ncm_server_interface_get_lease L:02949 > Failed to get DHCP options values: 0x12421003.

# switch wireless to wired
#
8475:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03373 > Ethernet cable unplugged in interface "eth0"
8496:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03411 > Sending SPM_API_NETWORK_MAIN_CONFIG_UNSET event

8567:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03358 > Ethernet cable plugged in interface "eth0"

8578:!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00325 > Starting the DHCP on the interface "eth0"...
8587:!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00432 > DHCP has been started on eth0.

8630:!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03394 > Sending SPM_API_NETWORK_MAIN_CONFIG_SET event


={============================================================================
|kt_dev_si_0001| comp-dhcp

# status code
# (COMP, COMPIF, SEVERITY, STATUS) -> (COMP, SEVERITY, COMPIF, STATUS)
# DHCP: (54, 1, 1, 2)
# hex(((COMP & 0x3FF) << 22) | ((SER & 0x3) << 16) | ((IF & 0xF) << 12) | (STATUS & 0xFFF) )
# hex(((54 & 0x3FF) << 22) | ((1 & 0x3) << 16) | ((1 & 0xF) << 12) | (2 & 0xFFF) )
DHCP_STATUS_ERR_UNKNOWN_OPTION 			0xd811002

#
Without retry statement, DHCP wait 5 minutes before retry to get the release.
But DHCP never stop request.

#
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk
NDS_BUILD_TYPE_dhcp= debug
NDS_BUILD_TYPE_dhcp_client= debug



!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00432 > DHCP has been started on eth0.
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292904, value Ã¿Ã¿Ã¼
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292936, value Â¬Ã‹Ã¾
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292984, value Â¬Ã½dÃ€Â¨d
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01675 > DHCPOFFER from 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:send_request L:02208 > DHCPREQUEST on eth0 to 255.255.255.255 port 67
!INFO  -DHCP         < M:dhclient.c F:dhcpack L:01071 > DHCPACK from 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03168 > Enter update_network_config, action = 4
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03364 > Set IP address, netmask and broadcast address :
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   IP address 172.18.201.245
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   NetMask 255.255.252.0
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03378 >   NetMask length : 22
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   Broadcast address 172.18.203.255
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > Add gateway obtained through dhcp server to routing table : 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03545 > 2 DNS servers set :
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > DNS server 1 : 172.18.253.100
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > DNS server 2 : 192.168.5.100
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03757 > Flags after update_network_config(action = 4) : 0x8043
!INFO  -DHCP         < M:dhclient.c F:bind_lease L:01352 > bound to 172.18.201.245 -- renewal in 112750 seconds.
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_start L:01875 > Receive event on at least one fd 48
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_compare_with_given_fds_cb L:01434 > searched fd = 48
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_itc_callback L:05632 > received msg 4
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_itc_callback L:05695 > received ITC_DHCP_CALLBACK on "eth0".
!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_get_conf L:01244 > A DHCP conf for interface eth0 has been found.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04888 > DHCP is bound on eth0. The stack should be ready.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04889 > NCM and co are glad to have set the configuration.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04890 > Enjoy IP.
!INFO  -NCM_SERVER   < M:ncm_server_event.c F:ncm_server_event_send_notification_to_subscriber L:00427 > Sending event 0x7d7744 to external subscriber ipc 0x9 sess 0x14f2018.
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Listener L:00189 > |-> SPM_NCM_Listener
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04913 > Sending event NCM_SESSION_EVENT_TYPE_LINK_LOCAL_NET_SET.
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_Network_MessageHandler L:03787 > |-> SPM_Network_MessageHandler
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03345 > |-> SPM_NCM_Event
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03594 > <-| SPM_NCM_Event : return_status = 0x00000000 (duration = 0"000.116)
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_Network_MessageHandler L:03816 > <-| SPM_Network_MessageHandler : return_status = 0x00000000 (duration = 0"000.399)
!INFO  -NCM_SERVER   < M:ncm_server_event.c F:ncm_server_event_send_notification_to_subscriber L:00427 > Sending event 0x7d7744 to external subscriber ipc 0x9 sess 0x14f2018.
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Listener L:00204 > <-| SPM_NCM_Listener : return_status = 0x00000000 (duration = 0"001.034)
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04944 > Sending event NCM_SESSION_EVENT_TYPE_GLOBAL_NET_SET.
!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_start_unprotected L:00432 > DHCP has been started on eth0.
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_process_and_remove_alarm_nodes L:02085 > re-inserted alarm node 0x7d0754
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_compute_alarms L:00304 > timeout to be launched in 992 milli sec!
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_start L:01820 > l_nb_fd_to_check: 2, l_msec_timeout: 992
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292904, value Ã¿Ã¿Ã¼
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292936, value Â¬Ã‹Ã¾
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01592 > Option found in dhcp offer, option 6292984, value Â¬Ã½dÃ€Â¨d
!INFO  -DHCP         < M:dhclient.c F:dhcpoffer L:01675 > DHCPOFFER from 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:send_request L:02208 > DHCPREQUEST on eth0 to 255.255.255.255 port 67
!INFO  -DHCP         < M:dhclient.c F:dhcpack L:01071 > DHCPACK from 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03168 > Enter update_network_config, action = 4
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03364 > Set IP address, netmask and broadcast address :
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   IP address 172.18.201.245
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   NetMask 255.255.252.0
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03378 >   NetMask length : 22
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 >   Broadcast address 172.18.203.255
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > Add gateway obtained through dhcp server to routing table : 172.18.203.254
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03545 > 2 DNS servers set :
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > DNS server 1 : 172.18.253.100
!INFO  -DHCP         < M:dhclient.c F:display_addr L:00152 > DNS server 2 : 192.168.5.100
!INFO  -DHCP         < M:dhclient.c F:update_network_config L:03757 > Flags after update_network_config(action = 4) : 0x8043
!INFO  -DHCP         < M:dhclient.c F:bind_lease L:01352 > bound to 172.18.201.245 -- renewal in 112750 seconds.
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_start L:01875 > Receive event on at least one fd 48
!INFO  -NCM_SERVER   < M:ncm_server_scheduler.c F:ncm_server_scheduler_compare_with_given_fds_cb L:01434 > searched fd = 48
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_itc_callback L:05632 > received msg 4
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_itc_callback L:05695 > received ITC_DHCP_CALLBACK on "eth0".
!INFO  -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_get_conf L:01244 > A DHCP conf for interface eth0 has been found.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04888 > DHCP is bound on eth0. The stack should be ready.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04889 > NCM and co are glad to have set the configuration.
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04890 > Enjoy IP.
!INFO  -NCM_SERVER   < M:ncm_server_event.c F:ncm_server_event_send_notification_to_subscriber L:00427 > Sending event 0x7d7744 to external subscriber ipc 0x9 sess 0x14f2018.
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Listener L:00189 > |-> SPM_NCM_Listener
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04913 > Sending event NCM_SESSION_EVENT_TYPE_LINK_LOCAL_NET_SET.
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_Network_MessageHandler L:03787 > |-> SPM_Network_MessageHandler
!ENTER -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03345 > |-> SPM_NCM_Event
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03594 > <-| SPM_NCM_Event : return_status = 0x00000000 (duration = 0"000.116)
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_Network_MessageHandler L:03816 > <-| SPM_Network_MessageHandler : return_status = 0x00000000 (duration = 0"000.399)
!INFO  -NCM_SERVER   < M:ncm_server_event.c F:ncm_server_event_send_notification_to_subscriber L:00427 > Sending event 0x7d7744 to external subscriber ipc 0x9 sess 0x14f2018.
!EXIT  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Listener L:00204 > <-| SPM_NCM_Listener : return_status = 0x00000000 (duration = 0"001.034)
!INFO  -NCM_SERVER   < M:ncm_server_main.c F:ncm_server_main_dhcp_callback L:04944 > Sending event NCM_SESSION_EVENT_TYPE_GLOBAL_NET_SET.


={============================================================================
|kt_dev_si_0001| comp-sbm

Pasquali, Yuri 
Ian Henderson for SBM

# System Booking Management manages those bookings that are made automatically, without user intervention Â– for example on behalf of a 
# Â“Movie of the DayÂ” or Â“Push VODÂ” PVR service.
# Push Video on Demand.  A mechanism by which a broadcaster can ensure content is automatically recorded to a userÂ’s set top box. 
# The content selected for recording may be based on user genre preferences, but the individual programmes are not specifically selected by the user.
# 
# User recordings take priority over PVOD recordings in conflict resolution.  
# This will happen automatically under the new RMF design for PVOD recording job priorities.
#
# However, because PVOD recordings are hidden from the user, it is not necessary to resolve the conflict at booking time. 
# Instead the conflict will be resolved at recording time (see Start Recording a PVOD event (WP 84.2)).
#
# When the STB exits standby, active PVOD recordings must be stopped as necessary to allow live TV and user recordings. 
# This will happen automatically under the new RMF design for PVOD recording job priorities 
#
# The VOD asset is moved to the userÂ’s disk quota from the PVOD quota
# Assets have a given visibility window, which is controlled by the publish and expiry start dates. 
# The expiry date is used to force the deletion of the asset from the STBÂ’s hard disc.#
#
COMPONENT_NAME := darwin_sbm_server
COMPONENT_NAME := darwin_sbm_client

# to create VRM job
SBM_SERVER_VRM_CreateJobCommon

# to book PVOD
SBM_SERVER_SIM_INTERFACE_PVODResolved
	SBM_SERVER_PCAT_InsertBooking
		SBM_SERVER_PCAT_CreateSchedItemVList # see pcat prop ids to set

# cfg
# is it a value to make downloading fast?
MIN_CACHE_DEPTH_HOURS=24

#
# SBM_SERVER_CONFLICT_GetSBMConflictStatusfromRMFStatus
!ERROR -SBMS_USERBOOKING < T:SBM_UB_MAIN M:sbm_server_ub_conflict.c F:SBM_SERVER_CONFLICT_mapRmfStatus L:00822 > Unexpected RMF staus code 7821001
!ERROR -SBMS_USERBOOKING < T:SBM_UB_MAIN M:sbm_server_ub_conflict.c F:SBM_SERVER_CONFLICT_mapRmfStatus L:00829 > BAD staus code RMF: 7821001, SBM: 8826001


={============================================================================
|kt_dev_si_0001| comp-scm

# Power, Duncan <DPower@nds.com>; Charrett, Adam <ACharrett@nds.com>; Thomas, Neil <NThomas@nds.com>
#
TRACE_LEVEL_SCM="AFEWM"

COMPONENT_NAME:=darwin_scm_server


NDS: ^0946693619.433615 !MIL   -SCM          < p:0000007e t:01601310 T:SSM_UPNP_CLIENT M:ssm_wrapper.c F:CDSC_RecvServiceDesc_cb L:00683 > Adding server 444D5376-3253-6B79-5365-0019fb35a651/363500535

NDS: ^0946685040.217500 !MIL   -SCM          < p:00000095 t:015ff0d0 T:SSM_UPNP_CLIENT M:ssm_wrapper.c F:CDSC_RecvServiceDesc_cb L:00683 > Adding server 444D5376-3253-6B79-5365-00101800122e/383999006
# from comp-SCM
# 00101800122e is mac
# 383999006 is serial and friendly name


# for wireshark
eth.src == 00:19:fb:0b:ad:0c

# UPNP Agent ID comparison
# CMS_SYSTEM_INFRASTRUCTURE\UPNP\src\upnp\src\webserver.c
# CMS_SYSTEM_INFRASTRUCTURE\UPNP\src\common\src\osport.c


# libupnp.cfg
[PRODUCTNAME_FILTERING]
FILTERING_ENABLED=TRUE
PRODUCTNAME="SKY"
PRODUCTNAME_FILTER="SKY" # use only


NDS: ^0946684945.554820 !ERROR -UPNP         < p:0000007e t:0168b7b0 T:UPNP_MINISERVER_THREAD_8 M:webserver.c F:NDS_CheckProductName L:01130 > [KT_HIJACK] headerLine = Linux/2.6.18.8 UPnP/1.0 KTPARK DLNADOC/1.50

# header line matches to the filter name
NDS: ^0946684945.554994 !ERROR -UPNP         < p:0000007e t:0168b7b0 T:UPNP_MINISERVER_THREAD_8 M:webserver.c F:NDS_CheckProductName L:01160 > [KT_HIJACK] l_ret == 0. ProductName KTPARK DLNADOC/1.50 match expected KTPARK

# once matched, it is showed as connected. it matches Adding log


={============================================================================
|kt_dev_si_0001| comp-ssm

# Bassett, Chris. van der Beek, Wouter(CO)
#
# MAX_SERVICES_PER_CLIENT
# Yes, it controls how many services (and hence how many UPnP devices) a client within the middleware can discover.
#


={============================================================================
|kt_dev_si_0001| comp-upnp

Dumaine, Alexandre 
Madre, Guillaume (prestataire) 
Elghazzaoui, Makram (prestataire)

!MIL   -SSM_UPNP     < T:SSM_UPNP_CLIENT M:ssm_upnp_client.c F:SSM_UPNP_Client_DoUpnpStop L:01211 > UPnP Library stopped successfully
!MIL   -SSM_UPNP     < T:SSM_UPNP_CLIENT M:ssm_upnp_client.c F:SSM_UPNP_Client_DoUpnpStart L:01133 > Upnp library initialised


={============================================================================
|kt_dev_si_0001| comp-sfm

#-----------------------------------------------------------
# contacts
#-----------------------------------------------------------
Steven Williams, Component Owner 

#-----------------------------------------------------------
# internal
#-----------------------------------------------------------

#
# there are only three clients (SDM, FDM and SIM) so adding some debug in each to print the session_handle obtained from
# SFM_API_SESSION_CreateSession() will allow us to see who needs to do a further investigation.

SIM -> SFM -> MDM


# status code
# (COMP, COMPIF, SEVERITY, STATUS) -> (COMP, SEVERITY, COMPIF, STATUS)
# SFM: (38, 1, 1, 4)
# hex(((COMP & 0x3FF) << 22) | ((SER & 0x3) << 16) | ((IF & 0xF) << 12) | (STATUS & 0xFFF) )
# hex(((38 & 0x3FF) << 22) | ((1 & 0x3) << 16) | ((1 & 0xF) << 12) | (4 & 0xFFF) )
SFM_API_STATUS_FAILURE 			0x0982100A
SFM_API_STATUS_VERSION_CHANGED	0x09811004
SFM_API_STATUS_TIMEOUT			0x09811005

# mem pools
section_memory_pool : section size from config file, 'MEMORY_SIZE_SESSION=1792,000'. 1.7M
g_SFM_mempool : session size from config file, 'MEMORY_SIZE_ADMIN=741376'

# open section filter device
selectConfigureSectionFilter calls openSectionFilter and closeTPIDSectionFilters


#-----------------------------------------------------------
# Interaction diagram
#-----------------------------------------------------------

# 00
# register client's listener. create 'session' from the pool.
"SFM_API_SESSION_CreateSession" (SIM_pi_xsi_gap_filler_SectionListener)

# 01
SIM_pi_xsi_gap_filler_AddRequest:
	tmp_ptr = SIM_PI_MALLOC (sizeof(SKEVT_SECTION_REQUEST));
	
	# fill tmp_ptr
    status = "SFM_API_MPEG_PrivateSectionRequest" ("p_handler->session_handle", &tmp_ptr->filter, p_request_handle);

# 02
SFM_API_MPEG_PrivateSectionRequest( , SFM_API_MPEG_PrivateSectionFilter *filter_params, ) # this filter_params has TPID
	(** check if tpid is vaild **)
	SFM_USER_REQUEST_Create_Request(&request)
		*request = MEMMAN_API_AllocElementP(g_SFM_mempool, f_request_allocator)
	request->private_section_params = filter_params;
	SFM_SCHEDULER_AddRequest(request)

	SFM_SCHEDULER_CommandQueueThread
		addRequest
		  SFM_SCHEDULER_PreemptOrDefer(SFM_Request *request)
		  	demux = SFM_SCHEDULER_FindDemux # find one from demux_list which is global list and is used alloc from a pool
			tpid_filter = findTPIDFilter(demux, request) # find TPID from the requst and fill demux struct

			SFM_SCHEDULER_PreemptorTPID(request, demux, tpid_filter);
			{
				SFM_SCHEDULER_ActivateRequest(SFM_Request *requesti, , SFM_TPIDFilter *tpid_filter)
				{
					selectConfigureSectionFilter # open and configure SF and TPIDF
					SFM_ActiveRequest *active_request = MEMMAN_API_AllocElementP(g_SFM_mempool, g_SFM_active_request_allocator);
					active_request->tpid_filter = tpid_filter

					SFM_GetRawFilterParameters(prepare DemuxSectionfilter from SFM_Request )
					SFM_AddRequest(SFM_ActiveRequest *request)
						SFM_AddFilter(SFM_ActiveRequest* activeRequest) (** write fifo, SFM_CDI_FilterMonitor_Message **)
						{
							message.activeRequest = activeRequest;
							write(fifo_w_fd, &message)
						}

					MEMMAN_API_FreeElementP(g_SFM_mempool, g_SFM_active_request_allocator, active_request); ** "???" ***
				}
				SFM_SCHEDULER_RescheduleFreeResources(demux)
					claimTPIDFilter(demux, request)
					{
						openAttachTPIDFilter
						tpid = getTPIDFromRequest(request);
						SFM_ioctl_TPIDFILTER_SET_TPID(demux->tpid_filters[i].fd, &tpid) # set TPID
					}
			}


# 03
						CDI_FilterMonitorThread:
						(** read fifo, SFM_CDI_FilterMonitor_Message **)
							addFilter ( using cmd fifo from 'Scheduler' to 'CDI Filter Monitor'. call DEMUX ioctl )
								SFM_ioctl_SECTIONFILTER_SET_FILTER(, &activeRequest->raw_params. this only has filter settings )
								SFM_ioctl_DEMUX_START(activeRequest->section_filter->fd)


# 04
# alloc section mem, read data from cdi device, call a listener with data buffer ptr.
# if SFM cannot allocate Section in SFM memory, then read data from a device and discard it in order to empty SF device.
# SFM allocs a pool for SFM sections which is about 1.7 MB and this pools is used for each clients.
# Each client has config values for its SFM section and this config values is used to max limit for each SFM session. 
#
# Expected error in SFM_SessionMgr_AllocateSection
# WARN(SFM_SERVER, "Client buffer full - Client is not reading data fast enough"));
# WARN(SFM_SERVER, "Session ID %d size : %d, in use: %d, requested : %d", session->handle, session->memory_limit, session->memory_used, section_size));
#
CDI
	SFM_SectionReceived
		readSection: SFM_SessionMgr_AllocateSection and FILE_READ() to SFM_Section.data
        call client listner


# 05
# callback proto
# request->details->session->section_listener
# ( request->details->handle, SFM_API_STATUS_OK, request->details->user_defined_params->usertag, mySection->handle);
send a mesg to SIM_pi_xsi_mc_EventListenerThread, SIM_pi_xsi_mc_EventHandler immediately and in this thread, call SFM_API_MPEG_GetSection(&data)

static void SIM_pi_xsi_gap_filler_SectionListener (SFM_API_REQUEST_HANDLE request_handle,
                                                   SYSTEM_STATUS status,
                                                   uint32_t usertag,
                                                   SFM_API_SECTION_HANDLE section_handle)
{
	# get p_handler
	SYSTEMUTIL_HDL_GetObject((SYSTEMUTIL_HDL_Handle_t)usertag, (void **)&p_handler);

	# get section length and data ptr 	
	"SFM_API_MPEG_GetSection" (section_handle,&section_length,"&p_section_data");
	
	# save section handle into p_handler
	SIM_pi_xsi_gap_filler_AddSection(p_handler, section_handle);
	
	#
	SIM_PI_XSI_SKTHREAD_PostEvent(SIM_PI_XSI_SKTHREAD_SECTIONS_AVAILABLE_EVENT)
}

# pass a pointer to caller and caller simply use this buffer in SFM. Eventually, 
# client should call SFM_API_MPEG_DeleteSection otherwise SFM section mem become full.
SIM_pi_xsi_skthread_EventHandler
{
	SIM_pi_xsi_skthread_ProcessSections
		"SFM_API_MPEG_DeleteSection"
			SFM_SessionMgr_FreeSection
}

# 06
# cancel request


={============================================================================
|kt_dev_si_0001| comp-sim

#-----------------------------------------------------------
# contacts
#-----------------------------------------------------------
Beale, Edward(TL); Norman, Isaac(TL for BSKYB project). 
Whitehouse, Jim
Mardell, Alan

Parry, Rhys <RParry@nds.com>

# Mar. 2012
+ Juan for BSkyB
(Neither Isaac nor Parry, Rhys work on BSkyB at present)

#-----------------------------------------------------------
# diag
#-----------------------------------------------------------
COMPONENT_NAME := sim

# diag
(sim_toolbox_diag.h)
#define SIM_ODECODER_DIAG_NAME                  ("SS0A")    /*!< @brief SIM_ODECODER segment name */
#define SIM_RRP_SERVER_DIAG_NAME                ("SS0B")    /*!< @brief SIM_RRP_SERVER segment name */
#define SIM_SFM_MOCK_DIAG_NAME                  ("SM00")    /*!< @brief SIMs SFM_MOCK segment name */
#define SIM_MSM_MOCK_DIAG_NAME                  ("SM01")    /*!< @brief SIMs SFM_MOCK segment name */
#define SIM_SI_CLIENT_DIAG_NAME                 ("SC00")    /*!< @brief SIM_SI interface segment name */
#define SIM_RRP_CLIENT_DIAG_NAME                ("SC01")    /*!< @brief SIM_RRP_CLIENT segment name */
#define SIM_FECM_CLIENT_DIAG_NAME               ("SC02")    /*!< @brief SIM_FECM interface segment name */
#define SIM_IPC_COMMS_DEBUG                     ("SU01")    /*!< @brief SIM_IPC_COMMS segment name */
#define SIM_THREAD_CREATE_DEBUG                 ("SU02")    /*!< @brief SIM_THREAD_CREATE segment name */
#define SIM_MSO_DIAG_NAME                       ("SU03")    /*!< @brief Segment name for SIM MSO util interface */
#define SIM_SYSTEMOBJECT_DIAG_NAME              ("SU04")    /*!< @brief Segment name for SIM SYSTEMOBJECT util interface */
#define SIM_CATEGORY_CONV_DIAG_NAME             ("SU05")    /*!< @brief Segment name for SIM Category Conversion util interface */
#define SIM_LCC_INIT_DIAG_NAME                  ("SQ00")    /*!< @brief Segment name for SIM Lifecycle Controller */
#define SIM_CMC_DIAG_NAME                       ("SQ01")    /*!< @brief Segment name for SIM Cache Mode Controller */
#define SIM_MHSI_CTRL_DIAG_NAME                 ("SQ02")    /*!< @brief Segment name for SIM MHSI Controller */
#define SIM_DBC_INIT_DIAG_NAME                  ("SQ10")    /*!< @brief Segment name for SIM Database Client */
#define SIM_DBC_SCHEMA_DIAG_NAME                ("SQ11")    /*!< @brief Segment name for SIM DBC SCHEMA segment */
#define SIM_DBC_POP_DIAG_NAME                   ("SQ12")    /*!< @brief Segment name for SIM_DBC_POPULATION interface */
#define SIM_DBC_QUERY_DIAG_NAME                 ("SQ13")    /*!< @brief Segment name for SIM_DBC_QUERY interface */
#define SIM_DBC_GC_DIAG_NAME                    ("SQ14")    /*!< @brief Segment name for SIM_DBC_GC interface */
#define SIM_DBC_MOVER_DIAG_NAME                 ("SQ15")    /*!< @brief Segment name for SIM_DBC_MOVER interface */
#define SIM_DBC_UTIL_DIAG_NAME                  ("SQ16")    /*!< @brief Segment name for SIM_DBC_UTIL interface */
#define SIM_DBC_CHNUM_DIAG_NAME                 ("SQ17")    /*!< @brief Segment name for SIM_DBC_CHNUM interface */
#define SIM_DBC_STORAGE_DIAG_NAME               ("SQ18")    /*!< @brief Segment name for SIM_DBC_STORAGE interface */
#define SIM_DBC_LL_DIAG_NAME                    ("SQ19")    /*!< @brief Segment name for SIM_DBC_LL interface */
#define SIM_QH_INIT_DIAG_NAME                   ("SQ20")    /*!< @brief Segment name for SIM Query Handler */
#define SIM_QH_SIENQ_DIAG_NAME                  ("SQ21")    /*!< @brief Segment name for SIM Query Handler SI Enquiries */
#define SIM_QH_HTMON_DIAG_NAME                  ("SQ22")    /*!< @brief Segment name for SIM Query Handler monitors */
#define SIM_SC_INIT_DIAG_NAME                   ("SQ30")    /*!< @brief Segment name for SIM Session Controller */
#define SIM_SC_CONFIG_DIAG_NAME                 ("SQ31")    /*!< @brief Segment name for SIM_CONFIG interface */
#define SIM_SC_DEVICEMAN_DIAG_NAME              ("SQ32")    /*!< @brief Segment name for SIM DEVICEMAN interface */
#define SIM_SC_CMD_LISTENER_DIAG_NAME           ("SQ33")    /*!< @brief Segment name for SIM CMS LISTENER interface */
#define SIM_SC_DELIVERY_DIAG_NAME               ("SQ34")    /*!< @brief Segment name for SIM DELIVERY interface */
#define SIM_SC_SI_DIAG_NAME                     ("SQ35")    /*!< @brief Segment name for SIM SC SI interface */
#define SIM_SC_FECM_DIAG_NAME                   ("SQ36")    /*!< @brief Segment name for SIM SC FECM interface */
#define SIM_PI_INIT_DIAG_NAME                   ("SQ40")    /*!< @brief Segment name for SIM PI INIT interface */
#define SIM_PI_MC_DIAG_NAME                     ("SQ41")    /*!< @brief Segment name for SIM PI MediaConnection code */
#define SIM_PI_CONFIG_DIAG_NAME                 ("SQ42")    /*!< @brief Segment name for SIM PI Config code */
#define SIM_PI_MC_LIST_DIAG_NAME                ("SQ43")    /*!< @brief Segment name for SIM PI MediaConnection list */
#define SIM_PI_XSI_SSL_DIAG_NAME                ("SQ44")    /*!< @brief Segment name for SIM PI SSL */
#define SIM_PI_XSI_SKTHREAD_DIAG_NAME           ("SQ45")    /*!< @brief Segment name for SIM PI SKEVT thread */
#define SIM_PI_XSI_REQUEST_DIAG_NAME            ("SQ46")    /*!< @brief Segment name for SIM PI REQUEST Interface */
#define SIM_PI_XSI_FECM_DIAG_NAME               ("SQ47")    /*!< @brief Segment name for SIM PI FECM Interface */
#define SIM_PI_XSI_SKEVTMD_DIAG_NAME            ("SQ48")    /*!< @brief Segment name for SIM PI SKEVT metadata code */
#define SIM_PI_XSI_TSM_DIAG_NAME                ("SQ49")    /*!< @brief Segment name for SIM PI TS Monitor code */
#define SIM_PI_SERVICE_MCMON_DIAG_NAME          ("SQ50")    /*!< @brief Segment name for SIM PI Mediaconn monitor code */
#define SIM_PI_XSI_UTILS                        ("SQ51")    /*!< @brief Segment name for SIM PI Utils code */
#define SIM_PI_SERVICE_FILE_DIAG_NAME           ("SQ52")    /*!< @brief Segment name for SIM PI File operations code */
#define SIM_PI_SERVICE_S2F_DIAG_NAME            ("SQ53")    /*!< @brief Segment name for SIM PI sections to file code */
#define SIM_PI_SERVICE_CAND_DIAG_NAME           ("SQ54")    /*!< @brief Segment name for SIM PI Candidates service */
#define SIM_PI_XSI_SKEVT_S2F_DIAG_NAME          ("SQ55")    /*!< @brief Segment name for SIM PI skevt sections to file code */
#define SIM_PI_XSI_SKEVT_REF_DIAG_NAME          ("SQ56")    /*!< @brief Segment name for SIM PI reference section processing */
#define SIM_PI_XSI_SKEVT_SECTIONS_DIAG_NAME     ("SQ57")    /*!< @brief Segment name for SIM PI section processing */
#define SIM_PI_SDT_ACQUISITION_DIAG_NAME        ("SQ58")    /*!< @brief Segment name for SIM PI SDT Acquisition code */
#define SIM_PI_XSI_SEI_DIAG_NAME                ("SQ59")    /*!< @brief Segment name for SIM PI SEI creation code */
#define SIM_PI_SERVICE_TABLE_CACHE_DIAG_NAME    ("SQ60")    /*!< @brief Segment name for SIM PI Table Cache Interface */
#define SIM_PI_SERVICE_PSI_CACHE_DIAG_NAME      ("SQ61")    /*!< @brief Segment name for SIM PI PSI CACHE interface */

/* DVB  Plug-In */
#define SIM_PI_DVB_SCHEDULETHREAD_DIAG_NAME     ("SQ70")    /*!< @brief Segment name for SIM PI SCHEDULE THREAD interface */
#define SIM_PI_DVB_EITZIP_DIAG_NAME             ("SQ71")    /*!< @brief Segment name for SIM PI EIT ZIP interface */
#define SIM_PI_DVB_CACHE_FILLER_DIAG_NAME       ("SQ72")    /*!< @brief Segment name for SIM PI CACHE FILLER interface */
#define SIM_PI_DVB_GAPFILLER_DIAG_NAME          ("SQ73")    /*!< @brief Segment name for SIM PI GAP FILLER interface */
#define SIM_PROTOCOL_XSI_DIAG_NAME              ("SQ80")    /*!< @brief Segment name for SIM XSI Protocol library functions */
#define SIM_TB_TOOLBOX_MEM_DIAG_NAME            ("SQ81")    /*!< @brief Segment name for SIM Toolbox Mem Initialise Function */
#define SIM_G_ACQUISITION_STRATEGIES            ("SG00")    /*!< @brief Segment name for acquisition strategy tracing, used across the server and plug-in */


# tips for quick diag mesg
Please could you capture a log with the INFO logs from sim_dbc_query_list.c enabled. Unless youÂ’re running a full debug build, the easiest way I know to do this is to put a line such as the following just below the other #defines in that file:
#define SIM_TB_LOG_INFO SIM_TB_LOG_WARN


# status code
# (COMP, COMPIF, SEVERITY, STATUS) -> (COMP, SEVERITY, COMPIF, STATUS)
# hex(((COMP & 0x3FF) << 22) | ((SER & 0x3) << 16) | ((IF & 0xF) << 12) | (STATUS & 0xFFF) )
# hex(((39 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )

#SIM_COMP_ID           (39) 
#SEVERITY_WARNING	   (1)

(sim\src\inc\sim_internal_system_status_types.h)
#define SIM_MAKE_STATUS_OK(status)              (SYSTEM_MAKE_COMPONENT_STATUS(SIM_COMP_ID_NONE, SIM_ID_NONE, SEVERITY_NONE, status)) /**< Return codes for success */
#define SIM_MAKE_STATUS_FAIL(status)            (SYSTEM_MAKE_COMPONENT_STATUS(SIM_COMP_ID_NONE, SIM_ID_NONE, SEVERITY_WARNING, status)) /**< Return codes for failure */

SIM_STATUS_NOT_FOUND	0x10002 FAILED
SIM_STATUS_FAILED		0x00010006


<sim-property-id>

#define SIM_MAKE_PROPID(obj_class, type, attrib)    ((obj_class) | (type) | (attrib)) /**< Generates a property ID from object Class, Type and Attribute values */

#define SIM_PROPID_CLASS_SERVICE                    (0x06000000u) /**< Indicates a property ID belongs to the Service class */
#define SIM_PROPID_TYPE_INTEGER                     (0x00010000u) /**< Indicates that the property ID is of type Integer */
#define SIM_PROPID_TYPE_BYTE_ARRAY                  (0x000C0000u) /**< Indicates that the property ID is of type Byte Array */

#define SIM_SI_SERVICE_PROPID_I_SERVICE_KEY_1               SIM_MAKE_PROPID(SIM_PROPID_CLASS_SERVICE, SIM_PROPID_TYPE_INTEGER,         1u) /**< protocol dependant service key 1. */

!WARN   -SC00         		< p:0x0000019a P:MW t:0x01f14520 T:SBM_UB_MAIN M:sim_si_service.c F:SIM_SI_Service_GetByteArrayProperty L:98 > 
SIM_ODECODER_ObjectGetByteArrayAttribute(propid=0x60c001e) FAILED 

hex(0x06000000u|0x00010000u)

note: cannot able to find propid=0x60c001e from sources


<sim-config>
/home/NDS-UK/kyoupark/STB_SW/CMS_INFORMATION_SERVICES/SIM/inc/config/baseset.xml

      <section name="SI_MERGE_CONFIG">
        <key name="NUM_MERGE_PROFILES"       type="INTEGER" value="1">          <comment date="2014/06/27 09:00:00" text="Number of profiles used to merge properties of programme instances from different sources."/></key>
      </section>
      <section name="MERGE_PROFILE_1">
        <key name="NUM_APPLICABLE_SERVICES"  type="INTEGER"  value="1">         <comment date="2014/06/27 09:00:00" text="Number of service types for which this profile applies to."/></key>
        <key name="SERVICE_TYPE_0"           type="INTEGER"  value="0">         <comment date="2014/06/27 09:00:00" text="Service type for which this profile applies (0 means default profile)."/></key>
        <key name="PRIMARY_SOURCE"           type="STRING"   value="SIM_DB">    <comment date="2014/06/27 09:00:00" text="Which primary source to use. Either SIM_DB or MHSI."/></key>
        <key name="PROPID_TITLE"             type="STRING"   value="PRIMARY">   <comment date="2014/06/27 09:00:00" text="Merge behaviour to apply to the property (can be PRIMARY, SECONDARY or SECONDARY_OVER_PRIMARY)."/></key>
        <key name="PROPID_SYNOPSIS"          type="STRING"   value="PRIMARY">   <comment date="2014/06/27 09:00:00" text="Merge behaviour to apply to the property (can be PRIMARY, SECONDARY or SECONDARY_OVER_PRIMARY)."/></key>
      </section>

SIM_DBC_MERGE_CFG_MAIN_SECTION 1214 CMS_INFORMATION_SERVICES/SIM/src/server/sql/db-client/src/sim_dbc_merged_query.c                                                                SIM_DBC_MERGE_CFG_MAIN_SECTION,
SIM_DBC_MERGE_CFG_MAIN_SECTION 1218 CMS_INFORMATION_SERVICES/SIM/src/server/sql/db-client/src/sim_dbc_merged_query.c         SIM_TB_LOG_FATAL(("SYSTEMCONFIG_GetIntegerValue(%s,%s) FAILED", SIM_DBC_MERGE_CFG_MAIN_SECTION, SIM_DBC_MERGE_CFG_NUM_PROFILES_KEY));
SIM_DBC_MERGE_CFG_MAIN_SECTION  272 CMS_INFORMATION_SERVICES/SIM/src/utils/inc/sim_config_file.h #define SIM_DBC_MERGE_CFG_MAIN_SECTION                              ("SI_MERGE_CONFIG")


#-----------------------------------------------------------
# internal
#-----------------------------------------------------------

SIM generates the SCI object for the acquired PMT.
SIM generates an SEI object for the acquired EIT-PF-A. Event Information Table-PresentFollowing-Actual (EIT-PF-A) 
SIM generates the CATI object for the acquired CAT

EPG->SPM->SIM

SIM uses the disk for:
Garbage Collection
Vacuuming
Service Plan updates
Persisting SKEVT metadata to disk.


SIM:101ServicePlan Acquisition VS Update
(http://marvin.uk.nds.com/wiki/SIM:101ServicePlan_Acquisition_VS_Update)
----------------------------------------
XSI System
  Triggers 
    * Service Plan Acquisition is triggered on startup and on a 'new install'.
    * Service Plan Update is triggered by receiving and updated NIT or BAT
          o SIM is responsible for filtering for these updated tables and informing SPM, which then triggers the update.
          o If a new NIT is received, the BAT will be acquired and processed, but a receiving a new BAT will not cause the NIT to be reprocessed. 
          
	SDT Acquisition
    * SDT flood fill is used for both acquisition and update, but SDT gap fill is only used during an update. 
	  This is clearly shown in the Service Plan State Machine
    
	Failure and Rollback    
    * Service Plan Acquisition starts by clearing the SIM DBs. As such a failure does not need a roll back, but must be retried.
    * Service Plan Update occurs during normal running of the box and a failure resulting in loss of all data would not be acceptable. 
    So instead, no changes are made to the DB until all SI tables required to complete the update have been successfully acquired. 
    It is for this reason updates make use of the SDT gap fill mechanism to ensure the SDT flood fill file is complete. 	

    
(http://marvin.uk.nds.com/wiki/SIM:101Concepts_section_acquisition)

(SDT) Flood Fill 

Some sections occur in such large numbers it would take a long time to get them filtering for them one at a time. 
** In these cases we flood fill the sections into files. Currently this is done for SKEVT, and SDT sections. **
A generic filter is created, for example to flood fill SKEVTs for a day we just need to have a filter set on the PID, 
and part table id (not including the 6 hour period) all sections matching this will then be written to the specified file 
in the context of the SFM callback function. The flood fill will be considered complete when any of the first 3 sections repeat them selves. 
This can cause problems if the drivers are dropping sections. 


Gap Fill

When a flood fill has completed it is possible that odd sections may have been dropped leaving gaps. 
For this we implement a gap fill mechanism to make targeted request for the missing information. 

#-----------------------------------------------------------
# milestones for svc
#-----------------------------------------------------------
!MIL   -SQ42         < M:sim_pi_xsi_config_svcplan.c F:SIM_PI_CONFIG_StartServiceInformationAcquisition L:07887 > Service line up acquisition start
!MIL   -SQ42         < M:sim_pi_xsi_config_svcplan.c F:SIM_PI_xsi_config_svcplan_BatSectionEvent L:06601 > Complete BAT table received.
!MIL   -SQ42         < M:sim_pi_xsi_config_svcplan.c F:SIM_PI_xsi_config_svcplan_NitSectionEvent L:06515 > Complete NIT table received.

#-----------------------------------------------------------
# SIM_SDT_ACQUISITION_Start, SIM_sdt_acquisition_ProcessSection
#-----------------------------------------------------------
1. open file in memory for sdt acq.
2. alloc mem for sdt acq.
3. but never free fd and mem when failed.
4. note that MC is NULL in this case,SIM_SDT_ACQUISITION_Start(0x00000000), and that's because failed to get demux id.

NDS: ^0946758810.297358 !ERROR -SFM_SERVER   < p:00000064 t:2aeb4490 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:sfm_sessionmgr.c F:SFM_SessionMgr_ActivateSession L:00864 > Failed to retrieve Demux ID from MDM
NDS: ^0946758810.297500 !ERROR -SFM_API      < p:00000064 t:2aeb4490 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:sfm_api.c F:SFM_API_AssignConnection L:00183 > Cannot activate session
NDS: ^0946758810.297638 !ERROR -SQ53         < p:00000064 t:2aeb4490 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:sim_sections_to_file.c F:SIM_S2F_CreateSession L:00623 > SFM_API_SESSION_AssignConnection()=0x982100A FAILED
NDS: ^0946758810.297825 !ERROR -SQ58         < p:00000064 t:2aeb4490 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:sim_sdt_acquisition.c F:SIM_SDT_ACQUISITION_Start L:00649 > SIM_S2F_CreateSession()=0x10006 FAILED
NDS: ^0946758810.297955 !WARN  -SQ42         < p:00000064 t:2aeb4490 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:sim_pi_xsi_config_svcplan.c F:SIM_PI_XSI_CONFIG_SVCPLAN_EventHandler L:07773 > SIM_SDT_ACQUISITION_Start(0x00000000)=0x00010006, FAILED


#-----------------------------------------------------------
# SIM_PI_xsi_pf_ProcessEitPf
#-----------------------------------------------------------

#
# ?????
#

# SIM_PLUGIN_MEMORY: 610000 bytes from sim.cfg. since SDT failed 2453 times before saw first mem alloc error. 
# this should (1024+10000)*2453 = 27,041,872 bytes and sometimes more than than. why?
SIM_lcc_GoToInitialised:
	SIM_PI_INIT_Initialise
		SYSTEMUTIL_THR_CreateMemoryPool(g_sim_plugin_memory_pool_handle "SIM_PLUGIN_MEMORY")

SIM_ENGINE_XSI_MC_Open
	SFM_API_SESSION_CreateSession(SIM_engine_xsi_mc_MpegSectionCallback)

SIM_ENGINE_XSI_MC_Prepare
	SIM_PI_XSI_TsMonitor_StartMonitoring(SIM_TABLE_ID_CAT)
		SIM_pi_xsi_TsMonitor_RequestTable
			SFM_API_MPEG_PrivateSectionRequest

SIM_engine_xsi_mc_MpegSectionCallback
	SIM_PI_XSI_MC_PostEvent

# SIM_lcc_GoToPrepared:
#		SIM_PI_INIT_Prepare
# 		SIM_PI_XSI_MC_Init
#				SIM_pi_xsi_mc_EventListenerThread("SIM_PLUGIN_XSI_MC_ENGINE_THREAD")
SIM_pi_xsi_mc_EventHandler
	case SIM_PI_XSI_MC_EVENT_SVCPLAN_EVENT:
		SIM_PI_XSI_CONFIG_SVCPLAN_EventHandler
	case SIM_TABLE_ID_SDT_A:
		SIM_engine_xsi_mc_HandleSectionEvent
			case SIM_TABLE_ID_CAT:
				SIM_PI_XSI_TsMonitor_NewEvent
					SIM_pi_xsi_TsMonitor_NewSection
					{
						SIM_PI_SERVICE_MCTSD_AddSection
							SIM_pi_service_mctsd_AddSectionToList
							{
								SIM_PI_MALLOC: g_sim_plugin_memory_pool_handle (*)
							}
						SIM_pi_xsi_TsMonitor_ReturnTable
							SIM_engine_xsi_mc_ProcessCat
								SIM_engine_xsi_mc_CreateCatiCamiMso
								{
									SIM_MSO_CreateCATI: SYSTEMOBJECT_Create
									
									OR
									
									SIM_MSO_CreateCAMI: SYSTEMOBJECT_Create
									
									SIM_engine_xsi_mc_MsoListner
								}
					}		


<sim-benign-logs>
(from Issac) This can just mean that a request for something was made that was
not found in the DB.  

!WARN  -SQ35         < p:00000064 t:0105f3b0 T:SIM_SC_IPC_SERVER_THREAD M:sim_sc_si.c
F:SIM_SC_SI_RetrieveLocatorByObjectProperties L:02328 > Could not find the element requested

!WARN  -SQ35         < p:00000064 t:0105f3b0 T:SIM_SC_IPC_SERVER_THREAD M:sim_sc_si.c 
F:SIM_SC_SI_RetrieveLocatorByObjectProperties L:02348 > SIM_QH_SIENQ_ListGetServiceElements()=0x10002 FAILED. request_handle=0x4002A50 nfilters=3


#-----------------------------------------------------------
# TOT
#-----------------------------------------------------------
#/vobs/CMS_INFORMATION_SERVICES/SIM/src/plug-in/xsi/sql/src/sim_pi_xsi_time.c 
SIM_pi_xsi_time_ProcessTot
	SIM_DVB_ParseTotSection
	SYSTEMTIME_SetTime(&utc_time_date, local_offset)


<capture-job>
https://www.stb.bskyb.com/jira/browse/SI-9834
Issue: When the YELLOW key is pressed to view future listings of 7th day(last
day), there are no results shown by EPG_TVG

On investigating the logs and discussing with component team, it looks like
CAPTURE job priority is lesser than the priority of PVOD.  When the user is
watching LIVE TV, and if there is a PVOD scheduled during the SKEVT update
interval then PVOD will occupy remaining tuner and capture job will be delayed
until PVODs are finished. This means even when there is no user scheduled
recordings, EPG listings might not be updated as capture job is delayed.

Following can be done to avoid this issue,

1. CAPTURE Job priority should be more than priority of PVOD Job. (As
    discussed with component team, this may not be possible).

2. Heandend should avoid broadcasting PVOD content during the SKEVT update
interval time. Or HE should make sure there is some gap (atleast 10-15 mins)
between PVOD's.

a. Go to EPG and turn off PVOD. (This should release the tuner held by PVOD).

b. Or release the Live Viewing tuner by taking the box IN and OUT of standby
or watching a downloaded content.

I think this issue can now be closed as NOT A DEFECT as we have enough
evidence, that EPG is displaying "no listings" when there is no schedule data
for 7th Day (ideally for few hours on 7th day). This happened because the box
  was busy downloading PVOD during schedule update time. If the box was left
    for few more hours it would have resolved the issue on its own.

Going forward, if similar issue is found, please release one of the tuner (By
    putting the box to standby or moving from a Live viewing to recorded
    content) and check if the issue is reproducible again. If not, then it
  might not be an issue.


!MIL    -MCM                    < T:SPM_DISPATCHER M:mcm_mediaconn.c F:MCM_MEDIACONN_CreateEx L:275 > 
  @@PMON@@,trace,mediacon,mc-create,51,mc-create-mcid=,51,mc_create-str=,mc-capture,fsnfmt=,hMC=0x33

// this is capture freq?
!MIL    -FEM                          < p:0x000001db P:MW t:0x01978520 T:FEM_WORKER_THREAD M:fem_plugin_satellite_scr.c F:FEM_PLUGIN_Satellite_DeviceEvent L:
1533 > Locked f=11778000 fo=10600000 fs=27500000 fec=0x40 tuner=1 LNB=1 hMC=0x2

<tuner-status>
!MIL    -MDM          		< p:0x000001ec P:MW t:0x01c8c520 T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x43e7 hMC=0xe11 tuner_id =1 and job_type =RECORD 
!MIL    -MDM          		< p:0x000001ec P:MW t:0x01c8c520 T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x43e6 hMC=0xe10 tuner_id =1 and job_type =LIVE_VIEWING 
!MIL    -MDM          		< p:0x000001ec P:MW t:0x01c8c520 T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x43f0 hMC=0xe14 tuner_id =0 and job_type =RECORD 
!MIL    -MDM          		< p:0x000001ec P:MW t:0x01c8c520 T:MCM_ITCMAIN_THREAD M:mdm_connection.c F:MDM_TunerStatusPrint L:3223 > mdm_handle =0x4413 hMC=0xe1e tuner_id =1 and job_type =LIVE_VIEWING 


={============================================================================
|kt_dev_si_0001| comp-spm

#-----------------------------------------------------------
# general
#-----------------------------------------------------------


Today SPM covers very large functionality range:
LNB management
DISK management
FRONTEND management
MODEM managementÂ 
SCANNINGÂ 
INSTALLATION/UPDATEÂ 
SYS_INFOÂ 
SYSTEM_STATE (inc power management)
Network Config

The Service Plan Management component is responsible for discovery of broadcast services from the various network sources, 
initiating and controlling scanning operations on behalf of the system, e.g. during STB initialisation, in standby, 
according to user request etc.

Service Plan Management controls the creation of Service Information databases (managed by the SIM) and builds 
the channel lists available from the various network interfaces. SPM applies the business rules that govern the creation of the service plan, 
determining which services are available to the user and whether programme information is available for these services.  
SPM ensures that the service plan is kept up-to-date.

#-----------------------------------------------------------
# diag and debug build
#-----------------------------------------------------------
TRACE_LEVEL_SPM_CLIENT="AFEWM"
TRACE_LEVEL_SPM_FEM="AFEWM"
TRACE_LEVEL_SPM_FRONTEND="AFEWM"
TRACE_LEVEL_SPM_JOB="AFEWM"
TRACE_LEVEL_SPM_MCM="AFEWM"
TRACE_LEVEL_SPM_MODEM="AFEWM"
TRACE_LEVEL_SPM_NETWORK="AFEWM"
TRACE_LEVEL_SPM_NVRAM="AFEWM"
TRACE_LEVEL_SPM_RMF="AFEWM"
TRACE_LEVEL_SPM_SERVER="AFEWM"
TRACE_LEVEL_SPM_SIM="AFEWM"
TRACE_LEVEL_SPM_STATEMACHINE="AFEWM"
TRACE_LEVEL_SPM_SUM="AFEWM"
TRACE_LEVEL_SPM_SYSINFO="AFEWM"
TRACE_LEVEL_SPM_VGC="AFEWM"

# picasso
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk

# COMPONENT_NAME:=spm_server
# COMPONENT_NAME:=spm_server_rmf_module
# COMPONENT_NAME:=spm_server_sim_module

NDS_BUILD_TYPE_spm_server = debug
NDS_BUILD_TYPE_spm_server_rmf_module = debug
NDS_BUILD_TYPE_spm_server_sim_module = debug

# where
/darwin_platform_components/darwin_spm/src/makefile


#
# JPA
#
COMPONENT_NAME:= darwin_spm_native  #define SPM_JAVA_DIAGNAME "J_SPM"


#-----------------------------------------------------------
# JAVA: SpmFrontEnd:getInputSignalQuality:natSpmFrontEndGetStatusProp
#-----------------------------------------------------------
BaseSpmFrontEndSettings::actualSignalQuality
vobs/THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/PreferenceManager/src/java/picasso/preference/workers/BaseSpmFrontEndSettings.java

    interface PropertyID
    {
        public static final int SIGNAL_STRENGTH  = 1;
        public static final int SIGNAL_STATUS    = 2;
        public static final int SIGNAL_QUALITY   = 3;
        public static final int NETWORK_ID       = 4;
        public static final int TRANSPORT_STREAM = 5;
    }

public class SpmFrontEndImpl::getInputSignalQuality
	natSpmFrontEndGetStatusProp(PropertyID.SIGNAL_QUALITY)
		SPM_JAVA_FrontEndGetStatusProp
			[+]SPM_API_FrontEnd_GetStatus
				send SPM_CLIENT_EVENT_INTERNAL_TYPE mesg

				SPM_CLIENT_FrontEnd_message_handler
					SPM_CLIENT_FRONTEND_ProcessMessageGetStatus
						send SPM_CLIENT2SERVER_EVENT_FRONTEND_GET_STATUS mesg

					SPM_CLIINT_EventHandler(spm_server.c)
						case SPM_CLIENT2SERVER_EVENT_FRONTEND_GET_STATUS
							send SPM_FRONTEND_INTERNAL_MESSAGE_GET_STATUS mesg

							SPM_SVR_FrontEnd_MessageHandler
								case SPM_FRONTEND_INTERNAL_MESSAGE_GET_STATUS:
									SPM_SVR_FrontEnd_GetStatusHandler
									{
										SPM_SVR_FrontEnd_GetStatus
											FEM_IC_FrontEnd_CreateStatus

											FEM_IC_QueueEvent
												case FEM_IC_EV_CREATE_STATUS
													FEM_SS_GenerateSSIForFrontEnd
														FEM_DS_GetTunerStatusInfo
															FEM_PLUGIN_CALL # get actual value

										send SPM_SERVER2CLIENT_EVENT_FRONTEND_GET_STATUS mesg
											SPM_CLIENT_FRONTEND_ProcessMessageServerResponse
												# update f_frontend_status[idx] structure
									}

						        case SPM_FRONTEND_INTERNAL_MESSAGE_GET_PROP:
            						SPM_SVR_FrontEnd_GetPropHandler(msg_data);
										SPM_SVR_FrontEnd_GetProp # get actual value
								

			[+]SPM_API_FrontEnd_GetStatusProp
				# get f_frontend_status[idx] depending on property id
				case SPM_API_FRONTEND_STATUS_PROPID_SIGNAL_QUALITY_PERCENTAGE(7): /* not use in SKY case */
				case SPM_API_FRONTEND_STATUS_PROPID_SIGNAL_QUALITY:

#######################
# network
#######################
SPM seems to be processing events from NCM correctly, and returning the correct status in the API used below. From the log it seems that we get a SET event from NCM, after which we return that the main config is set, but later on in the test around line 8106, we get an UNSET event. After this, when the API is called, we correctly report that the config is unset (line 8145). We never receive another SET event from NCM so return UNSET for the remainder of the log.

SPM_NCM_Event: SET evnet means that there's vaild net conf after doing whole process like DHCP.

!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03411 > Sending SPM_API_NETWORK_MAIN_CONFIG_UNSET event
!INFO  -SPM_NETWORK  < M:spm_network.c F:SPM_NCM_Event L:03394 > Sending SPM_API_NETWORK_MAIN_CONFIG_SET event
	

#
int localConnectionStatus = getMainStatus();

SPM_JAVA_NetworkGetMainStatus
	SPM_API_Network_GetMainStatus
	

#
networkMainConfig = getNetworkMainConfig();

SPM_JAVA_GetSpmNetworkMainConfig
	SPM_API_Network_GetNetworkMainConnConf
		SPM_CLIENT_INTERNAL_EVENT_NETWORK_GET_MAIN_CONFIG
			SPM_CLIENT2SERVER_EVENT_NETWORK_GET_MAIN_CONFIG
			SPM_NETWORK_MESSAGE_GET_MAIN_CONFIG
			
		memcpy(network_conf, &f_main_config, sizeof(SPM_API_Network_MainConnConf));
		
	...
	SPM_Network_GetMainConf
		SPM_Network_GetDhcpLease
		{
		
			#
			# when failed, set OK status and return INVALID sets. WHY??
			#
			if ((ncm_status = NCM_IF_DHCP_GetLease(f_SPM_Network_Session_Handle, f_SPM_Network_Interface_Name, &flags, &addr, gateway, dns)) != NCM_STATUS_OK)
			{
				/* A DHCP configuration, with DHCP set to true and the rest of the fields set to invalid values, is retrieved. */
				SPM_NETWORK_DIAG_LOG_WARN(("NCM_IF_DHCP_GetLease failed, status = 0x%X", ncm_status));
				f_last_message.network_payload.status = SPM_API_STATUS_OK;
			}

			#
			#	!ERROR -NCM_SERVER   < M:ncm_server_dhcp.c F:ncm_server_dhcp_get_options L:00778 > DHCP has not yet started or failure.
			# !ERROR -NCM_SERVER   < M:ncm_server_interface.c F:ncm_server_interface_get_lease L:02949 > Failed to get DHCP options values: 0x12421003.
			# !WARN  -SPM_NETWORK  < M:spm_network.c F:SPM_Network_GetDhcpLease L:01209 > NCM_IF_DHCP_GetLease failed, status = 0x12421003
			
			SPM_Network_GetResponseEventFromMessageType
        case SPM_NETWORK_MESSAGE_GET_MAIN_CONFIG:
            event = SPM_SERVER2CLIENT_EVENT_NETWORK_GET_MAIN_CONFIG;
            break;			
		}
		
		SPM_CLIENT_Network_ProcessSynchronousExternalMessage
		        case SPM_SERVER2CLIENT_EVENT_NETWORK_GET_MAIN_CONFIG:
		        
		            memcpy(&f_main_config, &pMessage->externalMessage.payload.network_payload.data.main_config, sizeof(f_main_config));
		            
		            SPM_CLIENT_DIAG_LOG_INFO(("main config: dhcp_on = %d, ip_address = 0x%X, subnet_mask = 0x%X, gateway = 0x%X, primary_dns = 0x%X, secondary_dns = 0x%X",
		                                    f_main_config.dhcp_on,
		                                    f_main_config.ip_address,
		                                    f_main_config.subnet_mask,
		                                    f_main_config.gateway,
		                                    f_main_config.primary_dns,
		                                    f_main_config.secondary_dns));
		            break;


#######################
# system health check
#######################
# /PreferenceManager/src/java/picasso/preference/model/HealthCheckModel.java: run()
#		logger.logFatal("Undefined health check status " + completionStatus);
#		onFailure();
#
#		private void onFailure()
#		{
#			int[][] results = { { 15, 15, 15, 15, 15, 15, 15, 15 }, { 15, 15, 15, 15, 15, 15, 15, 15 } };
#			spmHealthCheck.release();
#			spmHealthCheck = null;
#			autoHealthListener.notifyHealthCheckResults(results);
#		}
# 
# on screen: 4WWW-WWWA (15).

#
# Initiates a health check. As the the health check proceeds the system state changes as follows: ACTIVE -> PENDING_HEALTHCHECK -> HEALTHCHECK. 
# If a SpmSystemListener has been registered then the listener will be triggered for each change of state. After being notified of changes 
# to PENDING_HEALTHCHECK and to HEALTHCHECK the change to the new state should be acknowledged by calling 
# notifyStateChange(SpmListenerID listenerId, int state) with the state set to the new state. If the changes of state are not acknowledged 
# then the health check will proceed after a timeout. If no listener has been registered then the health check proceeds 
# without the need for any acknowledgement. 

# /* health check pending */
# public static final int PENDING_HEALTHCHECK     = 2;
# 
# /** health check */
# public static final int HEALTHCHECK             = 3;

setStateHealthCheck (spmsystem.java)
	natSpmSetSystemState(State.HEALTHCHECK);
		SPM_JAVA_SystemSetState
			SPM_API_System_SetState

registerSystemStateListener
	natSpmRegisterSystemListener
		SPM_JAVA_SystemRegisterStateListener
			SPM_API_System_RegisterStateListener(SPM_JAVA_SystemStateListener)

SpmHealthCheck runAutomaticHealthCheck
# Starts a multi-transponder system health check. Only one health check can run at any one time. 
	SPM_JAVA_ApiRunAutomaticHealthCheck
		SPM_API_FrontEnd_RunAutomaticHealthCheck(SPM_JAVA_HealthCheckListener, l_vtable_handle # becomes usertag in listener, )


SPM_JAVA_HealthCheckListener(userTag)
	VTableGet(userTag)

# SHC for disk
SPM_SystemState_NotifyAllComponentsActive
	PDM_FS_SetSystemState(PDM_FS_SystemStateHealthCheck # action)
	...
	PDM_FS_PartitionUnmount

# this api use the timedwait from this cfg. it varies from hdd size.
SPM_API_Disk_RunSMARTShortTest
(spm.cfg)
DISK_TEST_TIMEOUT_SEC=30

# passive standby
# config
static SPM_COMMON_CONFIG_DESC f_spm_config_desc[] =
# const char* sectionName;    const char* keyword;    void* outputPtr;    SPM_COMMON_CONFIG_ENTRY_TYPE type;    union    {..} data;
    {"DEEP_STANDBY",           "OFF_MODE",                         &f_spm_config.deep_standby_off_mode,                                                     SPM_COMMON_CONFIG_ENTRY_TYPE_INT},


# passive stby
F:SPM_SystemState_DeepStandbyReturnAlarmExpired L:2051 > Passive Standby alarm expired! Start enter passive standby procedure: 1 

Prefs_defaults.cfg:
POWER_SAVE_END_PERIOD1_HOURS=5
POWER_SAVE_END_PERIOD1_MINUTES=30
POWER_SAVE_MODE=3
POWER_SAVE_START_PERIOD1_HOURS=3
POWER_SAVE_START_PERIOD1_MINUTES=30

Prefs_user_profile.cfg:
POWER_SAVE_END_PERIOD1_HOURS=1
POWER_SAVE_END_PERIOD1_MINUTES=1
POWER_SAVE_MODE=1
POWER_SAVE_START_PERIOD1_HOURS=1
POWER_SAVE_START_PERIOD1_MINUTES=1

the default Guide Service, then we receive channel 998


={============================================================================
|kt_dev_si_0001| comp-power comp-standby

<passive-deep-standby>
During passive stand-by, the STB front panel is running. The STB front end and
Fusion Product are not running. EMMs are not filtered. Alarms can be triggered
in order to switch the STB to active stand-by so that the Fusion Product can
process scheduled tasks.

<active>
During active stand-by, the STB front end is running. The Fusion Product is
also running and can process update tasks and recordings. EMMs are filtered
during update tasks.

<boot-up>
// bootup okay
!MIL    -SYSINIT_S    		< p:0x000001fe P:SCD t:0x00646530 T:STATE_MACHINE_THREAD M:state_machine.c F:switchRingLevelRunLevel L:460 > ENDING   Moving ring level 19 to runlevel PVR. 
!MIL    -SYSINIT_S    		< p:0x000001fe P:SCD t:0x00646530 T:STATE_MACHINE_THREAD M:state_machine.c F:stateMachineThread L:1416 > ENDING   Moving system to runlevel PVR. 

!MIL    -EPG_INIT     		< p:0x00000203 P:APP t:0x2dfef520 T:no name M:PlannerStarter$2 F:run L:140 > T:IM#0:PLANNER READY

<shutdown>
!MIL    -SYSINIT_S    		< p:0x000001fe P:SCD t:0x00646530 T:STATE_MACHINE_THREAD M:server_msghandling.c F:sendRunLevelRequest L:965 > STARTING Moving component FEM to runlevel SHUTDOWN 


={============================================================================
|kt_dev_si_0001| comp-vgc

The error means that VGC hasnÂ’t managed to read the data from the card at the time of SPM initialisation, but usually this is not a problem. SPM should receive a notification from VGC later, when itÂ’s Â“readyÂ” (SPM_VGC_SubscriberConfigChangedListener) and then SPM tries to read the HD subscription again (in SPM_VGC_InternalEventEntitlementInfoChanged).

330:NDS: ^[00:00:55]0946684855.296713 !ERROR  -SPM_SERVER                < p:0x00000000 P: t:0x01275700 T:SPM_THREAD M:spm_vgc_module.c F:SPM_VGC_CheckHDSubscription L:707 > Card not in VGC_API_CARD_STATUS_READY yet! (3) 
331:NDS: ^[00:00:55]0946684855.296726 !ERROR  -SPM_SERVER                < p:0x00000000 P: t:0x01275700 T:SPM_THREAD M:spm_vgc_module.c F:SPM_VGC_InitialiseSubscriptionBitmap L:1208 > Error in checking HD subscription! 
332:NDS: ^[00:00:55]0946684855.296737 !ERROR  -SPM_SERVER                < p:0x00000000 P: t:0x01275700 T:SPM_THREAD M:spm_vgc_module.c F:SPM_VGC_Activate L:2116 > SPM_VGC_InitialiseSubscriptionBitmap failed 
347:NDS: ^[00:00:56]0946684856.985392 !ERROR  -SPM_SERVER                < p:0x00000000 P: t:0x01275700 T:SPM_THREAD M:spm_vgc_module.c F:SPM_VGC_InternalEventSubscriberInfoChanged L:416 > SPM_SM_GetDefaultInstanceHandle failed


={============================================================================
|kt_dev_si_0001| comp-srm

Schechter, Ruti

SRM manages the PVOD recordings.  

SRM uses PCAT to update the schedule information (such as start time, duration, or locator) when a schedule change occurs, to manage the lifetimes of PCAT entries (including deleting PCAT entries when record/remind jobs are destroyed), and to clean out old history items and disappeared events. SRM also gets event information from broadcast metadata (via SIM) and saves it for later use.

COMPONENT_NAME := darwin_srm
TRACE_LEVEL_SRM="AFEWMIPR<>!"

# PCAT_CAT_PROP_ITEM_NAME
EIProcessing_GetAndSetProgInstanceItemProperties
	EIProcessing_GetAndSetStringProperty

# PCAT_CAT_PROP_DELETION_REASON 
"DELETION_REASON",	/*PCAT_CAT_PROP_DELETION_REASON*/
SYSTEM_EXCEPTION_TYPE_BOOKING_EXPIRED (37)


# content status handler to VRM
/* register the content handler record callback*/
stat = VRM_JOBEXTINFO_RegisterContentStatusHandler(SYSTEMJOB_TYPE_RECORD,
	JobContent_RecordContentHandler);

# PSCHED register
stat = PSCHED_SCHEDULING_SchedulerRegister(&psched_info, 
	SrmJobPschedSchedulerCallback, 0u, pPschedJobId);

# updates from CA
#
stat = VGC_API_PpvAction_SetClientNotify (obj_handle, 
										  SRM_ExpiryCA_cbOptionsByPurchasePacketRetrieval);

										  case E_SRM_EXPIRY_MGR_MSG_TYPE_OPTIONS_BY_PURCHASE_PACKET_READY:
	stat = SRM_ExpiryCA_OptionsByPurchasePacketReady((VGC_API_Handle*) pPayload);	
	{
		stat = VGC_API_PpvAction_GetContentExpirationDate (*obj_handle, &caExpirationDate);
		
		stat = SRM_ExpiryMgr_UpdateBookingJobDeletionTime(*pBookingJobID, true, caExpirationDate, SYSTEMTIME_TIMEDATE_INVALID);	
	}
	break;

SRM_ExpiryMgr_UpdateBookingJobDeletionTime(SYSTEMTIME_TIMEDATE caExpirationDate,)
	stat = SRM_ExpiryCA_FindMinEED(bookingJobID, &isEed, &minEed, &minPurchaseDate, &isCaViewed);
	SRM_ExpiryMgr_CheckAndHandlePastDeletionTime
				stat = SRM_UTILS_JOB_FindVrmJobHandle(bookingJobID,jobType,
					SRM_ExpiryMgr_cbDeletionTimeExpiredFindJob);
						SRM_SendMessage((uint32_t)E_SRM_EXPIRY_MGR_MSG_TYPE_EXPIRED_VRM_JOB_FOUND

SRM_ExpiryMgr_ReceiveMessage
{
	case E_SRM_EXPIRY_MGR_MSG_TYPE_EXPIRED_VRM_JOB_FOUND:
		stat = SRM_UTILS_JOB_DestroyVrmJob((VRM_JOB_HANDLE*) pPayload, SYSTEM_EXCEPTION_TYPE_BOOKING_EXPIRED);
			# VRM_JOB_Destroy
		break;
}

=
NDS: ^[00:01:54]0946684914.690710 !MIL   -VRMS         < p:00000077 t:2b933100 T:VRM_SRV M:record_state.c F:RecordStateCalculateBySkevt L:01556 > MILESTONES: timeline: itemId: 0x29000010, curr: [2012:03:19 18:26:46]1332181606; PT:[2012:03:19 18:27:00]1332181620, SGT:[2012:03:19 18:28:00]1332181680, SREX:[2012:03:19 18:30:00]1332181800, BODY:[2012:03:19 18:30:00]1332181800, EREX: [2012:03:19 20:15:56]1332188156, EGT:[2012:03:19 20:15:56]1332188156, ENDED:[2012:03:19 20:17:56]1332188276

NDS: ^[00:01:56]0946684916.143779 !INFO  -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_expiry_ca.c F:SRM_ExpiryCA_FindMinEED L:00259 > eed = [2012:03:25 23:59:58]1332719998, purchaseDate = [2012:03:19 18:22:02]1332181322, minDeletionTime= [2012:03:25 23:59:58]1332719998, minPurchaseDate = [2012:03:19 18:22:02]1332181322, isCaViewed = 0

NDS: ^[00:01:56]0946684916.221937 !INFO  -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_expiry_mgr.c F:SRM_ExpiryMgr_UpdateBookingJobDeletionTime L:00388 > isEed = true.  minEed = [2012:03:25 23:59:58]1332719998
NDS: ^[00:01:56]0946684916.222120 !INFO  -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_expiry_mgr.c F:SRM_ExpiryMgr_UpdateBookingJobDeletionTime L:00393 > isCA = true.  minCA = [2011:00:28 23:59:58]1293580798
NDS: ^[00:01:56]0946684916.222246 !INFO  -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_expiry_mgr.c F:SRM_ExpiryMgr_UpdateBookingJobDeletionTime L:00430 > bookingDeletionTime = [2011:00:28 23:59:58]1293580798


NDS: ^0946684916.233829 !ERROR -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_expiry_mgr.c 
F:SRM_ExpiryMgr_ReceiveMessage L:00166 > KT: event=612

NDS: ^0946684916.233955 !ERROR -SRM          < p:00000077 t:01655a20 T:SRM_LP_THREAD M:srm_utils_job.c 
F:SRM_UTILS_JOB_DestroyVrmJob L:00154 > KT: VRM job handle is 0x1000002, ext 37
37 means Â‘TYPE_BOOKING_EXPIREDÂ’.

# also can get VRM INFO
#
NDS: ^[00:01:56]0946684916.278964 !INFO  -VRMS         < p:00000077 t:2b933100 T:VRM_SRV M:booking_record.c F:BOOKING_RECORD_Destroy L:02259 > record handle:0x2, item_ID:0x29000010, deletion reason:BOOKING_EXPIRED

#
# PCAT_CAT_PROP_ENTITLEMENT_IS_CA_VIEWED set
#
SRM_PurchaseMonitor_Activate
    vgcApiStat = VGC_API_IppvSlot_SetClientNotify (receiptNode->receiptHandle,cb_SRM_PurchaseMonitor_Notify);
	
cb_SRM_PurchaseMonitor_Notify
	E_SRM_PURCHASE_MONITOR_MSG_SLOT_UPDATED
	
SRM_PurchaseMgr_ReceiveMessage
	case E_SRM_PURCHASE_MONITOR_MSG_SLOT_UPDATED:
		SRM_PurchaseMgr_Update
			stat = PCAT_VIEW_VLIST_SetBoolean(valueList,1u,PCAT_CAT_PROP_ENTITLEMENT_IS_CA_VIEWED,purchaseInfo.isViewed);


={============================================================================
|kt_dev_si_0001| comp-pcat

Dan Toubiana (CO), Reuven Nimrod (MGR), Uzan, Galit (eng)

SELECT
Statement for extracting data from a database table

*pcat-view*
Virtual table based on the result-set of a SELECT statement
A view is a cheap resource. The database doesn't store the `view data` 

It recreates it, every time a user queries a view.  A view allows a read-only
access to the database.

*pcat-value-list*
View specification (view spec)
The filter, sort, and properties list used to build a view Properties list.
List of properties to be retrieved on a SELECT operation from a view. The
properties retrieved are the property list (and seems actual values of these
    properties are called `value list`) 

PCAT Server library is responsible for the following :
Initiating an interface with DBENGINE, the component which manages the
physical database Retrieving up-to-date data from the database on SELECT
requests from the client


<comp-pcat-debug>
COMPONENT_NAME := pcat_server
COMPONENT_NAME := pcat_client


<comp-pcat-status>
#define PCAT_COMP_ID     (23)
#define SEVERITY_SEVERE  (0x2))
#define SEVERITY_NONE    (0)
#define PCAT_VIEW_IF     (1)
            
(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((23 & 0x3FF) << 22) | ((1 & 0x3) << 16) | ((1 & 0xF) << 12) | (57 & 0xFFF) )
hex(((23 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((1 & 0xF) << 12) | (41 & 0xFFF) )

PCAT_VIEW_STATUS_OK                     0x5c01000
PCAT_VIEW_STATUS_VALUE_IS_NULL          0x5c01002
# the status 0x5c01002 in PCAT is not an error code, it's a right return
# status that indicates that the property planner try to get is NULL.  It
# means that the property you want to read was never set (it is equal to NULL
# in the PCAT.DB field).

PCAT_VIEW_STATUS_FAILURE                0x5c21001
  (PCAT_VIEW_MAKE_STATUS(SEVERITY_SEVERE, 1))
PCAT_VIEW_STATUS_PROP_NOT_IN_VALUE_LIST 0x5c2103f
PCAT_VIEW_STATUS_ITEM_ID_NOT_FOUND      0x5c11039 /* seems the same as END_OF_VIEW */
PCAT_VIEW_STATUS_INVALID_PARAMSi        0x5c21029
PCAT_VIEW_STATUS_END_OF_VIEW            0x5c21036 /*!< @brief  Last rows are returned by select action */i
PCAT_VIEW_STATUS_NOT_ENOUGH_MEMORY      0x5c21037


<query>
one can query a view using the APIs :

PCAT_VIEW_Select
PCAT_VIEW_SelectByItemID 
PCAT_VIEW_SelectManyItemIDS

Both APIs retrieve data from the database in a data structure of type
'PCAT_VIEW_VALUE_LIST'.

// typedef uint32_t PCAT_VIEW_VALUE_LIST; // Handle to the *pcat-value-list* 


*pcat-value-list*

value list is a simple array(table) using index. 

typedef struct DBVIEW_ValueListTag{
  `PCAT_VIEW_OBJECT_TYPE` object_type;
  uint32_t num_rows;
  uint32_t total_size;
  PCAT_VIEW_VALUE_LIST value_list_hdl;
  P_PropValue* 'prop_values_list' /* \XRPC GLOBAL SIZEPARAM(num_rows)*/ ;
}DBVIEW_ValueListStruct;


{pcat-property}
For each property the relevant API (PCAT_VIEW_VLIST_GetInt/String/etc) should
be called in order to retrieve it.

// pcat_view.h
typedef union PCAT_PROP_VAL_TAG
{
    char *ptr /* \XRPC SIZENULL SIZECONST(PCAT_VIEW_MAX_VALUE_LENGTH)*/; 
    int32_t iVal;
} PCAT_PROP_VAL;

#define PCAT_PROP_VAL_TYPE_UNDEF    0U /* UNDEFINED */
#define PCAT_PROP_VAL_TYPE_NULL     1U /* NULL */
#define PCAT_PROP_VAL_TYPE_INTEGER  2U /* INTEGER */
#define PCAT_PROP_VAL_TYPE_STRING   3U /* STRING */

typedef struct PropValueTag{
    PCAT_PROP_VAL value;
    uint16_t  property_num;
    uint8_t valueType;   // 1 - NULL, 2 INTEGER, 3 - STRING */
}PropValue;

typedef struct P_PropValueTag{
    uint32_t num_prop;
    PropValue *prop_list // \XRPC GLOBAL SIZEPARAM(num_prop)*/ ;
}P_PropValue;


<pcat-object-pcat-property>
// `pcat_cat.h`, pcat_cat_ext.h

#define PCAT_CAT_OBJECT_TYPE_UNDEF			0 /**< @brief First value (UNDEF)	*/
#define PCAT_CAT_OBJECT_TYPE_BOOKING		1 /**< @brief  Booking Object */
#define PCAT_CAT_OBJECT_TYPE_SCHED_EVENT	2 /**< @brief  Scheduled Events object */
#define PCAT_CAT_OBJECT_TYPE_TIMEBASE_EVENT 3 /**< @brief  Time base booking object */
#define PCAT_CAT_OBJECT_TYPE_SHREC_ITEM		4	/**< @brief  Shrec Item object */
#define PCAT_CAT_OBJECT_TYPE_AV_CONTENT		5 /**< @brief  AV Content object */
#define PCAT_CAT_OBJECT_TYPE_PLAY_JOB		6	/**< @brief  Play job object */
#define PCAT_CAT_OBJECT_TYPE_SHREC_EXTENT	7  /**< @brief  Shrec Extent object */
#define PCAT_CAT_OBJECT_TYPE_EXCEPTION      8   // Exception Object
#define PCAT_CAT_OBJECT_TYPE_BOOKING_JOB	9	/**< @brief  Booking job Object*/
#define PCAT_CAT_OBJECT_TYPE_USERPREFS     10   /**< @brief  user preferences */ 
#define PCAT_CAT_OBJECT_TYPE_SIGNUP_JOB    11   /**< @brief Signup Job object */ 
#define PCAT_CAT_OBJECT_TYPE_RB_RECORDING_JOB		12	 /**< @brief  RB recording object */ 
#define PCAT_CAT_OBJECT_TYPE_RB_PLAYBACK_JOB		13	 /**< @brief  RB playback object */ 
#define PCAT_CAT_OBJECT_TYPE_REMOTE_SERVER			14	 /**< @WP961:brief  Remote Server object */ 
#define PCAT_CAT_OBJECT_TYPE_VOD_PRODUCT			15	 /**< @brief  WP1222 Â– VOD rentals management */ 
#define PCAT_CAT_OBJECT_TYPE_VOD_ASSET				16	 /**< @brief  WP1222 Â– VOD rentals management */ 


PCAT_CAT_PROP_TRIGGER_TIME			5			
# Trigger time of program (seconds in UTC).  No update notification will be received for this property.

# pcatp_api.c for db object model


<comp-pcat-cfg>
# on app process since planner is in app.
# (for picasso build)
# MEM121.TXT:pool PCAT_VIEW_CLNT_POOL size=409600: 015:44:39.636

[PCAT_MEMMAN_CONFIGURATION]
CLIENT_POOL_FLAG=0
CLIENT_POOL_NAME="`PCAT_VIEW_CLNT_POOL`"
CLIENT_POOL_SIZE=400

# used in PCATSrvCreateMemoryPool(PcatServerPool)
SERVER_POOL_FLAG=0
SERVER_POOL_NAME="PCAT_VIEW_SRV_POOL"
SERVER_POOL_SIZE=580

MAX_BOOKINGS=1000


<comp-pcat-items>
See items.c

Vued            (BkKp, Book, Keep, Recd, Seen)
Type
Start Time         
End Time           
Event Name                              
Loc  
Chan#
Err
Channel Name       
Series
SizeG
Expiry  
SLStat
#Rem
BookJobId


<comp-pcat-items-space>
// Adds up space used for each recording with `booking_source` catagory.
SPACE USED (Gb): USER :6.90 PVOD :186.12 SLINK:208.91 DYNAM:1.49 

// Adds up space used for each recording with `booking_disk_quota_name`
// catagory.
Disk usage in quota "NDS_Dynamic": 1.49 Gb
Disk usage in quota "system": 186.12 Gb
Disk usage in quota "user": 215.81 Gb



<comp-pcat-items>
(BOOKING_JOBS) BOOKING JOB ID: 687866053 *booking-job-id* , BOOKING ID 
  -> (BOOKING_INFO) BOOKING ID: 553648325 -> EVT ID: 570425541 -> (ITEM) EVT ID: , EVT NAME: 110013ffa4194361736820696e20746865204174746963 (Cash in the Attic)
                                          -> AV CON: 620757195 -> (AV_CONTENT) SH LOC: locator:3:14:1:s1


FYI, items -f now has the BookingJobDeletionTime as its final element, so
anyone can find this information out of a PCAT.DB using the text-based pcat
viewer.

Vued|Type |Start Time         |End Time           |Event Name                          |Loc  |Chan# |Err |Channel Name        |Series |SizeG |Expiry  |SLStat |#Rem |BookJobId
====|==== |===================|===================|====================================|=====|===== |=== |====================|======|=====|========|======|====|=========
Seen|PDL |2016:09:26 06:12:24|2016:09:26 06:12:59|Anna Scher: In Confidence            |s66709 |    0|  1|Sky Arts            |     0| 0.25|        |UNDF  |    |688316759 *booking-job-id*
Seen|PDL |2016:09:26 06:13:02|2016:09:26 06:14:01|Fish Town                            |s66714 |    0|  1|Sky Atlantic        |     0| 0.04|        |UNDF  |    |688316799


*booking-job-id*

>>> hex(688316799)
'0x2906e17f'

!MIL    -PCATS                      < p:0x000001f4 P:MW t:0x01ff8520 T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:3077 > 
  client id = 0x5, `bookingJobID = 0x2906e17f` 


sqlite3 PCAT.DB 'select is_viewed, keep, booking_type, actual_start_time,\
          actual_end_time, event_name, shrec_locator, logical_channel,\
          `booking_exception`, channel_name,series_id,push_locator,trigger_time,\
          program_size, push_expiryend, is_disappeared, is_active, start_time,\
          duration, is_linked, b.event_id, j.booking_job_id,\
          booking_disk_quota_name, booking_source,\
          booking_job_deletion_time\
          from item i, booking_jobs j, booking_info b left outer \
          join av_content a on a.av_content_id = b.av_content_id \
          where b.event_id = i.event_id and b.booking_id = j.booking_id \
          order by ifnull(actual_start_time,trigger_time)'

1|                      // is_viewed, *prop-is-viewed*
0|                      // keep 
2|                      // booking_type, *prop-booking-type*

                        // 0| 0| 2| : Recd| PVOD|
                        //  | 0| 1| : Book| Rmd |
                        // 1| 0| 2| : Seen| Rec |
1330618680| 
1330624918| 
180013ffa4195265736964656e74204576696c3a2041667465726c696665| 
locator:3:14:1203:s4611| 
305|
33                      // *prop-booking_exception* *booking-error*
0d0013ffa419536b7920416374696f6e204844|
0| 0| 1330618620| 1:880150252| | 0| 1| 1330618800| 6000000| 0
|570449496              // EVNET ID
|687890008              // 22 BOOKING JOB ID
| 050005ffa4197573657200 | 1|0

2 keep, 
4 actual_start_time, 
5 actual_end_time, 
6 event_name, 
7 shrec_locator, 
8 logical_channel, 
10 channel_name,
11 `series_id`,               // f[10] in items.c
12 push_locator,
13 trigger_time, 
14 program_size, 
15 push_expiryend, 
16 is_disappeared,		# f[15] 
17 is_active, 
18 start_time, 
19 duration, 
20 is_linked, 
21 b.event_id, 
22 j.booking_job_id, #
23 booking_disk_quota_name, 
booking_source, 
booking_job_deletion_time from item i, 
booking_jobs j, 
booking_info b left outer join av_content a on a.av_content_id = b.av_content_id where b.event_id = i.event_id and b.booking_id = j.booking_id order by ifnull(actual_start_time,trigger_time)'



#
sqlite3 PCAT.DB 'select server_id from item i' | egrep ^[0-9] | wc -l


# 47504 is 'Series' from items.txt
#
sqlite3 PCAT.DB 'select is_viewed, keep, booking_type, actual_start_time, actual_end_time, event_name, shrec_locator, logical_channel, booking_exception, channel_name,series_id,push_locator,trigger_time, program_size, push_expiryend, is_disappeared, is_active, start_time, duration, is_linked, b.event_id, j.booking_job_id, booking_disk_quota_name, booking_source, booking_job_deletion_time 

from item i, booking_jobs j, booking_info b left outer join av_content a on a.av_content_id = b.av_content_id i

where b.event_id = i.event_id and b.booking_id = j.booking_id order by ifnull(actual_start_time,trigger_time)' | grep 47504 | cut -d'|' -f 21,22

echo "|0|2|||0a0013ffa419466f757220526f6f6d73||140|15|0c0013ffa4194368616e6e656c2034204844|47504|0|1332961020|||0|1|1332961200|3600000|1|570461760|687902272|050005ffa4197573657200|5|0" | cut -d'|' -f 22

# This query shows a table of recordings ordered by start time and their failure reasons and whether or not they are PVOD recordings:  
sqlite3 PCAT.DB 'SELECT BOOKING_INFO.AV_CONTENT_ID, LED_IS_ON, BOOKING_EXCEPTION, PARTIAL_CONTENT_STATUS, AV_CONTENT.ACTUAL_START_TIME, AV_CONTENT.ACTUAL_DURATION FROM BOOKING_INFO JOIN AV_CONTENT ON (BOOKING_INFO.AV_CONTENT_ID = AV_CONTENT.AV_CONTENT_ID) ORDER BY AV_CONTENT.ACTUAL_START_TIME'

# query for del info
#
sqlite3 PCAT.DB 'select booking_job_id, booking_time, booking_job_deletion_time, job_is_failed, booking_exception, deletion_reason from del_booking_jobs join del_booking_info on del_booking_jobs.booking_id = del_booking_info.booking_id' | cut -d'|' -f 5-6
sqlite3 PCAT.DB 'select booking_job_id, booking_time, booking_job_deletion_time, job_is_failed, booking_exception, deletion_reason 
from del_booking_jobs join del_booking_info on del_booking_jobs.booking_id = del_booking_info.booking_id' | cut -d'|' -f 5-6

# query using job id
#
sqlite3 PCAT.DB 'select j.booking_job_id, b.booking_id, b.event_id from booking_jobs j, booking_info b where b.booking_id = j.booking_id and j.booking_job_id =  687866053'
sqlite3 PCAT.DB 'select i.event_name from item i where i.event_id = 570426813' | tostr
# 
# PCAT.db
# I use the SQLite Database Browser from http://sqlitebrowser.sourceforge.net
#

<booking-jobs>
BOOKING_JOB_ID,
BOOKING_ID,           // maps to *booking-info*
REMINDER_STATUS, 
`RECORD_STATUS`,
// @brief Values describing the status of an event that was scheduled for a
// record booking.  Theses values are used for the
// #PCAT_CAT_PROP_RECORD_STATUS property
//
// typedef enum PCAT_CAT_RECORD_STATUS_{
//    PCAT_CAT_RECORD_STATUS_UNDEF=0				,			/**< @brief  No available status */
//    PCAT_CAT_RECORD_STATUS_TO_RECORD			,			/**< @brief  The program is scheduled to be recorded*/
//    PCAT_CAT_RECORD_STATUS_START_RECORDING		,			/**< @brief  The program is starting recording*/
//    PCAT_CAT_RECORD_STATUS_RECORDING			,			/**< @brief  The program is currently recording*/
//    PCAT_CAT_RECORD_STATUS_STOPPING				,           /**< @brief  The program is stopping*/
//    PCAT_CAT_RECORD_STATUS_ENDED  (5),  //  The program is ended*/
//    PCAT_CAT_RECORD_STATUS_PENDING				,			/**< @brief  The program status is not determined yet */
//    PCAT_CAT_RECORD_STATUS_LAST								/**< @brief  dummy - last enum value */
// } PCAT_CAT_RECORD_STATUS;

`RECORD_STATE`,
// @brief  Recording event states
// Theses values are used for the #PCAT_CAT_PROP_RECORD_STATE property */
//
// typedef enum PCAT_CAT_RECORD_STATE_{
//     PCAT_CAT_RECORD_STATE_UNDEF = 0 ,       /**< @brief  No available status */
//     PCAT_CAT_RECORD_STATE_PRETUNE   ,       /**< @brief  The recording is in pretune state*/
//     PCAT_CAT_RECORD_STATE_SGT       ,       /**< @brief  The recording is in start guard time state*/
//     PCAT_CAT_RECORD_STATE_SREX      ,       /**< @brief  The recording is in start recording extension state*/
//     PCAT_CAT_RECORD_STATE_BODY      ,       /**< @brief  The recording is in body state*/
//     PCAT_CAT_RECORD_STATE_EREX      ,       /**< @brief  The recording is in end recording extension state*/
//     PCAT_CAT_RECORD_STATE_EGT       ,       /**< @brief  The recording is in end guard time state*/
//     PCAT_CAT_RECORD_STATE_PAST_EGT   (7),  // The recording is in past end guard time state*/
//     PCAT_CAT_RECORD_STATE_LAST              /**< @brief  dummy - last enum value */
// 
// } PCAT_CAT_RECORD_STATE;


VRM_STATUS,		     // PCAT_CAT_VRM_RECORD_STATUS 
IS_DESTROYED, 
IS_SCHEDULED, 
RMF_JOB_HANDLE, 
JOB_IS_FAILED, 	# 0 or 1
BOOKING_TIME,
BOOKING_JOB_DELETION_TIME,
TRIGGER_TIME, 
BOOKING_JOBS_IS_TEMP, 
IS_SERIES_TRIGGERED, 
BOOKING_TYPE_REPLACEMENT_ID INTEGER , 
IS_DELETION_TIME_ARRIVED,
QUEUE_POSITION INTEGER DEFAULT '0' , DOWNLOAD_STATUS INTEGER DEFAULT '0',   IS_ACTIVE INTEGER DEFAULT 1, PUSH_IS_EXPIRY_START_TRIGGERED INTEGER DEFAULT 0, PUSH_IS_EXPIRY_END_TRIGGERED INTEGER DEFAULT 0, IS_TEMPORARY BOOLEAN DEFAULT 0, IS_IMMEDIATE BOOLEAN DEFAULT 0 ,PARTIAL_CHUNK_POLICY INTEGER DEFAULT 0, GROUP_ID INTEGER DEFAULT '0'  ,FTS3_SEARCH BOOLEAN DEFAULT 0 ,

`BOOKING_SOURCE`       // *booking-source* 
// Different booking source values for property #PCAT_CAT_PROP_BOOKING_SOURCE */
// typedef enum PCAT_CAT_BOOKING_SOURCE_
// {
//   PCAT_CAT_BOOKING_SOURCE_UNDEF = 0,  /**< @brief  No available source */
//   PCAT_CAT_BOOKING_SOURCE_USER,
//   PCAT_CAT_BOOKING_SOURCE_REMOTE,
//   PCAT_CAT_BOOKING_SOURCE_BOOKABLE_PROMOS,
//   PCAT_CAT_BOOKING_SOURCE_PUSH_SIGNUP,
//   PCAT_CAT_BOOKING_SOURCE_SERIES_SIGNUP,
//   PCAT_CAT_BOOKING_SOURCE_TIMEBASE_SIGNUP,
//   PCAT_CAT_BOOKING_SOURCE_DYNAMIC,
//   PCAT_CAT_BOOKING_SOURCE_ARR,        /**< @brief new booking source type for WP1367 - automatic recordings*/
//   PCAT_CAT_BOOKING_SOURCE_RECOMMENDED,/**< @brief new booking source for WP2185 */
//   PCAT_CAT_BOOKING_SOURCE_SIDELOAD_USER,  /**< @brief new booking source for WP3078 */
//   PCAT_CAT_BOOKING_SOURCE_SIDELOAD_AUTO,  /**< @brief new booking source for WP3078 */
//   PCAT_CAT_BOOKING_SOURCE_EPG,            /**< @brief new booking source for WP3284 */
//   PCAT_CAT_BOOKING_SOURCE_LAST  /**< @brief  dummy - last enum value */
// } PCAT_CAT_BOOKING_SOURCE;


SUB_GROUP_ID INTEGER DEFAULT 0 )


// INSERT INTO "BOOKING_JOBS" VALUES(687865990,553648262,1,0,0,1,0,0,33619991,0,1331025193,0,NULL,0,0,NULL,0,0,
// 5,	# DOWNLOAD STATUS (see Planner)
// 1,0,0,0,0,0,687865990,0,
// 1,	# PCAT_CAT_PROP_BOOKING_SOURCE. PCAT_CAT_BOOKING_SOURCE_USER(1). PCAT_CAT_BOOKING_SOURCE. (this is not an PDL indication)
// 0);


<booking-info>
BOOKING_ID,           // maps to *booking-info*
`BOOKING_TYPE`,
// @brief  Booking type enum
// Theses values are used for the #PCAT_CAT_PROP_BOOKING_TYPE property
//
// typedef enum PCAT_CAT_BOOKING_TYPE_TAG{
//     PCAT_CAT_BOOKING_TYPE_UNDEF = 0         ,   /**< @brief  No available status */
//     PCAT_CAT_BOOKING_TYPE_REMINDER          ,   /**< @brief  The booking type is Reminder*/
//     PCAT_CAT_BOOKING_TYPE_RECORD     (2),  // The booking type is Record
//     PCAT_CAT_BOOKING_TYPE_SWDL              ,   /**< @brief  The booking type is SWDL*/
//     PCAT_CAT_BOOKING_TYPE_PDL               ,   /*!< The booking type is Download.*/
//     PCAT_CAT_BOOKING_TYPE_BDL               ,   /*!< The booking type is BDL.*/
//     PCAT_CAT_BOOKING_TYPE_WISH_LIST         ,   /*!< The booking type is Wish List (WP3284)*/
//     PCAT_CAT_BOOKING_TYPE_LAST                  /**< @brief  dummy - last enum value */
// }PCAT_CAT_BOOKING_TYPE;


BASE_TYPE,			# PCAT_CAT_BASE_TYPE 
EVENT_ID
BOOKING_AUTO_SGT_MODE, 
BOOKING_AUTO_EGT_MODE, 
BOOKING_SGT, 
BOOKING_EGT, 
START_TIME_EXTENSION, 
END_TIME_EXTENSION, 
AV_CONTENT_ID,    *av-content*
IS_COMMITED, 
LED_IS_ON, 
LOCK, 
KEEP,				# PCAT_CAT_PROP_KEEP_STATUS 

`BOOKING_EXCEPTION`       // *booking-exception* `SYSTEM_EXCEPTIONS_TYPE_TAG`
                        // 100: NO_EXCEPTION

`PARTIAL_CONTENT_STATUS`, 

// "PARTIAL_CONTENT_STATUS",                                   /*PCAT_CAT_PROP_CONTENT_STATUS*/
// typedef enum PCAT_CAT_CONTENT_STATUS_TAG{
//     PCAT_CAT_CONTENT_STATUS_UNDEF = 0,  /**< @brief  No available status */
//     PCAT_CAT_CONTENT_STATUS_NO_CONTENT,
//     PCAT_CAT_CONTENT_STATUS_PARTIAL,
//     PCAT_CAT_CONTENT_STATUS_ALL,
//     PCAT_CAT_CONTENT_STATUS_PENDING ,
//     PCAT_CAT_CONTENT_STATUS_SUSPENDED , /**< @brief  added for BDL content : only part of the A/V content was recorded , not ready for playback */
//     PCAT_CAT_CONTENT_STATUS_LAST        /**< @brief  dummy - last enum value */
// }PCAT_CAT_CONTENT_STATUS;

DELETION_REASON, 
`BOOKING_DISK_QUOTA_NAME`, 
SIGNUP_JOB_ID,        *signup-jobs* 
COPY_EXTERNAL, 
COPY_FLAG_TIME_SET, 
PPC_PLAYBACK_AVAILABLE, 
BOOKED_AS_OPPV, 
BOOKING_FAVOURITE_CHANNEL, 
IS_CURRENT_SERIES, 
IS_VCR_TIMER, 
IS_PARENTAL_CONTROL_CHECKED, 
SYSTEM_SIGNUP_JOB_ID, 
BOOKING_EXCEPTION_CA_REC_PROBLEMS, 
INCOMPLETE_RECORDING_ATTEMPTS, 
COUNTER

# 	"PPC_PLAYBACK_AVAILABLE",/*PCAT_CAT_PROP_PPC_PLAYBACK_AVAILABLE*/
INSERT INTO "BOOKING_INFO" VALUES(553648262,
4,	# BOOKING TYPE: PCAT_CAT_BOOKING_TYPE_PDL
3, 	# BASE TYPE: PCAT_CAT_BASE_TYPE_DOWNLOAD_ITEM
'1056964742',NULL,NULL,NULL,NULL,0,0,'620757127i',0,2,0,0,100,3,0,'050005ffa4197573657200',0,0,0,'1',0,NULL,0,0,0,0,NULL,0,1);


<exception>
EXCEPTION_ID
BOOKING_ID,           // maps to *booking-info*
EXCEPTION_TIME
EXCEPTION_CODE


################
# ITEM         #
################
# has details about events
( EVENT_ID,  EVENT_LOCATOR, SERVICE_LOCATOR, 
START_TIME,  
EVENT_NAME BLOB, PARENTAL_RATING INTEGER DEFAULT 0, FLAG_LANGUAGE_SUBTITLE INTEGER DEFAULT 0 ,  ALLOW_COPY_TO_PLANNER BOOLEAN DEFAULT 1, EXPIRE_FROM_PLANNER BOOLEAN DEFAULT 0 ,  FLAG_HIGH_DEFINITION INTEGER DEFAULT 0,  FLAG_AUDIO_DESCRIPTION INTEGER DEFAULT 0, FLAG_COPY_PROTECTED INTEGER DEFAULT 0, MARKETING_MESSAGE VARCHAR , FLAG_WIDESCREEN INTEGER DEFAULT 0 ,AUDIO_TYPE INTEGER DEFAULT 0,   LOCAL_START_TIME INTEGER DEFAULT 0,  
DURATION, # 17th 
CHANNEL_NAME VARCHAR DEFAULT NULL,  LOGICAL_CHANNEL INTEGER DEFAULT 0,  IS_SCHEDULE_CHANGED INTEGER DEFAULT 0,  
IS_DISAPPEARED 		# PCAT_CAT_PROP_DISAPPEARED. Whether the program has disappeared from the schedule
SYNOPSIS BLOB, GENRE INTEGER DEFAULT 0,SUBGENRE INTEGER DEFAULT 0 ,IS_IPPV INTEGER DEFAULT 0 , IS_OPPV INTEGER DEFAULT 0 ,EVENT_NAME_SORT VARCHAR ,
'ENTITLEMENT_ID', 
COUNTER NUMERIC DEFAULT '0', IS_LINKED INTEGER DEFAULT '0', SERIES_ID INTEGER DEFAULT '0',ESTIMATED_BIT_RATE INTEGER , IS_ANALOG_TAPING_ALLOWED INTEGER DEFAULT '1', PURCHASE_PACKETS_INFO_ID INTEGER DEFAULT '0', IS_MONITORING_STOPPED INTEGER DEFAULT 0, STOP_MONITOR_TIME INTEGER,IS_EIT_ARRIVED INTEGER DEFAULT '0',  PUSH_PUBLISHTIME INTEGER DEFAULT NULL, PUSH_EXPIRY_START INTEGER DEFAULT NULL, PUSH_EXPIRYEND INTEGER DEFAULT NULL, PUSH_EXPIRYTIME INTEGER DEFAULT NULL,  PUSH_LOCATOR VARCHAR DEFAULT 0 ,  PUSH_HASVALIDTRAILER BOOLEAN DEFAULT 1, PUSH_TRAILERDURATION INTEGER DEFAULT 0, PUSH_TRAILEROFFSET INTEGER DEFAULT 0 ,  OIG_PROGRAMME_ID INTEGER DEFAULT 0 , ASSET_URI VARCHAR , CGMS_A INTEGER DEFAULT 0, IS_FREE_OF_CA  INTEGER DEFAULT 0 , IS_SUB INTEGER DEFAULT 0 , ASSET_TYPE INTEGER DEFAULT 0 ,EXHIBITION_DATE_TIME INTEGER DEFAULT '0' , NFF_SIZE VARCHAR ,  IS_PDL_TRAILER INTEGER DEFAULT 0, REFERER_DATA VARCHAR, PDL_RELATED_PVOD_LOCATOR VARCHAR DEFAULT 0, PARENT_SERVICE_LOCATOR VARCHAR ,TRACKING_LOCATOR VARCHAR , SERVICE_TYPE INTEGER DEFAULT '0' ,    EXTENDED_SYNOPSIS VARCHAR DEFAULT NULL ,   CE_POSITION_IN_TE INTEGER DEFAULT 0 ,EXPECTED_FILE_SIZE VARCHAR , LAST_TRANSMISSION_TIME INTEGER DEFAULT 0, DATA_CONTENT INTEGER DEFAULT 0 ,  DIGITAL_RIGHTS INTEGER DEFAULT 0 , EXPIRY_TIME INTEGER DEFAULT 0, THUMBNAIL_URI VARCHAR DEFAULT NULL,ACTORS_LIST VARCHAR DEFAULT NULL,DIRECTORS_LIST VARCHAR DEFAULT NULL, IS_DTT BOOLEAN DEFAULT '0' ,  DEFAULT_EXPIRY_TIME DEFAULT 0 , PARENTAL_RATING_DEFAULT_NULL INTEGER DEFAULT NULL,CHANNEL_LOGO_URI VARCHAR , IS_ADULT BOOLEAN DEFAULT 0,SEASON_NUMBER  INTEGER DEFAULT 0 ,EPISODE_NUMBER INTEGER DEFAULT 0,FIRST_SHOWING INTEGER DEFAULT 0,CRID VARCHAR ,  PARENTAL_RATING_SCHEMA INTEGER, THREED_VIDEO_FORMAT BOOLEAN DEFAULT 0 ,  IN_PTS INTEGER DEFAULT NULL , OUT_PTS INTEGER DEFAULT NULL , GROUP_SYSTEM_LOCATOR VARCHAR DEFAULT NULL, MEMBER_NUMBER INTEGER DEFAULT 0 );

INSERT INTO "ITEM" VALUES(1056964742,'locator:2:17:FFFC9472',NULL,NULL,'1c0413ffa4190000001b546f6d6f72726f772c205768656e205468652057617220426567616e',0,0,1,0,0,0,0,'000013ffa419',1,5,0,
5940000,	# DURATION
'0a0013ffa419536b79204d6f76696573',
0,	# LOGICAL CHANNEL
0,0,'bd0013ffa419412067726f7570206f6620417573736965207465656e732067657420686f6d652066726f6d20612063616d70696e6720686f6c6964617920746f2066696e642074686520636f756e74727920686173206265656e20696e766164656420627920616e20656e656d792061726d792e20546872696c6c696e6720616476656e74757265207769746820436169746c696e2053746173657920616e642052616368656c20487572642d576f6f642e2028323031302928313030206d696e7329',6,1537,0,0,'1c0013ffa419546f6d6f72726f772c205768656e205468652057617220426567616e',0,1,0,0,5767168,1,1006633093,0,NULL,0,NULL,NULL,NULL,NULL,'0',1,0,0,-224142,
'http://cdn.sky.com/60443/bsky_skymovies/MOVIE/bsky_skymovies-MAIN0000000000174170-201112310752010000.nff',	# ASSET URI
0,0,1,0,1329501600,'0:972440177',0,'070005ffa419434154414c4f47','locator:5:18:0',NULL,NULL,0,NULL,0,NULL,0,0,0,0,NULL,NULL,NULL,0,0,3,NULL,0,0,0,0,NULL,NULL,0,NULL,NULL,NULL,0);


<av-content>
// Holds information about content ( file, size, ..). Represent a vfile in MFS

AV_CONTENT_ID,    *av-content*
INTEGER PRIMARY KEY  UNIQUE, FILE_START_POSITION VARCHAR DEFAULT '0:0',  ACTUAL_START_TIME INTEGER DEFAULT '0',  
ACTUAL_DURATION,  
PROGRAM_SIZE VARCHAR DEFAULT '0:0',   VFILE_LOCATOR VARCHAR NOT NULL UNIQUE ,  SHREC_LOCATOR VARCHAR , 
`IS_VIEWED`         // *prop-is-viewed* `PCAT_CAT_PROP_IS_VIEWED` bool type
LAST_POSITION,
HEADEND_CONTENT_SIZE VARCHAR , INDEX_IMPORT_STATUS INTEGER DEFAULT '0',  CONTENT_IMPORT_STATUS INTEGER DEFAULT '0', IMPORT_SESSION_STATUS INTEGER DEFAULT '0',  IS_LEGACY_CONTENT INTEGER DEFAULT '0', ACTUAL_END_TIME INTEGER DEFAULT '0', LOCAL_ACTUAL_START_TIME INTEGER DEFAULT '0', LOCAL_ACTUAL_END_TIME INTEGER DEFAULT '0', 	 CONTENT_DISK_UID VARCHAR  , CA_COMP_INFO VARCHAR,VFILE_LOCATOR_TYPE INTEGER DEFAULT '21',  PMT_DATA VARCHAR ,CONTENT_DRM_EXP_TIME INTEGER DEFAULT 0, COUNTER INTEGER DEFAULT 0 );


INSERT INTO "AV_CONTENT" VALUES(620757127,'0:0',1331025198,6026423,'0:972284864','locator:3:15:5000000F:v1342177295s14','locator:3:14:E:s14',0,'0:0','0:972285052',3,3,3,0,1331025762,1331025198,1331025762,'00000000000000000000000000000000',NULL,21,NULL,0,1);


<signup-jobs> *series-link*
TABLE SIGNUP_JOBS 
(SIGNUP_JOB_ID INTEGER PRIMARY KEY , SIGNUP_URI VARCHAR ,  SIGNUP_TYPE INTEGER DEFAULT 0 ,SIGNUP_TIMEBASE_FREQUENCY INTEGER DEFAULT 0, SIGNUP_JOBS_IS_TEMP INTEGER DEFAULT 1, SIGNUP_EXPIRATION_TIME INTEGER, SIGNUP_IS_USER_DELETED INTEGER DEFAULT 0, SIGNUP_KEEP_STATUS INTEGER DEFAULT 0, SIGNUP_LOCK_STATUS INTEGER DEFAULT 0, SIGNUP_BOOKING_TYPE INTEGER DEFAULT 0, SIGNUP_DISK_QUOTA_NAME VARCHAR, SIGNUP_BOOKING_DELETION_CRITERIA INTEGER DEFAULT 0, SIGNUP_DONT_BOOK_CRITERIA INTEGER DEFAULT 0, SIGNUP_AUTO_SGT_MODE INTEGER DEFAULT 0, SIGNUP_AUTO_EGT_MODE INTEGER DEFAULT 0, SIGNUP_SGT_ON INTEGER DEFAULT 0, SIGNUP_EGT_ON INTEGER DEFAULT 0, SIGNUP_LEGACY_HANDLE_ID INTEGER DEFAULT '0', SIGNUP_RECORD_LED_POLICY INTEGER DEFAULT 0 , SIGNUP_START_TIME INTEGER , SIGNUP_PARTIAL_CHUNK_POLICY INTEGER DEFAULT 0, SIGNUP_IS_VCR_TIMER BOOLEAN DEFAULT 0 , SINGLE_CHANNEL INTEGER DEFAULT 0, SERIES_SERVICE VARCHAR, SERIES_BOOKING_TYPE INTEGER DEFAULT 0,  SIGNUP_ARR_LIST_ID INTEGER DEFAULT 0,SIGNUP_PROFILE_ID VARCHAR, SIGNUP_SHOW_ID INTEGER ,  SIGNUP_FILTER1 INTEGER DEFAULT 0, SIGNUP_FILTER2 INTEGER DEFAULT 0, SIGNUP_FILTER3 INTEGER DEFAULT 0, SIGNUP_FILTER4 INTEGER DEFAULT 0, SIGNUP_FILTER5 INTEGER DEFAULT 0, SIGNUP_FILTER_MODE INTEGER DEFAULT 0, SIGNUP_SUB_TYPE INTEGER DEFAULT 0, 
 SIGNUP_SERIES_ID INTEGER, *series-id* 
 SIGNUP_START_GUARD_TIME INTEGER, SIGNUP_END_GUARD_TIME INTEGER, SIGNUP_OVERRIDE_GT_SETTINGS BOOLEAN DEFAULT 0,  SIGNUP_PERMANENT_SERIES_ID INTEGER DEFAULT 0, SIGNUP_SHOW_TITLE VARCHAR, SIGNUP_SEASON_TITLE VARCHAR, SIGNUP_SEASON_SORT_TITLE VARCHAR, SIGNUP_NEXT_EPISODE_NUMBER INTEGER,  SIGNUP_LAST_BOOKED_EVENT_SERVICE_LOCATOR VARCHAR, SIGNUP_LAST_BOOKED_EVENT_CHANNEL_NAME VARCHAR, SIGNUP_LAST_BOOKED_EVENT_START_TIME INTEGER,  SIGNUP_LAST_BOOKED_EVENT_LOCAL_START_TIME INTEGER, SIGNUP_LAST_BOOKED_EVENT_NAME VARCHAR, SIGNUP_LAST_SERIES_EVENT_BOOKED BOOLEAN DEFAULT 0, SIGNUP_IS_PSL_TRIGGERED BOOLEAN DEFAULT 0, SIGNUP_PARENTAL_RATING INTEGER, SIGNUP_SYNOPSIS VARCHAR, SIGNUP_IS_BTO BOOLEAN DEFAULT 0, SIGNUP_SOURCE_LOCATOR VARCHAR, SIGNUP_TITLE VARCHAR, SIGNUP_SORT_TITLE VARCHAR, SIGNUP_CHANNEL_NAME VARCHAR, SIGNUP_IS_DOWNLOAD_ALL BOOLEAN DEFAULT 0, SIGNUP_PREFERRED_FORMAT INTEGER DEFAULT 0, SIGNUP_REFERER_DATA VARCHAR, SIGNUP_IS_HELP_VIDEO BOOLEAN DEFAULT 0, SIGNUP_RESOURCE_LOCATOR1 VARCHAR DEFAULT NULL, SIGNUP_RESOURCE_LOCATOR2 VARCHAR DEFAULT NULL, SIGNUP_RESOURCE_BLOB1 BLOB DEFAULT NULL)


// when books a series event, moves down and select "books series" option.
!MIL    -aem          		< p:0x00000255 P:APP t:0x013df520 T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(RECORD)e403 
!MIL    -EPG_MISC     		< p:0x00000255 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "KeyPressRemote",
  "action": "RECORD","title": "Key Press RECORD","label": "","currentscreen": "Entering grid: //TV Guide/All Channels"}

// no pause when no series link
!MIL    -EPG_BOOK     		< p:0x00000255 P:APP t:0x2bfeb520 T:no name M:BookingActivity F:`pause` L:475 > T:CEE-J EventQueue Reader 0:pause activity (aIv@59af2c6) by aLv@5aadfbf
!MIL    -aem          		< p:0x00000255 P:APP t:0x013df520 T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(DOWN)e101 
!MIL    -aem          		< p:0x00000255 P:APP t:0x013df520 T:AEM_INPUT_MONITOR_THREAD M:aem_gfxevent.c F:AEM_GFXEvent L:245 > KEY_PRESS: code=0x(SELECT)e001 
!MIL    -EPG_BOOK     		< p:0x00000255 P:APP t:0x2bfeb520 T:no name M:BookingActivity F:`restart` L:253 > T:CEE-J EventQueue Reader 0:restart activity (aIv@59af2c6)
!MIL    -EPG_MISC     		< p:0x00000255 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "LinearAction",
  "action": "LINEAR_BOOK_RECORD_SERIES_LINK","title": "SeriesLink","label": "LINEAR_SERIES_LINK;title=CSI: Crime Scene Investigation;uuid=","currentscreen": "Entering grid: //TV Guide/All Channels"}

// jpa/modules/jpa-api/src/java/com/nds/fusion/planner/PlannerAddBookedProgrammeListener.java
// No prop id.  EPG calls PlannerSession.addScheduledBookedProgramme() and
// gets a callback if a series link option exists.  EPG must then respond
// saying whether to book single or series.
public interface PlannerAddBookedProgrammeListener
{
    /**
     * Notify the successful completion of operation.
     * @param object The reference of the {@link PlannerBookedProgramme} just retrieved.
     * The user must set the object to null when done with it. This is to prevent the
     * resources from being unnecessarily tied up and to enable garbage collection.
     * @param completionStatus {@link PlannerStatus} indicating success or failure. If the completion
     * status is {@link PlannerStatus#PLANNER_OK} then the booking has been made successfully. 
     *
     * If the status is {@link PlannerStatus#`SERIES_LINK`} then the booked
     * programme object passed back in is a {@link
     * PlannerScheduledBookedProgramme} and the user must call {@link
     * PlannerScheduledBookedProgramme#setSeriesLink} on this object to
     * complete the booking.  This will cause the listener to be triggered
     * again with the status {@link PlannerStatus#PLANNER_OK}.
     *
     * If the status is {@link PlannerStatus#PURCHASE_REQUIRED} then the user
     * must call either {@link PlannerBookedProgramme#storePurchase} to
     * purchase the programme now or {@link
     * PlannerBookedProgramme#continueBooking} to continue with the booking
     * without purchasing it (the booking will then need to be purchased
     * before viewing). The listener will then be triggered again with the
     * status {@link PlannerStatus#PLANNER_OK}.  For completion statuses of
     * {@link PlannerStatus#SERIES_LINK} or {@link
     * PlannerStatus#PURCHASE_REQUIRED} the booking can be cancelled by
     * calling {@link PlannerBookedProgramme#removeBookedProgramme}.  In this
     * case the {@link PlannerRemoveBookedProgrammeListener} passed to {@link
     * PlannerBookedProgramme#removeBookedProgramme} is not triggered (and it
     * is best just to pass in null), but the {@link #notifyFailure} method of
     * this listener is triggered, with completion status {@link
     * PlannerStatus#BOOKING_FAILED}.
     */
    void notifySuccess(PlannerBookedProgramme object, int completionStatus);

    /**
     * Notify completion of operation.
     * @param completionStatus {@link PlannerStatus} indicating success or failure.
     */
     void notifyFailure(int completionStatus);
}


<del-booking-jobs>
DEL_BOOKING_JOBS
(
BOOKING_JOB_ID INTEGER PRIMARY KEY,
BOOKING_ID INTEGER,  
REMINDER_STATUS INTEGER NOT NULL DEFAULT '1',
RECORD_STATUS INTEGER NOT NULL DEFAULT '0',
RECORD_STATE INTEGER  DEFAULT '0',  # typedef enum PCAT_CAT_RECORD_STATE_{
VRM_STATUS INTEGER  DEFAULT '1',    # typedef enum PCAT_CAT_VRM_RECORD_STATUS_{
IS_DESTROYED INTEGER DEFAULT '0',  IS_SCHEDULED INTEGER DEFAULT '0',  RMF_JOB_HANDLE INTEGER,  
JOB_IS_FAILED 		# PCAT_CAT_PROP_IS_FAILED. BOOL
BOOKING_TIME INTEGER DEFAULT '0',BOOKING_JOB_DELETION_TIME INTEGER DEFAULT '0' ,TRIGGER_TIME INTEGER ,  BOOKING_JOBS_IS_TEMP INTEGER DEFAULT 1, IS_SERIES_TRIGGERED INTEGER  NOT NULL DEFAULT '0', BOOKING_TYPE_REPLACEMENT_ID INTEGER , IS_DELETION_TIME_ARRIVED INTEGER NOT NULL DEFAULT '0' , QUEUE_POSITION INTEGER DEFAULT '0' , DOWNLOAD_STATUS INTEGER DEFAULT '0',    IS_ACTIVE INTEGER DEFAULT 1,  PUSH_IS_EXPIRY_START_TRIGGERED INTEGER DEFAULT 0, PUSH_IS_EXPIRY_END_TRIGGERED INTEGER DEFAULT 0, IS_TEMPORARY BOOLEAN DEFAULT 0, IS_IMMEDIATE BOOLEAN DEFAULT 0 ,PARTIAL_CHUNK_POLICY DEFAULT 0, GROUP_ID INTEGER DEFAULT '0'  ,FTS3_SEARCH BOOLEAN DEFAULT 0  ,
BOOKING_SOURCE INTEGER DEFAULT 0 ,  # typedef enum PCAT_CAT_BOOKING_SOURCE_ 
SUB_GROUP_ID INTEGER DEFAULT 0 );

INSERT INTO "DEL_BOOKING_JOBS" VALUES(687865875,553648147,1,5,4,2,1,0,0,0,1332167043,1332719998,1332167220,0,0,NULL,0,0,0,1,0,0,0,0,0,687865875,0,1,0);


################
# DEL_BOOKING_INFO #
################
(BOOKING_ID INTEGER PRIMARY KEY UNIQUE,  BOOKING_TYPE INTEGER NOT NULL DEFAULT '0',  BASE_TYPE INTEGER NOT NULL DEFAULT '0',  EVENT_ID INTEGER  NOT NULL DEFAULT '0', BOOKING_AUTO_SGT_MODE  INTEGER  ,  BOOKING_AUTO_EGT_MODE  INTEGER,BOOKING_SGT  INTEGER  ,BOOKING_EGT INTEGER , START_TIME_EXTENSION INTEGER  DEFAULT '0',  END_TIME_EXTENSION INTEGER  DEFAULT '0',AV_CONTENT_ID INTEGER DEFAULT '0',IS_COMMITED INTEGER DEFAULT '0' ,LED_IS_ON INTEGER DEFAULT '2', LOCK INTEGER DEFAULT '0',  KEEP INTEGER DEFAULT '0' ,
BOOKING_EXCEPTION,		# Note that there's the same in BOOKING_INFO 
PARTIAL_CONTENT_STATUS DEFAULT '1',  
DELETION_REASON
BOOKING_DISK_QUOTA_NAME VARCHAR  ,SIGNUP_JOB_ID INTEGER  NOT NULL DEFAULT '0', COPY_EXTERNAL INTEGER DEFAULT '0', COPY_FLAG_TIME_SET INTEGER DEFAULT '0',BOOKED_AS_OPPV BOOLEAN DEFAULT 0,  PPC_PLAYBACK_AVAILABLE INTEGER DEFAULT '0',  BOOKING_FAVOURITE_CHANNEL INTEGER,   IS_CURRENT_SERIES BOOLEAN DEFAULT 0 , IS_VCR_TIMER BOOLEAN DEFAULT 0, IS_PARENTAL_CONTROL_CHECKED BOOLEAN DEFAULT 0, SYSTEM_SIGNUP_JOB_ID INTEGER NOT NULL DEFAULT '0',  BOOKING_EXCEPTION_CA_REC_PROBLEMS BLOB DEFAULT NULL , INCOMPLETE_RECORDING_ATTEMPTS INTEGER DEFAULT 0,COUNTER INTEGER DEFAULT 1 );

INSERT INTO "DEL_BOOKING_INFO"
"DELETION_REASON",	/*PCAT_CAT_PROP_DELETION_REASON*/ SYSTEM_EXCEPTION_TYPE_BOOKING_EXPIRED (37) # SRM set
VIEWER_BOOKING_DELETED = 8;
INSUFFICIENT_DISK_SPACE = 11;
UNKNOWN_ERROR = 28;


################
# ENTITLEMENT #
################
ITEM_AND_ENTITLEMENT(EVENT_ID,ENTITLEMENT_ID);

ENTITLEMENT(
ENTITLEMENT_ID INTEGER PRIMARY KEY ,  
ENTITLEMENT_PURCHASE_RECEIPT VARCHAR  NOT NULL , 
ENTITLEMENT_PURCHASE_MODEL INTEGER,
ENTITLEMENT_RENTAL_DURATION INTEGER,  
ENTITLEMENT_EED INTEGER DEFAULT 0 ,
ENTITLEMENT_MED INTEGER DEFAULT 0,
ENTITLEMENT_IS_CA_VIEWED INTEGER , # BOOL 
ENTITLEMENT_IS_VALID INTEGER DEFAULT 1, 
ENTITLEMENT_IS_CANCELLED INTEGER DEFAULT 0, 
ENTITLEMENT_CARD_ID INTEGER DEFAULT 0,  
LEGACY_PPVMAN_ID INTEGER DEFAULT 0, 
EVENT_ID INTEGER DEFAULT 0, 
PURCHASE_PACKETS_INFO_ID INTEGER DEFAULT 0 , 
PURCHASE_DATE INTEGER DEFAULT NULL);


<db-and-pcat>
// pcatp_api.c
// to see a mapping between names in DB and PCAT_CAT_
static const char* pcat_cat_property_name[] =

all_obj_prop_array[] = 
{
	{		
		PCAT_CAT_OBJECT_TYPE_BOOKING,
			/*object_key*/
			"BOOKING_ID",
			/*table name*/
			"BOOKING_INFO",
		{/*key properties*/
			PCAT_CAT_PROP_BOOKING_TYPE,PCAT_CAT_PROP_ITEM_OBJECT_ID, PCAT_CAT_PROP_BASE_TYPE,PCAT_VIEW_PROP_UNDEF
		},
		{/*mandatory properties*/
			PCAT_CAT_PROP_BOOKING_TYPE,PCAT_CAT_PROP_ITEM_OBJECT_ID, PCAT_CAT_PROP_BASE_TYPE,PCAT_VIEW_PROP_UNDEF
			},
			{/*all prop*/
				PCAT_CAT_PROP_BASE_TYPE,PCAT_CAT_PROP_BOOKING_TYPE,
					PCAT_CAT_PROP_ITEM_OBJECT_ID,PCAT_CAT_PROP_TIMEBASE_OBJECT_ID,PCAT_CAT_PROP_AUTO_SGT_MODE,PCAT_CAT_PROP_AUTO_EGT_MODE,
					PCAT_CAT_PROP_BOOKING_START_GUARD_DURATION,PCAT_CAT_PROP_BOOKING_END_GUARD_DURATION,
					PCAT_CAT_PROP_START_EXTENSION_DURATION,PCAT_CAT_PROP_END_EXTENSION_DURATION,PCAT_CAT_PROP_AVCONTENT_OBJECT_ID,
					PCAT_CAT_PROP_KEEP_STATUS,PCAT_CAT_PROP_LOCK_STATUS,PCAT_CAT_PROP_RECORD_LED_POLICY,
					PCAT_CAT_PROP_EXCEPTION,PCAT_CAT_PROP_CONTENT_STATUS,PCAT_CAT_PROP_DELETION_REASON,PCAT_CAT_PROP_BOOKING_DISK_QUOTA_NAME,
					PCAT_CAT_PROP_USER_SIGNUP_JOB_OBJECT_ID,PCAT_CAT_PROP_SYSTEM_SIGNUP_JOB_OBJECT_ID,PCAT_CAT_PROP_COPY_EXTERNAL,
					PCAT_CAT_PROP_PPC_PLAYBACK_AVAILABLE,PCAT_CAT_PROP_DOWNLOAD_ITEM_OBJECT_ID,PCAT_CAT_PROP_BOOKED_AS_OPPV,
#ifdef PVR_PIN_ON_SERVICE_BLOCKED_AT_RECORD_TIME
					PCAT_CAT_PROP_SERVICE_LOCK_STATUS,
#endif
#ifdef PCAT_FAVOURITE_CHANNEL_PROPERTY
					PCAT_CAT_PROP_FAVOURITE_CHANNEL,
#endif /*PCAT_FAVOURITE_CHANNEL_PROPERTY*/
					PCAT_CAT_PROP_IS_CURRENT_SERIES, PCAT_CAT_PROP_IS_VCR_TIMER,PCAT_CAT_PROP_IS_PARENTAL_CONTROL_CHECKED,
					PCAT_CAT_PROP_BOOKING_EXCEPTION_CA_REC_PROBLEMS,PCAT_CAT_PROP_BDL_ITEM_OBJECT_ID,PCAT_CAT_PROP_CONTENT_INCOMPLETE_RECORDING_ATTEMPTS,
					PCAT_VIEW_PROP_UNDEF
			}

	},
}


PCAT_VIEW_SRV_InsertBookingJob
	DBVIEW_InsertBookingJob
		DBVIEW_Insert
			DbviewBuildInsertBookingStmt
				PCATP_ConvertProp
					PCATP_ConvertPropStr

(pcatp_api.c)
static const char* pcat_cat_pdl_property_name[] =

static const char* pcatp_property_name[] =
{
	UNDEFINED_PROP_STRING,
	"LOGICAL_CHANNEL",/*PCAT_CAT_PROP_LOGICAL_CHANNEL*/
	"CHANNEL_NAME",/*PCAT_CAT_PROP_CHANNEL_NAME*/
	"LED_IS_ON",/*PCAT_CAT_PROP_RECORD_LED_POLICY*/
	"IS_VIEWED",/*PCAT_CAT_PROP_IS_VIEWED*/
	"LAST_POSITION",								/*PCAT_CAT_PROP_LAST_PLAYBACK_POSITION*/
	"BOOKMARK_ABSOLUTE_POSITION",/*PCAT_CAT_PROP_BOOKMARK_ABSOLUTE_POSITION*/
	"SUB_64_BYTES( BOOKMARK_ABSOLUTE_POSITION, FILE_START_POSITION )",/*PCAT_CAT_PROP_BOOKMARK_RELATIVE_OFFSET*/
	"SUB1_64_BYTES( LAST_POSITION, FILE_START_POSITION )",/*PCAT_CAT_PROP_PLAYBACK_POSITION_RELATIVE_OFFSET*/
	"GENRE",/*PCAT_CAT_PROP_GENRE*/
	"SUBGENRE",/*PCAT_CAT_PROP_SUBGENRE*/
	"IS_IPPV",/*PCAT_CAT_PROP_IS_IPPV*/
	"IS_OPPV",/*PCAT_CAT_PROP_IS_OPPV*/
	"COPY_EXTERNAL",/*PCAT_CAT_PROP_COPY_EXTERNAL*/
	"EVENT_NAME_SORT",/*PCAT_CAT_PROP_EVENT_NAME_SORT*/
	UNDEFINED_PROP_STRING,/*PCAT_CAT_PROP_IS_COLLAPSED_LIST - virtual prop*/
	"ENTITLEMENT_PURCHASE_RECEIPT",/*PCAT_CAT_PROP_ENTITLEMENT_PURCHASE_RECEIPT*/
	"ENTITLEMENT_PURCHASE_MODEL",/*PCAT_CAT_PROP_ENTITLEMENT_PURCHASE_MODEL*/
	"ENTITLEMENT_RENTAL_DURATION",/*PCAT_CAT_PROP_ENTITLEMENT_RENTAL_DURATION*/
	"ENTITLEMENT_EED",/*PCAT_CAT_PROP_ENTITLEMENT_EED*/
	"ENTITLEMENT_MED",/*PCAT_CAT_PROP_ENTITLEMENT_MED*/
	"ENTITLEMENT_IS_CA_VIEWED",/*PCAT_CAT_PROP_ENTITLEMENT_IS_CA_VIEWED*/
	"ENTITLEMENT_IS_VALID",/*PCAT_CAT_PROP_ENTITLEMENT_IS_VALID*/
	"ENTITLEMENT_IS_CANCELLED",/*PCAT_CAT_PROP_ENTITLEMENT_IS_CANCELLED*/
	"ENTITLEMENT_CARD_ID",/*PCAT_CAT_PROP_ENTITLEMENT_CARD_ID*/
	"ENTITLEMENT_ID",/*PCAT_CAT_PROP_ENTITLEMENT_OBJECT_ID*/
	"SIGNUP_RECORD_LED_POLICY",/*PCAT_CAT_PROP_SIGNUP_RECORD_LED_POLICY*/
	"ESTIMATED_BIT_RATE",/*PCAT_CAT_PROP_ESTIMATED_BIT_RATE*/
	"PURCHASE_PACKETS_INFO_ID",/*PCAT_CAT_PROP_PURCHASE_PACKETS_INFO_OBJECT_ID*/
	"PURCHASE_PACKETS",/*PCAT_CAT_PROP_PURCHASE_PACKETS*/
	UNDEFINED_PROP_STRING,/*PCAT_CAT_PROP_PURCHASE_PACKETS_INFO_FED*/
	UNDEFINED_PROP_STRING,/*PCAT_CAT_PROP_PURCHASE_PACKETS_INFO_MED*/
	"PURCHASE_PACKETS_RENTAL_FLAG",/*PCAT_CAT_PROP_PURCHASE_PACKETS_INFO_RENTAL_FLAG*/
	"IS_DELETION_TIME_ARRIVED",/*PCAT_CAT_PROP_IS_DELETION_TIME_ARRIVED*/
	UNDEFINED_PROP_STRING, /*was PCAT_CAT_PROP_BOOKING_TYPE_REPLACEMENT_BOOKING_ID*/									 
	"PUSH_PUBLISHTIME", /*PCAT_CAT_PROP_PUSH_PUBLISHTIME*/
	"PUSH_EXPIRY_START", /*PCAT_CAT_PROP_PUSH_EXPIRYSTART*/
	"PUSH_EXPIRYEND", /*PCAT_CAT_PROP_PUSH_EXPIRYEND*/
	"PUSH_LOCATOR",	/*PCAT_CAT_PROP_PUSH_LOCATOR*/
	"PUSH_EXPIRYTIME", /*PCAT_CAT_PROP_PUSH_EXPIRYTIME*/
	"PUSH_HASVALIDTRAILER",/*PCAT_CAT_PROP_PUSH_HASVALIDTRAILER*/
	"PUSH_TRAILERDURATION",/*PCAT_CAT_PROP_PUSH_TRAILERDURATION*/
	"PUSH_TRAILEROFFSET",/*PCAT_CAT_PROP_PUSH_TRAILEROFFSET*/
	"BOOKED_AS_OPPV",/*PCAT_CAT_PROP_BOOKED_AS_OPPV*/
	"PURCHASE_PACKETS_CA_EXPIRATION_TIME",/*PCAT_CAT_PROP_PURCHASE_PACKETS_CA_EXPIRATION_TIME*/
	"PARENT_SERVICE_LOCATOR",/*PCAT_CAT_PROP_PARENT_SERVICE_LOCATOR*/
	"IS_ANALOG_TAPING_ALLOWED", /*PCAT_CAT_IS_ANALOG_TAPING_ALLOWED */
	"TRACKING_LOCATOR",/*PCAT_CAT_PROP_TRACKING_LOCATOR*/
	"PUSH_IS_EXPIRY_START_TRIGGERED",/*PCAT_CAT_PROP_PUSH_IS_EXPIRY_START_TRIGGERED*/
	"PUSH_IS_EXPIRY_END_TRIGGERED",/*PCAT_CAT_PROP_PUSH_IS_EXPIRY_END_TRIGGERED*/
	"SERVICE_TYPE",/*PCAT_CAT_PROP_SERVICE_TYPE*/
	UNDEFINED_PROP_STRING, /*PCAT_CAT_PROP_COLLAPSED_LIST_STATUS, virtual prop*/
	UNDEFINED_PROP_STRING, /*PCAT_CAT_PROP_COLLAPSED_LIST_ITEMS_IN_GROUP, virtual prop*/
	UNDEFINED_PROP_STRING, /*PCAT_CAT_PROP_COLLAPSED_LIST_VIEWED_ITEMS_IN_GROUP, virtual prop*/
	"ALLOW_COPY_TO_PLANNER", /*PCAT_CAT_PROP_ALLOW_COPY_TO_PLANNER*/
	"EXPIRE_FROM_PLANNER", /*PCAT_CAT_PROP_EXPIRE_FROM_PLANNER*/
#ifndef PVR_PIN_ON_SERVICE_BLOCKED_AT_RECORD_TIME
	UNDEFINED_PROP_STRING,
#else
	"SERVICE_LOCK_STATUS",/*PCAT_CAT_PROP_SERVICE_LOCK_STATUS*/
#endif
#if (defined(SRM_ELEMENTARY_STREAMS_SELECTION_B) || defined(SRM_ELEMENTARY_STREAMS_SELECTION_D ))
	"AUDIO_STREAMS_NUMBER",/*PCAT_CAT_PROP_AUDIO_STREAMS_NUMBER*/
	"IS_DOLBY_DIGITAL_EXISTS",/*PCAT_CAT_PROP_IS_DOLBY_DIGITAL_EXISTS*/
#else
	UNDEFINED_PROP_STRING, /*PCAT_CAT_PROP_AUDIO_STREAMS_NUMBER*/
	UNDEFINED_PROP_STRING, /*PCAT_CAT_PROP_IS_DOLBY_DIGITAL_EXISTS*/
#endif
	UNDEFINED_PROP_STRING, /* PCAT_CAT_PROP_COLLAPSED_LIST_DISK_USAGE, virtual prop */

	UNDEFINED_PROP_STRING /* PCAT DARWIN PROP */
};

static const char* pcat_cat_property_name[] =
{
		UNDEFINED_PROP_STRING,
		"EVENT_LOCATOR",/*PCAT_CAT_PROP_EVENT_LOCATOR*/
		"SERVICE_LOCATOR",/*PCAT_CAT_PROP_SERVICE_LOCATOR*/
		"START_TIME",/*PCAT_CAT_PROP_START_TIME*/
		"LOCAL_START_TIME",/*PCAT_CAT_PROP_LOCAL_START_TIME*/
		"TRIGGER_TIME",/*PCAT_CAT_PROP_TRIGGER_TIME*/
		"DURATION",/*PCAT_CAT_PROP_DURATION*/ # PLANNER_API_BOOKEDPROG_PROPID_UINT32_DURATION. Scheduled duration of program (in milsec)
		"ACTUAL_DURATION",/*PCAT_CAT_PROP_ACTUAL_DURATION*/
}

// *prop-booking-type*
typedef enum PCAT_CAT_BOOKING_TYPE_TAG{

	PCAT_CAT_BOOKING_TYPE_UNDEF = 0			,   /**< @brief  No available status */
	PCAT_CAT_BOOKING_TYPE_REMINDER			,	/**< @brief  The booking type is Reminder*/
	PCAT_CAT_BOOKING_TYPE_RECORD			,	/**< @brief  The booking type is Record*/ # this is for PVOD
	PCAT_CAT_BOOKING_TYPE_SWDL				,	/**< @brief  The booking type is SWDL*/				
	PCAT_CAT_BOOKING_TYPE_PDL				,	/*!< The booking type is Download.*/ 
	PCAT_CAT_BOOKING_TYPE_BDL				,	/*!< The booking type is BDL.*/ 
	PCAT_CAT_BOOKING_TYPE_LAST					/**< @brief  dummy - last enum value */

}PCAT_CAT_BOOKING_TYPE;

typedef enum PCAT_CAT_BASE_TYPE_TAG{

	PCAT_CAT_BASE_TYPE_UNDEF = 0		,	/**< @brief  No available status */
	PCAT_CAT_BASE_TYPE_TIME				,   /**< @brief  The base type of the booking is time-based*/
	PCAT_CAT_BASE_TYPE_SCHED_EVENT		,   /**< @brief  The base type of the booking is event-based*/
	PCAT_CAT_BASE_TYPE_DOWNLOAD_ITEM	,	/*!< The base type of the booking is download.*/
	PCAT_CAT_BASE_TYPE_LAST					/**< @brief  dummy - last enum value */

}PCAT_CAT_BASE_TYPE;


{pcat-debug}

note:
the majority of the value lists were allocated to send notification data.
Planner should be freeing the notification value lists. Often some value lists
are not freed due to Picasso holding on to Planner handles.

Planner will be deleting the PCAT value lists when planner have processed the
notifications. 


<where-to-define>
define in pcat/src/common/interface/makefile

ONLY use this makefile otherwise will get build errors saying there're
redefinitions.

`PCAT_ENABLE_EXTRA_VL_DEBUG` to get thread id and creation times of VL. 
`PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG` to show client view filter and sort types in logging.  
`PCAT_LOG_POSSIBLE_VL_LEAKS` to show VL allocations longer than 5 mins as possible leaks.

COMPONENT_CC_DEFINES :=PCAT_ENABLE_EXTRA_VLDEBUG
COMPONENT_CC_DEFINES +=PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
COMPONENT_CC_DEFINES +=PCAT_LOG_POSSIBLE_VL_LEAKS                             

CMS_INFORMATION_SERVICES/PCAT/src/common/interface/makefile:75:#COMPONENT_CC_DEFINES += PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/pcat_view_clnt.c:736:#ifdef PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/pcat_view_clnt.c:746:#endif /* PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG */
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/value_list_man_clnt.c:2657: define PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG to show client view filter and sort types in logging.
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/value_list_man_clnt.c:2796:#ifdef PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/value_list_man_clnt.c:2799:#endif /* PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG */
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.c:117:    #ifdef PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.c:120:    #endif /* PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG */
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.c:213:#ifdef PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.c:216:#endif /* PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG */
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.h:46:#ifdef PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG
CMS_INFORMATION_SERVICES/PCAT/src/common/interface/view_man_clnt.h:49:#endif /* PCAT_ENABLE_EXTRA_CLIENT_VIEW_DEBUG */


<pcat-config> pcat_db.cfg

[VIEWS_LIMITATION]
MAX_VIEWS=200
[VL_LIMITATION]
MAX_VL=100 # gMaxValueList


// 
PCAT_VIEW_VL_Create
  `PCAT_VIEW_VL_LOG_ALLOC_VL`
  PCAT_VIEW_VL_LogAllocVL

//
PCAT_AllocStaticP_DBG
  !ERROR  -PCATC < p:0x00000000 P: t:0x2b33f520 T:PCAT_PROXY_THREAD M:pcat_misc.c 
    F:PCAT_AllocStaticP_DBG L:420 > not enough memory: size=4, called from M=pcat_serialize_structs.c, F=PCAT_SERIALIZE_deserialize_PropValue, L=211 

  `PCAT_VIEW_VL_LOG_ALLOC_VL`(PCAT_VIEW_STATUS_NOT_ENOUGH_MEMORY);
  #define PCAT_VIEW_VL_LOG_ALLOC_VL(status) PCAT_VIEW_VL_LogAllocVL((status))


// CMS_INFORMATION_SERVICES/PCAT/src/common/interface/value_list_man_clnt.c
void `PCAT_VIEW_VL_LogAllocVL`(SYSTEM_STATUS result_status);

// start line of this list
!WARN   -PCATC        		< T:no name M:value_list_man_clnt.c 
  F:PCAT_VIEW_VL_LogAllocVL L:2774 > Number of allocated value lists=54 log_all=1 thread=0x2dfa4520 no name 

!WARN   -PCATC        		< T:PLANNER_MAIN M:value_list_man_clnt.c 
  F:`PCAT_VIEW_VL_LogAllocVL` L:2816 > VL hdl=0x15466 allocated but not freed 
  for `view` PLANNER17 hdl=0x7000014, " "flags=0, ObType=0, num_rows=1, total_size=905, curpos=0 

                    pName = pViewDef->view_name;

#ifdef `PCAT_ENABLE_EXTRA_VL_DEBUG`  /* for extra debugging */
  note:
  gives filter and sort type which maps to certain view.

                    DIAG_LOG_WARN(PCAT_diag_segment_id, ("VL hdl=%#x allocated but not freed for %s %s hdl=%#x, flt=%d, srt=%d, "
                        "thread=%x, time=%lu, flags=%u, ObType=%d, num_rows=%lu, total_size=%lu, curpos=%d, dur_mins=%d, possible_leak=%d",
                        vl_debug_info->value_list.value_list_hdl,
                        ((vl_debug_info->dbg_view_hdl > 0xFFU) ? "view" : "client"), ((NULL != pName) ? pName : ""), vl_debug_info->dbg_view_hdl, flt, srt,
                        vl_debug_info->dbge_thread_id, vl_debug_info->dbge_create_time, vl_debug_info->dbg_usage_flags,
                        vl_debug_info->value_list.object_type, vl_debug_info->value_list.num_rows, vl_debug_info->value_list.total_size,
                        vl_debug_info->current_position, dur_mins, ((dur_mins >= 5U) ? true:false) ));
#else
                    DIAG_LOG_WARN(PCAT_diag_segment_id, ("VL hdl=%#x allocated but not freed for %s %s hdl=%#x, "
                        "flags=%u, ObType=%d, num_rows=%lu, total_size=%lu, curpos=%d",
                        vl_debug_info->value_list.value_list_hdl,
                        ((vl_debug_info->dbg_view_hdl > 0xFFU) ? "view" : "client"), ((NULL != pName) ? pName : ""), vl_debug_info->dbg_view_hdl,
                        vl_debug_info->dbg_usage_flags, vl_debug_info->value_list.object_type, vl_debug_info->value_list.num_rows,
                        vl_debug_info->value_list.total_size, vl_debug_info->current_position));
#endif

ValueListClnt vl_debug_info = NULL;

typedef struct ValueListClntStructTag
{
    `DBVIEW_ValueListStruct`      value_list;
    uint32_t                    current_position;
    PCAT_PROP_HANDLE_UNION**    to_be_destroyed;

    PCAT_VIEW_HANDLE dbg_view_hdl; /* associated view for debugging */
    uint8_t dbg_usage_flags;       /* usage flags for debugging */

#ifdef PCAT_ENABLE_EXTRA_VL_DEBUG
    uint32_t dbge_thread_id;     /* id of thread used to create/allocate */
    uint32_t dbge_create_time;   /* time of creation */
#endif /* PCAT_ENABLE_EXTRA_VL_DEBUG */

}ValueListClntStruct;


# when hit PCAT_VIEW_CLNT_POOL and see below errors, add up all total_size and
# get 125696. That's much lower than total 400K
#
# hdl=0x5000038 is view handle


!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02660 > Number of allocated value lists=54 log_all=1 thread=0x2b1a1520 PLANNER_MAIN
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0xee allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=557, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x129 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=411, curpos=0
...
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x239 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=311, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x283 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=593, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x1fb allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=311, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x1fd allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=311, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x290 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=594, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x284 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=593, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x23d allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=311, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x27b allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=593, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x281 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=593, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x287 allocated but not freed for view PLANNER50 hdl=0x5000038, flags=0, ObType=0, num_rows=1, total_size=593, curpos=0
...
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x28e allocated but not freed for view PLANNER25 hdl=0x500001a, flags=0, ObType=0, num_rows=5, total_size=2696, curpos=0
!WARN  -PCATC        < T:PLANNER_MAIN F:PCAT_VIEW_VL_LogAllocVL L:02702 > VL hdl=0x293 allocated but not freed for client  hdl=0, flags=0, ObType=0, num_rows=0, total_size=0, curpos=0

!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_static.c F:MHWMemAllocStatic L:00065 > Cannot allocate 60 bytes in pool PCAT_VIEW_CLNT_POOL, not enough memory
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_static.c F:MHWMemAllocStatic L:00068 >    Biggest block is 0 bytes
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00353 > MEMCHECK: BEGIN Check Pool: PCAT_VIEW_CLNT_POOL
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00363 > MEMCHECK: Chunk 0 addresses: [[ 0x10f3b28 ]] -> [[ 0x1123327 ]]
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00370 > MEMCHECK: Offset range in chunk:  0      +0 ->  0 +194559[  194560]
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00501 > MEMCHECK: Checking block pool
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00637 > MEMCHECK:      0 : used block  0      +0[      28] S------ [0x010f3b3c]  <no-owner> 0
!WARN  -MEMMAN       < T:PCAT_PROXY_THREAD M:mem_info.c F:MemCheckMemory L:00637 > MEMCHECK:      6 : used block  0   +1088[      28] S------ [0x010f3f7c]  <no-owner> 0
...


<pcat-dirty-flag>
!WARN   -PCATS        		< p:0x000001dd P:MW t:0x01a9a520 T:PCAT_SRV_SYSINIT_THREAD M:dbview.c F:Dbview_PVR_InitDb L:1898 > num_external_disk=0,isDirtyShutdown = 1 ,dbview_conf = 2 


={============================================================================
|kt_dev_si_0001| comp-pcat-dbengine

Uzan, Galit <GUzan@nds.com>

<dbengine-status>
# (((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((8 & 0x3FF) << 22) | ((1 & 0x3) << 16) | ((0 & 0xF) << 12) | (19 & 0xFFF) ) = 0x2010013


`0x2010013`
#define DBENGINE_API_STATUS_CONSTRAINT
DBENGINE_API_MAKE_STATUS(SEVERITY_WARNING,19)   
/*!< Abort due to constraint violation */ 

this error means that you try to insert an object that already exist in the
db. Because this error is return to SIM, you need to ask them if this an error
or not. For PCAT for example, this error can happen and it's not a failure,


#define DBENGINE_API_STATUS_DONE        DBENGINE_API_MAKE_STATUS(SEVERITY_NONE,101)  /*!< #DBENGINE_API_Step() has finished executing */

!ERROR -SQ13         < p:00000078 t:2af4e9e0 T:SIM_PI_XSI_SKEVT_THREAD M:sim_dbc_sched_query.c F:SIM_DBC_QUERY_GetPVODGroupsByProgInst L:00886 > DBENGINE_API_Step()='0x2000065' FAILED
!WARN  -SQ22         < p:00000078 t:2af4e9e0 T:SIM_PI_XSI_SKEVT_THREAD M:sim_qh_htmon.c F:SIM_qh_htmon_ProgInstPopulationListener L:01994 > SIM_DBC_QUERY_GetPVODGroupsByProgInst 0x10006 FAILED

(from Galit)
The status 0x2000065 (DBENGINE_API_STATUS_DONE) is not an error, it only means that there is no more row to select 
that the execution of the query is done.

When you execute a query, you first call once to DBENGINE_API_Prepare and while the db_status == DBENGINE_API_STATUS_ROW, 
you need to call to db_status=DBENGINE_API_Step() to get the last row return by the query.
when the db_status is DBENGINE_API_STATUS_DONE  (0x20000065) it means that you don't need to call again to DBENGINE_API_Step 
the query has been totally executed there is no more row to get.
If SIM print the error below it seems to be that the query (select) doesn't return the result they expect.

# 0x2020001
#define DBENGINE_API_STATUS_ERROR        DBENGINE_API_MAKE_STATUS(SEVERITY_SEVERE,1)   /*!< SQL error or missing database */

# 0x2020015
#define DBENGINE_API_STATUS_PROTOCOL    DBENGINE_API_MAKE_STATUS(SEVERITY_SEVERE,15)   /*!< Database lock protocol error */


<pcat-error>
`0x203000b`
#define DBENGINE_API_STATUS_CORRUPT     DBENGINE_API_MAKE_STATUS(SEVERITY_FATAL,11)   
/*!< The database disk image is malformed */

`0x202000a` SEVERITY_SEVERE(2)
#define DBENGINE_API_STATUS_IOERR       DBENGINE_API_MAKE_STATUS(SEVERITY_SEVERE,10)   
/*!< Some kind of disk I/O error occurred */

!ERROR  -DBENGINE_SRV 		T:VRM_SRV M:dbengine_api.c F:DBENGINE_API_ExecSQL L:1249 > 
  execution error on stmt = INSERT INTO BEFORE_NOTIF SELECT 167772199, A.BOOKING_JOB_ID, A.BOOKING_ID,B.EVENT_ID,B.AV_CONTENT_ID,0,0,0,BOOKING_JOB_ID,E.SHREC_ITEM_ID,0,0 FROM BOOKING_JOBS A LEFT OUTER JOIN BOOKING_INFO B ON A.BOOKING_ID = B.BOOKING_ID LEFT OUTER JOIN ITEM C ON B.EVE\n 
!ERROR  -DBENGINE_SRV 		T:VRM_SRV M:dbengine_api.c F:DBENGINE_API_ExecSQL L:1250 > 
  status = 0x203000b\n 
!ERROR  -DBENGINE_SRV 		T:VRM_SRV M:dbengine_api.c F:DBENGINE_API_ExecSQL L:1253 > 
  errmsg = database disk image is malformed\n 

NDS: ^0947462201.382190 !ERROR  -DBENGINE_SRV 		< p:0x00000403 P:MW t:0x01aae520 T:PCAT_SRV_THREAD M:dbengine_api.c F:DBENGINE_API_ExecSQL L:1253 > errmsg = database disk image is malformed\n 

SYSTEM_STATUS DBENGINE_API_ExecSQL()
{
  status_sql=sqlite3_exec((sqlite3 *)dbContext,sql,callback,arg,&local_errmsg);

  DIAG_LOG_ERROR(DBENGINE_diag_segment_id, ("execution error on stmt = %s\n",sql));
  DIAG_LOG_ERROR(DBENGINE_diag_segment_id, ("status = 0x%x\n",status));
  if (local_errmsg != NULL)
  {
    DIAG_LOG_ERROR(DBENGINE_diag_segment_id, ("errmsg = %s\n",local_errmsg));
  }
}

This means that "database disk image is malformed" comes from sqlite.


// CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/sqlite3/src/amalgation/sqlite3.c
# define SQLITE_CORRUPT_BKPT SQLITE_CORRUPT

78570 CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/sqlite3/src/amalgation/sqlite3.c     
  case SQLITE_CORRUPT:    z = "database disk image is malformed";      break;


<pcat-check>
https://sqlite.org/download.html
sqlite-tools-linux-x86-3140200.zip
(1.75 MiB) 		A bundle of command-line tools for managing SQLite database
files, including the command-line shell program, the sqldiff program, and the
sqlite3_analyzer program.  (sha1: 296d4b1f419a544b2e7c7cf29792d5074dad9cc6)

https://www.sqlite.org/pragma.html#pragma_integrity_check
PRAGMA schema.integrity_check;
PRAGMA schema.integrity_check(N)

This pragma does an `integrity check of the entire database` 

The integrity_check pragma looks for out-of-order records, missing pages,
    malformed records, missing index entries, and UNIQUE and NOT NULL
    constraint errors. If the integrity_check pragma finds problems, strings
    are returned (as multiple rows with a single column per row) which
    describe the problems. Pragma integrity_check will return at most N errors
    before the analysis quits, with N defaulting to 100. If pragma
    integrity_check finds no errors, a single row with the value 'ok' is
    returned.

PRAGMA integrity_check does not find FOREIGN KEY errors. Use the PRAGMA
foreign_key_check command for to find errors in FOREIGN KEY constraints.

See also the PRAGMA quick_check command which does most of the checking of
PRAGMA integrity_check but runs much faster.

sqlite-tools-linux-x86-3140200/sqlite3 PCAT.DB.courrpted 'PRAGMA integrity_check'
wrong # of entries in index sqlite_autoindex_BOOKING_INFO_2
wrong # of entries in index I_BJ_BS
wrong # of entries in index I_BJ_RS

sqlite-tools-linux-x86-3140200/sqlite3 PCAT.DB.clean 'PRAGMA integrity_check'
ok

note:
Do not use sqlite3 PCAT.DB 'PRAGMA quick_check'


SQLITE_VERSION     77 CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/common_h/sqlite3.h # undef SQLITE_VERSION
SQLITE_VERSION    110 CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/common_h/sqlite3.h #define SQLITE_VERSION        "3.7.9"
SQLITE_VERSION    506 CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/sqlite3/src/amalgation/sqlite3.c # undef SQLITE_VERSION
SQLITE_VERSION    542 CMS_INFORMATION_SERVICES/DBENGINE/src/Interface/sqlite3/src/amalgation/sqlite3.c #define SQLITE_VERSION         "3.6.1"
SQLITE_VERSION    465 CMS_INFORMATION_SERVICES/DBENGINE/src/profiling/tools/sqlite3.c # undef SQLITE_VERSION
SQLITE_VERSION    502 CMS_INFORMATION_SERVICES/DBENGINE/src/profiling/tools/sqlite3.c #define SQLITE_VERSION         "3.5.9"
SQLITE_VERSION     59 CMS_INFORMATION_SERVICES/DBENGINE/src/profiling/tools/sqlite3.h # undef SQLITE_VERSION
SQLITE_VERSION     96 CMS_INFORMATION_SERVICES/DBENGINE/src/profiling/tools/sqlite3.h #define SQLITE_VERSION         "3.5.9"


={============================================================================
|kt_dev_si_0001| comp-fdm

FDM_SVR is the FDM server module which is responsible for managing the mount point of the broadcast file system

Note that DSM-CC carousels are packaged such that more than one file may be resident in a module, and so acquiring a single file actually entails acquiring a module.


={============================================================================
|kt_dev_si_0001| comp-pshed

#-----------------------------------------------------------
# diag and debug build
#-----------------------------------------------------------
NDS_BUILD_TYPE_psched = debug
TRACE_LEVEL_PSCHED="AFEWM"


#
# REMINDER BOOKING
#

# !MIL   -PCATS        < M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:02814 > client id = 0x4,bookingJobID = 0x29000096
# PLANNER_DBINTERFACE_Notify_ViewChange:
# !INFO  -P_Planner    < M:planner_job.c F:PLANNER_JOB_CheckForEndOfJob L:00205 > Insert of current reminder booking: end of job

SrmJobRegisterScheduler
{
        psched_info.view_spec = view_spec;
        psched_info.update_prop_list=psched_prop_list;
        psched_info.update_prop_list_size = LIST_PROP_NUM(psched_prop_list);
        psched_info.schedule_time_prop=(PCAT_VIEW_PROP)PCAT_CAT_PROP_TRIGGER_TIME;
        psched_info.flag_to_set_on_schedule= (PCAT_VIEW_PROP)PCAT_CAT_PROP_IS_SCHEDULED;
        psched_info.schedule_flag_object_type = (PCAT_VIEW_OBJECT_TYPE)PCAT_CAT_OBJECT_TYPE_BOOKING_JOB;

        stat = PSCHED_SCHEDULING_SchedulerRegister(&psched_info, SrmJobPschedSchedulerCallback, 0u, pPschedJobId);
}


PSCHED_SCHEDULING_SchedulerRegister(const PSCHED_SCHEDULING_PCAT_INFO *pcat_info, PSCHED_SCHEDULING_CALLBACK callback, user_data, *jobid )
{
  PSCHED_SCHED_InitPCAT
  {
    # set 'prop id' to use as a triggering event.
    # define        PCAT_CAT_PROP_TRIGGER_TIME(5)
    gPschedInfo[idx].schedule_time_prop = pcat_info->schedule_time_prop;

    # flag prop id to use when it's triggered or set.
    gPschedInfo[idx].schedule_flag_prop = pcat_info->flag_to_set_on_schedule.
  }

  # check this mesg
  # DIAG_LOG_INFO(PschedDiagSegmentId,("successful initialization: jobID=0x%x, pcat_info->schedule_time_prop = %d,stat=0x%x", *jobID,pcat_info->schedule_time_prop,stat));
  send E_PSCHED_MSG_SCHEDULER_HANDLE_NEXT_EVENT
}


#
# !ENTER -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleNextEvent L:00311 > |-> PSCHED_SCHED_HandleNextEvent
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleNextEvent L:00319 > PCAT_VIEW_Select job id 0x80006,pcat_view 0x2000066,rows = 1,select_stat = 0x5c01000
# timeout is pschedGetTimeStr(sched_time)
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleNextEvent L:00365 > Top event for job id 0x80006: booking id 0x29000096, now:09:49:57, timeout:18:35:00
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleNextEvent L:00383 > Set new alarm for job id 0x80006, booking id 0x29000096, alarm handle 0x30016, returned stat = 0x10802000
#
PSCHED_SCHED_HandleNextEvent
{
  # get value of that 'prop id' and it's trigger time in this case.
  PCAT_VIEW_VLIST_GetSystemTime(value_list,1U,gPschedInfo[idx].schedule_time_prop,&sched_time);

  # set alarm
  gPschedInfo[idx].alarm_data.alarm_data.abs_info.timeout = sched_time;
  stat = SYSTEMALARM_Set(&gPschedInfo[idx].alarm_data,&gPschedInfo[idx].alarm_handle);
}


# !ENTER -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_ALARM_Callback L:00592 > |-> PSCHED_SCHED_ALARM_Callback
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_ALARM_Callback L:00596 > Alarm 0x30016 arrived, job id = 0x80006,stat = 0x7000000
PSCHED_SCHED_ALARM_Callback
  send E_PSCHED_MSG_SCHEDULER_ALARM_TIMEOUT


# !ENTER -PSCHED       < M:psched_main.c F:PschedMainMessageDispatcher L:00880 > |-> PschedMainMessageDispatcher
# !ENTER -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleAlarmTimeout L:00609 > |-> PSCHED_SCHED_HandleAlarmTimeout
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleAlarmTimeout L:00615 > PCAT_VIEW_SelectByItemID object 0x29000096,job id 0x80006, returned pcat_stat = 0x5c01000,1 rows
# !INFO  -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_HandleAlarmTimeout L:00625 > Calling callback for job id 0x80006,object 0x29000096(687866006),time now:09:49:57
# !ENTER -PSCHED       < M:psched_sched.c F:PSCHED_SCHED_UpdateIsScheduledFlag L:00727 > |-> PSCHED_SCHED_UpdateIsScheduledFlag
PSCHED_SCHED_HandleAlarmTimeout
  # call it back which was used when registered. user_data comes from a client when regiesterd.
  gPschedInfo[idx].callback(jid,vlist,gPschedInfo[idx].user_data);

  PSCHED_SCHED_UpdateIsScheduledFlag
    PCAT_VIEW_VLIST_SetBoolean(gPschedInfo[idx].schedule_flag_prop,true);
  

#  
# !MIL   -VRMS         < M:job_man_srv.c F:JobManSrvStart L:03843 > VRM_JOB_START: jtVRM=8, jhVRM=0x2000005    
#


={============================================================================
|kt_dev_si_0001| comp-pdm

COMPONENT_NAME := pdm_srv

CO: Conduit, Patrick

<full-system-reset>
// refer WP560: full system reset
# PDM_ServerThread:PDM_SRV_EV_SHUTDOWN:
!ERROR -PDM          < M:pdm_srv_common.c F:PDM_ServerThread L:00780 > ** KT: PDM_ServerThread: Got PDM_SRV_EV_SHUT: l_data.doMarkShutdown(1)
!ERROR -PDM          < M:pdm_srv_fs_support.c F:PDM_FS_MarkCleanUnmount L:01378 > KT: PDM_FS_MarkCleanUnmount: failed flag: false exception:00000029 prev_act: 00000001
!WARN  -PDM          < M:pdm_srv_fs_support.c F:PDM_FS_MarkCleanUnmount L:01387 > not clean shutdown: failed flag: false exception:00000029 prev_act: 00000001

false exception:00000029 is: 
SYSTEM_EXCEPTION_TYPE_RESTARTED_LOCALLY,                         /*!< @brief Restarted by the EPG */

so looks like that this code block has no real use since PDM is always ended up with 'uncleaned shotdown'. do we need it?


# it don't supports run level and simply do everything at the first stage. Instead, use PDM_FS_NotifyStateEvent to get client notified. 
# therefore, if it failed to mount fs(xtvfs), no effect on sysint level but on functional level for a system.

PDM_FS_RegisterStateListener 	# for app to register state listener

# from planner_pdm.c
#
/* We are not interested in getting state notifications */
if (PDM_FS_STATUS_OK != PDM_FS_RegisterStateListener ((uint8_t*)PLANNER_PDM_MOUNT_POINT_PARTITION, NULL, &notify_handle))

# two clients
#
ERROR -SQ01         < M:sim_cache_mode_ctrl.c F:SIM_cmc_RegisterPartition L:01045 > KT: PDM_FS_RegisterStateListener(DATA): src/sim_cache_mode_ctrl.c
INFO  -PDM          < M:pdm_srv_fs.c F:PDM_FS_RegisterStateListener L:00430 > partition:DATA, listener:0xa33bd8, handle:00000004

ERROR -SPM_SERVER   < M:spm_disk.c F:SPM_DISK_Init L:00658 > KT: PDM_FS_RegisterStateListener(RECORDING): spm_disk.c
INFO  -PDM          < M:pdm_srv_fs.c F:PDM_FS_RegisterStateListener L:00430 > partition:RECORDING, listener:0xb561e8, handle:00000007


PDM_FS_PartitionMount			# for app to mount

# PDM_ORIGINAL_PARTITION_TABLE_SECTOR (0)
# PDM_BACKUP_PARTITION_TABLE_SECTOR (32)
PDM_FS_BackupPartitionTable


PDM_FS_InitAllowedDiskSizes


<log>
To mound /dev/sda

!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_thread.c F:PDM_FS_ThreadDeviceStateAction L:3049 > device: /dev/sda  mounting 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_support.c F:PDM_FS_NotifyDeviceEvent L:1452 > notifyHandle 0x000c0000 listener 0x0x412678 devicehandle 00000007 event PDM_FS_DeviceEventMountingStart(4) isPrimary: true 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_support.c F:PDM_CLIINT_FSDiskEventCb L:2792 > Send: event=PDM_IPC_EV_FS_DISK_EVENT_NFY func=PDM_CLIINT_FSDiskEventCb 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevMatchAllPartitions L:1380 > /dev/sda1 numSectors=0x0e8e035c0 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevCalculateSectors L:448 > usable sectors of device is 00000000e8e03600 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevCalculateSectors L:454 > percentage 08.00 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevCalculateSectors L:455 > desired part size is thus [2016:08:30 13:32:36]0000000012a14c00 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevCalculateSectors L:462 > usable part size is thus [2016:08:30 13:32:36]0000000012a14c00 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevMatchAllPartitions L:1419 > matching part RECORDING  type 01 XSTORE_FS_XTV numsectors 0x[2016:08:30 13:32:36]0000000012a14bc0 to shDeviceName /dev/sda 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevMatchAllPartitions L:1426 > pctMinSize 0x[2016:08:30 13:32:36]0000000012a14bc0 absMinSize 0x0000000000000000 absMaxSize 0x0000000000000000 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevMatchAllPartitions L:1439 > try to match with existing part /dev/sda1 on dev /dev/sda type 01 XSTORE_FS_XTV numsectors 0x00000000e8e035c0 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_DevMatchAllPartitions L:1490 > physical partition /dev/sda1 matched to expected partition RECORDING 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_CreateDirectory L:1899 > dir_path=/mnt/nds/dev_7 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_CreateDirectory L:1899 > dir_path=/mnt/nds/dev_7/part_0 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_support.c F:PDM_FS_PartitionMountWithRecovery L:2517 > tryMount=1 recoveryStep=4 features=0 
!INFO   -PDM_FS       		< P:STM T:PDM_FS M:pdm_srv_fs_support.c F:PDM_FS_PartitionMount L:2382 > mounting /dev/sda1 (flags: READWRITE) g_pdm_fs_shFeatures=0x1d875600 extVersion=2 features=0x0 md=0x0 


={============================================================================
|kt_dev_si_0001| comp-player

# contacts
Tony Palmer, David Gilson, Laurent, RÃ©mi; Lengronne, Fabien  

# diag and debug build
"P_Api"
"P_ApiD"

# COMPONENT_NAME := darwin_player_src
NDS_BUILD_TYPE_darwin_player_src = debug

# where
/darwin_platform_components/darwin_player/src/makefile


<vtable>
// user uses
PLAYER_VTABLE_Create(&(g_player_component.contexts), (void**)&l_sc_data,
  &l_sc_id,
  sizeof(PLAYER_SERVICE_CONTEXT_DATA));

// mapping. create `node` and `element` as well.
#define PLAYER_VTABLE_Create(w,x,y,z) PLAYER_VTABLE_CreateNode(w,x,y,z,__FILE__,__LINE__)
#define PLAYER_VTABLE_Create(w,x,y,z) PLAYER_VTABLE_CreateNode(w,x,y,z)

// no mapping and delete node using ref count. inc ref
PLAYER_VTABLE_ReleaseElement

// only where increase ref count. dec ref.
PLAYER_VTABLE_GetElement

// no mapping and delete node w/o using ref count
PLAYER_VTABLE_DeleteElement


<vtable-client>
The client is responsible to match up Release/GetElement pair.

PLAYER_Context_GetContextFromSession() do GetElement(context vtable) inside so
have to ReleaseElement after this call.


<vtable-dump>
note:
1. not defined by default
2. not useful to pair up where it's created and released.

#ifdef PLAYER_VTABLE_LEAK_DETECTION
#ifdef PLAYER_DUMP_VTABLES

static void PLAYER_DumpVtables(void)
{
  // uses vtable pointer for each vtable
  // static void PLAYER_VTABLE_DumpTable(const PLAYER_VTable_t* vtable)

  PLAYER_VTABLE_DumpTable(&(g_player_component.list_array));
  {
    PLAYER_VTNode_t     *curNode = NULL;
    DIAG_DECLARE_FUNCTION("PLAYER_VTABLE_DumpTable");

    DIAG_LOG_WARN(g_player_api_diag_segment_id, ("vtable 0x%x",vtable ));

    while ((curNode = GetNextNode(vtable, curNode)) != NULL )
    {
      DIAG_LOG_WARN(g_player_api_diag_segment_id, 
          ("thread %s file:%s L:%i, handle 0x%x, el 0x%x, refCount %i",
            curNode->thread,
            curNode->file,
            curNode->line,
            curNode->handle,
            curNode->elPointer,
            curNode->refCount));
    }
  }
  ...
}

This prints out all nodes in the vtable with filename where it's created:
where CreateNode() is called.

For session, there can be as many as sessions which APP can create.

F:PLAYER_DumpVtables L:1428 > sessions 
F:PLAYER_VTABLE_DumpTable L:1399 > vtable 0x1070d04 
F:PLAYER_VTABLE_DumpTable L:1409 > thread no name file:player_api.c L:169, handle 0x4, el 0x15b2c1c, refCount 1 
F:PLAYER_VTABLE_DumpTable L:1409 > thread no name file:player_api.c L:169, handle 0x3, el 0x15a0d34, refCount 1 
F:PLAYER_VTABLE_DumpTable L:1409 > thread LAE_THREAD file:player_api.c L:169, handle 0x2, el 0x1500954, refCount 1 
F:PLAYER_VTABLE_DumpTable L:1409 > thread AEM_INPUT_MONITOR_THREAD file:player_api.c L:169, handle 0x1, el 0x1467fec, refCount 1 

F:PLAYER_DumpVtables L:1419 > ** SI-10654 : KIT: dump vt contexts ** 
F:PLAYER_VTABLE_DumpTable L:1399 > vtable 0x1070d58 
F:PLAYER_VTABLE_DumpTable L:1409 > thread PLAYER_MAIN file:player_api_context.c L:113, handle 0x2, el 0x12af01c, refCount 1 
F:PLAYER_VTABLE_DumpTable L:1409 > thread PLAYER_MAIN file:player_api_context.c L:113, handle 0x1, el 0x128d024, refCount 5 


note:
Upon component initialization, the vtable gets initialized using unique id and
then use PLAYER_VTABLE_Create to create a node.

Therefore, when see the log like these, can figure out which vtable which is
talking about.

DIAG_LOG_FATAL(vtable->diagSegment, ("Leak detected in ref for VTable %u (ref count %u)",
  vtable->id, node->refCount));


// global which has lots of vtables
PLAYER_COMPONENT_OBJECT_DATA g_player_component;
{
  PLAYER_VTable_t         list_array;     /** Array of client requested lists */
  PLAYER_VTable_t         ca_listeners;   /** Linked list of CA listeners */

  // #define PLAYER_VTABLE_ID_CONTEXTS (25U)
  PLAYER_VTable_t         contexts;                   /** List of service contexts */
  ...
}


// uses `vtable ids`

PLAYER_VTABLE_InitTable(&(g_player_component.list_array),
  g_player_mem_pool,
  g_player_diag_detailed_segment_id,
  NULL,
  100,
  PLAYER_VTABLE_ID_LISTS));
...

// defines `vtable ids`
//
// src/inc/player_vtable.h
/* Identifiers of the vtables used in Player.  These are used for diagnostic
 * output */
#define PLAYER_VTABLE_ID_LISTS (1U)
#define PLAYER_VTABLE_ID_CA_LNRS (2U)
...


<status>
0x6801001   // PLAYER_API_STATUS_PENDING
              (PLAYER_COMP_ID, PLAYER_API_ID,SEVERITY_NONE,1)

0x6821001   // PLAYER_API_STATUS_FAILURE 
              ((PLAYER_COMP_ID, PLAYER_API_ID, SEVERITY_SEVERE,1))


#define PLAYER_COMP_ID        (26)
#define SEVERITY_NONE         (0)
#define SEVERITY_SEVERE       (0x2))
#define PLAYER_API_ID         (1)
            
(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )

#define PLAYER_API_STATUS_PENDING (SYSTEM_MAKE_COMPONENT_STATUS(PLAYER_COMP_ID, PLAYER_API_ID,SEVERITY_NONE,1))

0x6801001
  hex(((26 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((1 & 0xF) << 12) | (1 & 0xFFF) )

0x6821001
  hex(((26 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((1 & 0xF) << 12) | (1 & 0xFFF) )


<fsm> state machine

# player_statetable.c
# g_PLAYER_VRM_State_Table, PLAYER_FindStateFunction in MessageThread

const char* PLAYER_JOB_STATE _STR[] =
{
  "PLAYER_STATE_IDLE",                        // 0
    "PLAYER_STATE_AWAITING_READY",            // 1
    "PLAYER_STATE_AWAITING_PIN",              // 2
    "PLAYER_STATE_AWAITING_CREATE",           // 3
    "PLAYER_STATE_AWAITING_CONFLICT_CHECK",   // 4
    "PLAYER_STATE_AWAITING_COMMIT",           // 5
    "PLAYER_STATE_AWAITING_SCI",              // 6
    "PLAYER_STATE_AWAITING_START",            // 7
    "PLAYER_STATE_RUNNING",                   // 8
    "PLAYER_STATE_AWAITING_STOP",             // 9
    "LAYER_STATE_AWAITING_DESTROY",           // 10
};


# file:///C:/ktpark/NDSUK/kb/fusion/component/javadoc/com/nds/fusion/playerimpl/PlayerEventImpl.html
#
# in case of successful tune (after receiving PlayerEventSessionStart) 
# Based on the fact that player sends PLAYER_EVENT_SESSION_FAIL for certain
# cases where the tune request fails, I would recommend that Picasso treats

const char* PLAYER_EVENT_MSG _STR[] =
{
    "PLAYER_EVT_IDLE",
    "PLAYER_EVT_SLOT_READY",
    "PLAYER_EVT_PIN_REEVALUATE",
    "PLAYER_EVT_JOB_CREATED",
    "PLAYER_EVT_JOB_COMMITTED",
    "PLAYER_EVT_JOB_STARTED",                 // 5
    "PLAYER_EVT_JOB_STOPPED",
    "PLAYER_EVT_JOB_DESTROYED",
    "PLAYER_EVT_JOB_FAILED",
    "PLAYER_EVT_SSI",
    "PLAYER_EVT_NSI",                         // 10
    "PLAYER_EVT_SCI",
    "PLAYER_EVT_SEI",
    "PLAYER_EVT_SAI",
    "PLAYER_EVT_CASI",
    "PLAYER_EVT_VSI",                         // 15
    "PLAYER_EVT_ASI",
    "PLAYER_EVT_MSSI",
    "PLAYER_EVT_NEW_SPEED",
    "PLAYER_EVT_NEW_POSITION",
    "PLAYER_EVT_NEW_EIT",                     // 20
    "PLAYER_EVT_NEW_SERVICE",
    "PLAYER_EVT_NEW_CGMSA",
    "PLAYER_EVT_EOCI",
    "PLAYER_EVT_MEDIA_SELECTED",
    "PLAYER_EVT_DEFAULT_MEDIA_SELECTED",      // 25
    "PLAYER_EVT_NEW_LIVE",
    "PLAYER_EVT_TTSI",
    "PLAYER_EVT_STSI",
    "PLAYER_EVT_TERMINATE",
    "PLAYER_EVT_ASYNC_ACTIVE",                // 30
    "PLAYER_EVT_OTVCSI",
    "PLAYER_EVT_MHCSI",
    "PLAYER_EVT_CONFLICT_CHECK",
    "PLAYER_EVT_RB",
    "PLAYER_EVT_IL",                          // 35
    "PLAYER_EVT_REC_RB_ALARM",
    "PLAYER_EVT_INSTRUCTION",
    "PLAYER_EVT_UI_PREFS_UPDATE",
    "PLAYER_EVT_CONTEXT_UI_PREFS_UPDATE",
    "PLAYER_EVT_PLAYBACK_INTERRUPTED",        // 40
    "PLAYER_EVT_RESET_THRESHOLD_ALARM",
    "PLAYER_EVT_OPTV_CAROUSEL",
    "PLAYER_EVT_PREFS_UPDATE",
    "PLAYER_EVT_PREFS_HDMI_STATE_UPDATE",
    "PLAYER_EVT_SYSTEMALARM_HDMI_BLANK",      // 45
    "PLAYER_EVT_SYSTEMTIME_CALLBACK",
    "PLAYER_EVT_MOVE_TO_NEXT_CA_COND",
    "PLAYER_EVT_AUDIO_LOCAL_SETTINGS_UPDATE",
    "PLAYER_EVT_SUBTITLES_LOCAL_SETTINGS_UPDATE",
    "PLAYER_EVT_SYSTEM_STATE",                // 50
    "PLAYER_EVT_PREFS_SYSTEM_STATE",
    "PLAYER_EVT_SERVICE_OBJECT",
    "PLAYER_EVT_PIN_RESTRICTIONS_UPDATED",
    "PLAYER_EVT_PVR_OPERTATIONS_ALLOWED",
    "PLAYER_EVT_RUNLEVELREQUEST_SHUTDOWN_TO_INIT",  // 55
    "PLAYER_EVT_RUNLEVELREQUEST_INIT_TO_PREPARE",
    "PLAYER_EVT_RUNLEVELREQUEST_PREPARE_TO_ACTIVE",
    "PLAYER_EVT_RUNLEVELREQUEST_PREPARE_TO_STANDBY",
    "PLAYER_EVT_RUNLEVELREQUEST_ACTIVE_TO_PVR",
    "PLAYER_EVT_RUNLEVELREQUEST_ACTIVE_TO_STANDBY", // 60
    "PLAYER_EVT_RUNLEVELREQUEST_PVR_TO_ACTIVE",
    "PLAYER_EVT_RUNLEVELREQUEST_PVR_TO_STANDBY",
    "PLAYER_EVT_RUNLEVELREQUEST_STANDBY_TO_ACTIVE",
    "PLAYER_EVT_LIVE_CA_EVENT_TRANSITION",
    "PLAYER_EVT_RB_PLAYBACK_ALARM",
    "PLAYER_EVT_IL_RB_STOPPED",
#ifdef PVR_SIMPLE_REVIEW_BUFFER
    "PLAYER_EVT_NO_TRIM_PLAY_POSITION_TOO_CLOSE",
#endif
#ifdef PVR_CLASSIC_REVIEW_BUFFER
    "PLAYER_EVT_REVIEW_BUFFER_NOTIFY_SPLIT",
#endif /** PVR_SIMPLE_REVIEW_BUFFER */
    "PLAYER_EVT_RB_RECORD_NOT_STARTING",
    "PLAYER_EVT_COMPONENT_FAIL_TIMEOUT",
    "PLAYER_EVT_CURRENT_EVENT_RETRIEVED",
    "PLAYER_EVT_CURRENT_EVENT_CHANGED",
    "PLAYER_EVT_PLAY_FROM_CONTEXT",
    "PLAYER_EVT_SUBSCRIBER_CONFIG_UPDATED",
    "PLAYER_EVT_VRM_SUBSTITUTION",
    "PLAYER_EVT_OVERT_FINGER_PRINT_UPDATED",
    "PLAYER_EVT_SKIP_TO_NEXT_DRM_ACCESS",
    "PLAYER_EVT_VOD_CONNECTION_CLOSED",
    "PLAYER_EVT_VOD_ANNOUNCE",
    "PLAYER_EVT_VOD_RESPONSE",
    "PLAYER_EVT_AUDIO_SUB_OFFSET_CHANGE",
    "PLAYER_EVT_NULL"
};

# player_object.h
typedef enum
{
  PLAYER_EVT_JOB_DESTROYED,   // 7
  PLAYER_EVT_CONFLICT_CHECK,  // 35
  PLAYER_EVT_XXX,
} PLAYER_EVENT_MSG;


<internal>
two threads

(player_common.c)
1. MessageThread(g_player_component.queue_id)

#ifdef PLAYER_DEBUG_STRINGS
{
  char* l_event_name = getDebugEventName(l_event);
  l_event_name = l_event_name;
  DIAG_LOG_INFO(g_player_api_diag_segment_id, ("*** Message received (event = %s) ***", l_event_name));
}
#else
  DIAG_LOG_INFO(g_player_api_diag_segment_id, ("*** Message received (event = %d) ***", l_event));
#endif

(player_api_event.c)
2. PlayerEventThread(g_player_component.event_thread.queue_id)


PlayerEventThread:

# !INFO  -P_Api        < M:player_api_events.c F:PlayerEventThread() L:01211 > *** Message received (event = 1101  : EVENT)  ***
#
# or
#
# this is self so as below, it goes to the player thread.
# !INFO  -P_Api        < M:player_api_promomodule.c F:PLAYER_PRV_PROMO_DoClientCallbacks() L:00087 > Sending event 1
# !INFO  -P_Api        < M:player_api_events.c F:PlayerEventThread() L:01194 > *** Message received (event 1104) ***

case PLAYER_MESSAGE_EVENT_EVENT(1101)
  ProcessPlayerEvent
  {
    #define PLAYER_DEBUG_STRINGS. when debug build, it's on by default.
      PLAYER_EVENT_DebugGetEventNameString
    # !INFO  -P_Api        < M:player_api_events.c F:ProcessPlayerEvent() L:00625 > event handle = 0x0000000f, 
    # <player_api_events.h>
    # event type = PLAYER_EVENT_SESSION_START
    
    # to listener, APP
    # MediaEngine/src/java/picasso/mediaengine/PlayerEventPump.java:
    # processEvent
    #
    # MediaEngine/src/java/picasso/mediaengine/MediaEngine.java:
    # onPlayerSessionEvent
        PlayerListenerCallbackExecution
  }

(player_api_events.c, ref to : Player_api_events.h)
PostPlayerEvent
  PostingEventListenerIterator
  {
    // To `PlayerEventThread`
    SYSTEMITC_API_PostEvent(PLAYER_MESSAGE_EVENT_EVENT)

    OR

    ProcessPlayerEvent
  }

PLAYER_SM_VRM_JobStarted
{
  // 0x80100001 to notify that a Play request has started.
  l_event_msg.event.type = PLAYER_EVENT_SESSION_START;

  PostPlayerEvent
}


typedef enum
{
    PLAYER_RECORDING_BASE_EVENT= 0,
    PLAYER_RECORDING_BASE_MANUAL,
    PLAYER_RECORDING_BASE_MAX_VALUE
} PLAYER_RECORDING_BASE;

typedef enum
{
    PLAYER_RECORDING_TYPE_COMPLETE= 0,
    PLAYER_RECORDING_TYPE_INPROGRESS,
    PLAYER_RECORDING_TYPE_MAX_VALUE
} PLAYER_RECORDING_TYPE;


<player-fsm>
PLAYER_STATE_ACTION g_PLAYER_VRM_State_ACreate[] =
{ PLAYER_EVT_JOB_CREATED,   PLAYER_SM_VRM_JobCreated },
 
PLAYER_SM_VRM_JobCreated
{
  PLANNER_API_Session_CheckForConflict( PLAYER_CheckForConflictListener );

  PLAYER_SM_VRM_StartJob
    VRM_JOB_Start
}


<live-case>
grep -an "PLAYER_API_Session_Play|PLAYER_PRV_Session_Play|PLAYER_AVControl_UpdateVisibility|VIDEO_RUNNING_STATUS"

SYSTEMJOB_TYPE_LIVE_VIEWING,  3

!MIL    -EPG_ME       < T:no name M:MediaEngine F:playService L:1485 > T:PooledExecutor#1:TUNING TO Sky1 HD, 106 locator:5:3:FDD
!MIL    -P_Api        < T:no name M:player_api_session.c F:`PLAYER_API_Session_Play` L:4106 > PLAY 
!MIL    -P_Api        < T:no name M:player_api_session.c F:PLAYER_PRV_Session_Play L:6157 > PLAY on target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:`PLAYER_AVControl_UpdateVisibility` L:1109 > VIDEO IS HIDDEN 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:8959 > VIDEO_`RUNNING_STATUS`: jtVRM=3, jhVRM=0x3000001, status=NOT_RUNNING 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessASI L:9182 > AUDIO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000001 [PROCESSED_ASI (524952) NOT_RUNNING] [SELECTION_ASI (524952) NOT_RUNNING] 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobStopped L:9849 > Job 0x03000001 STOPPED on Display Target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobDestroyed L:10102 > Job 0x03000001 DESTROYED on Display Target MAIN_TARGET 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessSSI L:4224 > FRONT END SIGNAL LOCKED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessSCI L:4668 > PMT RECEIVED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1932 > CA STREAM STATUS : ACCESS GRANTED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1932 > CA STREAM STATUS : ACCESS GRANTED 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1906 > CA STREAM STATUS : FREE TO AIR 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_PRV_CheckCAEI L:1906 > CA STREAM STATUS : FREE TO AIR 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessASI L:9182 > AUDIO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000003 [PROCESSED_ASI (524948) RUNNING] [SELECTION_ASI (524948) RUNNING] 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_JobStarted L:5829 > Job 0x03000003 STARTED on Display Target MAIN_TARGET 

!MIL    -MPM            T:MPM_PROXYMONITOR_THREAD M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:1374 > FRAME_PRESENTED: hMC=0x257 

!MIL    -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:1105 > VIDEO IS SHOWN 
!MIL    -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:8959 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000003, status=RUNNING 
!MIL    -EPG_ME       < T:no name M:MediaEngine F:tuningIsFinished L:4717 > T:PooledExecutor#4:SYSTEMTEST tuning complete
!MIL    -EPG_ME       < T:no name M:MediaEngine F:channelChanged L:2027 > T:PooledExecutor#4:CHANNEL CHANGED TO Sky1 HD, 106


1. EPG calls a function to create a session and get a handle.

APP: session.play(playLoc, true, data.getSessionUserTag());

If selectDefaults is set to TRUE the new source starts playing immediately.

public void play(SystemLocator sourceLocator,
  boolean selectDefaults,
  int locatorUserTag)
  throws PlayerHealthCheckException, PlayerActiveStandbyException
{
  natPlayerApiSessionPlayLive
    (nativeHandle,sourceLocator,selectDefaults,locatorUserTag);
}

PLAYER_JAVA_SessionPlayLive
{
  jobject jSourceLocator                  = *(jobject*)env->params[1];
  NDSJNI_GetField(env, jSourceLocator, "nativeHandle", "I", &sourceLocatorHandle,);

  /* create a parameter bag */
  PLAYER_API_Session_CreatePlayParameters(PLAYER_API_PlayParameterType_LIVE)
  {
    l_param_struct->type = type;
  }

  /* set source locator in parameter bag */
  PLAYER_API_Session_SetSystemLocatorPlayParameter(parameterBagHandle, \
      PLAYER_API_PlayParameterProp_Locator_SourceLocator, sourceLocatorHandle)
  {
    SYSTEMLOCATOR_Clone(sourceLocatorHandle, &(l_param_struct->source));
  }

  /* set speed in parameter bag */
  /* set origin type for play position */
  /* set play position */
  PLAYER_API_Session_Play(parameterBagHandle)
  {
    'PLAYER_PRV_Session_Play'(l_param_struct->source)
    {
      /* Starting NEW job */
      PLAYER_JOB_SetJob
      {
        job->job_type = PLAYER_JOB_TYPE_LIVE;
        job->src_locator = param_struct->source;
      }

      PLAYER_PRV_Session_UpdateJob

      (void)sem_post(&(g_player_component.handle_protection_sem));

      /* MessageThread. */
      PLAYER_IdentifyScAndJob

      /* from a state machine. PLAYER_FindStateFunction in MessageThread. */
      PLAYER_SM_VRM_GetSessionFlagsValue
      {
        PLAYER_PIN_SendReEvaluate
      }

      /* from a state machine. PLAYER_FindStateFunction in MessageThread. */
      PLAYER_SM_VRM_PinReEvaluatePrePlay(PLAYER_JOB_DATA *job_data,)
      {
        PLAYER_SM_VRM_CreateVRMJob(PLAYER_JOB_DATA *job_data)
        {
          switch(job_data->job_type)
          {
            case PLAYER_JOB_TYPE_LIVE:
              l_job_type = SYSTEMJOB_TYPE_LIVE_VIEWING;
              l_src_locator = job_data->src_locator;

            case PLAYER_JOB_TYPE_PLAYBACK:
              l_job_type = SYSTEMJOB_TYPE_PLAYBACK;
          }

          SYSTEMLOCATOR_CreateEmpty(SYSTEMLOCATOR_PROTOCOL_URI, 
              SYSTEMLOCATOR_TYPE_SERVICE, &l_src_locator);
          SYSTEMLOCATOR_SetStringProperty(l_src_locator, 
              SYSTEMLOCATOR_PROPID_S_URI, l_uri_data);

          // get VRM JOB handle when return from this call.
          `VRM_JOB_Create`(l_job_type, l_pbag, PLAYER_VRM_EventDispatcher, 
              &(job_data->vrm_job_handle)))
            VRM_JOB_SERVER_Create

          // so this MIL means VRM JOB created
          // !MIL   -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c \
          // F:PLAYER_SM_VRM_CreateVRMJob L:1805 > 
          // Job 0x03000003 Created on Display Target MAIN_TARGET type=3 
        }
      }
    }
  }
}


<record-case>
!INFO  -P_Api        < M:player_uam.c F:PLAYER_UAM_SetBookingTypeForJob L:00872 > Booking Type = [ 0x11 ]  - RECORD - MANUAL

PLAYER_JAVA_SessionPlayRecording
{
	PLAYER_API_Session_CreatePlayParameters(PLAYER_API_PlayParameterType_PLAYBACK
	PLAYER_API_Session_Play
}

#
# playback
#
Interface PlayerSession.OriginType

BEGINNING (1)    Beginning of file 
CURRENT_POSITION (3)    Current position 
END (2)    End of file 

typedef enum MSM_REF_POINT_TAG
{
    MSM_REF_POINT_UNDEF = 0,		/*!< @brief uninitialized relative value */
    MSM_REF_POINT_VSTART, 			/*!< @brief relative to the vstart */
    MSM_REF_POINT_VEND,				/*!< @brief relative to the vend */
    MSM_REF_POINT_VORIGIN,			/*!< @brief relative to the vorigin */
    MSM_REF_POINT_LIVE,				/*!< @brief relative to the live recording. This value can only be negative */
    MSM_REF_POINT_POSITION,		    /*!< @brief absolute position */
    MSM_REF_POINT_CURRENT,  	    /*!< @brief current playback position */
    MSM_REF_POINT_VFLIST_START,     /*!< @brief relative to the v-file list start */
    MSM_REF_POINT_VFLIST_END,       /*!< @brief relative to the v-file list end */
    MSM_REF_POINT_LAST				/*!< @brief Last value (don't use it)*/
} MSM_REF_POINT;

#define     MSM_UNIT_INVALID				0x00000000U	/*!< @brief invalid value (don't use it) */
#define     MSM_UNIT_V_OFFSET				0x00000001U  /*!< @brief Offset from v-file in milliseconds (according to reference point) */
#define     MSM_UNIT_ABS_POSITION			0x00000002U  /*!< @brief Absolute position in milliseconds */
#define     MSM_UNIT_UTC					0x00000004U  /*!< @brief Absolute time in UTC */
#define 	MSM_UNIT_ABS_BYTES				0x00000008U  /*!< @brief Absolute position in bytes */
#define		MSM_UNIT_VFLIST_OFFSET          0x00000010U  /*!< @brief Offset from v-file list in milliseconds (according to reference point) */
#define		MSM_UNIT_VFLIST_ABS_POSITION    0x00000020U  /*!< @brief v-file list absolute position in milliseconds */
#define		MSM_UNIT_VFLIST_ABS_BYTES		0x00000040U  /*!< @brief v-file list absolute position in bytes */
#define     MSM_UNIT_LAST					0x000000FFU  /*!< @brief Last value (don't use it)*/


#
# BEGIN
#
343:!ERROR -J_PLAYER   < T:no name M:natPlayerSessionImpl.c F:PLAYER_JAVA_SessionPlayRecording L:00479 > KT: jSpeed=1000, jOriginType=1, jPosition=0
643:!ERROR -P_Api      < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_StartJob L:08200 > KT: relative=1 ; position=0, 
669:!MIL   -VRMS       < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=9, jhVRM=0x3000003
679:!WARN  -MSM_MDI    < T:MCM_ITCMAIN_THREAD M:meta_mem.c F:MetaMemAllocateContext L:00906 > Milestone : context 4, was allocated for META_CONTEXT 0x8000000f, memoryConnectionType META_MEMORY_CONNECTION_TYPE_PLAY_OF_PLAYBACK [11]
# MSM_UNIT_V_OFFSET(1)
802:!ERROR -VRMS       < T:VRM_SRV M:basic_play.c F:PlayActionConfiguringState L:01909 > KT: units = 0x1, refPoint=1, pos=(0, 0)
803:!WARN  -MSM        < T:VRM_SRV M:msm_sp.c F:MSM_SP_SetPosition L:00634 > Milestone : KT: MSM_SP_SetPosition hMC=0x5, MSM_UNIT_V_OFFSET, refPoint=1, pos=(0, 0)  Starts... 
2282:!MIL   -P_Api     < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:06277 > VIDEO_RUNNING_STATUS: jtVRM=9, jhVRM=0x3000003, status=RUNNING

#
# CURRENT
#
8524:!ERROR -J_PLAYER  < T:no name M:natPlayerSessionImpl.c F:PLAYER_JAVA_SessionPlayRecording L:00479 > KT: jSpeed=1000, jOriginType=3, jPosition=0
8824:!ERROR -P_Api     < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_StartJob L:08200 > KT: relative=1 ; position=0, 
8850:!MIL   -VRMS      < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=9, jhVRM=0x3000006
8860:!WARN  -MSM_MDI   < T:MCM_ITCMAIN_THREAD M:meta_mem.c F:MetaMemAllocateContext L:00906 > Milestone : context 4, was allocated for META_CONTEXT 0x80000011, memoryConnectionType META_MEMORY_CONNECTION_TYPE_PLAY_OF_PLAYBACK [11]
8949:!ERROR -VRMS      < T:VRM_SRV M:basic_play.c F:PlayActionConfiguringState L:01909 > KT: units = 0x1, refPoint=1, pos=(0, 13338)
8950:!WARN  -MSM       < T:VRM_SRV M:msm_sp.c F:MSM_SP_SetPosition L:00634 > Milestone : KT: MSM_SP_SetPosition hMC=0x8, MSM_UNIT_V_OFFSET, refPoint=1, pos=(0, 13338)  Starts... 
10464:!MIL   -P_Api    < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:06277 > VIDEO_RUNNING_STATUS: jtVRM=9, jhVRM=0x3000006, status=RUNNING

#
# END
#
16286:!ERROR -J_PLAYER < T:no name M:natPlayerSessionImpl.c F:PLAYER_JAVA_SessionPlayRecording L:00479 > KT: jSpeed=1000, jOriginType=2, jPosition=-10000
16635:!ERROR -P_Api    < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_StartJob L:08200 > KT: relative=2 ; position=-1, 
16661:!MIL   -VRMS     < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:03884 > VRM_JOB_START: jtVRM=9, jhVRM=0x3000009
16689:!WARN  -MSM_MDI  < T:MCM_ITCMAIN_THREAD M:meta_mem.c F:MetaMemAllocateContext L:00906 > Milestone : context 4, was allocated for META_CONTEXT 0x80000013, memoryConnectionType META_MEMORY_CONNECTION_TYPE_PLAY_OF_PLAYBACK [11]
16728:!ERROR -VRMS     < T:VRM_SRV M:basic_play.c F:PlayActionConfiguringState L:01909 > KT: units = 0x1, refPoint=2, pos=(-1, 4294957296)
16729:!WARN  -MSM      < T:VRM_SRV M:msm_sp.c F:MSM_SP_SetPosition L:00634 > Milestone : KT: MSM_SP_SetPosition hMC=0xb, MSM_UNIT_V_OFFSET, refPoint=2, pos=(-1, 4294957296)  Starts... 
18585:!MIL   -P_Api    < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:06277 > VIDEO_RUNNING_STATUS: jtVRM=9, jhVRM=0x3000009, status=RUNNING


// play for recording
//
public void play(SystemLocator sourceLocator, int speed, int originType, 
  int position,
  boolean selectDefaults, int locatorUserTag) 
  throws PlayerNoSkyPlusAuthorisationException, PlayerHealthCheckException, 
  PlayerActiveStandbyException
{
  assertValid();

  natPlayerApiSessionPlayRecording(nativeHandle,sourceLocator,speed,originType,position,
      selectDefaults,locatorUserTag);
}

PLAYER_JAVA_SessionPlayRecording
{
  /* Play this session!*/
  status = PLAYER_API_Session_Play(jSessionHandle, parameterBagHandle, selectDefaults, jLocatorUserTag);
}

PLAYER_PRV_Session_Play
{
   PLAYER_DIAG_LOG_INFO((" *** Starting new job but ACTIVE job exists"));
   PLAYER_DIAG_LOG_INFO((" ***  NOT MATCHING JOB New source is different from  active one queue it  "));

   PLAYER_JOB_SetJob

   PLAYER_PRV_Session_UpdateJob
   {
      PLAYER_PRV_Session_PlayRecording
      {
         /* Get the actual duration of the booked programme */
         if (PLANNER_API_STATUS_OK != PLANNER_API_BookedProgramme_GetPropertyUint32(l_bookedprogramme,
            PLANNER_API_BOOKEDPROG_PROPID_UINT32_ACTUAL_DURATION, &l_actual_duration))

         // update PLAYER_PLAY_PARAMETERS *l_param_struct->position with val from PLANNER.

         /* Get the last played position */
         if (PLANNER_API_STATUS_OK != PLANNER_API_BookedProgramme_GetPropertyUint32(l_bookedprogramme,
            PLANNER_API_BOOKEDPROG_PROPID_UINT32_LAST_VIEWED, &l_last_position))

         if( l_param_struct->origin == PLAYER_API_Origin_Current_Position )
         {
            // update l_param_struct->position
            l_param_struct->origin = PLAYER_API_Origin_Start;
            l_param_struct->position += (int32_t)l_last_position;
         }
         
         // check l_param_struct->position against l_actual_duration in case of PLAYER_API_Origin_Start.
         // in case ACTUAL_DURATION is NULL, the below doesn't get excuted.
         
         case PLAYER_API_Origin_Start:
         {
           if( l_actual_duration > 0U )
           {
             if ((l_param_struct->position) > ((int32_t)l_actual_duration))
             {
               l_status = PLAYER_API_STATUS_FAILURE;
               PLAYER_DIAG_LOG_ERROR(("Origin start: Play position greater than actual duration"));
             }
           }
           break;
         }
         
      }
      
      new_job->position_requested.vfile_offset_msec.offset = l_param_struct->position;
   }
   
   // only for PLAYER_JOB_TYPE_PLAYBACK
   PLAYER_Common_StoreLastViewedPosition(&l_sc_data->active_job);
   {
      if (PLANNER_API_STATUS_OK !=PLANNER_API_BookedProgramme_GetPropertyUint32(job_data->booked_programme_handle,
      	PLANNER_API_BOOKEDPROG_PROPID_UINT32_ACTUAL_DURATION,&l_booked_program_actual_duration))
      																	  
      /* faourik BEGIN MSCQ412942*/
      else if (PLANNER_API_STATUS_OK !=PLANNER_API_BookedProgramme_GetPropertyUint32(job_data->booked_programme_handle,
      	PLANNER_API_BOOKEDPROG_PROPID_UINT32_DURATION,&l_booked_program_duration))
      
      l_current_position = (uint32_t)PLAYER_PRV_GetStreamPosition(job_data, MSM_REF_POINT_VSTART, MSM_UNIT_V_OFFSET);		
      
      # only when 
      # if ( l_booked_program_duration <= l_booked_program_actual_duration )
      # calc diff between actual and current
      /* Save current position in the booked programme object */
      if (PLANNER_API_STATUS_OK != PLANNER_API_BookedProgramme_SetPropertyUint32(
      	   job_data->booked_programme_handle,
      	   PLANNER_API_BOOKEDPROG_PROPID_UINT32_LAST_VIEWED,
      	   l_current_position)) OR 0))
      	   
      # else
      PLAYER_DIAG_LOG_INFO(("Program Duration > Actual Program Duration"));
      /* Save current position in the booked programme object */
      if (PLANNER_API_STATUS_OK != PLANNER_API_BookedProgramme_SetPropertyUint32(
      	   job_data->booked_programme_handle,
      	   PLANNER_API_BOOKEDPROG_PROPID_UINT32_LAST_VIEWED,
      	   l_current_position))		
   }
}

# when swithing from playback to live, the above path executed and tried to save the viewed position. 
#
NDS: ^[00:29:38]0946686578.435795 !ERROR -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06328 > KT: PLANNER_API_BookedProgramme_GetPropertyUint32: the booked program actual duration is 417479 ms.
NDS: ^[00:29:38]0946686578.435916 !ERROR -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06329 > KT: PLANNER_API_BookedProgramme_GetPropertyUint32: the booked program duration is 1800000 ms.

NDS: ^[00:29:38]0946686578.443072 !INFO  -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06384 > Program Duration > Actual Program Duration
NDS: ^[00:29:38]0946686578.495156 !INFO  -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06393 > Set the position to [16842] .

# when playback next time
NDS: ^[00:29:51]0946686591.797667 !ERROR -P_Api        < M:player_api_session.c F:PLAYER_PRV_Session_PlayRecording L:03372 > KT: l_param_struct->origin(3), l_param_struct->position(0), l_last_position(16842) from PLN
NDS: ^[00:29:51]0946686591.797809 !ERROR -P_Api        < M:player_api_session.c F:PLAYER_PRV_Session_PlayRecording L:03377 > KT: l_param_struct->position(16842)

# when live
#
NDS: ^[00:30:05]0946686605.534106 !ERROR -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06328 > KT: PLANNER_API_BookedProgramme_GetPropertyUint32: the booked program actual duration is 444503 ms.
NDS: ^[00:30:05]0946686605.534228 !ERROR -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06329 > KT: PLANNER_API_BookedProgramme_GetPropertyUint32: the booked program duration is 1800000 ms.

NDS: ^[00:30:05]0946686605.541722 !INFO  -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06384 > Program Duration > Actual Program Duration
NDS: ^[00:30:05]0946686605.593245 !INFO  -P_Api        < M:player_common.c F:PLAYER_Common_StoreLastViewedPosition L:06393 > Set the position to [29608] .


####
# use LAST_POSITION in "AV_CONTENT" of PCAT. See comp-PCAT
#
'0:4294967295', # LAST_POSITION. 4294967295(0xFFFF FFFF)


PLAYER_PRV_GetStreamPosition is called continously during playback.


#
# VRM listener. This is for each job and 'PLAYER_PRV_VRMAllJobListener' is for all jobs.
#
PLAYER_SM_VRM_CreateVRMJob
	"VRM_JOB_Create"(l_job_type, PLAYER_VRM_EventDispatcher)
		PLAYER_VRM_EventDispatcher
		{
			PLAYER_GetVRMEvent
				case VRM_JOB_EVENT_MEDIA_STATUS_UPDATED: # 0x1 
				# !INFO  -P_Api        < M:player_common.c F:PLAYER_VRM_EventDispatcher L:00548 > VRM Job 0x03000003, Event 0x1
				#
					PLAYER_GetEventFromObject: 
					# get object updated obj type and set evt type corresponding to obj type.
						case SYSTEMOBJECT_TYPE_CASI: PLAYER_EVT_CASI. 
						case SYSTEMOBJECT_TYPE_VRSI: call PLAYER_GetEventFromVRSI

			SYSTEMITC_API_PostEvent(&(g_player_component.queue_id) : to MessageThread
		}

MT: FSM
	PLAYER_SM_VRM_ProcessCASI
		PLAYER_SM_VRM_CrossReferenceCA # CA AUDIO, VIDEO, TXT, and SUBTITLE event
			PLAYER_SM_VRM_PostCAComponentEvent(PLAYER_API_Session_Component_Video, PLAYER_EVENT_CA_VIDEO)
				PostPlayerEvent

# 
# RB. egrep -nr "(PLAYER_RB_ProcessCASI|KEY_PRESS|PLAYER_EVENT_RB_FAIL|PLAYER_VGC_GetViewingProblems)"
#
PLAYER_SM_VRM_CreateRecRB
	PLAYER_RB_CreateRecordBuffer(&job_data->rec_rb_handle, PLAYER_SM_VRM_RBHandler)
	{
		PLAYER_VTABLE_Create(&l_rb_data);
		l_rb_data->event_handler            = event_handler;

		VRM_JOB_Create('SYSTEMJOB_TYPE_RB_RECORD', PLAYER_RB_EventListener)
	}
	
PLAYER_RB_EventListener
	l_payload->event = PLAYER_EVT_RB
	
	case: job_event_notify->event == VRM_JOB_EVENT_MEDIA_STATUS_UPDATED
	case:
	else if(job_event_notify->event == VRM_JOB_EVENT_WARNING)
	{
	  if ( job_event_notify->payload.warning.warning_type == VRM_JOB_WARNING_TYPE_RB_RECORD_NOT_STARTING )
	  {
	      l_payload->data.review.event = PLAYER_EVT_RB_RECORD_NOT_STARTING;
	      l_payload->data.review.data = (uint32_t) job_event_notify->payload.warning.exception_type;
	  }
	SYSTEMITC_API_PostEvent(MT, PLAYER_EVT_RB)

MT:	
	# use PLAYER_RB_StateFunctions FSM
	# { PLAYER_EVT_CASI,                              PLAYER_RB_ProcessCASI },
	PLAYER_RB_ProcessCASI
	#
	# CAMM_MODULE_CAStreamStatusAccessDeniedOther = 0x7F # this comes from CAMM_INTERNAL_CreateAndSendCAStatusInfo
	# !INFO  -P_Api        < M:player_sm_rb.c F:PLAYER_RB_ProcessCASI L:01283 > Acces exception status is AccessDeniedOther 
	# this set 'rb_data->ca_problem_other = true' and lead to destroying the RB job

	
	#
	{ PLAYER_EVT_RB_RECORD_NOT_STARTING,            PLAYER_RB_HandleRBRecordNotStarting },	
	PLAYER_RB_HandleRBRecordNotStarting
		rb_data->event_handler(PLAYER_RB_EVENT_WARNING)
		
	PLAYER_SM_VRM_RBHandler
		case PLAYER_RB_EVENT_WARNING :
			l_event_msg.event.type = PLAYER_EVENT_RB_FAIL;
			PostPlayerEvent
			# app log for this is:
			# [  EPG_ME:INFO]: PlayerEventPump.processEvent: event --> com.nds.fusion.playerimpl.PlayerEventRBFailImpl


# seems that app should delete a event once notified?
#
PLAYER_JAVA_EventCommonImplDeleteEvent
	PLAYER_API_Event_Delete

#
# CA. When app get CA event from player, app uses VGC to get more infos. 
#
CASI	CA Status Information
CAEI	CA Entitlement Information

#define PLAYER_EVENT_CA                             0x82000000      
#/**< Represents all CA events notified by PLAYER */

#define PLAYER_EVENT_CA_VIDEO						0x82000001      
# /**< Notification of a Video elementry component CA exception. @see #PLAYER_EVENT_CA_Video_PropId */

#define PLAYER_EVENT_CA_AUDIO                       0x82000002      
#/**< Notification of a Audio elementry component CA exception. @see #PLAYER_EVENT_CA_Audio_PropId */

#define PLAYER_EVENT_CA_TELETEXT                    0x82000004      
#/**< Notification of a Teletext elementry component CA exception. @see #PLAYER_EVENT_CA_Teletext_PropId */

#define PLAYER_EVENT_CA_SUBTITLE                    0x82000008      
#/**< Notification of a Subtitle elementry component CA exception. @see #PLAYER_EVENT_CA_Subtitle_PropId */

PLAYER_VGC_GetViewingProblems
PLAYER_PRV_CheckFreeToAirStatus
	# CAMM_MODULE_CAStreamStatusAccessDeniedOther 0x7F. Picasso: PlayerEventCA.CAScrambledStatus

# app side
#
class PlayerEventCAVideoImpl
	getConditionID()
		PlayerEventCommonImpl.natGetUint32(nativeHandle, I_CA_COND_ID);
			# PLAYER_JAVA_EventCommonImplGetUint32 
			# 	PLAYER_API_Event_GetUint32
			# 		PLAYER_API_Video_PropId_Uint32_CACondId: from SYSTEMOBJECT_GetInteger(caei_handle, SYSTEMOBJECT_CAEI_PROPID_I_CA_CONDITION_ID )
 
946685486026: PooledExecutor#0: [  EPG_ME:INFO]: PlayerEventPump.processEvent: event --> com.nds.fusion.playerimpl.PlayerEventCAVideoImpl
946685486365: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.handlePlayerEventCA: 
946685486034: threadtracker: [  EPG_ME:INFO]: GuideRetrievalEventPump.notifySuccess: 
946685486369: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.contentCheck: contentCheck has condition: 48 handle: 50331657
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo: CAContentCaInfo:
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Operation status:                       1 (OPERATION_STATUS_SUCCESS)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   CA service ID:                          16
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Purchase information available:         false
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement type:                       1 (ENTITLEMENT_TYPE_SUBSCRIPTION)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot type:                  1 (SLOT_TYPE_SUBSCRIPTION)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot number:                0
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Promo ID:                               65535
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   SI sync token:                          -1
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Allowed taping modes:                   1 (ANALOG_TAPING_ALLOWED)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of viewing problems:             0
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of exceeded limits:              0
946685486389: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: 0 CONTENT PROBLEMS
946685486390: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.extractMWContentProblem: topMWProblem=-1

946685486391: PooledExecutor#0: [  EPG_ME:INFO]: PlayerEventPump.processEvent: event --> com.nds.fusion.playerimpl.PlayerEventCAAudioImpl
946685486395: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.handlePlayerEventCA: 
946685486399: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.contentCheck: contentCheck has condition: 48 handle: 50331657
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo: CAContentCaInfo:
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Operation status:                       1 (OPERATION_STATUS_SUCCESS)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   CA service ID:                          16
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Purchase information available:         false
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement type:                       1 (ENTITLEMENT_TYPE_SUBSCRIPTION)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot type:                  1 (SLOT_TYPE_SUBSCRIPTION)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot number:                0
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Promo ID:                               65535
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   SI sync token:                          -1
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Allowed taping modes:                   1 (ANALOG_TAPING_ALLOWED)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of viewing problems:             0
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of exceeded limits:              0
946685486753: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: 0 CONTENT PROBLEMS
946685486754: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.extractMWContentProblem: topMWProblem=-1


#-----------------------------------------------------------
# PLAYER_JAVA_AVControlImpl_MuteSubtitles: PLAYER_API_AVControl_SetSubtitleMute(bool mute)
#-----------------------------------------------------------
# use to on/off subtitle
# 
# end up with 'PLAYER_Subtitles_Update' call


#-----------------------------------------------------------
# PLAYER_JAVA_SessionSetSubtitlesLocalSetting: PLAYER_API_Session_SetSubtitlesLocalSetting(PLAYER_API_Session_LocalSetting_Type)
#-----------------------------------------------------------
# The override setting is used to determine whether subtitles are
# output, instead of the PREFS value.
#
# PLAYER_API_Session_LocalSetting_Type:
#    PLAYER_API_Session_LocalSetting_Enabled    = 1U,  /*!< Override setting is enabled */ -> On
#    PLAYER_API_Session_LocalSetting_Disabled   = 2U,  /*!< Override setting is disabled */ -> Off
#
# set:
#    active_job.subtitles_local_setting = st_local_setting
#
# g_PLAYER_VRM_State_Running: state machine
#  { PLAYER_EVT_SUBTITLES_LOCAL_SETTINGS_UPDATE, PLAYER_SM_VRM_ProcessSubtitlesLocalSettingsUpdate },
#
# PLAYER_SM_VRM_ProcessSubtitlesLocalSettingsUpdate -> PLAYER_Subtitles_Update -> PLAYER_Subtitles_Update_p
# -> PLAYER_Subtitles_Can_Start_DVB
#
# Eventually, use 'subtitles_local_setting' to decide on/off and not use any other vars and calls.


{player-events-to-app}

   *player-something-timeout*
	void handlePlayerEventComponentFail(PlayerEventComponentFail event) throws PlayerDataUnavailableException
	{
		int failureCode = event.getFailure();

		switch (failureCode)
		{
			case NO_SERVICE_PROGRAM_ASSOCIATION:
				channelOffAirMonitor.noServiceProgramAssociation();
				break;

			case TIMEOUT:
				LOGGER.logError("SOMETHING TIMEDOUT in middleware (PLAYER_EVT_COMPONENT_FAIL_TIMEOUT)");
				setTechnicalFaultCondition(technicalFaultWithCodes(failureCode, PLAYER_COMPONENT_TIMEOUT));
				break;
      }
   }


(picasso/mediaengine/src/java/picasso/mediaengine/mediaengine.java)
public void onPlayerSessionEvent(PlayerEventSession event)

case PlayerEventSessionPinRequired.EVENT:


(picasso/mediaengine/src/java/picasso/mediaengine/"PlayerEventPump.java")

public interface PlayerEvent extends SystemCommonObject
{
	/**  Represents all events notified by PLAYER */
	public static final int	EVENT	= 0x80000000;
}


(MediaEngine/src/java/picasso/mediaengine/PlayerEventPump.java:76:)

listenerId = playerSession.registerPlayerEventListener(PlayerEvent.EVENT, this);


(impl/PlayerSessionImpl.java)

public class PlayerSessionImpl extends SystemCommonObjectImpl implements PlayerSession
{
		...
    public synchronized PlayerListenerID registerPlayerEventListener(int eventTypes, PlayerEventListener listener)
    {
        assertValid();

        PlayerListenerID listenerID = new PlayerListenerIDImpl();
        natPlayerApiSessionRegisterPlayerEventListener(nativeHandle,eventTypes,listener,new Object(),listenerID);
        return listenerID;
    }

    public void storePin(int pin )
    {
        assertValid();

        natPlayerApiSessionStorePIN(nativeHandle, pin);
    }
}


public interface PlayerEventComponentFail extends PlayerEventMediaEvent
{
    /** Notification of a failure of the elementary components. */
    int EVENT = 0x80200100;

    interface Failure
    {
        int NO_PROGRAM_ASSOCIATIONS        = 1;
        int NO_SERVICE_PROGRAM_ASSOCIATION = 2;
        int NO_SERVICE_MAP                 = 3;
        int FAIL_NULL                      = 4;
        int TIMEOUT                        = 5;
    }
}


// jpa/modules/jpa-impl/src/c/src/natPlayerSessionImpl.c

        /* make the native call */
        status = PLAYER_API_Session_RegisterEventListener(jSessionHandle, jEventTypes,
                                                          &PLAYER_JAVA_PlayerEventListener,
                                                          (PLAYER_API_TAG)currentRegistrationRequest,
                                                          &listenerHandle);

// event handle
void PlayerListenerCallbackExecution(const PLAYER_EVENT_LISTENER_OBJECT_DATA * listener, uint32_t event_handle)
{
    PLAYER_DIAG_LOG_FN_ENTRY(("PlayerListenerCallbackExecution()"));
    (void)listener;

    listener->listener( listener->sessionUserTag, listener->session, (PLAYER_API_Event_Handle)event_handle );
} /* --------------------------------------------------- */


typedef enum
{
    PLAYER_API_COMPONENT_FAIL_TIMEOUT                        = 5U,  /**< Timeout on getting service component information */
} PLAYER_API_Component_Fail;


/**
 * @brief Callback for component fail alarms. This will trigger our message thread to
 *        check whether we have received `an SCI object for the active job` and signal a
 *        PLAYER_API_COMPONENT_FAIL_TIMEOUT if we haven't.
 *
 * @param[in] handle Alarm handle
 * @param[in] user_data_handle VRM job handle for the corresponding play job
 */


/** Component fail timeout in ms */
player.cfg
406:COMPONENT_FAIL_TIMEOUT_MS=10000


#-----------------------------------------------------------
# PLAYER_JAVA_AVControlImpl_SetAVWindows: PLAYER_API_AVControl_UpdateDisplay
#-----------------------------------------------------------

#-----------------------------------------------------------
# PLAYER_JAVA_AVControlImpl_SetVisibility: PLAYER_API_AVControl_SetVisibility
#-----------------------------------------------------------

#-----------------------------------------------------------
# PLAYER_JAVA_AVControlImpl_SetAVWindows: PLAYER_API_AVControl_SetWindows
#-----------------------------------------------------------

#-----------------------------------------------------------
# isRunning -> PLAYER_JAVA_TeletextImplIsRunning: PLAYER_JAVA_GetBoolProperty(PLAYER_API_Session_Component_Teletext)
#-----------------------------------------------------------
PlayerTeletextImpl.java (\darwin_platform\darwin_player_java\impl):
public boolean isRunning() throws PlayerDataUnavailableException
{
    if(!isValid)
        throw new SystemObjectReleasedException("operation performed on an invalid instance");
    
    return natIsRunning(nativeHandle);
}


#-----------------------------------------------------------
# registerPlayerEventListener -> natPlayerApiSessionRegisterPlayerEventListener -> PLAYER_JAVA_SessionRegisterPlayerEventListener ->
#   PLAYER_API_Session_RegisterEventListener(PLAYER_JAVA_PlayerEventListener)
#
#   MW PLAYER -> PLAYER_JAVA_PlayerEventListener -> JAVA Listener
#-----------------------------------------------------------

#-----------------------------------------------------------
# PR#18928: PIN wrongly displayed in banner on cancelling purchase. Player. Closed on 14 FEB 2011
#-----------------------------------------------------------

# refer to WP587

(\vobs\DARWIN_PLATFORM\DARWIN_PLAYER_JAVA\api\PlayerEventSessionPinNotRequired.java)
/**
  * Player session PIN NOT required event.
  */
public interface PlayerEventSessionPinNotRequired extends PlayerEventSession
{
    /* Notification that a PIN is no longer required and the session can proceed.*/
    public static final int  EVENT =  0x80100200;

}

# source and log
(player_pin.c)
PLAYER_PIN_IsPinRequired
PLAYER_PIN_RequestPin
-> PLAYER_EVENT_SESSION_PIN_REQUIRED
PLAYER_PIN_HandleNeedForPinChange
PLAYER_PIN_RestorePinSettings

(player_api_session.c)
PLAYER_API_Session_CheckPIN

This is because plyaer got confused tp locators and thought these are different ones so sent a pin req event again. this is a pin req for rating. 

From player_pin.c in HR001 branch

/* MSCQ417648 begin */
#ifdef PLAYER_PROFILE_A
/**
 * @brief For a given play request, check whether we are in the process of transitioning
 *        from a live or review buffer job to the EPG transponder and then back again.
 *        This transition is performed when purchasing a PPV event and should not cause
 *        us to lock VGC otherwise we may issue an unnecessary PIN request when tuning
 *        back to the original service.
 *
 *        If the play request indicates that we are about to tune to the EPG transponder
 *        this interface will store the locator of the current service and the locator of
 *        the current event. When tuning from the EPG transponder this interface will
 *        check the stored service locator to determine if we are returning to the
 *        original service. The stored event locator will be checked when handling the
 *        SEI object after returning to the original service; VGC should be locked if we
 *        are not returning to the same event.
 *
 * @param[in] request Parameters of play request
 * @return A Boolean flag that indicates whether we are in the process of transitioning
 *         to/from the EPG transponder
 */

(David G)
Player is comparing the locator of the current active job (EPG transponder) with the locator within the PLAYER_PLAY_PARAMETERS structure 
specified by the caller and in this case they do not match and therefore Player resets the PIN properties.

I am now thinking that Player is failing to store or removing the locator for the previous service when moving to the EPG.

# rating checks
< T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessCASI L:04594 > Job is scrambled
< T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessCASI L:04595 > Limit exceeded: true


#-----------------------------------------------------------
# PR#22932: muteSubtitles not working. Player. Closed.  
#-----------------------------------------------------------
From p01.25 baseline, Picasso has changed its implementation to use only mute player API and this cause this problem when DCA back from SCR to CLR.

From log, when DCA back to CLR, player set subtile mute value(subtitle_muted) as 0 meaning subtiltle ON before APP call to subtitle ON.

---
NDS: ^0946685674.711695 !MIL   -MPM          < M:mpm_component_audio.c F:MPMComponentAudioStart L:00392 > DECODER_STARTED: hMC=20

NDS: ^0946685674.720560 !ERROR -P_Api        < M:player_dvb_subtitles.c F:PLAYER_Subtitles_Can_Start_Teletext L:00416 > 
KT: subtitle_muted=1 /prefs subtitles_enabled=1, local subtitles_enabled=0,speed_ok=1,history_enabled=0,subtitles_db_enabled=1 -->can_start_subtitles=1

NDS: ^0946685675.267676 !MIL   -MPM          < M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:00652 > FRAME_PRESENTED: hMC=20

(This is WRONG)
NDS: ^0946685675.289179 !ERROR -P_Api        < M:player_dvb_subtitles.c F:PLAYER_Subtitles_Can_Start_Teletext L:00416 > 
KT: subtitle_muted=0 /prefs subtitles_enabled=1, local subtitles_enabled=0,speed_ok=1,history_enabled=0,subtitles_db_enabled=1 -->can_start_subtitles=1

NDS: ^0946685676.759576 !ERROR -P_Api        < M:player_dvb_subtitles.c F:Set_Visibility L:01052 > KT: Set_Visibility : subtitle_muted=0,visibility=1

(APP API CALL)
NDS: ^0946685680.356890 !ERROR -P_Api        < M:player_api_avcontrol.c F:PLAYER_API_AVControl_SetSubtitleMute L:01817 > KT: Set Subtitle Mute =0

NDS: ^0946685680.357351 !ERROR -P_Api        < M:player_dvb_subtitles.c F:PLAYER_Subtitles_Can_Start_Teletext L:00416 > 
KT: subtitle_muted=0 /prefs subtitles_enabled=1, local subtitles_enabled=0,speed_ok=1,history_enabled=0,subtitles_db_enabled=1 -->can_start_subtitles=1


There is a Player fix which revise Player muteSubtile API and resolves this and other problem. The other problem is subtile over guide when coming out of stand by mode. Previously, this API works only when video is running. 


#-----------------------------------------------------------
# PlayTone
#-----------------------------------------------------------
PLAYER_API_AVControl_PlayTone
	MPM_PRES_PlayTone
		MPM_IPCClient_CallServer(MPM_IPC_FUNCTION_ID_PRES_PLAY_TONE)
		
		MPM_IPCServer_HandleRPC
			SYSTEMITC_API_PostEvent(g_MPM_ITC_QUEUE_MAIN,MPM_ITC_EV_IPCSERVER_HANDLE_RPC)
			
			MPM_ITCMainThread
				f_MPM_ITC_main_handler
				{MPM_ITC_EV_IPCSERVER_HANDLE_RPC,       MPM_IPCServer_ProcessIncomingCall},         /* offset from MPM_ITC_EV_BASE */
				
				MPM_IPCServer_ProcessIncomingCall
					f_mpm_function_mappings
					{MPM_IPC_FUNCTION_ID_PRES_PLAY_TONE, MPM_PresPlayTone},
					
					MPM_PresPlayTone
						/* We've got the tone info, now check and see if we can get a pcm player */
						if (MPM_SHAREDDEVICE_IoctlWait(audio_clip_info->p_decoder.p_pcm_player->device_fd, PCM_PLAYER_FLUSH_BUFFER, NULL) != MPM_STATUS_OK)
						
						if (MPM_SHAREDDEVICE_IoctlWait(audio_clip_info->p_decoder.p_pcm_player->device_fd, PCM_PLAYER_TONE_START, &player_tone) != MPM_STATUS_OK)


#-----------------------------------------------------------
# PR#26485: moveToNextCACondition 
#-----------------------------------------------------------
# it's right to have the following in app as app need to wait when playback a recording in the CA hole:
in Picasso to not call moveToNextCACondition in the period between starting playback and getting a PlayerEventSessionStartImpl event 


{log-standby}

*player-blue-screen*

// player.cfg 

[BACKGROUND_COLORS]
DEFAULT_BLANCKING_COLOUR=0xFF0C0B4F # blue
DEFAULT_UNBLANCKING_COLOUR=0x0

note:
refer to "S 4: Handle Video Status" in darwin arch diagrams. UCM-292
Exit Standby [UCM-3154 ] / __Main [ UCM-3157 ] 
FSION-DSN-1823-WP100 - Scart Control.doc
Scart Control UCM-11437

!MIL   -AMS          < T:UAM_HP_THREAD M:dataClient.cpp F:DataClient::handleLiveEvents L:80 > STANDBY_OUT event 

!WARN  -PREFS_SRV    < P:MW t:0x017a9520 T:PREFS_PTHREAD M:prefs_hdmi_cec.c F:PREFS_HDMI_CEC_Process_OneTouchPlay_StateMachine L:826 > OTP state machine started... Attempting to wake-up TV 
!WARN  -PREFS_SRV    < P:MW t:0x017a9520 T:PREFS_PTHREAD M:prefs_hdmi_cec.c F:iterate_next_state L:739 > OneTouchPlay:  ONE_TOUCH_STATE_IDLE --> ONE_TOUCH_STATE_TV_WAKEUP_IMAGE | ONE_TOUCH_EVENT_TRIGGER_TV_WAKEUP[1] 

!MIL   -EPG_INIT     < P:APP T:PREFS_PTHREAD M:PowerOperatingModes F:`notifyOperatingMode` L:301 > T:threadtracker: notifyOperatingMode of state : 2
!MIL   -EPG_INIT     < T:PREFS_PTHREAD M:PowerOperatingModes F:setState L:230 > T:threadtracker:setState > ON

!MIL   -EPG_INIT     < T:no name M:InitialisationManager$OperatingEventListener F:`moveToActive` L:2201 > T:PooledExecutor#3:MOVING TO ACTIVE

!MIL    -EPG_INIT    < M:InitialisationManager$StateChanger F:startOperatingOn L:2285 > T:IM#0:`Starting state change to ACTIVE`
!MIL    -EPG_INIT    < M:WakeUpFromRegularStandby F:`reachedStateActive` L:37 > T:PooledExecutor#2:#NSS# Waking up from regular standby

!MIL   -JAE          < T:no name M:ceej_bsp.c F:ooBSP_write L:00803 > %%%%%%%  PICASSO ACTIVE STATE...    REACHED  %%%%%%%

!MIL   -EPG_TVVM     < M:SystemCommonObjectHandler F:requestProcessAction L:901 > T:PooledExecutor#4:ACTION_TUNE_AFTER_EXITING_STANDBY
!MIL   -EPG_TVVM     		< p:0x000001f5 P:APP t:0x2df3d520 T:no name M:Tuner F:doTuneToLocatedService L:507 > T:PooledExecutor#3:doTuneToLocatedService - TUNING
!MIL   -EPG_CONF     		< p:0x000001f5 P:APP t:0x2df3d520 T:no name M:ConflictAuthorizer F:doIsAuthorized L:143 > T:PooledExecutor#3:TUNING AUTHORIZED
!MIL   -EPG_TVVM     		< p:0x000001f5 P:APP t:0x2df3d520 T:no name M:Tuner F:playService L:193 > T:PooledExecutor#3:### Tuner.playService
!MIL   -P_Api        		< p:0x000001f5 P:APP t:0x2df3d520 T:no name M:player_api_session.c F:PLAYER_API_Session_Play L:4106 > PLAY 



!MIL   -EPG_ME       < T:no name M:MediaEngine F:playService L:01347 > T:PooledExecutor#1:TUNING TO Sky Intro, 998
!MIL   -P_Api        < T:no name M:player_api_session.c F:PLAYER_API_Session_Play L:03558 > PLAY
!MIL   -VRMS         < T:VRM_SRV M:job_man_srv.c F:JobManSrvStart L:04182 > VRM_JOB_START: jtVRM=jb-live, jhVRM=0x3000001
!MIL   -MPM          < T:MPM_PROXYMONITOR_THREAD M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:00970 > FRAME_PRESENTED: hMC=0x3
!MIL   -MPM          < T:MPM_PROXYMONITOR_THREAD M:mpm_component_video.c F:MPMComponentVideoFramePresentedHandler L:00971 > @@PMON@@,mark,hw,first-frame,3
!ERROR -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_SetVideoVisibility L:01316 > KT: l_back_color(0)
!MIL   -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:01184 > VIDEO IS SHOWN
!MIL   -P_Api        < T:PLAYER_MAIN M:player_sm_vrm.c F:PLAYER_SM_VRM_ProcessVSI L:07066 > VIDEO_RUNNING_STATUS: jtVRM=3, jhVRM=0x3000001, status=RUNNING


*to-standby*

!MIL   -EPG_INIT     < T:no name M:InitialisationManager F:`moveToStandby` L:00680 > T:PooledExecutor#4:MOVING TO STANDBY
!MIL   -JAE          < M:modules/jvm-glue/src/c/src/ceej_bsp.c F:ooBSP_write L:1359 > %%%%%%%  PICASSO STANDBY STATE...   REACHED  %%%%%%%
!MIL   -AMS          < T:UAM_HP_THREAD M:dataClient.cpp F:DataClient::handleLiveEvents L:76 > STANDBY_IN event 

!MIL    -EPG_INIT    < T:PREFS_PTHREAD M:PowerOperatingModes F:notifyOperatingMode L:301 > T:threadtracker: notifyOperatingMode of state : 1
!MIL    -EPG_INIT    < T:PREFS_PTHREAD M:PowerOperatingModes F:setState L:230 > T:threadtracker:setState > STANDBY
!MIL    -P_Api       < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_UpdateVisibility L:1109 > VIDEO IS HIDDEN 

!MIL   -MPM          < T:MPM_ITCMAIN_THREAD M:mpm_component_audio.c F:MPMComponentAudioStopDecodingReal L:00878 > DECODER_STOPPED: hMC=0x3
!MIL   -UAM          < T:UAM_HP_THREAD M:internal_pbag.c F:Internal_Pbag_Print L:00415 > UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_IN
!MIL   -MCM          < T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Free L:00502 > @@PMON@@,trace,mediacon,mc-free,3
!ERROR -P_Api        < T:PLAYER_MAIN M:player_api_avcontrol.c F:PLAYER_AVControl_SetVideoVisibility L:01316 > KT: l_back_color(-15987889)
!MIL   -MCM          < T:VRM_SRV M:mcm_mediaconn.c F:MCM_MEDIACONN_Destroy L:00569 > @@PMON@@,trace,mediacon,mc-destroy,3


picasso/java/picasso/initialisationmanager/InitialisationManager.java

	class OperatingEventListener implements IOperatingEventListener
	{
		@Override public void `doOn`(IKeyCode keyCode)
		{
			wakingup.wokenWithKey(keyCode);
			moveToActive();
		}
		private void moveToActive()
		{
			LOGGER.logMilestone("MOVING TO ACTIVE");
			disableKeyEvents();
      }
   }


private final IOperatingEventListener   operatingEventListener  = new OperatingEventListener();

	private void runStartupTask()
	{
		try
		{
			notifier.notify(new RebootNotification(theTime.timestampMS(), spmSystem.getWakeupCause(), spmSystem.getPassiveStandbySleepReason()));
		}
		catch (Exception e)
		{
			LOGGER.logMilestone("Failed to notify reboot reason" + e);
		}
		awtExecutor.runLater(new Runnable()
		{
			@Override public void run()
			{
				powerOperatingModesControl.setScartOperatingModeEventListener(operatingEventListener);
            }
      }
   }


picasso/java/picasso/initialisationmanager/PowerOperatingModes.java

// See WP100 - Scart Control
class PowerOperatingModes implements PrefsOperatingModeListener, IPowerKeyListener, IKeyListener
{
	public synchronized void setScartOperatingModeEventListener(IOperatingEventListener listener)
	{
		this.listener = listener;
	}

	class GoToActiveTask extends BaseTask
	{

		private final IKeyCode useKeyCode;

		GoToActiveTask(int mode, IKeyCode useKeyCode)
		{
			super(mode);
			Loggers.EPG_INIT.logMilestone("constructing GoToActiveTask");
			this.useKeyCode = useKeyCode;
		}

		@Override public void run()
		{
			Affirm.affirmNotNull(listener);

			notifyOperatingMode(mode); // this go notifyOperatingMode()
			listener.doOn(useKeyCode);
		}
	}

   // do not see this then means no callback from MW

	@Override public synchronized void notifyOperatingMode(int operatingMode)
	{
		Loggers.EPG_INIT.logMilestone(" notifyOperatingMode of state : " + operatingMode);

      // interface OperatingModes
      // {
      //     /**  The standby LED is illuminated and all outputs are disabled. */
      //     int STANDBY            = 1;
      //     /**  The power LED is illuminated and all outputs are enabled. */
      //     int ON                 = 2;
      //     /**  The power LED is illuminated and all output are enabled with the exception of the scart outputs, which remain disabled. */
      //     int ON_2ND             = 3;
      //     /**  The power LED is illuminated and all outputs are enabled.  The scart output is configured for CVBS. */
      //     int TV                 = 4;
      //     /**  The Power LED is illuminated and all outputs are enabled.  The scart output is configured for CVBS. */
      //     int DEEP_STANDBY       = 5;
      //     /**  The standby LED is illuminated and all outputs are disabled. */
      //     int DEEPSTANDBY_FORCED = 6;
      // }
      
		switch (operatingMode)

      case PrefsTerminal.OperatingModes.ON:
      case PrefsTerminal.OperatingModes.ON_2ND:
      case PrefsTerminal.OperatingModes.TV:
         setState(ON);
		   // Loggers.EPG_INIT.logMilestone("setState > " + state);
         break;
   }

	@Override public synchronized void doOn()
	{
		actionOperatingMode(OperatingModeEvents.ON, IKeyCode.POWER);

	}

	private void actionOperatingMode(int mode, IKeyCode keyCode)
   {
      // interface OperatingModeEvents
      // {
      //     /**  TV Button pressed on 1st location remote control. */
      //     int TV                 = 1;
      //     /**  TV Button pressed on 2nd location remote control. */
      //     int TV_2ND             = 2;
      //     /**  Sky, TV Guide, Box Office, Services or Interactive Button pressed on 1st location remote control. */
      //     int SKY                = 3;
      //     /**  Sky, TV Guide, Box Office, Services or Interactive Button pressed on 2nd location remote control. */
      //     int SKY_2ND            = 4;
      //     /**  On/Off Button pressed on 1st location remote control. */
      //     int ON_OFF             = 5;
      // }
      task = new `GoToActiveTask`(mode, decider.useKeyCode);
   }

}

// `mode` is interface OperatingModeEvents but not OperatingMode
!MIL    -EPG_INIT     		< M:PowerOperatingModes F:actionOperatingMode L:384 > 
  T:CEE-J EventQueue Reader 0:actionOperatingMode - mode > 5 currentState > ON

operatingMode      32 jpa/modules/jpa-api/src/java/com/nds/fusion/prefs/PrefsOperatingModeListener.java      void notifyOperatingMode(int operatingMode);

<send-event>

sendOperatingModeEvent  541 picasso/java/picasso/initialisationmanager/PowerOperatingModes.java                         
  prefsTerminal.sendOperatingModeEvent(mode);

// jpa/modules/jpa-api/src/java/com/nds/fusion/prefs/PrefsTerminal.java

    /**
     * Sends an operating mode to the terminal triggered by a user action
     * @param operatingModeEvent
     * {@link PrefsTerminal.OperatingModes} event.
     */
    void sendOperatingModeEvent(int operatingModeEvent);


// jpa/modules/jpa-impl/src/c/src/natPrefsTerminalImpl.c

JNIEXPORT void JNICALL Java_com_nds_fusion_prefsimpl_PrefsTerminalImpl_natPrefsApiTerminalSendOperatingModeEvent
  (JNIEnv *env, jclass jClass, jint param1, jint param2)
{
    PREFS_API_TerminalHandle terminalHandle     = (PREFS_API_TerminalHandle)param1;
    PREFS_API_TERMINAL_OperatingModeEvent event = (PREFS_API_TERMINAL_OperatingModeEvent)param2;
    SYSTEM_STATUS status                        = PREFS_API_STATUS_FAILURE;

    JPA_DIAG_DECLARE_FUNCTION;
    DIAG_LOG_FN_ENTRY(g_prefs_adaptor_api_diag_segment_id);

    status = PREFS_API_TERMINAL_SendOperatingModeEvent(terminalHandle, event);

    (void)PREFS_JAVA_ParseReturn(env, status);

    DIAG_LOG_FN_EXIT(g_prefs_adaptor_api_diag_segment_id, status);
}

/** @brief Send an operating mode event to the TERMINAL interface.
  *
  * @param[in] terminal_handle The handle for this terminal object
  * @param[out] operating_mode_event Event that `has to be notified`
  *
  * @return PREFS_API_STATUS_OK on success.
  * @return PREFS_API_STATUS_FAILURE in case of error.
  */
SYSTEM_STATUS PREFS_API_TERMINAL_SendOperatingModeEvent(
    PREFS_API_TerminalHandle terminal_handle, PREFS_API_TERMINAL_OperatingModeEvent operating_mode_event)
{

}

<callback>
// jpa/modules/jpa-api/src/java/com/nds/fusion/prefs/PrefsOperatingModeListener.java

/** Listener for notifications of operating modes
*<p>
* The listener is defined and instantiated by the application and registered using the 
* {@link PrefsTerminal#`registerOperatingModeListener`} method.
* Whenever an {@link PrefsTerminal.OperatingModes} event occurs, {@link #notifyOperatingMode notifyOperatingMode}
* method is called with an operating mode parameter.
* </p>
*/

// jpa/modules/jpa-impl/src/java/com/nds/fusion/prefsimpl/PrefsTerminalImpl.java

	/**
	 * Registers a listener which is called `whenever an operating mode changes`
	 *
	 * @param operatingModeListener An instance of a {@link com.nds.fusion.prefs.PrefsOperatingModeListener} object.
	 * @return None.
	 */
	@Override public void registerOperatingModeListener(PrefsOperatingModeListener operatingModeListener)
	{
		synchronized (synchronizationObject)
		{
			natPrefsAPITerminalRegisterOperatingModeListener(nativeHandle, operatingModeListeners.registerNew(operatingModeListener));
		}
	}


// jpa/modules/jpa-impl/src/c/src/natPrefsTerminalImpl.c

JNIEXPORT void JNICALL Java_com_nds_fusion_prefsimpl_PrefsTerminalImpl_natPrefsAPITerminalRegisterOperatingModeListener
(JNIEnv *env, jclass jClass, jint native_handle, jint callback_id)
{
    JPA_DIAG_DECLARE_FUNCTION;

    SYSTEM_STATUS status = PREFS_API_TERMINAL_RegisterOperatingModeListener((PREFS_API_TerminalHandle) native_handle,prefsOperatingModeCallback, callback_id);
    if (status != PREFS_API_STATUS_OK )
    {
        DIAG_LOG_ERROR(g_prefs_adaptor_api_diag_segment_id, ("PREFS_API_TERMINAL_RegisterOperatingModeListener call failed"));
    }

    (void) PREFS_JAVA_MaybeThrowException(env, status);

}


// DARWIN_PLATFORM/DARWIN_PREFS/src/client/prefs_api_terminal.c
// MW calls a callback directly

/** @brief Calls all the registered listener of a specified terminal handle.
  *
  * @param[in] terminal_handle the terminal handle
  * @param[in] mode it's the operating mode `coming from the server`
  * @param[in] auto_reply specifies if only the listener that belongs to the specified terminal handle has to be
  *            called or if all the listeners have to be called.
  */
void PREFS_TERMINAL_callOperatingModeListeners(PREFS_API_TerminalHandle terminal_handle,
                                               PREFS_API_TERMINAL_OperatingMode mode,
                                               bool auto_reply)
{
  f_PREFS_API_RegisterOperatingModeListeners[i].listener(mode, f_PREFS_API_RegisterOperatingModeListeners[i].user_tag);
}




UamMainRegisterToPrefs
	PREFS_API_RegisterSystemStateListener(UAM_DCM_Standby_cbPrefsNotification,)
UAM_DCM_Standby_cbPrefsNotification
UamDcmReceiveMessage

UAM_DCM_Internal_ProcessEvent
	Internal_Pbag_Print
	{
		DIAG_LOG_MIL(UamDiagSegmentId, ("UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_OUT"));
		or
		DIAG_LOG_MIL(UamDiagSegmentId, ("UAM_DCM_PARAM_DATA_INTERNAL_TYPE_STANDBY_IN"));
	}


SetBackgroundColour
PLAYER_API_AVControl_SetBackgroundColour
	PLAYER_PRV_SetBackgroundColour

PLAYER_SM_VRM_ProcessVSI
UpdateVideoRunningStatus
	PLAYER_AVControl_SetVideoVisibility
		PLAYER_PRV_SetBackgroundColour( blank or unblank )
		PLAYER_PRV_SetCompositionBackgroundColour
		BEM_OC_VideoComposition_SetBackgroundColour


# to GFX
Ceej_bsp.c
	Video_HandleCommit
		PLAYER_API_AVControl_InvalidateRectangle

CEEJ_BSP_Blit
	PLAYER_API_AVControl_UpdateDisplay

# exception
final public class PlayerEventRBStopImpl extends PlayerEventImpl
        implements PlayerEventRBStop
{
	private static final int UINT32_EXCEPTION = 2103; /** The exception code for the failure reason. */
	
    public PlayerEventRBStopImpl(int nativeHandle, int eventID, int userTag, boolean sameSession)
    {
        super(nativeHandle, eventID, userTag, sameSession);
    }
    
    public int getException() throws PlayerDataUnavailableException  {
        assertValid();
        return PlayerEventCommonImpl.natGetUint32(nativeHandle, UINT32_EXCEPTION);
    }
}

public abstract class PlayerEventCommonImpl
{
    protected static native int         natGetUint32(int eventHandle, int propId);
}

/*
 * Class:     com_nds_fusion_playerimpl_PlayerEventCommonImpl
 * Method:    natGetUint32
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_nds_fusion_playerimpl_PlayerEventCommonImpl_natGetUint32
  (JNIEnv *THIS, jclass jClass, jint param1, jint param2)
{
    NDSJNI_ENV env;

    env.THIS = THIS;
    env.jClass = &jClass;    
    env.params[0] = &param1;
    env.params[1] = &param2;

    PLAYER_JAVA_EventCommonImplGetUint32(&env);

    return (jint)env.returnVal;
}

(Player_api_events.h)
/**
 * Properties in event #PLAYER_EVENT_RB_STOP
 */
typedef enum
{
    PLAYER_EVENT_RB_Stop_PropId_Undef             = 2100U,
    PLAYER_EVENT_RB_Stop_PropId_Uint32_UserTag    = 2101U, /**< User Tag data passed in #PLAYER_API_Session_Play */
    PLAYER_EVENT_RB_Stop_PropId_Uint32_SessionId  = 2102U, /**< Session handle passed in #PLAYER_API_Session_Play */
    PLAYER_EVENT_RB_Stop_PropId_Uint32_Exception  = 2103U,  /**< The exception code for the failure reason. See "system_exception.h" */
    PLAYER_EVENT_RB_Stop_PropId_LastValue         = 2104U

} PLAYER_EVENT_RB_Stop_PropId;


PLAYER_API_Event_GetUint32(eventHandle, propId, &(env->returnVal))
{
	case PLAYER_EVENT_RB_Stop_PropId_Uint32_Exception:
		if( (l_event->event.type & PLAYER_EVENT_RB_STOP) == PLAYER_EVENT_RB_STOP )
		{
			*value = l_event->event.data.rb.stop.exception;
			l_status = PLAYER_API_STATUS_OK;
		}
		break;
}


={============================================================================
|kt_dev_si_0001| comp-sharedplanner

# In order to increase the number of imported Shared Planner bookings in the system we need to change the system common config file:
[parkkt@ukstbuild3 config]$ egrep -an 'IMPORTED_BOOKINGS' *.cfg
systemcommon.cfg:69:[SP_IMPORTED_BOOKINGS_LIMIT]
systemcommon.cfg:70:SP_IMPORTED_BOOKINGS_LIMIT=6000
systemcommon.cfg:71:[SP_IMPORTED_BOOKINGS_RESYNC_THRESHOLD]
systemcommon.cfg:72:SP_IMPORTED_BOOKINGS_RESYNC_THRESHOLD=5950
systemcommon.cfg:73:[SP_IMPORTED_BOOKINGS_WARNING_THRESHOLD]
systemcommon.cfg:74:SP_IMPORTED_BOOKINGS_WARNING_THRESHOLD=5900

systemcommon.cfg:27:MAX_NUMBER_OF_BOOKINGS=2000
systemcommon.cfg:28:MAX_PDL_BOOKINGS=100


# for a remote items, server_id and cds_locator should be set. there were issues that a remote item by filldisk isn't set cds and no checks in sbm.
# PCAT_CAT_PROP_CDS_LOCATOR
# Number of remote bookings.
$ sqlite3 PCAT.DB 'SELECT COUNT(*) FROM BOOKING_JOBS WHERE CDS_LOCATOR IS NOT NULL'
6000
# Number of local bookings.
$ sqlite3 PCAT.DB 'SELECT COUNT(*) FROM BOOKING_JOBS WHERE CDS_LOCATOR IS NULL'
5856

$ sqlite3 PCAT.DB 'select server_id from item i' | wc -l


={============================================================================
|kt_dev_si_0001| comp-planner

Planner uses PCAT to book/delete a recording or a reminder. 
native

// contacts
David McWha, Rana Ali


<planner-diag>
DARWIN_PLATFORM/DARWIN_PLANNER/src/planner_common.c

        /* General PLANNER DIAG segment */
        l_diag_status |= DIAG_LOG_RegisterTraceSegment(PLANNER_DIAG_NAME,
            (uint32_t)strlen(PLANNER_DIAG_NAME),
            (DIAG_CMN_tRPCTable_t*)NULL,
            (DIAG_LOG_uiSegmentId_t*)&g_planner_diag_segment_id);

        /* PLANNER VTable DIAG segment */
        l_diag_status |= DIAG_LOG_RegisterTraceSegment(PLANNER_VTABLE_DIAG_NAME,
            (uint32_t)strlen(PLANNER_VTABLE_DIAG_NAME),
            (DIAG_CMN_tRPCTable_t*)NULL,
            (DIAG_LOG_uiSegmentId_t*)&g_planner_vtable_diag_segment_id);

        /* PLANNER Low-Level Operation DIAG segment */
        l_diag_status |= DIAG_LOG_RegisterTraceSegment(PLANNER_COMMON_DIAG_NAME,
            (uint32_t)strlen(PLANNER_COMMON_DIAG_NAME),
            (DIAG_CMN_tRPCTable_t*)NULL,
            (DIAG_LOG_uiSegmentId_t*)&g_planner_common_diag_segment_id);

        /* PLANNER Iterator DIAG segment */
        l_diag_status |= DIAG_LOG_RegisterTraceSegment(PLANNER_ITERATOR_DIAG_NAME,
            (uint32_t)strlen(PLANNER_ITERATOR_DIAG_NAME),
            (DIAG_CMN_tRPCTable_t*)NULL,
            (DIAG_LOG_uiSegmentId_t*)&g_planner_iterator_diag_segment_id);


<planner-jpa>
// DARWIN_PLATFORM\DARWIN_PLANNER_JAVA
COMPONENT_NAME:= darwin_planner_native
NDS_BUILD_TYPE_darwin_planner_native = debug
DARWIN_PLATFORM\DARWIN_PLANNER_JAVA\src\inc\natPlannerCommon.h: 
  #define PLANNER_JAVA_DIAGNAME "J_PLANNER"

class PlannerSessionImpl
  iteratorCreateFiltered
    natPlannerApiSessionIteratorCreateFilteredAny
      PLANNER_JAVA_ApiSessionCreateIteratorFilteredAny
        JPA_VTABLE_Create

class PlannerBookedProgrammeIteratorImpl
  PlannerIteratorImpl.natPlannerIteratorDelete
    PLANNER_JAVA_IteratorDelete
      JPA_VTABLE_ReleaseElement


// ADPT_PLANNER

#define JPA_COMPONENT_CONFIG_FILE_NAME "java_adapters.cfg"
#define PLANNER_JAVA_MEMORY_POOL_SECTION_NAME "PLANNER_MEM_CONFIG"
[PLANNER_MEM_CONFIG]                                                                                                            
POOL_FLAGS=123
POOL_NAME="ADPT_PLANNER"
POOL_SIZE=4000

g_planner_native_mem_pool:
DARWIN_ADAPTOR_PLANNER_Init
{
  DARWIN_ADAPTOR_PLANNER_AllocateMemory
  {
    SYSTEMCOMMON_JAVA_AllocateMemory(&g_planner_native_mem_pool,PLANNER_JAVA_MEMORY_POOL_SECTION_NAME);
  }

  DARWIN_ADAPTOR_PLANNER_InitVTables(void)
  {
    // there are other many VTs for each I/F which are all linked to ADPT_PLANNER pool
    //
    if (!IS_OK(DARWIN_ADAPTOR_PLANNER_InitVTable((VTable_t**)&'g_planner_adaptor_IteratorCreateRequest',PLANNER_JAVA_IteratorCreateRequestConstructor,
            PLANNER_JAVA_IteratorCreateRequestDestructor)))
    {
      DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id,("Failed PLANNER_JAVA_InitVTable: g_planner_adaptor_IteratorCreateRequest"));
    }
  }
}


<when-recording-completed>

// only 
SYSTEM_STATUS PLANNER_BookedProgramme_GetBookingState( PCAT_VIEW_VALUE_LIST value_list);

// @brief Maps PCAT states to the PLANNER equivalent.
//
// @param[in] recording_state PCAT recording state
// @param[in] content_completion_state PCAT content completion state
// @param[in] failed value of PCAT property indicating if the recording failed or not.
// @returns PLANNER equivalent of the recording and content completion states
//
!INFO  -PLANNER      < p:000000ec t:015d3520 T:PLANNER_CB4 M:planner_bookedprogramme_properties.c 
  F:PLANNER_BookedProgramme_MapPCATState L:03888 > record_state: 5 completion_state: 2 failed: 0

PLANNER_API_BookingState PLANNER_BookedProgramme_MapPCATState(uint32_t record_state,uint32_t completion_state, bool failed);


<when-delete-recordings>
From a high level, on the middleware side, the following modules are
interacting during the deletion action. EPG sends a message to PLANNER to
start the removal of the booking and the planner forwards this to System
Booking Management (SBM) module on the middleware process. SBM does some
checks with PCAT and then sends a request to the Resource Management Framework
(RMF) to move the booking from the USER_QUOTA to the `RECYCLE_QUOTA`. PCAT
actions this, asynchronously responds back to RMF and then the confirmation
eventually reaches the PLANNER which forward it back to EPG. 


<planner-pool>
// pool PLANNER size 458752, g_planner_mem_pool
// it comes from planner itself but not planner jpa
[MEMORY_CONFIGURATION]
POOL_FLAGS=0
POOL_NAME="PLANNER"
POOL_SIZE=458752
SRM_POOL_FLAGS=0
SRM_POOL_NAME="PLANNER_SRM"
SRM_POOL_SIZE=20480


<planner-pcat-client>

#define DBVIEW_MEMMAN_CONFIG_FILE_SECTION_NAME "PCAT_MEMMAN_CONFIGURATION"
#define DBVIEW_MEMMAN_SRV_POOL_NAME "SERVER_POOL_NAME"
#define DBVIEW_MEMMAN_CLNT_POOL_NAME "CLIENT_POOL_NAME"

// from pcat_db.cfg

[PCAT_MEMMAN_CONFIGURATION]
CLIENT_POOL_FLAG=0
CLIENT_POOL_NAME="PCAT_VIEW_CLNT_POOL"
CLIENT_POOL_SIZE=400
SERVER_POOL_FLAG=0
SERVER_POOL_NAME="PCAT_VIEW_SRV_POOL"
SERVER_POOL_SIZE=580

SYSTEM_STATUS PLANNER_DBINTERFACE_InitPCAT(void)
{
    /* Initialize PCAT interface */
    if (PCAT_VIEW_Init() != PCAT_VIEW_STATUS_OK)
}

PCAT_VIEW_Init()
{
  /* IPC initialization */
  if (SYSTEM_STATUS_IS_OK(stat)) {
    stat = PCAT_VIEW_SRV_PROXY_Init();
  }
}

SYSTEM_STATUS PCAT_VIEW_SRV_PROXY_Init(void)
{
  status = SYSTEMCONFIG_GetStringValue(fileHandle, DBVIEW_MEMMAN_CONFIG_FILE_SECTION_NAME, DBVIEW_MEMMAN_CLNT_POOL_NAME, &len_pool_name, clnt_pool_name);
  PCAT_DIAG_LOG_IF_ERROR(PCAT_diag_segment_id, status, ("Can't read CLNT_POOL_NAME param from pcat_db.cfg"));

  // note: `PCAT_VIEW_CLNT_POOL`
  // `PcatViewVLPool`= `PcatViewProxyPool`;
  // 
  // // pcat_server_proxy.c
  // stat = `PCAT_VIEW_SRV_GetPrivatePool`(&PcatViewVLPool);
  // {
  //  *Pool = PcatViewProxyPool;
  // }

  status = MEMMAN_API_MemoryPoolCreateP(&`PcatViewProxyPool`, clnt_pool_name, clnt_pool_flag, NULL, (1024U * clnt_pool_size), 2048U, MEMMAN_API_MEMORY_POOL_NO_LIMIT);
}


<planner-vtable-debug>
Open Planner\inc\vtable.h and enable the following define:
/* #define ENABLE_VTABLE_DEBUG */


<planner-iterator> <BPH>
http://hetty.cisco.com/fusionmadesimple/index.php/PLANNER

// iterators, planner thread, func table (Planner DC 9.11.11)

The methods allow the user to manipulate iterators containing 'booked
programme objects'. 

The following points should be noted:

* The Iterator position sits between objects within the list. 
Getting the next or previous object moves the Iterator past or before the
object just retrieved.

* For example using `PLANNER_API_Iterator_GetNextIndex` at the initial
position would return 0, but PLANNER_API_Iterator_GetPreviousIndex would
`return -1` to indicate no previous objects.

// when called first time
F:PLANNER_API_Iterator_GetNextIndex L:00616 > KT: return l_index(0), l_count(10)


* Using PLANNER_API_Iterator_CreateNextElement at the initial position returns
the object at index 0, and moves the Iterator past index 0, so that
PLANNER_API_Iterator_GetNextIndex would return 1.  Using
PLANNER_API_Iterator_CreatePreviousElement at this point would also return the
object at position zero, and move the Iterator back before position 0.

* All objects retrieved from the Iterator `must be deleted` when finished with. 

* Planner Booked Programmes

The EPG manipulates bookings themselves using booked programme handles. These
are references to booking data that the EPG can receive on adding a new
booking or getting a booking-related notification, retrieve `using iterators` or
lists, or find using a catalog locator. The EPG can then use this handle to
access booking properties, remove/move a booking, stop-and-save/resume the
booking's recording or download, and make a series link (as shown in the
    screenshot above), for example. The operations permitted on any given
booked programme are determined by its "subclass".

The EPG is responsible for deleting the booked programme handle, even if the
EPG retrieved it from an iterator or list. This allows Planner to release
associated resources. 


* The rebuild routine takes as its arguments the previous and current Iterator
position. This data is used to determine which blocks should be freed or
retrieved.


// NOTE:
// sid(session) is a unique key. Each session populate iterators that has id as
// a count. In a specific session, iid is unique but iterator pointer isn't as
// it's memory address that can be reused when iterator is requested.
//
// iid can be the same between sessions as it's simple counter in a session.
//
// Therefore, can be analysied per a session.
//
// vtable id(handle)s are simple idx of vtable such as sid and iid.
//
// IC
// ===========
// PLANNER_JAVA_ApiSessionCreateIteratorBookmarks
// 	DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("KT-I: JICB:" ));
//
// PLANNER_JAVA_ApiSessionCreateIteratorCopyList
//	DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("KT-I: JICC:" ));
//
// PLANNER_JAVA_ApiSessionCreateIteratorFilteredAny
//	DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("KT-I: JICFA: op=%d, st=%d, ft=%d", operationType, jSortType, jFilterType ));


{session}

<how-many-sessions>
ATG. JPA. GUIDE. PLAYER are creating planner sessions.

!INFO   -PLANNER                   < p:0x000001f0 P:APP t:0x0131c520 T:ATG_CLIENT_HANDLE_EVENTS M:planner_api.c F:PLANNER_CreateSessionCommon L:565 > Created session 0x1.
!INFO   -PLANNER                   < p:0x000001f0 P:APP t:0x012f9520 T:PLAYER_MAIN M:planner_api.c F:PLANNER_CreateSessionCommon L:565 > Created session 0x2.
!INFO   -PLANNER                   < p:0x000001f0 P:APP t:0x0116d520 T:GUIDE_MAIN M:planner_api.c F:PLANNER_CreateSessionCommon L:565 > Created session 0x3.
!INFO   -PLANNER                   < p:0x000001f0 P:APP t:0x2e0ef520 T:no name M:planner_api.c F:PLANNER_CreateSessionCommon L:565 > Created session 0x4.

// M:atg_api.c F:ATG_SysinitRunLevelHandler() L:02845 > KT: PLANNER_API_CreatePlannerSession: 0x1
// M:player_common.c F:PlayerAsyncRequestActive L:02311 > KT: g_player_component.planner_session 0x2
// M:guide_api_session.c F:GuideSessionRetrievalHandler L:01868 > KT: planner session 0x3
// M:natPlannerSessionImpl.c F:PLANNER_JAVA_ApiSessionPlannerCreate L:00092 > KT: PLANNER_JAVA_ApiSessionPlannerCreate `0x4`

# planner_api.c
#
# session node in g_planner_sessionsList get created only when it's called and
# each session has iterators and other tables.
#
# PLANNER_API_CreateSession(depricated) 
# PLANNER_API_CreatePlannerSession(this is only valid one) 
# PLANNER_CreateSessionVTables session_index is a session handle

l_VTableretVal |= VTABLE_Create(&g_planner_sessionsList, (void **)l_new_session_ptr, session_index, sizeof(PLANNER_SESSION_T));
l_VTableretVal |= VTABLE_InitTable(&(l_new_session->iterators), 'g_planner_mem_pool', g_planner_diag_segment_id, NULL, 100);
l_VTableretVal |= VTABLE_InitTable(&(l_new_session->elements), g_planner_mem_pool, g_planner_diag_segment_id, NULL, 100);
l_VTableretVal |= VTABLE_SetCreateElementFunction(&(l_new_session->iterators), PLANNER_Iterator_Init);
l_VTableretVal |= VTABLE_SetDeleteElementFunction(&(l_new_session->iterators), 'PLANNER_Iterator_Delete');
l_VTableretVal |= VTABLE_SetDeleteElementFunction(&(l_new_session->elements), 'PLANNER_Element_Delete');


// PlannerFilterType.java
public interface PlannerFilterType

typedef struct {
    VTable_t                longLists;
    `VTable_t                iterators`;
    VTable_t                params;
    VTable_t                requests;
    VTable_t                shortLists;
    'VTable_t                elements';
    uint32_t                self_handle;
    PLANNER_API_SessionStatusChangeCb listener;
    PLANNER_API_UserTag     user_tag;
} PLANNER_SESSION_T;


/* A structure containing PCAT vlist and the position in the view 
   of first (min) and last element(max) of the vlist. */
typedef struct
{
    PCAT_VIEW_VALUE_LIST vlist;
    uint32_t min;
    uint32_t max;
} PLANNER_ITERATOR_VLIST_T;

typedef struct
{
    `PCAT_VIEW_HANDLE view;`
    PCAT_VIEW_SPEC_HANDLE viewspec;

    /* Position of iterator within the view */
    uint32_t position;
    /* Locator of element at position, used for position adjustments */
    PCAT_VIEW_OBJECT_ID element_at_position;
    /* Number of elements in the iterator */
    'int32_t count';

    /* VTABLE of PLANNER_ITERATOR_VLIST_T */
    `VTable_t vlists`;

    /* Handle to view parameters: filter, sort types and others.*/
    `PLANNER_PARAMETER_T* params`;

    PLANNER_API_Parameter_Handle param;
    PLANNER_SESSION_T  *session;
    pthread_mutex_t	   mutex;
    pthread_mutex_t	   api_mutex;
} PLANNER_ITERATOR_T;


<app-calls>
iteraror create -> change listerner -> creation listerner -> hasNext ->
hasPrevious -> getNextIndex -> next -> get booking type
F:PLANNER_API_Iterator_GetNextIndex L:00616 > KT: return l_index(0),
  l_count(10) { hasNext -> next -> get booking type } do this loop until to
  get 6 items when created all BPH then call various apis to get props like
  type, string and int.

when press down key 6 times, it goes new page in the planner and then: hasNext
-> hasPrevious -> getNextIndex -> next -> get booking type
F:PLANNER_API_Iterator_GetNextIndex L:00616 > KT: return l_index(6),
  l_count(10)
 

public interface PlannerBookedProgrammeIteratorCreationListener
{
  /**
   * Notify the successful completion of operation.  @param userTag An opaque
   * value that the API receives and stores at the start of an asynchronous
   * operation and returns unchanged to the listener when the operation
   * completes.  @param iterator The reference of the {@link
   * PlannerBookedProgrammeIterator} just retrieved.  The user must set the
   * iterator to null when done with it. This is to prevent the resources from
   * being unnecessarily tied up and to enable garbage collection.
   */
  public void notifySuccess(Object userTag, PlannerBookedProgrammeIterator iterator);
}

public PlannerRequest iteratorCreateFiltered( PlannerBookedProgrammeIteratorCreationListener createListener, 
                                            PlannerBookedProgrammeIteratorChangeListener changeListener, Object userTag, 
                                            int sortType, int filterType,
                                            int genre, int subGenre )
                                            throws PlannerHealthCheckException
{
  PlannerBookedProgrammeIterator iterator = new PlannerBookedProgrammeIteratorImpl(createListener, changeListener, userTag);

  return new PlannerRequestImpl('`natPlannerApiSessionIteratorCreateFilteredAny`'(
        nativeHandle,					  // session handle 
        ListType.BOOKING_FILTERSORT,  // operation
        sortType, filterType, null, null,null, null, genre, subGenre, 
        iterator,                     // PlannerBookedProgrammeIterator for JAVA
        PlannerPpvFilterType.PPV_ANY));
}

public PlannerRequest iteratorCreateFilteredCollapsed( PlannerBookedProgrammeIteratorCreationListener createListener, 
        PlannerBookedProgrammeIteratorChangeListener changeListener, Object userTag, 
        int sortType, int filterType, int genre, int subGenre )throws PlannerHealthCheckException
{
  PlannerBookedProgrammeIterator iterator = new PlannerBookedProgrammeIteratorImpl(createListener, changeListener, userTag);

  return new PlannerRequestImpl('`natPlannerApiSessionIteratorCreateFilteredAny`'(
        nativeHandle, 
        ListType.BOOKING_FILTERSORT_COLLAPSED(2), 
        sortType(2), filterType(2), null, null,null,null, genre, subGenre, 
        iterator,
        PlannerPpvFilterType.PPV_ANY)); 
}

// list type(operation)
PLANNER_API_Parameter_ListTypeTag

// filter and sort type
typedef enum PLANNER_API_FilterTypeTag
typedef enum PLANNER_API_SortTypeTag

PLANNER_JAVA_ApiSessionCreateIteratorBookmarks
PLANNER_JAVA_ApiSessionCreateIteratorCopyList
PLANNER_JAVA_ApiSessionCreateIteratorFilteredAny
{
  // create params
  VTABLE_Create(g_planner_adaptor_IteratorCreateRequest, &vtable_handle );

  // save PlannerBookedProgrammeIterator from java call
  // iteratorCreateRequest is vtable ptr
  // this is java iterator that should map to planner iterator
  iteratorCreateRequest->iterator = jIteratorGlobal; 
  // for JPA
  iteratorCreateRequest->type     = 'PLANNER_JAVA_ITERATOR_TYPE_BOOKED_PROGRAMME'; 
  // from session mem
  PLANNER_API_Session_InitParameters;

  // save params from app, that's all java params
  PLANNER_JAVA_PopulateParameterBag( operationType, jSortType, jFilterType, );
  // l_param->t.list.filterType = filter_type;
  // l_param->t.list.sortType = sort_type;
  // l_param->t.list.listType = type;	// this is operationType
  // l_param->t.list.genre = value;


  // <planner-iterator-create>
  // `PLANNER_API_Session_IteratorCreate` 
  //
  // DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-I: SIC: iter=0x%x, iid=0x%x, \
  //  sid=0x%x, oper=%d, pfilter=%d, psort=%d, sess.iter.count=%d, sess.ele.count=%d viewh=0x%x",
  //  l_iterator, l_iterator_vtable_pos, session, 
  //  l_params->t.list.listType, l_params->t.list.filterType, l_params->t.list.sortType, icount, ecount, l_iterator->view ));
  //
  // M:planner_api.c F:PLANNER_Iterator_Init L:00417 > Created iterator @0x2b0a1ebc
  // M:planner_session.c F:`PLANNER_API_Session_IteratorCreate` L:01791 > 
  //   KT-I: SIC: iter=0x2b0a1ebc, iid=0x1, sid=0x4, optype=1, pfilter=15, psort=2, sess.iter.count=4, sess.ele.count=1 viewh=0x0
  
  // !ENTER  -PLANNER_ITERATOR		< p:0x00000252 P:APP t:0x2df8b520 T:no name M:planner_session.c F:PLANNER_API_Session_IteratorCreate L:2487 > |-> PLANNER_API_Session_IteratorCreate
  // !PARAM  -PLANNER_ITERATOR		< p:0x00000252 P:APP t:0x2df8b520 T:no name M:planner_session.c F:PLANNER_API_Session_IteratorCreate L:2490 > session = 0x4, param = 0x40001, create_callback = 0x576964, " "change_callback = 0x576940, user_tag = 0, request = 0x2df8a224 
  // !INFO   -PLANNER      		< p:0x00000252 P:APP t:0x2df8b520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_GetView_FromPCAT L:6276 > [filter_type 15] [index 15] 
  // !INFO   -PLANNER      		< p:0x00000252 P:APP t:0x2df8b520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_GetView_FromPCAT L:6284 > [sort_type 4] [index 4] 

  `PLANNER_API_Session_IteratorCreate`(PLANNER_JAVA_IteratorCreateListener, PLANNER_JAVA_IteratorChangeListener, /* user tagi */ vtable_handle, /*out*/ l_planner_request_handle)
  {
    // payload create
    PLANNER_Payload_Create(); 

    // get 'request' handle
    VTABLE_Create(&(l_session->requests), (void **)&req, request, sizeof(uint32_t));

    *req = (uint32_t)PLANNER_REQUEST_PROCESSING;

    // THIS IS ITERATOR ! from iterator vtable in a session.
    VTABLE_Create(&(l_session->iterators), (void **)&l_iterator, &l_iterator_vtable_pos, sizeof(PLANNER_ITERATOR_T));

    // set payload and iterator structure 
    // it's iterator pointer
    l_payload->data.iterator_creation.iterator = l_iterator;

    // SO ihandle will be (sessid + vtable pos)				
    // it's iteraror handle that app will have
    l_payload->data.iterator_creation.ihandle  = session << 16;

    // it's iterator's handle
    l_payload->data.iterator_creation.ihandle |= l_iterator_vtable_pos;

    l_payload->data.iterator_creation.request = *request;

    // PLANNER_JAVA_IteratorCreateListener
    l_payload->data.iterator_creation.create_callback = create_callback; 	

    l_iterator->param = param;

    // *map-iterator-and-view*
    // Try to get the view for iterator. try to get view if it's already exist. should be exist.
    // params->t.list.filterType and params->t.list.sortType on 'f_pcat_view_handles'
    `PLANNER_DBINTERFACE_GetView`('&(l_iterator->view)', &(l_iterator->viewspec), l_iterator->params)
    {
      PLANNER_DBINTERFACE_GetView_FromPCAT()
      {
        // <planner-view-name>
        *view = `f_pcat_view_handles`[i][j];
      }
    }

    // *map-iterator-and-vlist*
    // Try to initialise VTable for iterator's value lists. create vtable for a vlist
    VTABLE_InitTable('&(l_iterator->vlists)', `g_planner_mem_pool`, g_planner_diag_segment_id, NULL, 100);
    VTABLE_SetDeleteElementFunction(&(l_iterator->vlists), 'PLANNER_Iterator_VlistDelete');
    // PCAT_VIEW_VLIST_Free

    VTABLE_SetCreateElementFunction(&(l_iterator->vlists),PLANNER_Iterator_VlistCreate);

    // this is point where iterator creation was done without any problems.
    PLANNER_PostMessage('PLANNER_EV_SESSION_ITERATOR_CREATION', l_payload_handle);
  }

  // to java
  env->returnVal = (uint32_t)l_planner_request_handle;
}


// ITER DELETE
// `PLANNER_Iterator_Delete` THIS IS ACTUAL DELETION. SHOULD BE MATCHED WITH CREATION.
//
// this is a point more near to actual deletion than
// 'PLANNER_API_Iterator_Delete' since it's actually get deleted when there's
// no booked prog handle of iterator available at the time.
//
// DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-I: ID: iter=0x%x, sid=0x%x, sess.iter.count=%d, sess.ele.count=%d",
//	  l_iter, l_iter->session->self_handle, icount, ecount ));
//
// PLANNER_JAVA_IteratorDelete
// PLANNER_API_Iterator_Delete:
// DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-I: ID: iter=0x%x, iid=0x%x, sid=0x%x, iter.ecount=%d, sess.iter.count=%d, sess.ele.count=%d",
//    l_iter, l_iterId, l_sesId, l_iter->count, icount, ecount ));
//
// M:planner_api.c F:PLANNER_Iterator_Delete L:00167 > KT-I: ID: iter=0x2b0a1a40, sid=0x4, sess.iter.count=1, sess.ele.count=0
// M:planner_iterator.c F:PLANNER_API_Iterator_Delete L:00588 > KT-I: ID: iter=0x2b0a1cd0, iid=0x2, sid=0x4, iter.ecount=0, sess.iter.count=1, sess.ele.count=0


// `PLANNER_JAVA_IteratorNext`
// DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("KT: BPH-JIN: bph=0x%x", env->returnVal ));
//
// JNIEXPORT jint JNICALL Java_com_nds_fusion_plannerimpl_PlannerIteratorImpl_natPlannerIteratorNext
//   (JNIEnv *env, jclass jClass, jint param1)


!PARAM  -PLANNER_ITERATOR		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_iterator.c F:`PLANNER_API_Iterator_MoveToIndex` L:1655 > handle = 0x40001, position = 0 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_SetupTemporaryViewWithFilterSpec L:11250 > Creating temporary view PLANNER_TEMP0 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_PRV_CreateView L:7773 > [PLANNER_TEMP0] view created: [pcat_filter_type 1001][pcat_sort_type 1001][view_handle 0x700006f] 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_SetupTemporaryViewWithFilterSpec L:11275 > Changing the temporary view filter parameters 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_PRV_ApplyFilterParameters L:10914 > Creating a filter spec object 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_ExtractFilterParameterRuleSet L:7586 > Found near match in the filter params ruleset table (index = 37) for list_type(1) and filter_type(15) 
!INFO   -PLANNER      		< p:0x0000021f P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_ExtractFilterParameterRuleSet L:7586 > Found near match in the filter params ruleset table (index = 57) for list_type(1) and filter_type(15) 
!INFO   -PCATC        		< p:0x0000021f P:APP t:0x2e134520 T:no name M:pcat_server_proxy.c F:PcatServerProxy_Send L:653 > [API_CALL::IPC] " "IPC_TL_CLIENT_SendBig conn handle 0x3c0000c message id 0x2a message len 35 
!INFO   -PCATC        		< p:0x0000021f P:APP t:0x2e134520 T:no name M:pcat_server_proxy.c F:PcatServerProxy_Send L:666 > [API_CALL::IPC] " "done.  stat = 0x5c01000 
!INFO   -PCATC        		< p:0x0000021f P:APP t:0x0122d520 T:PCAT_PROXY_THREAD M:pcat_server_proxy.c F:PcatServerProxy_ReceivedStatus L:5601 > func_status=0x5c01000 
!RET    -PCATC        		< p:0x0000021f P:APP t:0x0122d520 T:PCAT_PROXY_THREAD M:pcat_server_proxy.c F:PcatServerProxy_ReceivedStatus L:5605 > Finished successfully.\n 
!WARN   -PCATC        		< p:0x0000021f P:APP t:0x2e134520 T:no name M:value_list_man_clnt.c F:PCAT_VIEW_VL_CreateEmpty L:279 > KIT: defined PCAT_ENABLE_EXTRA_VL_DEBUG 
{
  // `PCAT_VIEW_CLNT_POOL`
  // `PCAT_VIEW_VL_CreateEmpty`(view, &valueListLocal, &value_list);
  // `PCAT_VIEW_VL_Create`();
  (ValueListClntStruct* )MEMMAN_API_AllocElementP(PcatViewVLPool,ValuesListsAllocator);
}


<BPH>
http://hetty.cisco.com/fusionmadesimple/index.php/Planner_Excessive_Booked_Programme_Handles

// from planner.cfg
`EXCESSIVE_BOOKED_PROGRAMME_HANDLES_PER_SESSION`=50

/* PLANNER_BOOKED_PROGRAMME_HANDLE_DEBUG is defined in non-release builds to
 * report excessive numbers of booked programme handles.
 */
#ifdef PLANNER_BOOKED_PROGRAMME_HANDLE_DEBUG

// `BPH CREATE`
// static SYSTEM_STATUS PLANNER_StandardIterator_CreateElementAtIndex()
// {
//    // DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-BPH: BPC: sid=0x%x, bph(eh)=0x%x, sess.ele.count=%d",
//    // l_session->self_handle, element_handle, ecount ));
//    // M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_Create L:00170 > KT-BPH: BPC: sid=0x4, bph(eh)=0x2bac2568, sess.ele.count=7
//
//    // * @param[in]  session_handle Session handle
//    // * @param[in]  book_id        ID of the element in Value List.
//    // * @param[in]  booking_subclass The required booking subclass value
//    // * @param[out] `element_handle` Handle to newly created booked programme instance
//
//    // When a booked programme handle is created from the iterator, Planner
//    // `creates a PCAT value list` to suppport the reading of element properties. 
//
//    `PLANNER_BookedProgramme_Create`();
// }

#define `PLANNER_BookedProgramme_Create`(session_handle, book_id, booking_subclass, element_handle) \
    PLANNER_BookedProgramme_CreateDebug((session_handle), (book_id), (booking_subclass), __FILE__, __LINE__, (element_handle))
{
    PLANNER_BOOKEDPROGRAMME_T *l_booking = NULL;

    PLANNER_BookedProgramme_CreateInner(session_handle, book_id, booking_subclass, &l_booking, element_handle);
    {
      PLANNER_BookedProgramme_CreateWithSessionInner(l_session, book_id, SBM_USERBOOKING_LISTENER_ILLEGAL, booking_subclass, booking, element_handle);
      {
        // typedef struct PLANNER_BOOKEDPROGRAMME_S {
        //     PCAT_VIEW_VALUE_LIST  VL;
        // } PLANNER_BOOKEDPROGRAMME_T;

        PLANNER_BookedProgramme_CreateWithSessionInner(PLANNER_SESSION_T *l_session, PCAT_VIEW_OBJECT_ID book_id,
            VRM_JOB_HANDLE job_id, PLANNER_API_BookingSubclass booking_subclass,
            PLANNER_BOOKEDPROGRAMME_T **booking, PLANNER_API_BookedProgramme_Handle *element_handle)
        {
          PLANNER_BOOKEDPROGRAMME_T *l_booking = NULL;

          // note:
          // DO not set l_booking->VL. WHERE?
          
          l_element->type = PLANNER_ELEMENT_TYPE_BOOKING;
          l_booking = &(l_element->data.booking);
          l_status = PLANNER_API_STATUS_OK;
          l_booking->booking_subclass = booking_subclass;
          // ...

          *element_handle  = l_session->self_handle << 16;
          *element_handle += l_elId;
          *booking = l_booking;
        }
      }
    }

    // to report
    // void PLANNER_BookedProgramme_NoteCreation(PLANNER_BOOKEDPROGRAMME_T *booking, uint32_t handle, const char *file, int line)
    PLANNER_BookedProgramme_NoteCreation(l_booking, *element_handle, file, line);
    {
      static bool PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator(void *object, void *data)
      {
        note: ???
        Does `l_booking-VL` corresponds to 

        // !WARN   -PCATC < p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:value_list_man_clnt.c F:PCAT_VIEW_VL_LogAllocVL L:2816 > 
        // VL hdl=0x76d4 allocated but not freed for view PLANNER17 hdl=0x7000014, " "flags=0, ObType=0, num_rows=1, total_size=712, curpos=0 

        `DIAG_LOG_INFO`(g_planner_diag_segment_id, 
            ("%u: Handle %#x created at %s:%u vlist %#x", l_data->count, l_booking->self_handle, l_booking->file, l_booking->line, `l_booking->VL`));
      }
    }
}


// `BPH DELETE`
//
// PLANNER_JAVA_ApiBookedProgrammeDelete
// DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("KT-BPH: JBD: bph=0x%x", j_bookedprogramme_handle ));
//
// PLANNER_API_BookedProgramme_DeleteHandle	
// DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-BPH: BPD: sid=0x%x, bph(eh)=0x%x, sess.ele.count=%d",
// l_sesId, handle, ecount ));
//
// DIAG_LOG_ERROR(g_planner_diag_segment_id,("Deleted element @%p iterator 0x%X @%p VL 0x%X"
// 	, l_booking, l_booking->iterator_handle, l_booking->iterator, l_booking->VL));
//
// M:planner_common.c F:PLANNER_Element_Delete L:03629 > Deleted element @0x2b0a0704 iterator 0x4023E @0x2b0a0f64 VL 0x24B2
//
// PLANNER_API_BookedProgramme_Handle handle
//
// DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT-BPH: BPD: sid=0x%x, bph=0x%x, sess.ele.count=%d",
// 	l_sesId, handle, ecount ));
//
// M:planner_bookedprogramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02749 > KT-BPH: BPD: sid=0x4, bph(eh)=0x40ec3, sess.ele.count=5

SYSTEM_STATUS PLANNER_API_BookedProgramme_DeleteHandle( PLANNER_API_BookedProgramme_Handle handle )
{
#ifdef PLANNER_BOOKED_PROGRAMME_HANDLE_DEBUG
    /* Booked programme handle tracking. */
    `DIAG_LOG_INFO`(g_planner_diag_segment_id, ("Deleting booked programme handle %#x", handle));
#endif

    // get ids from handle
    l_sesId = handle >> 16;
    l_elId = handle << 16;
    l_elId >>= 16;

    DIAG_LOG_ERROR(g_planner_diag_segment_id, ("KT: BPD: sid=0x%x, bph(eh)=0x%x, sess.ele.count=%d",
			l_sesId, handle, ecount ));

    // note: *bhp-delete-element*
    /* Delete element */
    if (VTABLE_ReleaseElement(&(l_session->elements), l_elId) != VTABLE_STATUS_SUCCESS)
}


<how-to-interpret>
// these are unique.
!INFO   -PLANNER      		< M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_NoteCreation L:241 > Created booked programme handle 0x490f1 

// only when # of bph > 50
!`WARN`   -PLANNER      		< M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_NoteCreation L:268 > 50 booked programme handles in use in session 0x4: 

// see it has vlist value later
// M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_NoteCreation L:241 > Created booked programme handle 0x490f1
// M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 0: Handle 0x490f1 created at planner_iterator.c:2664 vlist 0
// M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 1: Handle 0x490f1 created at planner_iterator.c:2664 vlist 0xf7ae
// M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 2: Handle 0x490f1 created at planner_iterator.c:2664 vlist 0xf7ae
// M:planner_bookedprogramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:5604 > Deleting booked programme handle 0x490f1

// list out all bhp in the session so do not simply grep on this log line.
!INFO F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 0: Handle 0x490f1 created at planner_iterator.c:2664 vlist 0 
!INFO F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 1: Handle 0x490f0 created at planner_iterator.c:2664 vlist 0xf7ad 
...
!INFO F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 48: Handle 0x419e4 created at planner_iterator.c:2664 vlist 0x2ba2 
!INFO F:PLANNER_BookedProgramme_CountAndReportSessionHandlesIterator L:212 > 49: Handle 0x41959 created at planner_iterator.c:2664 vlist 0x2c03 
!INFO   -PLANNER      		< M:planner_list_element.c F:PLANNER_ListElement_UnravelData L:580 > Booked programme is from an iterator 
!INFO   -PLANNER      		< M:planner_dbinterface.c F:PLANNER_DBINTERFACE_AddFilterParameters L:10859 > Filter has already been applied to this view 

!INFO   -PLANNER < M:planner_bookedprogramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:5604 > Deleting booked programme handle 0x490df 
!INFO   -PLANNER < M:planner_bookedprogramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:5604 > Deleting booked programme handle 0x490e0 


<planner-view-name>
Create all view from the start.

Planner creates 147 views in total and uses global tables:

const PLANNER_FILTER_TYPE_MAP f_filter_types_map[];
const PLANNER_SORT_TYPE_MAP f_sort_types_map[];


SYSTEM_STATUS PLANNER_InitialisePCATViews(void)
{
  PLANNER_DBINTERFACE_Create_PCAT_View_Pool()
  {
    for(i = 0U; i < f_filter_types_map_len; i++)
    {
      for( j = 0U; j < f_sort_types_map_len; j++)
      {
        /* In the view parameters set the filter and sort types. */
        l_view_params.t.list.filterType = `f_filter_types_map`[i].planner_type;
        l_view_params.t.list.sortType = `f_sort_types_map`[j].planner_type;

        /* Create PCAT view and store the handle to it in f_pcat_view_handles. */
        if(PLANNER_API_STATUS_OK!=PLANNER_DBINTERFACE_PRV_CreateBookingView(
              &`f_pcat_view_handles`[i][j], &f_pcat_viewspec_handles[i][j],
              &l_view_params));
      }
    }
  }
}


SYSTEM_STATUS PLANNER_DBINTERFACE_PRV_CreateBookingView(PCAT_VIEW_HANDLE* viewHandlePtr,
    PCAT_VIEW_SPEC_HANDLE* viewspecHandlePtr, const PLANNER_PARAMETER_T* params)
{
  static uint32_t l_view_number = 1U;
  (void)snprintf(l_view_name,sizeof(l_view_name),"PLANNER%lu", (long unsigned)l_view_number );
  l_view_number++;

  /* Create the view */
  `PLANNER_DBINTERFACE_PRV_CreateView`(l_view_name,
        l_property_list, l_property_list_length,
        l_pcat_filter_type, l_pcat_sort_type,viewHandlePtr, viewspecHandlePtr)
  {
    PCAT_VIEW_New(g_planner_PCAT_client_id, view_name,*viewspec_handle_ptr,view_handle_ptr);
    {
      PCAT_VIEW_VIEW_Create(const char* pView_name, PCAT_VIEW_HANDLE  pView_handle)
      {
        ViewManClntAllocateNew(PCAT_VIEW_HANDLE view_hdl)
        {
          // `PCAT_VIEW_CLNT_POOL` on view name?
          PCAT_AllocStaticP(PcatViewClntPool, sizeof(char) * (len + 1U), (void**)&p_view_def->view_name);
        }
      }
    }

    // !INFO   -PLANNER      		< p:0x00000222 P:APP t:0x01158520 T:PLANNER_MAIN M:planner_dbinterface.c F:PLANNER_DBINTERFACE_PRV_CreateView L:7773 > 
    // [PLANNER17] view created: [pcat_filter_type 514][pcat_sort_type 9][view_handle 0x7000014] 
    //
    // for iterator move next
    // !INFO   -PLANNER      		< p:0x00000252 P:APP t:0x2e134520 T:no name M:planner_dbinterface.c F:PLANNER_DBINTERFACE_PRV_CreateView L:7773 > 
    // [PLANNER_TEMP0] view created: [pcat_filter_type 1001][pcat_sort_type 1001][view_handle 0x700006f] 
  }
}


// PCAT_CAT_PROP_EXT_FILTER_TYPE_RANGE_START(500)
//
// #define PCAT_CAT_FILTER_TYPE_SEARCHBY_EVENTNAME_AND_GENRE
// (PCAT_CAT_PROP_EXT_FILTER_TYPE_RANGE_START +14) 
//
// /**< @brief Used for A-Z search. Used with 3 filter parameters :*/

// note: this is param type
//
// PLANNER_API_SortTypeTag
// {
//  PLANNER_API_SORT_TYPE_TIME				(2)
//  PLANNER_API_SORT_TYPE_PVOD_PUBLISH_TIME (5)
//  PLANNER_API_SORT_TYPE_ITEM_NAME                          = 9U,  /**<@brief Sort filter by item name */
// }

// #define     PCAT_CAT_SORT_TYPE_TIME_DESC                9       
// /**< @brief  Sort by event scheduled start time descending (and logical channel ID). Reverse of #PCAT_CAT_SORT_TYPE_TIME.  WP943. */

// KTT: f_filter_types_map_len(30), f_sort_types_map_len(10)
// KTT: l_view_name(PLANNER17), param.filterType(9), l_pcat_filter_type(509), param.sortType(7), l_pcat_sort_type(504)
// PLANNER_API_FILTER_TYPE_PVOD(10)
// define PCAT_CAT_FILTER_TYPE_PUSH_ANYTIME_MENU											(PCAT_CAT_PROP_EXT_FILTER_TYPE_RANGE_START +21)					
// /**<Filters BOOKING jobs with signup job of type PUSH and publish time < current time, use PCAT_CAT_FILTER_PARAM_TYPE_GENRE and PCAT_CAT_FILTER_PARAM_TYPE_SUBGENRE to get only wanted genre and subgenre, WP222_223: use PCAT_CAT_FILTER_PARAM_TYPE_STRING to exlude events with a SIGNUP_URI equals to one of the URIs specified in the filter param string, seperated by "," 
// 
// PCAT_CAT_PROP_EXT_SORT_TYPE_RANGE_START (500)
// define		PCAT_CAT_SORT_TYPE_PUSH_PUBLISHTIME						 (PCAT_CAT_PROP_EXT_SORT_TYPE_RANGE_START + 6)		/**< @brief  Sorts according to PUSH PUBLISH TIME and then by ACTUAL START TIME*/


<planner-pcat-use>
SI-10793-pcat-view-clnt-pool-oom/01-darwin_0019fbf2d3c9_e5f6f859c892b462a96b21c1cef1dae1

// seen once
668455: !WARN   -PLANNER                    < p:0x0000020e P:APP t:0x2df8b520 T:no name M:planner_bookedprogramme_management.c F:PLANNER_BookedProgramme_NoteCreation L:268 > 
  50 booked programme handles in use in session 0x4:

// first
705548: !WARN   -PCATC                      < p:0x0000020e P:APP t:0x2dfa4520 T:no name M:value_list_man_clnt.c F:PCAT_VIEW_VL_LogAllocVL L:2774 > 
  `Number of allocated value lists=54` log_all=1 thread=0x2dfa4520 no name

!ERROR  -PCATS        		< p:0x0000020c P:MW t:0x01f12520 T:SBM_UB_MAIN M:value_list_man_clnt.c F:PCAT_VIEW_VL_Free L:619 > PCAT_VIEW_VL_FindByHandle hdl=0 
!ERROR  -PCATS        		< p:0x0000020c P:MW t:0x01f12520 T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_VLIST_Free L:2420 > Finished with error: Invalid parameters (0x5c21029) 
!WARN   -PCATS        		< p:0x0000020c P:MW t:0x01ab3520 T:PCAT_SRV_THREAD M:dbview.c F:DbviewNotifications_NotifyClientOnInsertion L:16476 > The view has been freed. Notifications for this view won't be sent 


// just before OOM
//
// note: counter_elem (# of allocated value list) increases whenever it gets
// called.
//
// `PCAT_VIEW_VL_Create`()
// allocs on `PcatViewVLPool` is `PCAT_VIEW_CLNT_POOL`
// PCAT_VIEW_SRV_GetPrivatePool(&PcatViewVLPool);
//
// note: `value list` on the same view 
//

1533671: !WARN   -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:value_list_man_clnt.c F:PCAT_VIEW_VL_LogAllocVL L:2774 > 
  `Number of allocated value lists=95` log_all=1 thread=0x117a520 PCAT_PROXY_THREAD 

!WARN   -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:value_list_man_clnt.c F:PCAT_VIEW_VL_LogAllocVL L:2816 > 
  VL hdl=0x15466 allocated but not freed for `view PLANNER17 hdl=0x7000014`, " "flags=0, ObType=0, num_rows=1, total_size=905, curpos=0 
!WARN   -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:value_list_man_clnt.c F:PCAT_VIEW_VL_LogAllocVL L:2816 > 
  VL hdl=0x76d4 allocated but not freed for `view PLANNER17 hdl=0x7000014`, " "flags=0, ObType=0, num_rows=1, total_size=712, curpos=0 
...


!ERROR  -MEMMAN       		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:mem_blockpool.c F:MHWMemCheckBank L:310 > CHECK_BANK Size:40 FreeSize:12 Bank:1 PoolMAX:409588 

1533777:!WARN   -MEMMAN       		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:mem_static.c F:MHWMemAllocStatic L:75 > Cannot allocate 40 bytes in pool " "PCAT_VIEW_CLNT_POOL"  


// see others uses that use pool PCAT_VIEW_CLNT_POOL such as serialization.

!WARN   -MEMMAN       		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:mem_static.c F:MHWMemAllocStatic L:78 > Biggest block is 12 bytes 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:pcat_misc.c F:PCAT_AllocStaticP_DBG L:411 > not enough memory: size=19, called from 
  M=pcat_serialize_structs.c, 
  F=PCAT_SERIALIZE_deserialize_PropValue, L=215 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:pcat_serialize_structs.c F:PCAT_SERIALIZE_deserialize_PropValue L:275 > Deserializaton failed 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:pcat_serialize_structs.c F:PCAT_SERIALIZE_deserialize_P_PropValue L:383 > Deserializaton failed 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x0117a520 T:PCAT_PROXY_THREAD M:pcat_serialize_structs.c F:PCAT_SERIALIZE_Deserialize_DBVIEW_ValueListStruct L:771 > Deserializaton failed 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:pcat_server_proxy.c F:PCAT_VIEW_SRV_SelectCollapsedList L:2434 > Finished with error: Failure (0x5c21001) 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:pcat_view_clnt.c F:PCAT_VIEW_SelectCollapsedList L:1097 > PCAT_VIEW_SRV_SelectCollapsedList stat=0x5c21001, view=0x7000014 
!ERROR  -PCATC        		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:pcat_view_clnt.c F:PCAT_VIEW_SelectCollapsedList L:1121 > Finished with error: Failure (0x5c21001) 
!ERROR  -PLANNER      		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_list_element.c F:PLANNER_ListElement_PRV_GetValueListCollapsed L:994 > Call to PCAT_VIEW_SelectCollapsedList failed 
!ERROR  -PLANNER_ITERATOR		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_iterator.c F:PLANNER_StandardIterator_GetVListFromCache L:3449 > Failed to obtain IDs 
!ERROR  -PLANNER_ITERATOR		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_iterator.c F:PLANNER_StandardIterator_RetrieveVListToCache L:4475 > Failed to get vlist 
!ERROR  -PLANNER_ITERATOR		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_iterator.c F:PLANNER_StandardIterator_InitCache L:4654 > Failed to get or retrieve vlist at index -1 
!ERROR  -PLANNER_ITERATOR		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_iterator.c F:PLANNER_StandardIterator_RefreshIfNecessary L:1025 > Failed to initialise the new iterator cache 
!ERROR  -PLANNER_ITERATOR		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:planner_iterator.c F:PLANNER_StandardIteratorImpl_GetNextIndex L:1322 > Failed to refresh iterator 
!ERROR  -J_PLANNER    		< p:0x0000020e P:APP t:0x2bfeb520 T:no name M:modules/jpa-impl/src/c/src/natPlannerIteratorImp 
  F:Java_com_nds_fusion_plannerimpl_PlannerIteratorImpl_natPlannerIt L:77 > PLANNER_API_Iterator_GetNextIndex failed: 0x6422001

JNIEXPORT jint JNICALL Java_com_nds_fusion_plannerimpl_PlannerIteratorImpl_natPlannerIteratorNextIndex
  (JNIEnv *env, jclass jClass, jint param1)
{
    status = PLANNER_API_Iterator_GetNextIndex(jNativeHandle, (int32_t*)&jReturnVal);
    if (!SYSTEM_STATUS_IS_OK(status))
    {
        DIAG_LOG_ERROR(g_planner_adaptor_api_diag_segment_id, ("PLANNER_API_Iterator_GetNextIndex failed: 0x%x", status));
    }

    (void)PLANNER_JAVA_ParseReturn(env, status);

    DIAG_LOG_FN_EXIT(g_planner_adaptor_api_diag_segment_id, status);
    return (jint)jReturnVal;
}

#ifdef PLANNER_ITERATORS_SUPPORTED
/**
 * @brief Standard iterator get `next index` implementation
 *
 * @param[in] iterator Iterator structure
 * @param[out] param_index The next object index to the iterator
 * @retval #PLANNER_API_STATUS_OK on success
 * @retval #PLANNER_API_STATUS_NOT_OK on failure
 */
static SYSTEM_STATUS PLANNER_StandardIteratorImpl_GetNextIndex(`PLANNER_ITERATOR_T` *iterator, int32_t *param_index)
{
    /* Refresh the iterator if there has been a change to the view */
    if (PLANNER_API_STATUS_OK != PLANNER_StandardIterator_RefreshIfNecessary(iterator->handle, false))
    {
        DIAG_LOG_ERROR( g_planner_iterator_diag_segment_id, ("Failed to refresh iterator"));
    }

    DIAG_LOG_FN_EXIT( g_planner_iterator_diag_segment_id, l_status);
    return l_status;
}

// NO longer available
//
// /* PLANNER_API_Iterator_Handle         handle
// ** PLANNER_API_BookedProgramme_Handle  l_element_handle;
// ** PLANNER_ITERATOR_T                 *l_iter
// **
// ** DIAG_LOG_ERROR(g_planner_diag_segment_id,("Created element 0x%X @%p from iterator 0x%X @%p",
// ** 	l_element_handle, l_booking, handle, l_iter));
// */
// // can map BPH, VL and iterator
// M:planner_iterator.c F:PLANNER_Iterator_CreateElementAtIndex L:01464 > Created element 0x40EC5 @0x2b0a0bf4 from iterator 0x40241 @0x2b0a07e0
//
// PLANNER_Iterator_DumpIterators
//   dumps all iterators and elements of a session.
//
// DUMP: l_booking->iterator, l_booking->VL
//
// PCAT_VIEW_VALUE_LIST  VL;
// PLANNER_ITERATOR_T   *iterator;
//
// DIAG_LOG_ERROR(g_planner_diag_segment_id,("PBP @%p Iterator @%p VL 0x%X", l_booking, l_booking->iterator, l_booking->VL));
//
// M:planner_iterator.c F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1ebc:
// M:planner_iterator.c F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a0428 Iterator @0x2b0a07e0 VL 0x24D1
//
// F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1ebc:
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a18c4 Iterator @0x2b0a1a40 VL 0x40
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a1940 Iterator @0x2b0a1a40 VL 0x40
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a1b60 Iterator @0x2b0a1a40 VL 0x40
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a1c08 Iterator @0x2b0a1a40 VL 0x40
// # DIAG_LOG_ERROR(g_planner_diag_segment_id,("PBP @%p Iterator @%p VL 0x%X", 
// # l_booking, l_booking->iterator, l_booking->VL));
// 
// DIAG_LOG_ERROR(g_planner_diag_segment_id,("Deleted element @%p iterator 0x%X @%p VL 0x%X", 
// l_booking, l_booking->iterator_handle, l_booking->iterator, l_booking->VL));
//
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02727 > Deleting PBP 0x40010
// F:PLANNER_Element_Delete L:03629 > Deleted element @0x2b0a1c08 iterator 0x40008 @0x2b0a1a40 VL 0x40
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02749 > KT-BPH: BPD: sid=0x4, bph(eh)=0x40010, sess.ele.count=3
//
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02727 > Deleting PBP 0x40011
// F:PLANNER_Element_Delete L:03629 > Deleted element @0x2b0a1b60 iterator 0x40008 @0x2b0a1a40 VL 0x40
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02749 > KT-BPH: BPD: sid=0x4, bph(eh)=0x40011, sess.ele.count=2
//
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02727 > Deleting PBP 0x40012
// F:PLANNER_Element_Delete L:03629 > Deleted element @0x2b0a1940 iterator 0x40008 @0x2b0a1a40 VL 0x40
// gramme.c F:PLANNER_API_BookedProgramme_DeleteHandle L:02749 > KT-BPH: BPD: sid=0x4, bph(eh)=0x40012, sess.ele.count=1
//
// F:PLANNER_Iterator_RefreshIfNecessary L:00510 > Dumping state
// F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1a40:
// F:PLANNER_DumpVlist L:03213 >  Vlist @0x2b0a1e70 min 160 max 164 vlist 0x54
// F:PLANNER_DumpVlist L:03213 >  Vlist @0x2b0a2024 min 152 max 160 vlist 0x53
// F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1ebc:
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a18c4 Iterator @(nil) VL 0x0
// F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1a40:
// F:PLANNER_DumpVlist L:03213 >  Vlist @0x2b0a1e70 min 160 max 164 vlist 0x54
// F:PLANNER_DumpVlist L:03213 >  Vlist @0x2b0a2024 min 152 max 160 vlist 0x53
// F:PLANNER_DumpSessionIterators L:03228 > Iterator @0x2b0a1ebc:
// F:PLANNER_DumpSessionElements L:03254 > PBP @0x2b0a18c4 Iterator @(nil) VL 0x0
//
// or.c F:PLANNER_API_Iterator_Delete L:00554 > Deleting iterator 0x4000A
// F:PLANNER_Iterator_Delete L:00167 > KT-I: ID: iter=0x2b0a17fc, sid=0x4, sess.iter.count=2, sess.ele.count=4


PLANNER_JAVA_ApiSessionCreateIteratorBookmarks
PLANNER_JAVA_ApiSessionCreateIteratorCopyList
PLANNER_JAVA_ApiSessionCreateIteratorFilteredAny

PlannerThread()
{
  "f_planner_event_message_table" (planner_common.c)
    // PLANNER_EV_REMINDER_ACK
    PLANNER_ProcessNextReminder();

  // PLANNER_EV_ADD_BOOKED_PROGRAMME
  PLANNER_AddBookedProgramme_Handler();

  // PLANNER_EV_REMINDER_TRIGGER_NTFY
  PLANNER_ProcessNextReminder();

  // PLANNER_EV_VIEW_CHANGE_NOTIFICATION
  PLANNER_DBINTERFACE_Notify_ViewChange();

  // PLANNER_EV_SESSION_ITERATOR_CREATION
  // Function is called after creation of iterator to finalise the creation.
  PLANNER_Session_Iterator_Creation(uint32_t payload_handle)
  {
    // create listener
    VTABLE_Create(&l_listener, &l_listener_handle, sizeof(PLANNER_LISTENER_T));

    // ???
    PLANNER_DBINTERFACE_PopulateTempTable();

    // get count from PCAT view and this will be the total count in the view for that filter.
    PLANNER_API_Iterator_GetCount(l_payload->data.iterator_creation.ihandle, &l_count)
    {
      PLANNER_DBINTERFACE_GetNumViewItems()
      {
        PLANNER_DBINTERFACE_GetNumViewItems_FromPCAT();
      }
    }

    // VL is ready?
    PLANNER_Iterator_InitCache( ,l_count, )
    {
      PLANNER_ITERATOR_VLIST_T* vlist = NULL;

      // try to find vlist from cache and if not, create new one.
      PLANNER_Iterator_GetVListFromCache(handle, cache_version, 0U, &vlist, is_locked, false, 0U)
      {
        // create one in the iter's vtable
        VTABLE_Create('&(l_iter->vlists)', (void**)&l_vlist, &l_vlistHandle, sizeof(PLANNER_ITERATOR_VLIST_T));

        // get new vlist. always request 5 to pcat
        PLANNER_ListElement_PRV_GetData( , 1, NUM_ELEMENTS_IN_ITER_VLIST(5), &(l_vlist->vlist))
        {
          PLANNER_ListElement_PRV_GetValueListCollapsed( , PCAT_VIEW_VALUE_LIST* vlist)
          {
            PCAT_VIEW_SelectCollapsedList( /* `out` */ vlist);
            {
              // typedef struct ValueListClntStructTag
              // {
              // 	DBVIEW_ValueListStruct		value_list;
              //  uint32_t					current_position;
              //  PCAT_PROP_HANDLE_UNION**	to_be_destroyed;
              //  PCAT_VIEW_HANDLE dbg_view_hdl; /* associated view for debugging */
              //  uint8_t dbg_usage_flags;       /* usage flags for debugging */
              // }ValueListClntStruct;

              ValueListClnt value_list = NULL;

              PCAT_VIEW_VL_CreateEmpty(view, &valueListLocal, &value_list)
              {
                // note: VL allocates per iterator?
                // value_list_man_clnt.c is only to use `PCAT_VIEW_CLNT_POOL`
                // `allloc` ValueListClnt using MEMMAN_API_AllocElementP(PcatViewVLPool); 
              }

              // (DBVIEW_ValueListStruct* value_list)
              PCAT_VIEW_SRV_SelectCollapsedList(, &(value_list->value_list))
              {
                // `PCAT_VIEW_CLNT_POOL`
                // construct req msg, serialize, and send it to pcat svr
                // and wait response on `PcatViewProxyPool`
                // copy value list from a svr response

                value_list->prop_values_list = value_list_array_from.prop_values_list;
              }

              // set value for each props in the value list?
              PCAT_VIEW_VL_ToBeDestroyStructInit
              { 
                // `PCAT_VIEW_CLNT_POOL`
                PCAT_AllocStaticP(PcatViewVLPool); 
              }

              // return valueListLocal(=value_list)
              *pValueList = valueListLocal;
            }
          }
        }
      }

      l_ihandle = l_payload->data.iterator_creation.ihandle;

      PLANNER_Callback_RunWithArgUsertagStatusHandle(, l_payload->data.iterator_creation.create_callback, l_payload->user_tag, l_ihandle )
      {
        PLANNER_Payload_CB_Create

          payload->data.cb_usertag_status_handle = user_callback;
        // l_ihandle
        payload->handle = handle; 

        PLANNER_PostMessage((l_session_struct->cb_queue_id), PLANNER_EV_CB_USERTAG_STATUS_HANDLE);
      }
    }
  }
}
		
PLANNER_CallbackThread
	PLANNER_ExecuteUserCallback
	  case PLANNER_EV_CB_USERTAG_STATUS_HANDLE:
    	l_payload->data.cb_usertag_handle_status(l_payload->user_tag, l_payload->status, l_payload->handle);

    	
# only supports two type of iterators
PLANNER_JAVA_IteratorCreateListener
(PLANNER_API_UserTag l_user_tag, PLANNER_API_ListStatus l_completion_status, 'PLANNER_API_Iterator_Handle' l_iterator_handle)
{
	JPA_VTABLE_GetElement(&g_planner_adaptor_IteratorCreateRequest,l_user_tag,(void **)&iteratorCreateRequest);
	
	# get PlannerBookedProgrammeIterator that comes from app. that's for java.
	currentIterator                      = iteratorCreateRequest->iterator;

	iteratorCreateRequest->native_handle = l_iterator_handle;

	switch (iteratorCreateRequest->type)	
		case 'PLANNER_JAVA_ITERATOR_TYPE_BOOKED_PROGRAMME':
			use signature PlannerBookedProgrammeIteratorCreationListener
		case PLANNER_JAVA_ITERATOR_TYPE_BOOKMARK:

	# use 'request' which was created when requested and request's data to make a call to the APP.
	
	# currentIterator is a java iterator
	NDSJNI_SetField(&l_env, currentIterator, (uint8_t*)"nativeHandle", (uint8_t*)"I", (void*)&l_iterator_handle, );
	
	JPA_VTABLE_ReleaseElement(&g_planner_adaptor_IteratorCreateRequest, l_user_tag);
}	

#
PLANNER_JAVA_IteratorDelete
	PLANNER_API_Iterator_Handle jNativeHandle             = *(PLANNER_API_Iterator_Handle*)env->params[0];
	PLANNER_API_Iterator_Delete(jNativeHandle)
		# get sid and iid from IteratorHandle and get actual objs from vtables using these ids.
    	# /* Safely get the session ID from handle */
    	# l_sesId = handle >> 16;
    	# /* And the list id */
    	# l_iterId = handle << 16;
    	# l_iterId >>= 16;
		#
		(void)VTABLE_ReleaseElement(&l_session->iterators, l_iterId); 

# when it's called, seems that get the next page(5) and rebuild cache. not every time but do in the first call.
# F:PLANNER_ListElement_PRV_GetData L:00616 > KT: start(6), requested_num(5), *returned_num(5)
PLANNER_JAVA_IteratorHasNext
	PLANNER_API_Iterator_HasNextElement

PLANNER_JAVA_IteratorHasPrevious
	PLANNER_API_Iterator_HasPreviousElement

PLANNER_JAVA_IteratorNextIndex
	PLANNER_API_Iterator_GetNextIndex

PLANNER_JAVA_IteratorMoveByRelative
			


/* Structure that represents a booked programme */
typedef struct {
    PLANNER_API_BookingSubclass booking_subclass;
    PLANNER_SHORT_LIST_T *list;
    PLANNER_ITERATOR_T   *iterator;
    uint32_t              iterator_handle;
    uint32_t              shortlist_handle;
    uint32_t              list_id;
    PLANNER_SESSION_T    *session;
    PCAT_VIEW_OBJECT_ID   element_id;
#ifndef HOME_NETWORK_PLANNER_CLIENT    
    PCAT_VIEW_VALUE_LIST  VL;
#else
    SCM_LIST  VL;
#endif    
    bool                  VL_inited;
    /* Indicates whether automatic update mechanism should be used on this booking.*/
    bool                  allow_VL_updates;
    bool                  is_refresh_element_vl_not_allowed;	
    uint32_t              conflict_element;
    uint32_t              ghost_conflict_element;    
    bool                  conflicting_booking;
    bool                  booking_in_progress;
    bool                  move_booking_in_progress;
    uint32_t              add_booked_programme_payload_id;
    bool                  ppv_purchase_booking;
    PCAT_VIEW_OBJECT_ID   event_id;
    uint32_t              pdl_progress_kb;
    bool                  is_pdl_progress_being_monitored;
    bool                  pdl_trailer_download_timeout_occured;
    uint32_t              ref_count; /* Reference count */
    bool                  waiting_for_access;    
    bool                  is_coherent;
    bool                  is_deleting;
    /* 
     * The field substitute_booking_job_id allows PLANNER_ListElement_DeleteBookingValueList
     * to change the booking job ID of a booking structure.
     * If it is set to PCAT_VIEW_OBJECT_ID_ILLEGAL (the default case), the booking job ID remains unchanged.
     * If it is set to a valid object ID, this is used as the new booking job ID
     */
    PCAT_VIEW_OBJECT_ID   substitute_booking_job_id; 
    PLANNER_API_BookingType bookingType; /* Cached booking type */
    uint32_t              positionInLongList; /* The position of this booked programme in a collapsed long list or iterator */
    SBM_USERBOOKING_LISTENER  job_id;
    SBM_USERBOOKING_LISTENER reference_id; /*This handle will be got it from the SBM*/
} PLANNER_BOOKEDPROGRAMME_T;

typedef union 
{
    PLANNER_BOOKEDPROGRAMME_T booking;
    PLANNER_BOOKMARK_T        bookmark;
} PLANNER_ELEMENT_DATA_T;

typedef enum {
    PLANNER_ELEMENT_TYPE_UNDEF = 0,
    PLANNER_ELEMENT_TYPE_BOOKING,
    PLANNER_ELEMENT_TYPE_BOOKMARK,
    PLANNER_ELEMENT_TYPE_LAST
} PLANNER_ELEMENT_TYPE_T;

typedef struct
{
    PLANNER_ELEMENT_DATA_T data;
    PLANNER_ELEMENT_TYPE_T type;
} PLANNER_LIST_ELEMENT_T;


PLANNER_JAVA_IteratorNext
	PLANNER_API_Iterator_CreateNextElement( /* iter handle, jNativeHandle */ handle, /*out*/ PLANNER_API_ListElement_Handle *item_handle);

PLANNER_JAVA_IteratorPrevious
	PLANNER_API_Iterator_CreatePreviousElement(jNativeHandle, &env->returnVal);
	{
		# Corrects the iterator's position in case the list has changed.
		PLANNER_Iterator_AdjustIteratorPosition
			PLANNER_Iterator_GetVListIfAvailable
				
		PLANNER_API_Iterator_HasNextElement(handle, /* bool */ &l_next_elem);
		
		'PLANNER_Iterator_CreateElementAtIndex'(handle, PLANNER_API_ListElement_Handle * 'item_handle', l_iter->position);
		{
        *value-list*
			ExtractIteratorStructure() # get a actual iter structure from a iter handle

			PLANNER_Iterator_GetVListFromCache(handle, l_iter->cache_version, l_index, &l_vlist, false, false, 0U)
			{
				# If there is a vlist that contains element from this index
				VTABLE_FindElement(&(l_iter->vlists)
				
            *value-list*
				# if there's no vlist(PLANNER_ITERATOR_VLIST_T)
				VTABLE_Create(&(l_iter->vlists), (void**)&l_vlist, &l_vlistHandle, sizeof(PLANNER_ITERATOR_VLIST_T));
				
				## GET VLIST!
				##
				PLANNER_ListElement_PRV_GetData(l_iter->params, l_iter->view, , &(l_vlist->max), &(l_vlist->vlist));
				{
					PLANNER_ListElement_PRV_GetValueList
					{
						PCAT_VIEW_Select(view, requested_num, returned_num, &(l_is_end_of_view), vlist);
					}
				}
				
				*vlist = l_vlist;
			}
			
			# if l_iter->params->t.list.listType != PLANNER_API_PARAMETER_LISTTYPE_BOOKMARKS
			{
				'PLANNER_BookedProgramme_Create'( l_sesId, PLANNER_API_BookedProgramme_Handle *element_handle)
					PLANNER_BookedProgramme_CreateWithSession(, element_handle);
					{
						# PLANNER_LIST_ELEMENT_T has PLANNER_BOOKEDPROGRAMME_T
						#
						VTABLE_Create(&(l_session->elements), (void **)&l_element, &l_elId, sizeof(PLANNER_LIST_ELEMENT_T));
						
						# set l_element
						
						## THIS IS ITEM TO BE RETURNED!
						##
						*element_handle += l_elId;
					}
				
				l_booking = ExtractBookingStructure(l_element_handle));
				
				# Fill the 'l_booking' structure
				l_booking->VL = l_vlist->vlist;
				l_booking->iterator_handle = handle;	

				'*item_handle  = l_element_handle';				
			}
			# PLANNER_API_PARAMETER_LISTTYPE_BOOKMARKS
			else
			{
				VTABLE_Create(&(l_session->elements), (void**)&l_list_element, &l_elId, sizeof(PLANNER_LIST_ELEMENT_T))
	            l_bookmark->iterator_handle = handle;
    	        *item_handle  = (l_sesId<<16) | l_elId;
			}
		} end PLANNER_Iterator_CreateElementAtIndex
		
		# this is WHERE element is created.
		#
		l_iter->position++;
		
		PLANNER_Iterator_RebuildCache
		
		PLANNER_Iterator_SaveElementAtPosition(handle);		
		{
			PLANNER_Iterator_GetVListIfAvailable(handle, l_iter->cache_version, l_iter->position, &l_vlist, 0U);
			{			
				/* If there is a vlist that contains element from this index */
				VTABLE_FindElement(&(l_iter->vlists), PLANNER_Iterator_FindVListForIndex, (void*)(&l_index), (void**)&l_vlist, &l_vlistHandle);
				
				#	static bool PLANNER_Iterator_FindVListForIndex(void *element, void *data)
				#	{
				#	    uint32_t* l_index = (uint32_t*)data;
				#	    bool l_status = false;
				#	    PLANNER_ITERATOR_VLIST_T* l_iter = (PLANNER_ITERATOR_VLIST_T*)element;
				#	
				#	    if((l_iter->min <= *l_index) && (*l_index < l_iter->max))
				#	    {
				#	        l_status = true;
				#	    }
				#	    return l_status;
				#	}
			}
		}
	}


#
# to delete booked prog handle
#
class PlannerBookedProgrammeImpl
    protected void natDelete() 
    {
        natPlannerApiBookedProgrammeDelete(nativeHandle);   
    }

PLANNER_JAVA_ApiBookedProgrammeDelete
	# get sid and delete booked handle from a element vtable of a session.
	SYSTEM_STATUS 'PLANNER_API_BookedProgramme_DeleteHandle'( PLANNER_API_BookedProgramme_Handle handle )
	# lead to PLANNER_Element_Delete that deletes vlist
		'PLANNER_Element_Delete'


<booking-prop-id>
PLANNER_JAVA_ApiBookedProgrammeGetBookingType
	PLANNER_API_BookedProgramme_GetPropertyBookingType
	{
		# SYSTEM_STATUS PLANNER_BookedProgramme_GetInternalDataAndValidatePropID( 
		# const PLANNER_API_BookedProgramme_Handle handle,			# in
		# const PLANNER_API_BookedProgramme_PropId prop_id,			# out 
		# PLANNER_BOOKEDPROGRAMME_T **el,							# out 
		# PCAT_VIEW_VALUE_LIST *vl,									# out 
		# uint32_t *vl_index, 										# out 
		# PLANNER_API_BookingSubclass *booking_subclass)
		#
		# get value list index for this prop from the booked prog handle. from its internal booking structure
		PLANNER_BookedProgramme_GetInternalDataAndValidatePropID(handle, id, &l_el, &l_VL, &l_id, &l_booking_subclass)))

		# get value from pcat using value list and pos. it come from pcat client but not the server.
		#
		PLANNER_BookedProgramme_GetBookingType(l_el, l_VL, l_id, value)
			PCAT_VIEW_VLIST_GetInt(value_list, position, PCAT_CAT_PROP_BOOKING_TYPE, &l_pcat_booking_type)

	}


// DARWIN_PLATFORM/DARWIN_PLANNER/inc/planner_bookedprogramme.h
typedef enum PLANNER_API_BookedProgramme_PropIdTag
{
    /** @brief (Get) Is the BookedProgramme booked for a series link
      *
      * Not supported for subclasses with any of the following characteristics:
      * - SOURCE = SUB_EVENT
      * - SOURCE = CONFLICT_SUBJECT
      */
    PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISSERIESLINKED = 34U,

    /** @brief (Get) Can the BookedProgramme be booked for a series link
      *
      * Supported for all subclasses
      */
    PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISSERIESAVAILABLE = 35U,

    /**
     * @brief (Get) The type of link that exists on a booking, for example a series or show link.
     *              See #PLANNER_API_LinkGroupType for the possible link types.
     *              Use PLANNER_API_BookedProgramme_GetPropertyUint32.
     *
     * Not supported for subclasses with any of the following characteristics:
     * - SOURCE = SUB_EVENT
     * - SOURCE = CONFLICT_SUBJECT
     */
    PLANNER_API_BOOKEDPROG_PROPID_UINT32_SERIES_LINK_GROUP = 161U,

    /**
     * @brief (Get) The types of link available to be made on a booking, for example series and show links.
     *              See #PLANNER_API_LinkGroupType for the possible link types.
     *              Use PLANNER_API_BookedProgramme_GetPropertyUint32.
     *
     * Supported for all subclasses
     */
    PLANNER_API_BOOKEDPROG_PROPID_UINT32_SERIES_LINK_GROUP_AVAILABLE = 162U,

    /** @brief (Get) The series information string
     *
     * @See PLANNER_API_BookedProgramme_GetPropertyString
     *
     * Supported for all subclasses
     */
    PLANNER_API_BOOKEDPROG_PROPID_STRING_SERIES_INFO = 214U,
} PLANNER_API_BookedProgramme_PropId;


# return locator of programme	
PLANNER_JAVA_ApiBookedProgrammeGetBookedProgramme
	status = PLANNER_API_BookedProgramme_GetPropertyLocator(
	            (PLANNER_API_BookedProgramme_Handle)jHandle,
	            (PLANNER_API_BookedProgramme_PropId)jPropertyID,
	            &locatorHandle);


PLANNER_DBINTERFACE_RegisterListeners
	PCAT_VIEW_LISTENER_RegisterUpdateInView(PLANNER_ViewChangeNotification)

PLANNER_ViewChangeNotification
	EV PLANNER_EV_VIEW_CHANGE_NOTIFICATION, PLANNER_UPDATE_LISTENER_TYPE_CHANGE

PLANNER_DBINTERFACE_Notify_ViewChange
	PLANNER_GridJobs_NotifyChanges

#-----------------------------------------------------------
# prop id
#-----------------------------------------------------------
abstract class PlannerBookedProgrammeImpl extends SystemCommonObjectImpl implements PlannerBookedProgramme
{
    /* Values used in multiple impl classes */
    public interface PropertyID
    {
	    static final int INT_DURATION = 1;              /* The 'duration' attribute of the Booked Programme, in seconds */
		...
		BOOL_ISPURCHASECANCELREQ = 31; /*If PPV, does the purchase need to be cancelled for a deletion */

        static final int INT_PDLSTATUS           = 63;   /* The PDL status. */
	}
}

# PLANNER_MapPropertyToPCAT: planner prop id -> pcat prop id
#
# see PlannerBookedProgrammeListChangeListener.java
#
PLANNER_API_BOOKEDPROG_PROPID_BOOL_KEEPFLAG		      (7)       PCAT_CAT_PROP_KEEP_STATUS
PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISCAVIEWED		  (11)
PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISPURCHASECANCELREQ (31)
PLANNER_API_BOOKEDPROG_PROPID_BOOL_BOOKEDASOPPV       (55)
PLANNER_API_BOOKEDPROG_PROPID_UINT32_PDLSTATUS        (63)
PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISRADIO            (65)
PLANNER_API_BOOKEDPROG_PROPID_SYSTEM_TIME_STARTTIMEi  (13)		PCAT_CAT_PROP_START_TIME
PLANNER_API_BOOKEDPROG_PROPID_UINT32_LAST_VIEWED 				PCAT_CAT_PROP_LAST_PLAYBACK_POSITION;
PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISPLAYING			(136)

#
getPropertyStartTime
	natPlannerApiBookedProgrammeGetSystemTime(nativeHandle, PropertyID.SYSTEMTIME_STARTTIME, startTime);
	PLANNER_JAVA_ApiBookedProgrammeGetSystemTime

getPropertyTitle
	natPlannerApiBookedProgrammeGetString(nativeHandle, PropertyID.STRING_TITLE);
	PLANNER_JAVA_ApiBookedProgrammeGetString


#-----------------------------------------------------------
# status
#-----------------------------------------------------------
#define PLANNER_COMP_ID       (25)
#define SEVERITY_SEVERE       (0x2)
#define PLANNER_API_ID        (2)
            

(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((25 & 0x3FF) << 22) | ((0x2 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )
hex(((25 & 0x3FF) << 22) | ((0x2 & 0x3) << 16) | ((2 & 0xF) << 12) | (1 & 0xFFF) )
hex(((25 & 0x3FF) << 22) | ((0x2 & 0x3) << 16) | ((2 & 0xF) << 12) | (33 & 0xFFF) )

PLANNER_API_STATUS_OK						0x6402000 # '0x6420000'
PLANNER_API_STATUS_NOT_OK					'0x6422001'
PLANNER_API_STATUS_PARAMETER_VALUE_NOT_SET	'0x6422021'
PLANNER_API_STATUS_BAD_LOCATOR				'0x6422008'
PLANNER_API_STATUS_UNABLE_TO_GET_PARAMETER  '0x6422002'
PLANNER_API_STATUS_CONFLICT                 '0x642200c'

# logs when deleting recodring from planner happens: 
# these all come from 'PLANNER_JAVA_ApiBookedProgrammeSetBoolean' but not sure if it's real failure or not since these comes 
# when deleting recording is okay or not. 
> KEY_PRESS: YELLOW
+--{53522:E:P_Planner:M:planner_list_element.c:F:PLANNER_ListElement_GetBookingJobID:Call to PCAT_VIEW_VLIST_GetID failed}                              
+--{53523:E:P_Planner:M:planner_dbinterface.c:F:PLANNER_DBINTERFACE_ResetIncoherentBooking:Call to PLANNER_ListElement_GetBookingJobID failed}
+--{53524:E:P_Planner:M:planner_dbinterface.c:F:PLANNER_IterateSessionsToResetIncoherentBookings:Error iterating through calls to PLANNER_DBINTERFACE_ResetIncoherentBooking}
+--{53525:E:P_Planner:M:planner_dbinterface.c:F:PLANNER_DBINTERFACE_ResetIncoherentBookedProgrammes:Error iterating through calls to PLANNER_IterateSessionsToResetIncoherentBookings}
NDS: ^0946724818.427254 !ERROR -J_PLANNER    < M:natPlannerBookedProgrammeImpl.c F:PLANNER_JAVA_ApiBookedProgrammeSetBoolean L:00646 > PLANNER_API_BookedProgramme_SetPropertyBoolean(7) failed: 0x6422001

# logs when recording failed from guide:
> KEY_PRESS: RECORD
NDS: ^0946725871.312699 !ERROR -J_GUIDE      < M:natGuideScheduleImpl.c F:GUIDE_JAVA_ScheduleRetrieveSynopsis L:00715 > Retrieval failed

# it seems important mesg even if these are warns.
NDS: ^0946725872.171199 !WARN  -VRMS         < M:booking_record.c F:BookingRecordGetContentShrec L:06439 > Item id: 0x2900041f, is not shared - fail recording
NDS: ^0946725872.304276 !WARN  -PSRM         < M:planner_srm.c F:PLANNER_SRM_ProcessVRSIJobFailed L:02205 > Failed to find handle - not necessarily a fault
NDS: ^0946725872.304403 !WARN  -PSRM         < M:planner_srm.c F:PLANNER_SRM_ProcessVRM L:01754 > Error processing VRSI - not necessarily a fault

# logs when book a reminder
NDS: ^0946685111.764113 !INFO  -P_Planner    < M:planner_addbookedprogramme.c F:PLANNER_AddBookedProgramme_Init L:00401 > Payload status=PLANNER_ST_ADD_BOOKED_PROGRAMME_INIT
NDS: ^0946685111.923559 !INFO  -P_Planner    < M:planner_addbookedprogramme.c F:PLANNER_AddBookedProgramme_Term L:01033 > Payload status=PLANNER_ST_ADD_BOOKED_PROGRAMME_TERM


#-----------------------------------------------------------
# 
#-----------------------------------------------------------
PLANNER_JAVA_IteratorChangeListener

#-----------------------------------------------------------
# java: PLANNER_API_BookedProgramme_RemoveBookedProgramme
#-----------------------------------------------------------

#
public class PlannerSessionImpl extends SystemCommonObjectImpl implements PlannerSession 
{
    public void addScheduledBookedProgramme( Object userTag, SystemLocator systemLocator, int bookingType, int seriesLinkAction, PlannerAddBookedProgrammeListener listener )
        throws PlannerHealthCheckException, PlannerNoSkyAuthorisationException
    {
        natPlannerApiSessionAddScheduledBookedProgramme(
                nativeHandle, userTag,systemLocator, bookingType, seriesLinkAction, listener, new PlannerScheduledBookedProgrammeImpl()); 
    }
}

#
abstract class PlannerBookedProgrammeImpl extends SystemCommonObjectImpl implements PlannerBookedProgramme
{
    public void removeBookedProgramme( Object userTag, PlannerRemoveBookedProgrammeListener listener )
    {
        assertValid();
        natPlannerApiBookedProgrammeRemove(nativeHandle, userTag, listener);
    }
}

#
const JNINativeMethod com_nds_fusion_plannerimpl_PlannerSessionImpl[]   =
{
    { (char*)"natPlannerApiSessionAddScheduledBookedProgramme", ,
      (void*)Java_com_nds_fusion_plannerimpl_PlannerSessionImpl_natPlannerApiSessionAddScheduledBookedProgramme },
}

#
JNIEXPORT void JNICALL Java_com_nds_fusion_plannerimpl_PlannerSessionImpl_natPlannerApiSessionAddScheduledBookedProgramme
  (JNIEnv *THIS, jclass jClass, jint param1, jobject param2, jobject param3, jint param4, jint param5, jobject param6, jobject param7)
{
     NDSJNI_ENV env;

    env.THIS = THIS;
    env.jClass = &jClass;
    env.params[0] = (void*)&param1; /* Session handle */
    env.params[1] = (void*)&param2; /* User tag */
    env.params[2] = (void*)&param3; /* Prog Inst locator */
    env.params[3] = (void*)&param4; /* Booking Type */
    env.params[4] = (void*)&param5; /* Series link action */
    env.params[5] = (void*)&param6; /* Add booked programme listener */
    env.params[6] = (void*)&param7; /* Booked programme */

    PLANNER_JAVA_ApiSessionAddScheduledBookedProgramme(&env);
}

# natPlannerApiBookedProgrammeRemove. under /src_sun/
JNIEXPORT void JNICALL Java_com_nds_fusion_plannerimpl_PlannerBookedProgrammeImpl_natPlannerApiBookedProgrammeRemove
  (JNIEnv *THIS, jclass jClass, jint param1, jobject param2, jobject param3)
{
    NDSJNI_ENV env;

    env.THIS = THIS;
    env.jClass = &jClass;
    env.params[0] = (void*)&param1; /* Session handle */
    env.params[1] = (void*)&param2; /* User tag */
    env.params[2] = (void*)&param3; /* Remove booked programme listener */
    PLANNER_JAVA_ApiBookedProgrammeRemove(&env);
}

#
void PLANNER_JAVA_ApiBookedProgrammeRemove(NDSJNI_ENV *l_env)
{
	/* Remove the booked programme using the C component */
	l_status =  PLANNER_API_BookedProgramme_RemoveBookedProgramme(
	                    (PLANNER_API_BookedProgramme_Handle)jHandle,
	                    (PLANNER_API_UserTag)vtable_handle,
	                     PLANNER_JAVA_RemoveBookedProgrammeListener);
}

#
SYSTEM_STATUS PLANNER_API_BookedProgramme_RemoveBookedProgramme(
    PLANNER_API_BookedProgramme_Handle handle, PLANNER_API_UserTag user_tag,
    PLANNER_API_BookedProgramme_RemoveBookedProgrammeCb callback )
{
	if(PLANNER_API_STATUS_OK!=PLANNER_PRV_BookedProgramme_RemoveBookedProgramme(handle,
	        l_el,true, user_tag, callback))

}


#-----------------------------------------------------------
# moveToPdlQueueHead
#-----------------------------------------------------------
PlannerPdlBookedProgrammeImpl.java
	public void moveToPdlQueueHead(PlannerBookedProgrammePdlQueueControlListener listener, Object userTag)
	{
		assertValid();
		PlannerBookedProgrammeImpl.natMoveToPdlQueueHead(nativeHandle, listener, userTag);
	}

PLANNER_JAVA_ApiBookedProgrammeMoveToPdlQueueHead
	PLANNER_API_BookedProgramme_PDLQueueControl(PLANNER_JAVA_PDLQueueControlListener)


#-----------------------------------------------------------
# PR#21100: about status of PDL items. 28/03/2011. On 890. See PR rather than WP490.
# - Planner issue which has errors in managing internal item status and as a result, returns wrong status.
#-----------------------------------------------------------
To summary, there is no way to distinguish two cases of status in PDL items:

1) when cancel the download, it's a part(partially downloaded) but not in a queue.
2) when change its priority by moving down in the list, it's a part and in a queue.

Currently MW supports only 'PARTIAL' status and decided to introduce more status in MW to cover these.

# this is current definition
public interface PlannerPdlBookedProgramme extends PlannerBookedProgramme
{
	public interface PdlStatus
	{
		/** The PDL asset is scheduled for download. */
		public static final int	SCHEDULED	= 1;
		/** The PDL asset is partially downloaded. */
		public static final int	PARTIAL		= 2;
		/** The PDL asset is completely downloaded. */
		public static final int	COMPLETE	= 3;
		/** The PDL asset has failed to download. */
		public static final int	FAILED		= 4;
		/**< The PDL asset is currently downloading. */
		public static final int	DOWNLOADING	= 5;
		/** The PDL asset download failed because of timeout. */
		public static final int	TIMEOUT		= 6;
		/**< The PDL asset is in the process of being deleted. If the PDL status is this, no other properties shoudl be retrieved*/
		public static final int	DELETING	= 7;
	}

# this is new definition.
public interface PlannerPdlBookedProgramme extends PlannerBookedProgramme
{
 public interface PdlStatus
 {
  /** The PDL asset is scheduled for download. */
  public static final int SCHEDULED = 1;  
  /** The PDL asset is partially downloaded. */
  public static final int PARTIAL = 2;
  /** The PDL asset is partially downloaded, and still scheduled, or starting. */
# this is new one
  public static final int PARTIAL_SCHEDULED = 3;
  /** The PDL asset is completely downloaded. */
  public static final int COMPLETE = 4; 
  /** The PDL asset has failed to download. */
  public static final int FAILED = 5; 
  /**< The PDL asset is currently downloading. */
  public static final int DOWNLOADING = 6;    
  /** The PDL asset download failed because of timeout. */
  public static final int TIMEOUT = 7;
  /**< The PDL asset is in the process of being deleted. If the PDL status is this, no other properties shoudl be retrieved*/
  public static final int DELETING = 8;
 }

this is defined in 'planner_types.h':

typedef enum PLANNER_API_PDL_StatusTag
{
    PLANNER_API_PDL_STATUS_UNDEF = 0,
    PLANNER_API_PDL_STATUS_SCHEDULED,          /**< The PDL asset is scheduled for download. */
    PLANNER_API_PDL_STATUS_PARTIAL,            /**< The PDL asset is partially downloaded and the download has ended. */
    PLANNER_API_PDL_STATUS_PARTIAL_SCHEDULED,  /**< The PDL asset is partially downloaded but the asset is still scheduled for download. */
    PLANNER_API_PDL_STATUS_COMPLETE,           /**< The PDL asset is completely downloaded. */
    PLANNER_API_PDL_STATUS_FAILED,             /**< The PDL asset has failed to download. */
    PLANNER_API_PDL_STATUS_DOWNLOADING,        /**< The PDL asset is currently downloading. */
    PLANNER_API_PDL_STATUS_TIMEOUT,            /**< The PDL asset download failed because of timeout. */
    PLANNER_API_PDL_STATUS_DELETING,           /**< The PDL asset is in the process of being deleted. If the PDL status is this, no other properties shoudl be retrieved. */
    PLANNER_API_PDL_STATUS_LASTVALUE

} PLANNER_API_PDL_Status;

So you should able to see 'partial scheduled' when move a item to the top and if you see 'part' then it's a problem.

#-----------------------------------------------------------
# to enable PDL at SKY, need to chage 'atg' and 'oigc' cfgs
#-----------------------------------------------------------
# atg.cfg
cas_id=2401
catalog_id=4
default_string="NOT APPLICABLE"

# oigc.cfg
DOMAIN_NAME="oig.sky.com"

#-----------------------------------------------------------
# getPropertyIsPurchaseCancelRequest: natPlannerApiBookedProgrammeGetBoolean: PLANNER_JAVA_ApiBookedProgrammeGetBoolean
#-----------------------------------------------------------
natPlannerApiBookedProgrammeGetBoolean(nativeHandle, PropertyID.BOOL_ISPURCHASECANCELREQ);

static final int BOOL_ISPURCHASECANCELREQ = 31; /*If PPV, does the purchase need to be cancelled for a deletion */

PLANNER_API_BOOKEDPROG_PROPID_BOOL_ISPURCHASECANCELREQ

PLANNER_JAVA_ApiBookedProgrammeGetBoolean
	PLANNER_API_BookedProgramme_GetPropertyBoolean
		PLANNER_BookedProgramme_IsPurchaseCancelReq


#-----------------------------------------------------------
# PR#25220: 
# WP579 - Toggle Reminder/Recording Booking:Convert booking status in Planner from recording to reminder (without deleting in-between)
#-----------------------------------------------------------

# for app log
EPG_LIST and EPG_BOOK 

# used on GUIDE and PLANNER logs
egrep -an "(KEY_PRESS:|GuideScheduleCacheAllRowsBookingProperties|KT|NISHAD|GuideScheduleGetBookingPropsFromPlanner|PLANNER_API_Session_GetProgInstBookingFlags)"

setBookingType: natChangeBookingType: PLANNER_JAVA_ApiBookedProgrammeChangeBookingType: PLANNER_API_BookedProgramme_ChangeBookingType

public interface PlannerListStatus
{
	public static final int	FAILED			= 1;
	public static final int	LIST_AVAILABLE	= 2;
	public static final int	LIST_DELETION	= 3;
	public static final int	LIST_INSERTION	= 4;
	public static final int	LIST_CHANGED	= 5;
}

946685111289: threadtracker: [EPG_LIST:INFO]: ChangeListener.notifySuccess: Planner Planner - change notification:(5)

PLANNER_JAVA_IteratorChangeListener
l_change_status:
PLANNER_API_LIST_STATUS_INSERTION(4)
PLANNER_API_LIST_STATUS_CHANGED(5)

# route 01: use mesg passing
#
GUIDE_API_Session_RetrieveProgrammeInstanceIteratorEx
	GuidePlannerBookingPropertiesUpdateListener
		MesgThread	
			GuidePlannerBookingPropertiesUpdateHandler

GuideScheduleUpdateBookingProps
	GUIDE_Int_PLANNER_API_Session_RetrieveProgInstBookingPropsInTimeWindow( GuideScheduleBookingPropertiesUpdateListener )
	("PLANNER_API_Session_RetrieveProgInstBookingPropsInTimeWindow")
		PLANNER_GridJobs_RetrieveProgInstBookingPropsInTimeWindow
			PLANNER_PostMessage(PLANNER_EV_BOOKING_STATUS_HANDLER)
				PLANNER_BookingStatusHandler
					PlannerThread: call registered callback
			
GuideScheduleBookingPropertiesUpdateListener
SEND:GUIDE_EVENT_SCHEDULE_BOOKING_FLAGS_UPDATED	
				
MesgThread:GUIDE_EVENT_SCHEDULE_BOOKING_FLAGS_UPDATED			
	GuideScheduleBookingPropertiesUpdateHandler
		GuideScheduleCacheAllRowsBookingProperties
		{
			GuideScheduleGetBookingPropsFromPlanner
			{
				GUIDE_Int_PLANNER_API_Session_GetProgTimebasedBookingFlags(&booking_status_flags)
				(PLANNER_API_Session_GetProgTimebasedBookingFlags)
					PLANNER_GridJobs_GetProgTimebasedBookingFlags
						"Feature not supported." PLANNER_API_STATUS_FEATURE_NOT_SUPPORTED
						
				GUIDE_Int_PLANNER_API_Session_GetProgInstBookingFlags(&booking_status_flags)
				(PLANNER_API_Session_GetProgInstBookingFlags)
					PLANNER_GridJobs_GetProgInstBookingFlags
					
				DIAG_LOG_INFO(g_guide_diag_segment_id, ("Row %i booking flags have NOT changed", row_data->row_index));
				*props_changed = false;
			}
			
			if (props_changed == true)
			GUIDE_CALLBACK_SCHEDULE_PROGRAMME_INSTANCE_LIST_CHANGED
		}
		
# route 02: use signal condition
#
GUIDE_JAVA_ProgrammeInstanceGetBookingFlags
GUIDE_JAVA_ProgrammeInstanceGetBookingState
	GUIDE_API_ProgrammeInstance_GetBookingProperties
		GUIDE_Int_PLANNER_API_Session_RetrieveProgInstBookingPropsInTimeWindow(GuideProgrammeInstanceBookingPropsListener)
		("PLANNER_API_Session_RetrieveProgInstBookingPropsInTimeWindow")

		GuideProgrammeInstanceBookingPropsListener (when called, signal condition)

		GUIDE_Int_PLANNER_API_Session_GetProgTimebasedBookingFlags
		GUIDE_Int_PLANNER_API_Session_GetProgInstBookingFlags	

		# PLANNER_API_PROGINSTBOOKINGFLAGS_REMINDER (0x01)
		# PLANNER_API_PROGINSTBOOKINGFLAGS_RECORDING (0x02)
		M:guide_api_programmeinstance.c F:GUIDE_API_ProgrammeInstance_GetBookingProperties L:01911 > PLANNER_API_Session_GetProgInstBookingFlags = 0x2

# when press 'red' key, get booking props first and callback from DG with change event


{planner-pvr-state}
SYSTEM_STATUS PLANNER_GridJobs_RetrieveProgInstBookingPropsInTimeWindow(PLANNER_API_Session_Handle session)
{
  if(false == PLANNER_IsAnyOperationAllowed(PLANNER_API_SESSION_STATUS_REMINDERS_READY | PLANNER_API_SESSION_STATUS_PVR_READY))
  {
    l_status = PLANNER_API_STATUS_PVR_NOT_READY;
    DIAG_LOG_ERROR( g_planner_diag_segment_id, ("Neither reminder nor recording functionality is ready yet."));
  }
}


#-----------------------------------------------------------
# REMINDER
#-----------------------------------------------------------
# important milestones
#
NDS: ^0946685125.559123 !MIL   -PCATS        < M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:02814 > client id = 0x4,bookingJobID = 0x29000016
NDS: ^0946685125.773869 !MIL   -VRMS         < M:job_man_srv.c F:JobManSrvStart L:03843 > VRM_JOB_START: jtVRM=8, jhVRM=0x2000003

# register listener
#
PLANNER_JAVA_ApiSessionRegisterProgrammeReminderListener
	PLANNER_API_Session_RegisterProgrammeReminderListener( , , PLANNER_API_Session_ProgrammeReminderCb PLANNER_JAVA_ReminderListener, ) 

# booking
#
PLANNER_JAVA_ApiSessionAddScheduledBookedProgramme( PLANNER_API_BOOKING_TYPE_REMIND(2), PLANNER_JAVA_AddBookedProgrammeListener )
	PLANNER_API_Session_AddBookedProgrammeParam
		PLANNER_BookingParam_AddBookedProgramme
			PLANNER_EV_ADD_BOOKED_PROGRAMME

# We're trying to use the PlannerSession.checkForBookingConflict() API to determine if a reminder can be successfully converted 
# to a recording without conflict.
#
# #define SYSTEMLOCATOR_TYPE_CATALOGUE_ITEM       17U
# F:PLANNER_API_Session_CheckForBookingConflict L:02918 > KT: param_booking_type= 1, l_locator_type= 17
#
PLANNER_JAVA_ApiSessionCheckForBookingConflict
	PLANNER_API_Session_CheckForBookingConflict
	
	
# PLANNER adds a new item to this queue each time it receives notification from VRM that a reminder job has started
#
PLANNER_SBM_REMINDER_Listener
	post PLANNER_EV_SRM_EVENT

# PLANNER_EV_SRM_EVENT
PLANNER_ProcessSRMEvent

	case SBM_USERBOOKING_JOB_STATE_REMINDER_STARTED	
	
		PLANNER_AddReminderToQueue(l_ids);
		# this is current time and will set 'l_data.timestamp' with this value
		#	!INFO  -P_Planner    < M:planner_reminders.c F:PLANNER_AddReminderToQueue L:00542 > New reminder timestamp: [2011:07:20 09:38:59]1311154739.

		PLANNER_TriggerReminderNotification(); 
			post PLANNER_EV_REMINDER_TRIGGER_NTFY

# PLANNER_EV_REMINDER_TRIGGER_NTFY
PLANNER_ProcessNextReminder
	/* check if event has finished so we don't send a reminder for a missed event */
	PLANNER_IsBookedEventNotInThePast
	
	# get event duration from pcat
	PLANNER_GetBookedEventDuration
	
	# set timer for 10mins from the reminder timestamp	
	PLANNER_ConstructTimer
	# REMINDER_TIMEOUT=600 (10mins) from planner.cfg
	# set 600s or event duration if it's less than 600s to a timer
	# !INFO  -P_Planner    < M:planner_reminders.c F:PLANNER_ConstructTimer L:00249 > Setting a timeout of time of [2011:07:20 09:48:59]1311155339 (offset 600)
	
	if(l_timer_status == PLANNER_API_STATUS_PAST_EVENT)
		PLANNER_LinkedList_RemoveFirst
	
	PLANNER_ProcessReminderNotification
		l_callback_payload.data.reminder.action = PLANNER_API_REMINDER_ACTION_NEW;
		PLANNER_Callback_PostWithSession(PLANNER_EV_CB_REMINDER)
		# !INFO  -P_Planner    < M:planner_reminders.c F:PLANNER_ProcessNextReminder L:00488 > Notification sent for reminder 687865873.
	
PLANNER_ExecuteUserCallback
	case PLANNER_EV_CB_REMINDER(9)
	# !INFO  -P_Planner    < M:planner_callback.c F:PLANNER_ExecuteUserCallback L:00209 > Executing the callback of type 9.

PLANNER_JAVA_ReminderListener
	# PLANNER_API_BOOKING_TYPE_REMIND(2), PLANNER_API_REMINDER_ACTION_NEW(1)
	# < M:natPlannerCommon.c F:PLANNER_JAVA_ReminderListener L:02384 > KT: booking type= 2, l_reminder_action= 1

PLANNER_JAVA_ApiSessionAcknowledgeReminder
	PLANNER_API_Session_AcknowledgeReminder


#-----------------------------------------------------------
# REMINDER: PR#26003- Reminder dialog is displayed for events far in future
# when booking a reminder to future event, reminder banner displayed immediately.
#-----------------------------------------------------------

what went wrong? trigger time(PCAT_CAT_PROP_TRIGGER_TIME) in pcat.db is in the past. 
The root case seems a PREFS which reads trigger time from configs.

SrmJobRegisterScheduler (see comp-PCAT)

#
# case 01
#
# F:PSCHED_SCHED_HandleNextEvent L:00385 > KT: Top event for job id 0x80006: prop= 5, booking id 0x29000015, 
# sched=1311539400, start=1311599400
#
# 1311599400 - 1311539400 = 60000
#


# case 02
#
# F:PSCHED_SCHED_HandleNextEvent L:00385 > KT: Top event for job id 0x80006: prop= 5, booking id 0x29000007, 
# sched=[2011:07:21 23:20:00]1311290400, start=[2011:07:22 16:00:00]1311350400
#
# 1311350400 - 1311290400 = 60000
#

#
# M:prefs_api_user_profile.c F:PREFS_API_USER_PROFILE_GetProp L:01115 > KT: property 7 in module 1
# M:prefs_nvram.c F:PREFS_CacheGetProperty L:06994 > KT: property->cache_value(60000)
# M:prefs_api_session.c F:PREFS_Session_GetValue L:02529 > KT: cache *value(60000)
# M:prefs_api_user_profile.c F:PREFS_API_USER_PROFILE_GetProp L:00108 > KT: prop(7), element->uint32_value(60000)
# M:planner_prefs.c F:PLANNER_PREFS_GetUserSettings L:00230 > KT: prop(7), user_settings->time_before_reminder(60000)
#
PLANNER_PREFS_GetUserSettings
{
	l_prefs_status |= PREFS_API_Record_GetPropUint32 (
	    f_planner_prefs_record_handle, PREFS_API_RECORD_PROPID_UINT32_REMINDER_TIME,
	    &user_settings->time_before_reminder);
        
	/* Convert to milliseconds from secconds */
	user_settings->time_before_reminder *= (uint32_t)1000;
}


# from PCAT_VIEW_SRV_InsertBookingJob
DbviewStoreFieldToComputeTriggerTime
{
	#
	# F:DbviewStoreFieldToComputeTriggerTime L:08798 > KT: PCAT_CAT_BOOKING_TYPE_REMINDER: time_in_seconds(60000000)
	#
	if (ComputeTriggerTimeOnInsertion->booking_type == PCAT_CAT_BOOKING_TYPE_REMINDER){
		time_in_seconds = SetupField.time_before_reminder;
		
		DIAG_LOG_ERROR(PCAT_diag_segment_id, ("KT: PCAT_CAT_BOOKING_TYPE_REMINDER: time_in_seconds(%d)",time_in_seconds ));								
	}
	
	#
	# F:DbviewStoreFieldToComputeTriggerTime L:08813 > KT: E PCAT_CAT_BOOKING_TYPE_BDL: ComputeTriggerTimeOnInsertion->start_time(1311686100), time_in_seconds(60000000), ComputeTriggerTimeOnInsertion->TriggerTime(1311626100)	
	#
	# This trigger time saved in PCAT
	#
	ComputeTriggerTimeOnInsertion->TriggerTime = ComputeTriggerTimeOnInsertion->start_time - (time_in_seconds /1000U);
	
	DIAG_LOG_ERROR(PCAT_diag_segment_id, ("KT: E PCAT_CAT_BOOKING_TYPE_BDL: ComputeTriggerTimeOnInsertion->start_time(%d), time_in_seconds(%d), ComputeTriggerTimeOnInsertion->TriggerTime(%d)"
		,ComputeTriggerTimeOnInsertion->start_time, time_in_seconds, ComputeTriggerTimeOnInsertion->TriggerTime ));
}


#-----------------------------------------------------------
# manual book
#-----------------------------------------------------------
BSKYB manual bookings do not have a title.


#-----------------------------------------------------------
# #25668: Affirm when entering showcase due to plannerBookedProgramme.getPropertyTitle() returning null
# PVOD
#-----------------------------------------------------------
Yes, SBM can book a PVOD event without a title. SBM doesnÂ’t populate the PVOD event title in PCAT. This is left to SRM.
so it could be an SRM bug.  I doubt Sky would ever broadcast PVOD without a title.

EIProcessing_GetAndSetProgInstanceItemProperties (in SRM)
If you are after the updating of PCAT_CAT_PROP_ITEM_NAME, then yes the EIProcessing_GetAndSetProgInstanceItemProperties() 
is the correct place to add debug.


#-----------------------------------------------------------
# PDL booking (via anytime->movie)
#-----------------------------------------------------------
PLANNER_API_Session_AddBookedProgrammeParam

PLANNER_BookingParam_AddBookedProgramme

PLANNER_BookingParam_SetAddBookedProgrammeDefaults

PLANNER_BookingParam_SetAddBookedProgrammePDL(*)
{
	/* Set the booking type */
	
	payload->data.add_booked_programme_struct.pcat_booking_type = PCAT_CAT_BOOKING_TYPE_PDL;
	
	payload->data.add_booked_programme_struct.type = 
	    (uint32_t)((uint32_t)PLANNER_ADD_BOOKED_PROGRAMME_PDL|(uint32_t)PLANNER_ADD_BOOKED_PROGRAMME_RECORDING);
	
	/* Set the booking base type */
	
	payload->data.add_booked_programme_struct.booking_base_type = PCAT_CAT_BASE_TYPE_DOWNLOAD_ITEM;
	
	if (param_type == SBM_USERBOOKING_PARAM_TYPE_PDL_TRAILER)
	{
	    payload->data.add_booked_programme_struct.is_pdl_trailer = true;
	}
	else
	{
	    payload->data.add_booked_programme_struct.is_pdl_trailer = false;
	}
}

PLANNER_AddBookedProgramme_Handler

PLANNER_AddBookedProgramme_Init
{
    else if (l_payload->data.add_booked_programme_struct.booking_base_type == PCAT_CAT_BASE_TYPE_DOWNLOAD_ITEM)
    {
        l_nextState = (uint32_t)PLANNER_ST_ADD_BOOKED_PROGRAMME_PDL_GET_ATG_ASSET_INFO;
    }
}

PLANNER_AddBookedProgramme_Handler

PLANNER_PDL_AddBookedProgramme_GetATGAssetInfo

PLANNER_PDL_AddBookedProgramme_ATGAssetInfoListener

PLANNER_AddBookedProgramme_Handler

PLANNER_PDL_AddBookedProgramme_GetATGAssetInfoProps

PLANNER_PDL_AddBookedProgramme_GetATGPurchasePackets

SBM_SERVER_SIM_PVOD_ProgInstance_Monitor_AddToQueue

PLANNER_PDL_AddBookedProgramme_ATGPurchasePacketsListener

PLANNER_PDL_AddBookedProgramme_GetATGAssetDeliveryInfo

PLANNER_PDL_AddBookedProgramme_ATGAssetDeliveryInfoListener

PLANNER_PDL_AddBookedProgramme_SetPDLEventProps(*)
{
	set various PCAT props
}

SBM_COMMON_ExtractPVOD_GroupID_FromURI

PLANNER_AddBookedProgramme_SBM_AddBooking

SBM_SERVER_USERBOOKING_HandleExternalMessage

SBM_SERVER_USERBOOKING_AddBooking

SBM_USERBOOKING_BookingParam_AddBookedProgramme

SBM_USERBOOKING_VGC_CheckCAAuthorisation

SBM_USERBOOKING_BookingParam_CheckBookingConditions

SBM_USERBOOKING_BookingParam_SetAddBookedProgrammeDefaults

SBM_USERBOOKING_BookingParam_SetAddBookedProgrammePDL

SBM_USERBOOKING_AddBooking_Handler

SBM_USERBOOKING_AddBooking_Init(*)
{
	l_payload->data.add_booking_struct.pcat_item_object_type = PCAT_CAT_OBJECT_TYPE_DOWNLOAD_ITEM;
	
	/* Properties set in the value list used for insertion of the sched event */
  sched_event_insert_prop_list[25] = (PCAT_VIEW_PROP)PCAT_CAT_PROP_SERVICE_TYPE;
  
  /* Properties set in the value list used for insertion of  the manual recording "event" */
  time_based_event_insert_prop_list[0] = (PCAT_VIEW_PROP)PCAT_CAT_PROP_SERVICE_LOCATOR;
  
	/* Insert PDL object VList properties */
	pdl_event_insert_prop_list[0] = (PCAT_VIEW_PROP)PCAT_CAT_PROP_EVENT_LOCATOR;
	
	else if(PCAT_CAT_BASE_TYPE_DOWNLOAD_ITEM == l_payload->data.add_booking_struct.booking_base_type)
		event_insert_prop_list = pdl_event_insert_prop_list;
		
	/* Create a new PCAT value list for inserting the event */
	# here event means SI event
	#		
	PCAT_VIEW_VLIST_New(
		l_payload->data.add_booking_struct.pcat_item_object_type, ,
		event_insert_prop_list, 
		/* out */ &l_payload->data.add_booking_struct.vl_event_insert);
	
	/* Create a new PCAT value list for inserting the booking table/object */
	PCAT_VIEW_VLIST_New(
    PCAT_CAT_OBJECT_TYPE_BOOKING, 1U,
    booking_obj_insert_prop_list,
    SBM_USERBOOKING_BOOKING_OBJ_INSERT_PROP_LIST,
    &l_payload->data.add_booking_struct.vl_booking_insert);	
}

SBM_USERBOOKING_PDL_AddBooking_SetPDLPurchasePacketsProps

SBM_USERBOOKING_PDL_AddBooking_SetPDLEventProps(*)
{
	set various PCAT props
}

SBM_USERBOOKING_AddBooking_BookingTransaction

SBM_USERBOOKING_InsertBooking

NDS: !INFO  -SBMS_USERBOOKING < M:sbm_server_ub_common.c F:SBM_USERBOOKING_InsertBooking L:03456 > The booking was inserted successfully

	PCAT_VIEW_SRV_InsertBookingJob
		PCAT_VIEW_InsertBookingJob
			DbviewStoreFieldToComputeTriggerTime

SBM_USERBOOKING_AddBooking_PurchaseRequired


# book a rec from a guide
F:PLANNER_JOB_Start L:00069 > |-> PLANNER_JOB_Start

F:PLANNER_AddBookedProgramme_SBM_AddBooking L:00406 > Payload status=PLANNER_ST_ADD_BOOKED_PROGRAMME_SBM_ADD_BOOKING

# quota
PLANNER_API_Disk_GetDiskQuotaStatus


={============================================================================
|kt_dev_si_0001| comp-uam

#-----------------------------------------------------------
# status
#-----------------------------------------------------------
# UAM_COMP_ID         	(81)
# UAM_IF_UNDEF			(0)
# SEVERITY_SEVERE		(2)
# SYSTEM_MAKE_COMPONENT_STATUS(SYSTEMALARM_COMP_ID, SYSTEMALARM_COMP_ID, SEVERITY_NONE,    0)            

(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((81 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )

UAM_STATUS_OK 		0x14400000


={============================================================================
|kt_dev_si_0001| comp-prefs

CO: Sackx, Frederik

COMPONENT_NAME:=darwin_prefs_srv
NDS_BUILD_TYPE_darwin_prefs_srv = debug
NDS_BUILD_TYPE_darwin_prefs_cli = debug
#define PREFS_C2S_DIAG_NAME "PREFS_C2S"

DIAG_LOG_RegisterTraceSegment

# DO NOT USE 'ENTER' as get too much and no useful infos.
#

NDS: ^0946684906.423417 !ENTER -PREFS
# the below is used on spdif device.
FIXED_SD_ATTENUATION=6 in prefs.cfg


# nvram files
# http://hoover.uk.nds.com/fusionmadesimple/index.php/Nvram
#
#define NVRAM_FILENAME "/nv"                    /*!< @brief Name of file (without path) in which NVRAM settings are stored */
#define FAVS_LIST_ACTIVE_FILENAME "/fv"         /*!< @brief Name of file (without path) in which NVRAM FAVS current active list are stored */
#define LOCKED_FILENAME "/lc"                   /*!< @brief Name of file (without path) in which NVRAM Locked are stored */
#define LOCKED_EXT_FILENAME "/le"               /*!< @brief Name of file (without path) in which NVRAM Locked are stored */
#define MACROVISION_FILENAME "/mc"              /*!< @brief Name of file (without path) in which macrovision settings are stored */
#define SERVICE_LIST_FILENAME "/sl"             /*!< @brief Name of file (without path) in which the service list mapping are stored */


# prefs_nvram.c to see properties
#
f_nvram_properties


={============================================================================
|kt_dev_si_0001| comp-systemobject

Each Component that needs to generate a Media Status or Media Selection object shall use the SYSTEMOBJECT library to set/get 
the various properties of that object.  There shall be a separate header file for each system object type, e.g. systemobject_sci.h, 
which will be used by any component needing access to the properties of the corresponding object.

The SYSTEMOBJECT library will also be used to serialise and de-serialise the object for the purposes of copying.  
This should only be required when transferring the object across a process boundary, i.e. via IPC.

DeliverySystemInfo (DSI) 
ServiceComponentInfo (SCI)
Transport Stream Information (TSI) : Transport Stream ID, Original Network ID 

$ more systemobject.cfg 
[SYSTEMUTIL_MEMORY_APP_Process]
SYSTEMOBJECT_FLAGS=0
SYSTEMOBJECT_NAME="systemobject"
SYSTEMOBJECT_SIZE=100000
[SYSTEMUTIL_MEMORY_MW_Process]
SYSTEMOBJECT_FLAGS=0
SYSTEMOBJECT_NAME="systemobject"
SYSTEMOBJECT_SIZE=51200


={============================================================================
|kt_dev_si_0001| comp-systemutil

#-----------------------------------------------------------
# status
#-----------------------------------------------------------
# SYSTEMUTIL_COMP_ID         	(71)
# SYSTEMUTIL_IF_ID				(1)
# SEVERITY_SEVERE				(2)
# SYSTEM_MAKE_COMPONENT_STATUS(SYSTEMALARM_COMP_ID, SYSTEMALARM_COMP_ID, SEVERITY_NONE,    0)            

(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((71 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((1 & 0xF) << 12) | (3 & 0xFFF) )

SYSTEMUTIL_STATUS_INVALID_PARAMETER						0x10802000


 * @param[in] client_id      ID created with SYSTEMUTIL_HDL_CreateClient.
 * @param[in] object         Address of the object referenced by the handle (must not be NULL).
 * @param[out] handle        New handle value.

SYSTEMUTIL_HDL_Create


={============================================================================
|kt_dev_si_0001| comp-systemalarm


COMPONENT_NAME := systemalarm

(systemalarm.c)
#ifdef ALARMLIST_DEBUG		

#-----------------------------------------------------------
# status
#-----------------------------------------------------------
# define SYSTEMALARM_COMP_ID         (66)
# SYSTEM_MAKE_COMPONENT_STATUS(SYSTEMALARM_COMP_ID, SYSTEMALARM_COMP_ID, SEVERITY_NONE,    0)            

(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((66 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((66 & 0xF) << 12) | (0 & 0xFFF) )

SYSTEMALARM_STATUS_OK						0x10802000


={============================================================================
|kt_dev_si_0001| comp-systemtime

# returns current time in sec
SYSTEMTIME_GetTime
	SYSTEMTIME_GetTimeVals(systemtime, &milliseconds_dummy)

# call to convert time to string
char time_str[SYSTEMTIME_MIN_STRING_BUFFER_SIZE];
int32_t size = SYSTEMTIME_MIN_STRING_BUFFER_SIZE;

# SYSTEM_STATUS SYSTEMTIME_DebugString(SYSTEMTIME_TIMEDATE systemtime,char *buffer,int32_t *size)
if(SYSTEM_STATUS_IS_OK(SYSTEMTIME_DebugString(list->alarmList[i].info.alarm_data.abs_info.timeout, time_str, &size )))

# F:PrintAlarmList L:00971 > Alarm 19, Handle 0x14, next 7, prev 65535, timeout 20/07/2011 22:20:00
DIAG_LOG_INFO(gAlarmDiagSegmentId,("timeout %s", time_str));


# OR
#

#if (defined(DIAG_DEBUG) || defined(__DIAG_DEBUG))
static char* pschedGetCurrentTimeStr(void)
{

    SYSTEMTIME_TIMEDATE     current_time = 0U;
    SYSTEMTIME_CLOCK_CALENDAR cc_currtime;

    (void)SYSTEMTIME_GetTime(&current_time);
    (void)SYSTEMTIME_ConvertTimeDateToClockCalendar(current_time,&cc_currtime);	

    if(snprintf(current_time_str, (size_t)SYSTEMTIME_MIN_STRING_BUFFER_SIZE,
        "KT: %02d/%02d/%04d %02d:%02d:%02d", cc_currtime.day, cc_currtime.month, cc_currtime.year, cc_currtime.hour, cc_currtime.minute, cc_currtime.second)>=SYSTEMTIME_MIN_STRING_BUFFER_SIZE){
        current_time_str[SYSTEMTIME_MIN_STRING_BUFFER_SIZE-1]='\0';/*make sure that string is null terminated */        
    }

    return current_time_str;
}

static char* pschedGetTimeStr(SYSTEMTIME_TIMEDATE timedate)
{

    SYSTEMTIME_CLOCK_CALENDAR cc_time;

    (void)SYSTEMTIME_ConvertTimeDateToClockCalendar(timedate,&cc_time);	

    if(snprintf(general_time_str, (size_t)SYSTEMTIME_MIN_STRING_BUFFER_SIZE,
        "KT: %02d/%02d/%04d %02d:%02d:%02d", cc_currtime.day, cc_currtime.month, cc_currtime.year, cc_currtime.hour, cc_currtime.minute, cc_currtime.second)>=SYSTEMTIME_MIN_STRING_BUFFER_SIZE){
        general_time_str[SYSTEMTIME_MIN_STRING_BUFFER_SIZE-1]='\0';/*make sure that string is null terminated */        
    }

    return general_time_str;
}
#endif /* (defined(DIAG_DEBUG) || defined(__DIAG_DEBUG)) */


#
#
typedef struct SYSTEMTIME_CLOCK_CALENDAR_TAG
{
    uint16_t year;      /*!< @brief The year. */
    uint8_t month;      /*!< @brief The month of the year (1 = January). */
    uint8_t day;        /*!< @brief Day of the month (1 = 1st of the month). */
    uint8_t hour;       /*!< @brief Hour of the day. */
    uint8_t minute;     /*!< @brief Minute of the hour. */
    uint8_t second;     /*!< @brief Second of the minute. */
    uint8_t day_of_week;/*!< @brief Day of the week (0 = Monday) - this field is output only and is not checked when the structure is passed into an interface. */
} SYSTEMTIME_CLOCK_CALENDAR;

SYSTEM_STATUS SYSTEMTIME_SetTime(const SYSTEMTIME_CLOCK_CALENDAR *utc_time, int32_t local_offset)

NDS: ^[20:00:18]0946756818.527260 !MIL    -SYSTEMTIME           < p:0x00000000 P: t:0x2b149b80 T:SIM_PLUGIN_XSI_MC_ENGINE_THREAD M:systemtime.c F:SYSTEMTIME_SetTime L:929 > Time has been updated to (Year:Month:Day:Hour:Min:Sec) 2011:12:16:8:50:59


<time-heart-beat>
Has 5 secs interval

systemtime.cfg:11:SYSTEMTIME_TIMESTAMP_INTERVAL=5


    if( SYSTEMCONFIG_STATUS_OK == SYSTEMCONFIG_GetIntegerValue(Config_file_Handle,
                                                               "SYSTEMTIME_CONFIGURATION",
                                                               "SYSTEMTIME_TIMESTAMP_INTERVAL",
                                                               &f_systemtime_timestamp_interval) )


static void SYSTEMTIME_TimeStampCallback(void)
{
  {
    if ((systemtime - prev_systemtime) >= f_systemtime_timestamp_interval)
    {
      prev_systemtime = systemtime;

      time_status = SYSTEMTIME_ConvertTimeDateToClockCalendar(systemtime, &clockcalendar);
      if(SYSTEMTIME_STATUS_OK == time_status)
      {
        DIAG_LOG_MIL(g_systemtime_diag_id,("Time is (Year:Month:Day:Hour:Min:Sec) %04d:%02d:%02d:%02d:%02d:%02d",
              clockcalendar.year,clockcalendar.month,clockcalendar.day,clockcalendar.hour,clockcalendar.minute,clockcalendar.second));
      }
    }
  }
}


^[2016:08:21 14:09:07]0946685094.138404 !MIL    -SYSTEMTIME                < T:SYSTEMTIME_NOTIFICATION_THREAD M:systemtime_thread.c F:SYSTEMTIME_TimeStampCallback L:153 >
is (Year:Month:Day:Hour:Min:Sec) 2016:08:21:14:09:07

^[2016:08:21 14:09:12]0946685099.144471 !MIL    -SYSTEMTIME                < T:SYSTEMTIME_NOTIFICATION_THREAD M:systemtime_thread.c F:SYSTEMTIME_TimeStampCallback L:153 >
Time is (Year:Month:Day:Hour:Min:Sec) 2016:08:21:14:09:12


={============================================================================
|kt_dev_si_0001| comp-systemcommon comp-systemexception

<system-common-failure>
system_exception.h defines SYSTEM_EXCEPTIONS_TYPEs and it links to
'SystemCommonFailureType.java'. 


/** Reasons for non-fatal failure. */
/* Enum SYSTEM_EXCEPTION_Type in system_exception.h */
public interface SystemCommonFailureType
{
	int TYPE_UNDEF = 0;

	/** Stopped by the viewer */
	int VIEWER_STOPPED = 1;

	/** Restarted by viewer after recording stopped */
	int VIEWER_RESTARTED_AFTER_RECORDING_STOPPED = 2;

	/** Event booked after its scheduled start time */
	int VIEWER_BOOKED_TOO_LATE = 3;

	/** raw HTTP error */
	int HTTP_401_UNAUTHORIZED = 53;

	/** No Exception */
	int NO_EXCEPTION = 100;
};


<recording-failure-reason>
RecordingFailureReason uses this.

/** @brief System exception types */
typedef enum SYSTEM_EXCEPTIONS_TYPE_TAG   *booking-exception*
{
  SYSTEM_EXCEPTION_TYPE_VIEWER_STOPPED(0),          /*!< @brief Stopped by the viewer */ 0
  SYSTEM_EXCEPTION_TYPE_VIEWER_BOOKED_TOO_LATE(3),  /*!< @brief Event booked after its scheduled start time */
  SYSTEM_EXCEPTION_TYPE_NO_TUNER_AVAILABLE(15),     /*!< @brief Tuner not available due to tuner conflict */ 15
  ...
  SYSTEM_EXCEPTION_TYPE_NO_EXCEPTION,               /*!< @brief No exceptions occured */
}


If there are mismatch between MW definitions in system_exception.h and JPA
definitions in SystemCommonFailureType.java then Picasso displays wrong
messages. 

public class RecordingFailureReason
public static String getRecordingFailureString(int reason, boolean failed)
{
  case SystemCommonFailureType.VIEWER_RESTARTED_AFTER_RECORDING_STOPPED:
    failureReason = "Interrupted";
  case SystemCommonFailureType.NO_CA_AUTHORISATION:
    failureReason = "Subscription needed";
    break;
  case SystemCommonFailureType.NO_XTV_SUBSCRIPTION:
    failureReason = "Subscription needed";
    break;
  case SystemCommonFailureType.HTTP_401_UNAUTHORIZED:
    failureReason = "Subscription needed";
    break;
  case SystemCommonFailureType.HTTP_CA_IMPORT_FAILURE:
    failureReason = "Subscription needed";
    break;
}


={============================================================================
|kt_dev_si_0001| comp-systemlocator

# but the main difference from system objects is in the usage rules. Once a locator is created, 
# the only component thatÂ’s allowed to read the values from it 
# is the component that created it Â– Clients can get locator handles, pass them around, etc., 
# but they are not allowed to Â“look insideÂ” a locator.
#
# provides a mechanism of packaging system information object identifiers in a form that is transparent to component interfaces. 
#
# format: locator:protocal:object:property value in hex
#
# protocols:
# SYSTEMLOCATOR_PROTOCOL_XSI (5)
# SYSTEMLOCATOR_PROTOCOL_LOCAL (3)
#
# objects:
# SYSTEMLOCATOR_TYPE_SERVICE               3U
# SYSTEMLOCATOR_TYPE_PROGRAMME_INSTANCE    5U
# SYSTEMLOCATOR_TYPE_VOD_ASSET            11U
# SYSTEMLOCATOR_TYPE_AV_PRESENTATION         31U /*!< @brief locates an AV Presentation event. */#

# event locator
locator:5:5:FFE:17C

# service locator
locator:5:3:FFE

job-srcloc=,locator:3:11:29015519:0,job-destloc=,locator:3:1F:4B:19:54:0 


# (((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((47 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((1 & 0xF) << 12) | (1 & 0xFFF) )

'0xbc21001'
#define SYSTEMLOCATOR_STATUS_FAILED           (SYSTEM_MAKE_COMPONENT_STATUS(SYSTEMLOCATOR_COMP_ID, SYSTEMLOCATOR_IF_ID, SEVERITY_SEVERE,  (uint32_t)1U))  /*!< @brief Generic Failure status for SYSTEMLOCATOR */


={============================================================================
|kt_dev_si_0001| comp-systemipc

# Pereira Vega, Francisco 
#
# (((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((99 & 0x3FF) << 22) | ((1 & 0x3) << 16) | ((1 & 0xF) << 12) | (1 & 0xFFF) )

SYSTEMITC_NOT_OK 0c18C11001


={============================================================================
|kt_dev_si_0001| comp-systeminit

COMPONENT_NAME:=SYSINIT_CLIENT
COMPONENT_NAME:=SYSINIT_SERVER


# process spawn from SCD
SYSINIT_SERVER_Init
	spawnProcess
		posix_spawn


<run-ring>
Run level	
The current activity state of a component as determined by SYSINIT

Ring level	
A logical grouping of components. All components `in a given ring level` must
reach the Active run level before SYSINIT shall start the components in the
next ring level.


<sysinit-config>
// # Components to start (PLEASE KEEP IN RING-LEVEL ORDER)
// COMPONENT SSM 1			(MW)
// COMPONENT PDM 2
// COMPONENT SFM 2
// COMPONENT BEM 2
// COMPONENT MM  2
// COMPONENT PREFS       3
// COMPONENT MPM         3
// COMPONENT GFX         3
// COMPONENT CAMM_SERVER 3
// COMPONENT NCM         3
// COMPONENT DHCP        3
// COMPONENT PPPD        3
// COMPONENT FDM         3

// COMPONENT MSM           4
// COMPONENT SIM           4

// COMPONENT FEM 5

// COMPONENT NDS_CA_KERNEL 6
// COMPONENT CAPPROC 6
// COMPONENT PCAT 6
// COMPONENT RNC 6

// COMPONENT SDM 7
// COMPONENT RMF    7
// COMPONENT PSCHED 7

// COMPONENT RMP    8
// COMPONENT MCM 8
// COMPONENT UAM     8

// COMPONENT VRM_SRV 9

// COMPONENT CTM 10

// COMPONENT SPM_SERVER 11
// COMPONENT OFS   11

// COMPONENT SRM        12

// COMPONENT SBM   13
// COMPONENT DLM_SERVER 13

// COMPONENT GUIDE 14
// COMPONENT PLANNER 14
// COMPONENT REMBOOK 14
// COMPONENT SCM 14

// COMPONENT PLAYER     15
// COMPONENT ATG 15

// COMPONENT AEM 16
// COMPONENT WLM 16

// COMPONENT ADAPTOR_INIT      19
// COMPONENT JAVAENGINE        19 # vobs\THIRD_PARTY_LIBRARIES\BSKYB_JTH\build\engines\java\src\javaengine.c
// COMPONENT LAE               19


<sysint-config-new>
[RING_LEVELS]
NUM_RING_LEVELS=19
[RING_LEVEL_1]
COMPONENT_1="SSM"
NUM_COMPONENTS=1
[RING_LEVEL_10]
COMPONENT_1="CTM"
NUM_COMPONENTS=1
[RING_LEVEL_11]
COMPONENT_1="SPM_SERVER"
COMPONENT_2="OFS"
NUM_COMPONENTS=2

[RING_LEVEL_12]
COMPONENT_1="`SRM`"
NUM_COMPONENTS=1

[RING_LEVEL_13]
COMPONENT_1="SBM"
COMPONENT_2="DLM_SERVER"
NUM_COMPONENTS=2

[RING_LEVEL_14]
COMPONENT_1="GUIDE"
COMPONENT_2="PLANNER"
COMPONENT_3="REMBOOK"
COMPONENT_4="SCM"
NUM_COMPONENTS=4

[RING_LEVEL_15]
COMPONENT_1="PLAYER"
COMPONENT_2="ATG"
COMPONENT_3="VWS"
NUM_COMPONENTS=3
[RING_LEVEL_16]
COMPONENT_1="AEM"
COMPONENT_2="WLM"
NUM_COMPONENTS=2
[RING_LEVEL_17]
NUM_COMPONENTS=0
[RING_LEVEL_18]
NUM_COMPONENTS=0
[RING_LEVEL_19]
COMPONENT_1="JAVAENGINE"
COMPONENT_2="LAE"
NUM_COMPONENTS=2
[RING_LEVEL_2]
COMPONENT_1="PDM"
COMPONENT_2="SFM"
COMPONENT_3="BEM"
COMPONENT_4="MM"
NUM_COMPONENTS=4
[RING_LEVEL_3]
COMPONENT_1="PREFS"
COMPONENT_2="MPM"
COMPONENT_3="GFX"
COMPONENT_4="CAMM_SERVER"
COMPONENT_5="NCM"
COMPONENT_6="DHCP"
COMPONENT_7="PPPD"
COMPONENT_8="FDM"
COMPONENT_9="SPC"
NUM_COMPONENTS=9
[RING_LEVEL_4]
COMPONENT_1="MSM"
NUM_COMPONENTS=1
[RING_LEVEL_5]
COMPONENT_1="SIM"
COMPONENT_2="FEM"
NUM_COMPONENTS=2

[RING_LEVEL_6]
COMPONENT_1="RNC"
COMPONENT_2="NDS_CA_KERNEL"
COMPONENT_3="CAPPROC"
COMPONENT_4="`PCAT`"
NUM_COMPONENTS=4

[RING_LEVEL_7]
COMPONENT_1="SDM"
COMPONENT_2="RMF"
COMPONENT_3="PSCHED"
COMPONENT_4="ATM"
COMPONENT_5="ASM"
COMPONENT_6="SDPC"
NUM_COMPONENTS=6
[RING_LEVEL_8]
COMPONENT_1="MCM"
COMPONENT_2="UAM"
NUM_COMPONENTS=2

[RING_LEVEL_9]
COMPONENT_1="`VRM_SRV`"
NUM_COMPONENTS=1

# each comp follows the below state changes
SYSINIT_RunLevelRequestInitialise, 
SYSINIT_RunLevelRequestPrepare, 
SYSINIT_RunLevelRequestActive, 

# processes
# vobs\FUSION_SYSTEM_INTEGRATION\BSKYB_INTEGRATION\build\processes\. main.c for each process will be automatically generated in building.
APP_Process: app_process_main.c
{
    SYSINIT_ComponentRunLevelStruct componentList[] = {
        {(uint8_t *)"ADAPTOR_INIT", ADAPTOR_INIT_RunLevelRequest},  # JPA
		{(uint8_t *)"JAVAENGINE", JAVAENGINE_RunLevelRequest},      # JVM

	adaptor_init_list[] =	
	{
        DARWIN_ADAPTOR_DIAG_Init,
		DARWIN_ADAPTOR_SYSTEMCOMMON_Init,
		...
	}

	# set 'f_adaptor_init_adaptors' with init_list
	ADAPTOR_INIT_AddRunlevelListeners(adaptor_init_list);

	# register to SYSINT and start
	SYSINIT_StartComponents(sizeof(componentList)/sizeof(*componentList), componentList))
}

ADAPTOR_INIT_RunLevelRequest
	ADAPTOR_INIT_DoFirstTimeOnly
		ADAPTOR_INIT_CreateThread(ADAPTOR_INIT_MainThread)
	PostEvt(ADAPTOR_INIT_MainThread)

ADAPTOR_INIT_MainThread
	case SYSINIT_RunLevelRequestPrepare:
		ADAPTOR_INIT_ChangeWrapperStartState
			for 
				f_adaptor_init_adaptors[i](newstate,&env): DARWIN_ADAPTOR_DIAG_Init ...

	case SYSINIT_RunLevelRequestShutdown:

CA_Process
MW_Process: mw_process_main.c
{
    SYSINIT_ComponentRunLevelStruct componentList[NUM_COMPONENTS] =
    {
        {(uint8_t *)"BEM", BEM_RunLevelRequest}, 
		...
        {(uint8_t *)"MSM", MSM_RunLevelRequest},
		{(uint8_t *)"SIM", SIM_RunLevelRequest}, 
		{(uint8_t *)"PDM", PDM_RunLevelRequest},
        {(uint8_t *)"WLM", WLM_RunLevelRequest}
    };

	SYSINIT_ClientInit: SYSINIT_API_InitMsgHandling: IPC_CLIENT_Init: IPC_CLIENT_Open
	SYSINIT_StartComponents
}

# startup process
SCD_Process: SCD_Process_main.c
{
    SYSINIT_ComponentRunLevelStruct componentList[NUM_COMPONENTS] =
    {
        {(uint8_t*)"DHCP", DHCP_RunLevelRequest},	# this is {comp name, comp init func}
        {(uint8_t*)"NCM", NCM_RunLevelRequest},
        {(uint8_t*)"MM", MODEM_RunLevelRequest},
        {(uint8_t*)"PPPD", PPPD_RunLevelRequest}
    };

	SYSINIT_SERVER_Init
	SYSINIT_ClientInit
	SYSINIT_StartComponents
		SYSINIT_API_SendStartComponentsMsg # pass comp name to sysinit svr
}	


# app side
#
class InitialisationManager:
public void requestSystemReset()
{
	cr.getSpmApi().initiateShutdown(SpmApi.ShutDownType.FULL_SYSTEM_RESET);
}

class SpmApiImpl:
public void initiateShutdown(int shutdownType)
{
  natSpmApiShutdownInitiate(shutdownType);
}


SPM_JAVA_ShutdownInitiate
SPM_API_Shutdown_Initiate:
	post SPM_CLIENT_INTERNAL_EVENT_SHUTDOWN_INITIATE and shutdownType

SPM_CLIENT_Task:
	case SPM_CLIENT_INTERNAL_EVENT_SHUTDOWN_INITIATE:
	    SPM_CLIENT_DIAG_LOG_EVENT(("Internal event for SPM_SHUTDOWN"));
	    (void)SPM_CLIENT_Shutdown_message_handler(SPM_CLIENT_EVENT_INTERNAL_TYPE, &myMessage);
	    break;

	SPM_CLIENT_SHUTDOWN_ProcessMessageShutdownStart
		post SPM_CLIENT2SERVER_EVENT_SHUTDOWN_INITIATE

		
SPM_CLIINT_EventHandler:
  case SPM_CLIENT2SERVER_EVENT_SHUTDOWN_INITIATE:

      systemStateMessage.messageType = SPM_SYSTEMSTATE_MESSAGE_SHUTDOWN_INITIATE;
      systemStateMessage.data.shutdown.clientHandle = spm_cliint_handle;
      systemStateMessage.data.shutdown.shutdownType  = payload->shutdown_payload.shutdownType;

      /* Set destination module*/
      messageType = SPM_SVR_SYSTEM_STATE_MODULE;
      messagePtr = (uint8_t *)&systemStateMessage;
      messageSize = (uint32_t)sizeof(systemStateMessage);


SPM_SVR_RegisterMessageHandlers:
/* register the SYSTEM STATE message handler with the dispatcher */
dispatcherStatus |= SPM_DISPATCHER_RegisterMessageHandler((uint16_t)SPM_SVR_SYSTEM_STATE_MODULE, SPM_SystemState_MessageHandler, "SPM SYSTEMSTATE MODULE");


SPM_SystemState_MessageHandler:
	case SPM_SYSTEMSTATE_MESSAGE_SHUTDOWN_INITIATE:
	    SPM_SystemState_ResetTheSystem(msg_data);
	    break;


SPM_SystemState_ResetTheSystem:
	else if(msg_ptr->data.shutdown.shutdownType == SPM_API_SHUTDOWN_FULL_SYSTEM_RESET)
		SPM_Disk_RequestDataReset
		SYSINIT_API_SetException(SYSTEM_EXCEPTION_TYPE_RESTARTED_LOCALLY)
        SYSINIT_API_SetActivityState(SPM_GetComponentSysinitHandle(), ** "SYSINIT_API_ActivityStateRequestRestart" **)
					SYSINIT_API_SendSetActivityState
						IPC_CLIENT_Send(msgSetActivityState)

# 
# server side
#
SYSINIT_SERVER_Init:
	ParseConfig("/NDS/etc/sysinit.cfg")
	SYSINIT_initIPCServer
	spawnProcess
	SYSINIT_initStateMachine(stateMachineThread)
		# brings all the components through Undefined, Prepared, Initialised and Active 
		for(l_currentRingLevel=lowestRingLevel; l_currentRingLevel<=highestRingLevel; l_currentRingLevel++)
			for(initStage = 0; initStage <= lastForwardStage; initStage ++)
				switchRingLevelRunLevel("false") # this means that not use timeout when boots up so if there are failed comps then get stuck.


# server_msghandling.c 
#
# IPC_SERVER_AddInterface(listenerAPI)
listenerAPI on IPC 

  case msgRunLevelNotification:
      DIAG_LOG_INFO(g_SYSINIT_SERVER_segment, ("run level notification message"));
      status = "listenerRunLevelNotification"(connectionHandle, message, messageLen);
      break;

	case msgStartComponents:
			status = listenerComponentStarted(connectionHandle, message, messageLen);
			
	case msgSetActivityState:
	    DIAG_LOG_INFO(g_SYSINIT_SERVER_segment, ("activity state message"));
	    status = listenerSetActivityState(connectionHandle, message, messageLen);
	    break;


tasks_function: # server task on g_SYSINIT_SERVER_Tasks_Queue


listenerSetActivityState:
	setActivityStateCallback:
    "whatToDo" = SYSINT_CHANGE_STATE_REQUEST;
    "queuedActivityState" = activityState;
	(void)pthread_cond_broadcast("&somethingToDoCondVariable"); ## here


listenerRunLevelNotification
	# set if comp has reponded sysinit request.
	runLevelNotificationCallback
		# if all comps on the same ring have responded, then signal it.
		sem_post(&ringLevelCompleteSignal)


# state_machine.c
#
stateMachineThread:
	/* Start the loop and process the requests as they arrive */
	while(targetRunLevel != SYSINIT_RunLevelRequestShutdown)
	{
	    SYSINIT_API_ActivityStateRequest prevActivityState = SYSINIT_API_ActivityStateRequestUndef;
	    /* Wait for the requested state to change */
	    (void)pthread_mutex_lock(&somethingToDoMutex);
	    if (whatToDo == 0U)
	    {
	        /* wait for something to do... */
	        DIAG_LOG_EVENT(g_SYSINIT_SERVER_segment,("Waiting for something to do..."));
	        (void)pthread_cond_wait("&somethingToDoCondVariable", &somethingToDoMutex);
	    }

		if (myWhatToDo == SYSINT_CHANGE_STATE_REQUEST)
	   	{ 
			switch("queuedActivityState")
			  case SYSINIT_API_ActivityStateRequestRestart:
			  case SYSINIT_API_ActivityStateRequestShutdown:

				DIAG_LOG_MIL(g_SYSINIT_SERVER_segment, ("Moving to SHUTDOWN run level"));

				targetRunLevel = SYSINIT_RunLevelRequestShutdown;

				for( from high ring level to low ring level)
					switchRingLevelRunLevel 

				DIAG_LOG_MIL(g_SYSINIT_SERVER_segment, ("Reached run level SHUTDOWN"));

				if(ioctl(t_fd, RESET_CONTROL_RESET) == -1)
		}					


# SYSINIT_RUNLEVEL_TIMEOUT=60 is used for each comp to respond
switchRingLevelRunLevel
	# This function first instructs all components at the given ring level to change run level.  
	# see runLevelNotificationCallback
	sendChangeForRingLevel(ringLevel, targetRunLevel)
    DIAG_LOG_INFO(g_SYSINIT_SERVER_segment, ("Sent run level changes - waiting for responses"));
	fprintf(stderr, "KT: Sent ring/target run(%d/%d) level changes - waiting for responses\n", ringLevel, targetRunLevel );

	# waits until comps responded on the ring level
	sem_timedwait(&ringLevelCompleteSignal, &timeout);

runLevelNotificationCallback


# client side
#
SYSINIT_API_MyListener: 
	SYSINIT_API_HandleRunLevelRequest
		status = clientNode->callback(runLevel, handle);
			# this calls each comp SPM_RunLevelRequest

"SPM_RunLevelRequest"(SYSINIT_RunLevelRequest, SYSINIT_ComponentHandle)
	SYSINIT_API_NotifyRunLevelChanged(SYSINIT_API_RunLevelNotificationShutdown)
		SEND IPC msgRunLevelNotification

#
# JVM
#
(engines/java/src/javaengine.c)
JAVAENGINE_RunLevelRequest
	# start
	case SYSINIT_RunLevelRequestActive: 
	{
		DIAG_LOG_INFO( g_javaengine_segment_id, ("JAVAENGINE handling RunLevelRequestActive") );
		status = JAVAENGINE_StartANewThread( JAVAENGINE_ActivateThread, (void *) handle);
	break;
	}

	case SYSINIT_RunLevelRequestShutdown:
		JAVAENGINE_ShutdownThread
			CEEJ_LookupMethod(&javaMethod, MAINCLASSNAME, "shutdown", "()Z");
			SYSINIT_API_RunLevelNotificationShutdown
			
			
(./applications/java_common/src/com/bskyb/darwin/AppEngine.java)
public static boolean shutdown()

#
# not sure how this lead to 'terminateApplication as below.
#
at com/nds/fusion/diagimpl/DiagImpl.logChunksExtended(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V (DiagImpl.java:262:96)
at com/nds/fusion/diagimpl/DiagImpl.checkThrowableExtended(Ljava/lang/Throwable;ILjava/lang/String;Ljava/lang/String;I)Z (DiagImpl.java:442:25)
at com/nds/fusion/diagimpl/DiagImpl.logExtended(ILjava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;I)V (DiagImpl.java:662:12)
at picasso/i.a(ILjava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;I)V (:0:188)
at picasso/i.a(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;I)V (:0:12)
at picasso/i.a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V (:0:10)
at picasso/im.y()V (:0:17)
at MainPicasso.terminate()V (:0:16)
at com/bskyb/darwin/AppEngine.terminateApplication(I)Z (AppEngine.java:104:18)


# shutdown. ring/run level
#
F:runLevelNotificationCallback L:00333 > component LAE changed to run/ring level 19/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component JAVAENGINE changed to run/ring level 19/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component ADAPTOR_INIT changed to run/ring level 19/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component WLM changed to run/ring level 16/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component AEM changed to run/ring level 16/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PLAYER changed to run/ring level 15/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component ATG changed to run/ring level 15/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component GUIDE changed to run/ring level 14/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component REMBOOK changed to run/ring level 14/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SCM changed to run/ring level 14/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PLANNER changed to run/ring level 14/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SBM changed to run/ring level 13/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component DLM_SERVER changed to run/ring level 13/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SRM changed to run/ring level 12/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component OFS changed to run/ring level 11/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SPM_SERVER changed to run/ring level 11/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component CTM changed to run/ring level 10/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component VRM_SRV changed to run/ring level 9/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component MCM changed to run/ring level 8/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component UAM changed to run/ring level 8/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component RMP changed to run/ring level 8/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component RMF changed to run/ring level 7/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SDM changed to run/ring level 7/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PSCHED changed to run/ring level 7/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component CAPPROC changed to run/ring level 6/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PCAT changed to run/ring level 6/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component RNC changed to run/ring level 6/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component NDS_CA_KERNEL changed to run/ring level 6/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component FEM changed to run/ring level 5/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component MSM changed to run/ring level 4/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SIM changed to run/ring level 4/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component GFX changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PREFS changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component MPM changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component NCM changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component CAMM_SERVER changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component DHCP changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component FDM changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PPPD changed to run/ring level 3/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component SFM changed to run/ring level 2/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component BEM changed to run/ring level 2/6 (SYSINIT_API_RunLevelNotificationShutdown)
F:runLevelNotificationCallback L:00333 > component PDM changed to run/ring level 2/6 (SYSINIT_API_RunLevelNotificationShutdown)


<init-startup>
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SSM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SSM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SSM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SFM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PDM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component BEM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PDM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component BEM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SFM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PDM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SFM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component BEM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GFX to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MPM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAMM_SERVER to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DHCP to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PPPD to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FDM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PREFS to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPC to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NCM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PREFS to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MPM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GFX to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NCM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DHCP to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAMM_SERVER to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPC to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PPPD to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FDM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MPM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GFX to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PPPD to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAMM_SERVER to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NCM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DHCP to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPC to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FDM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PREFS to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MSM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MSM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MSM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SIM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FEM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FEM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SIM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SIM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FEM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RNC to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAPPROC to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PCAT to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NDS_CA_KERNEL to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RNC to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAPPROC to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PCAT to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NDS_CA_KERNEL to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAPPROC to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PCAT to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NDS_CA_KERNEL to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RNC to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RMF to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PSCHED to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDPC to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ASM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDPC to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PSCHED to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RMF to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ASM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDPC to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RMF to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PSCHED to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ASM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MCM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component UAM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component UAM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MCM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MCM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component UAM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VRM_SRV to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VRM_SRV to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VRM_SRV to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CTM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CTM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CTM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component OFS to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPM_SERVER to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component OFS to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPM_SERVER to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component OFS to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPM_SERVER to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SRM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SRM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SRM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SBM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DLM_SERVER to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DLM_SERVER to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SBM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DLM_SERVER to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SBM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLANNER to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component REMBOOK to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SCM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GUIDE to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SCM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GUIDE to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component REMBOOK to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLANNER to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GUIDE to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component REMBOOK to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SCM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLANNER to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLAYER to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATG to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VWS to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATG to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VWS to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLAYER to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VWS to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATG to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLAYER to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component AEM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component WLM to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component AEM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component WLM to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component WLM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component AEM to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component JAVAENGINE to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component LAE to runlevel INITIALISED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component JAVAENGINE to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component LAE to runlevel PREPARED. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component JAVAENGINE to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component LAE to runlevel ACTIVE. 

!MIL    -SYSINIT_S    		< P:SCD T:STATE_MACHINE_THREAD M:state_machine.c F:stateMachineThread L:1183 > ENDING   Moving system to runlevel ACTIVE. 
!MIL    -SYSINIT_S    		< P:SCD T:STATE_MACHINE_THREAD M:state_machine.c F:stateMachineThread L:1388 > STARTING Moving system to runlevel PVR. 

!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SSM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PDM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SFM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component BEM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PREFS to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MPM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GFX to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAMM_SERVER to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PPPD to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NCM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DHCP to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FDM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPC to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MSM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SIM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component FEM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component NDS_CA_KERNEL to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RNC to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CAPPROC to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PCAT to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDPC to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SDM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PSCHED to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ASM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component RMF to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component MCM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component UAM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VRM_SRV to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component CTM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SPM_SERVER to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component OFS to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SRM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SBM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component DLM_SERVER to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component GUIDE to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component REMBOOK to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component SCM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLANNER to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component PLAYER to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component ATG to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component VWS to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component AEM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component WLM to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component JAVAENGINE to runlevel PVR. 
!MIL    -SYSINIT_S    		< P:SCD T:IPC_WRAPPER_THREAD M:state_machine.c F:runLevelNotificationCallback L:311 > ENDING   Moving component LAE to runlevel PVR. 


={============================================================================
|kt_dev_si_0001| comp-wlm

COMPONENT_NAME:=wlm_client
COMPONENT_NAME:=wlm_server

# JPA
#
# DARWIN_PLATFORM\DARWIN_WLM_JAVA
#
COMPONENT_NAME:= darwin_wlm_native
DARWIN_PLATFORM\DARWIN_WLM_JAVA\src\inc\natwlm.h #define WLM_JAVA_DIAG_NAME "J_WLM"

# picasso
vobs/FUSION_SYSTEM_INTEGRATION/BSKYB_INTEGRATION/build/projects/picasso/build_options.mk

# DIAG tip
# to get func name from WLM diags, need to change like below. This should apply for client, server and util component.
# 
# (wlm_server.h)
#define WLM_SERVER_DIAG_ENTRY()      DIAG_DECLARE_FUNCTION(""); do { DIAG_LOG_FN_ENTRY(WLM_SERVER_Globals.diagSegId); } while(0)
# like as below
#define WLM_JAVA_DIAG_ENTRY()     DIAG_DECLARE_FUNCTION(__FUNCTION__); do { DIAG_LOG_FN_ENTRY(g_wlm_adaptor_api_diag_segment_id); } while(0)


# picasso logs for wlm. NetworkAccessModel.java 
# Preferences
EPG_PRF = fatal error warn info
# Preferences (Models)
EPG_PRFM = fatal error warn info                                                                                                

#
# 
Local Connection refers to whether or not DHCP has successfully negotiated a lease. 
Service Connection refers to the connection between the STB and the PDL servers.

On EPG screen in case wireless:
0th - local connection
1th - service connection
2th - IP
3th - DHCP
4th - Network name

#
# this is bridge's ip for configuration which came from wlm.cfg
F:WLM_SERVER_HTTP_Perform L:03056 > URL: "http://90.223.243.225/stbadmin?capabilities

# this is stb's ip for bridge connection. NOTE! it's from SPM and PREFS.
# 90.223.243.226. Is this MNGT connection 'sub-interface' as eth0:1.
# 
# = STB ================== --- WIRED ---- = BRIDGE ========================== - WIRELESS- = AP ========== - WAN
# = MAIN CONNECTION: 192.168.2.x          =                           =     =             = 192.168.2.x =
# = MNGT: 90.223.243.226 =                = MNGT CONNECTION: 90.223.243.225 =             = DHCP        =

#-----------------------------------------------------------
# status
#-----------------------------------------------------------
#define WLM_COMP_ID     (87)
#define SEVERITY_SEVERE (0x2))
#define SEVERITY_NONE	(0)
#define WLM_API        	(0)
            
(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )
hex(((87 & 0x3FF) << 22) | ((0 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )
hex(((87 & 0x3FF) << 22) | ((2 & 0x3) << 16) | ((0 & 0xF) << 12) | (7 & 0xFFF) )

WLM_API_STATUS_OK		0x15c00000	(364904448)
WLM_API_STATUS_ERROR	0x15C20001 	(365035521)
WLM_API_STATUS_TIMEOUT	0x15C20007	(365035527)


# wlm.cfg: wlm_server_readconfigfile()
#
[BRIDGE_PROTOCOL]
INFO_INTERVAL=5		# used for 'WLM_MONITOR_DETECT_BRIDGE' which is WLM_API_IsWirelessPresent.
INFO_TIMEOUT=30

JOIN_DELAY=1
JOIN_INTERVAL=5
JOIN_TIMEOUT=120
REBOOT_DELAY=5
REBOOT_INTERVAL=15
REBOOT_TIMEOUT=360
RESET_DELAY=5
RESET_INTERVAL=15
RESET_TIMEOUT=360
SURVEY_DELAY=5
SURVEY_INTERVAL=5
SURVEY_TIMEOUT=60
UPGRADE_DELAY=240
UPGRADE_INTERVAL=15
UPGRADE_TIMEOUT=360


NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01529 > Creating memory pool...
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01530 >   Pool name: WLM_SERVER_POOL
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01531 >   Pool flags: 0
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01532 >   Pool size: 65536
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01563 > Allocating networks list of 5180 bytes
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01572 > Allocating server transmit message buffer of 5180 bytes
NDS: !INFO  -WLM_SERVER   < M:wlm_server.c  L:01583 > Allocating server receive message buffer of 500 bytes


NDS: ^0946684866.050956 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00582 > Configuration:
NDS: ^0946684866.051098 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00583 >   Bridge IP address: 90.223.243.225
NDS: ^0946684866.051210 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00584 >   Bridge port: 80
NDS: ^0946684866.051317 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00585 >   INFO timeout: 30
NDS: ^0946684866.051429 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00586 >   INFO interval: 5
NDS: ^0946684866.051535 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00587 >   REBOOT delay: 5
NDS: ^0946684866.051644 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00588 >   REBOOT timeout: 360
NDS: ^0946684866.051755 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00589 >   REBOOT interval: 15
NDS: ^0946684866.051861 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00590 >   RESET delay: 5
NDS: ^0946684866.051971 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00591 >   RESET timeout: 360
NDS: ^0946684866.052094 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00592 >   RESET interval: 15
NDS: ^0946684866.052202 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00593 >   UPGRADE delay: 240
NDS: ^0946684866.052311 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00594 >   UPGRADE timeout: 360
NDS: ^0946684866.052418 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00595 >   UPGRADE interval: 15
NDS: ^0946684866.052531 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00596 >   SURVEY delay: 5
NDS: ^0946684866.052640 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00597 >   SURVEY timeout: 60
NDS: ^0946684866.052748 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00598 >   SURVEY interval: 5
NDS: ^0946684866.052856 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00599 >   JOIN delay: 1
NDS: ^0946684866.052966 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00600 >   JOIN timeout: 120
NDS: ^0946684866.053095 !INFO  -WLM_SERVER   < T:IPC_IPCP_THREAD M:wlm_server.c  L:00601 >   JOIN interval: 5


#
# app use this to get stat info after running command like join.
#
natWlmRetrieveInfo
	WLM_JAVA_INFO_TYPE_INFO
	WLM_JAVA_RetrieveInfo(WLM_JAVA_InfoRetrievalListener)
		WLM_CLIENT_SendMessage(WLM_MSGTYPE_API_RETRIEVE_INFO);
		
# client
WLM_API_Join
	WLM_CLIENT_CopyToTransmitBuffer
		WLM_CLIENT_SendMessage(WLM_MSGTYPE_API_JOIN) # to server via IPC

WLM_SERVER_Task:

	WLM_SERVER_ReceiveMessage # read from IPC and copy mesg to 'WLM_SERVER_Globals.rcvbuf.message'

	# JOIN starting point
	#
	case WLM_MSGTYPE_API_JOIN:
		WLM_SERVER_DIAG_INFO(("Dispatch: JOIN"));
		status = WLM_SERVER_Join(0);

	# when completed from monitor thread
	#
	case WLM_MSGTYPE_EVENT_JOIN_COMPLETE:
		WLM_SERVER_DIAG_INFO(("Dispatch: JOIN_COMPLETE"));
		status = WLM_SERVER_Join(WLM_API_STATUS_OK);
		if (status != WLM_API_STATUS_OK)
		{
			WLM_SERVER_DIAG_ERROR(("Join failed, status=%lu", status));
		}
					WLM_SERVER_DIAG_INFO(("Force stop of the Monitor on WLM_MSGTYPE_EVENT_JOIN_COMPLETE"));

		WLM_SERVER_HTTP_StopMonitor(true);
		break;
	
	case WLM_MSGTYPE_API_RETRIEVE_INFO:
		WLM_SERVER_RetrieveInfo
		{
			WLM_SERVER_Globals.rcvbuf.message # read mesg from 'WLM_SERVER_Globals.rcvbuf.message'
			
			WLM_SERVER_HTTP_GetInfo(&WLM_SERVER_Globals.info) 	# WLM_SERVER_Globals.info is a global struct
				WLM_SERVER_HTTP_Perform 													# URL: "http://90.223.243.225/stbadmin?info"
				
				# httpMessageBuffer is a buffer for response from a bridge and is updated from WLM_SERVER_HTTP_WriteData
				
				# update 'info' struct from a response
				#
				WLM_SERVER_HTTP_ParseInfo(&WLM_SERVER_Globals.info)
					WLM_SERVER_HTTP_SetValue
					
			WLM_SERVER_HTTP_GetCaps(&WLM_SERVER_Globals.info.caps)
				WLM_SERVER_HTTP_Perform														# URL: "http://90.223.243.225/stbadmin?capabilities"
				WLM_SERVER_HTTP_ParseInfo
				
			#	send 'info' back to client
			#		
			WLM_SERVER_CopyToTransmitBuffer(sizeof(WLM_API_Info_t), &WLM_SERVER_Globals.info);
			WLM_SERVER_SendClientMessage(WLM_MSGTYPE_RESP_RETRIEVE_INFO);
		}				


# fill Java struct with info struct from WLM
#
WLM_JAVA_InfoRetrievalListener:


# example response. info. send req and parse response. For others, use monitor threads to check response.
#				
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_Perform L:03056 > URL: "http://90.223.243.225/stbadmin?info"
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_WriteData L:01179 > Received 496 bytes, total 496 bytes
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01524 > Setting protocol: 2
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01539 > Setting manufacturer: netgear
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01554 > Setting model: wg902
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01569 > Setting firmware: V1.1.5WW
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01584 > Setting skyid: skywirelessbridge
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01599 > Setting name: netgear083836
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01614 > Setting buildtype: test
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01645 > Setting macAddress: E0:91:F5:08:38:36
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01660 > Ignoring mgmtIp: 90.223.243.225
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01674 > Ignoring mgmtSubnet: 255.255.255.248
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01695 > Setting dhcpClient: true
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01719 > Setting ip: 192.168.2.7 
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01723 > Invalid bridge IP address "192.168.2.7 "
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01748 > Setting subnet: 255.255.255.0 
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01752 > Invalid bridge IP subnet mask "255.255.255.0 "
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01777 > Setting gateway: 192.168.2.1 
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01781 > Invalid gateway IP address "192.168.2.1 "
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01806 > Setting dns: 192.168.2.1
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01830 > Setting ssid: Belkin_7d2ee0
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01853 > Setting security: open
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01894 > Setting encryption: none
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01944 > Setting channel: 13
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01966 > Setting mode: g
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:01999 > Setting apMacAddress: 94:44:52:7D:2E:E0
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02021 > Setting strength: 78
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02041 > Setting state: AUTH
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02077 > Setting surveying: false
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02100 > Setting joining: false

T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_Perform L:03056 > URL: "http://90.223.243.225/stbadmin?capabilities"
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_WriteData L:01179 > Received 43 bytes, total 43 bytes
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02359 > Setting upgradableFirmware: true
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02382 > Setting upgradeCommand: true
T:WLM_SERVER M:wlm_server_http.c F:WLM_SERVER_HTTP_SetValue L:02405 > Setting dhcpClient: true
				
# set dhcpclient in bridge
#
NDS: ^0946687613.080084 !INFO  -WLM_SERVER   < M:wlm_server_http.c  L:03056 > URL: "http://90.223.243.225/stbadmin?set&dhcpclient=1"


WLM_SERVER_HTTP_Init

	# set write func for receiving response from HTTP
	HTTP_API_Setopt(WLM_SERVER_Globals.httpHandle, HTTP_API_OPT_WRITEFUNCTION, WLM_SERVER_HTTP_WriteData);
	
	# 5 seconds timeout
	HTTP_API_Setopt(WLM_SERVER_Globals.httpHandle, HTTP_API_OPT_TIMEOUT, WLM_HTTP_TIMEOUT);

	SPM_API_Network_GetNetworkBridgeConnConf(&network_conf)
	
	...
	SPM_Network_GetBridgeConf
		SPM_Network_SetBridgeConf

WLM_SERVER_HTTP_WriteData
	memcpy(httpMessageBuffer + httpMessageOffset, (uint8_t *)buffer, size * nmemb);


#
WLM_SERVER_Join

	WLM_SERVER_Globals.joinPending = true;

	WLM_SERVER_HTTP_Join
		WLM_SERVER_HTTP_Perform
			HTTP_API_Perform # send req to http
	WLM_SERVER_HTTP_StartMonitor(WLM_MONITOR_JOIN_COMPLETE) # create a thread which checks response from the bridge
		WLM_THREAD_Spawn(WLM_SERVER_HTTP_MonitorTask)

WLM_SERVER_HTTP_MonitorTask
	case WLM_MONITOR_JOIN_COMPLETE:
		WLM_SERVER_HTTP_GetInfo
			WLM_SERVER_HTTP_ParseInfo # parse http response and fill info struct

		SYSTEMITC_API_PostEvent(WLM_SERVER_Globals, WLM_MSGTYPE_EVENT_JOIN_COMPLETE)
		# send evt to server task (see above)


# PR 27096
#
# OK CASE
#
# case WLM_MSGTYPE_API_JOIN:
#   WLM_SERVER_DIAG_INFO(("Dispatch: JOIN"));
#   status = WLM_SERVER_Join(0);
#
NDS: ^0946687092.621281 !INFO  -WLM_SERVER   < M:wlm_server.c  L:01019 > Dispatch: JOIN
NDS: ^0946687092.621659 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03285 > KT: ENT WLM_SERVER_Join:
NDS: ^0946687092.621773 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03289 > KT: joinPending: false!, 0

NDS: ^0946687092.622373 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03316 > Setting pending request...

NDS: ^0946687095.717718 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03332 > Starting monitor...

NDS: ^0946687095.721201 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03341 > KTM: joinPending: 1, opStatus:0, startStatus:364904448
NDS: ^0946687095.721330 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03387 > KT: EXIT WLM_SERVER_Join: status:364904448

#
# case WLM_MSGTYPE_EVENT_JOIN_COMPLETE:
#   WLM_SERVER_DIAG_INFO(("Dispatch: JOIN_COMPLETE"));
#   status = WLM_SERVER_Join(WLM_API_STATUS_OK);
#
NDS: ^0946687106.879011 !INFO  -WLM_SERVER   < M:wlm_server.c  L:01389 > Dispatch: JOIN_COMPLETE
NDS: ^0946687106.879131 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03285 > KT: ENT WLM_SERVER_Join:
NDS: ^0946687106.879251 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03341 > KTM: joinPending: 1, opStatus:364904448, startStatus:364904448

# set 'pending' = false and join the thread
#
NDS: ^0946687106.880785 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03373 > KT: joinPending: 0, opStatus:364904448, startStatus:364904448
NDS: ^0946687106.882284 !INFO  -WLM_SERVER   < M:wlm_server.c  L:01395 > Force stop of the Monitor on WLM_MSGTYPE_EVENT_JOIN_COMPLETE

# ERROR CASE

# In the first part, failure to 'WLM_SERVER_HTTP_Join' set startStatus with  WLM_API_STATUS_TIMEOUT(365035527)
# this set 'pending' to false.
NDS: ^0946687238.954403 !INFO  -WLM_SERVER   < M:wlm_server_http.c  L:03069 > HTTP_API_Perform status: Timeout was reached
NDS: ^0946687238.954566 !ERROR -WLM_SERVER   < M:wlm_server_http.c  L:02697 > Error performing HTTP request
NDS: ^0946687238.954676 !FATAL -WLM_SERVER   < M:wlm_server.c  L:03326 > Bridge join failed.

NDS: ^0946687238.958103 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03341 > KTM: joinPending: 1, opStatus:0, startStatus:365035527

# set pending to false
#    if ((opStatus == WLM_API_STATUS_OK || opStatus == WLM_API_STATUS_ERROR || opStatus == WLM_API_STATUS_TIMEOUT) ||
#        !SYSTEM_STATUS_IS_OK(startStatus))
#
#        WLM_SERVER_DIAG_INFO(("KT: joinPending: %d, opStatus:%d, startStatus:%d", WLM_SERVER_Globals.joinPending, opStatus, startStatus ));
#        WLM_SERVER_Globals.joinPending = false;
#        WLM_SERVER_DIAG_INFO(("KT: joinPending: %d, opStatus:%d, startStatus:%d", WLM_SERVER_Globals.joinPending, opStatus, startStatus ));
# 
NDS: ^0946687238.959649 !INFO  -WLM_SERVER   < M:wlm_server.c  L:03373 > KT: joinPending: 0, opStatus:0, startStatus:365035527

# send resp to a client
#
WLM_SERVER_SendClientMessage(WLM_MSGTYPE_RESP_JOIN);

# so in the second call, it will create a thread again and get OOM on WLM_SERVER_POOL
#
#if (!WLM_SERVER_Globals.joinPending)
#	create a monitor again
#

# and got this because server used ipc mesg from client duing a first call so no more mesg to copy from a client
NDS: ^0946687250.122749 !ERROR -WLM_SERVER   < M:wlm_server.c  L:03304 > Invalid session


={============================================================================
|kt_dev_si_0001| comp-ca

# APP -> VGC IF
# '1039' and '072' docs are basically the same.
#
# CA. When app get CA event from player, app uses VGC to get more infos. 
#
CASI	CA Status Information
CAEI	CA Entitlement Information

#define PLAYER_EVENT_CA                             0x82000000      
#/**< Represents all CA events notified by PLAYER */

#define PLAYER_EVENT_CA_VIDEO						0x82000001      
# /**< Notification of a Video elementry component CA exception. @see #PLAYER_EVENT_CA_Video_PropId */

#define PLAYER_EVENT_CA_AUDIO                       0x82000002      
#/**< Notification of a Audio elementry component CA exception. @see #PLAYER_EVENT_CA_Audio_PropId */

#define PLAYER_EVENT_CA_TELETEXT                    0x82000004      
#/**< Notification of a Teletext elementry component CA exception. @see #PLAYER_EVENT_CA_Teletext_PropId */

#define PLAYER_EVENT_CA_SUBTITLE                    0x82000008      
#/**< Notification of a Subtitle elementry component CA exception. @see #PLAYER_EVENT_CA_Subtitle_PropId */

PLAYER_VGC_GetViewingProblems
PLAYER_PRV_CheckFreeToAirStatus
	# CAMM_MODULE_CAStreamStatusAccessDeniedOther 0x7F. Picasso: PlayerEventCA.CAScrambledStatus


# app side
#
class PlayerEventCAVideoImpl
	getConditionID()
		PlayerEventCommonImpl.natGetUint32(nativeHandle, I_CA_COND_ID);
			# PLAYER_JAVA_EventCommonImplGetUint32 
			# 	PLAYER_API_Event_GetUint32
			# 		PLAYER_API_Video_PropId_Uint32_CACondId: from SYSTEMOBJECT_GetInteger(caei_handle, SYSTEMOBJECT_CAEI_PROPID_I_CA_CONDITION_ID )


PlayerEventPump::processEvent 
	mediaEngine.onCAEvent((PlayerEventCA) event);
		onCAEvent:handlePlayerEventCA
		{
			data.setCondition(caEvent.getConditionID());
			int newProb = extractMWContentProblem();
			currentData.setMWContentProblem(newProb);
		}

int extractMWContentProblem
{
	topMWProblem = ((CA) CR.getCA()).contentCheck(currentData.getCondition(), session.getCpHandle());
	return topMWProblem;
}

# /Picasso/src/java/picasso/mediaengine/ca/ContentInfo.java
public int contentCheck(int conditionID, int cpHandle)
{
	contentInfo.getViewingProblems(cpHandle, conditionID);
}

OR

# \applications\Picasso\picasso\Picasso\src\java\picasso\mediaengine\ca\VGCDebug.java
private static VGCDebugBuffer getCAContentCaInfo
{
byte[] viewingProblemIds = caCCI.getViewingProblems(cpHandle, conditionId);
}

# \DARWIN_PLATFORM\DARWIN_VGC_JAVA\impl\base\CAContentCaInfoImpl.java
public byte[] getViewingProblems(int cpHandle, int conditionId) throws CAException


946685486026: PooledExecutor#0: [  EPG_ME:INFO]: PlayerEventPump.processEvent: event --> com.nds.fusion.playerimpl.PlayerEventCAVideoImpl
946685486365: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.handlePlayerEventCA: 
946685486034: threadtracker: [  EPG_ME:INFO]: GuideRetrievalEventPump.notifySuccess: 
946685486369: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.contentCheck: contentCheck has condition: 48 handle: 50331657
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo: CAContentCaInfo:
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Operation status:                       1 (OPERATION_STATUS_SUCCESS)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   CA service ID:                          16
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Purchase information available:         false
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement type:                       1 (ENTITLEMENT_TYPE_SUBSCRIPTION)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot type:                  1 (SLOT_TYPE_SUBSCRIPTION)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot number:                0
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Promo ID:                               65535
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   SI sync token:                          -1
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Allowed taping modes:                   1 (ANALOG_TAPING_ALLOWED)
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of viewing problems:             0
946685486385: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of exceeded limits:              0
946685486389: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: 0 CONTENT PROBLEMS
946685486390: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.extractMWContentProblem: topMWProblem=-1

946685486391: PooledExecutor#0: [  EPG_ME:INFO]: PlayerEventPump.processEvent: event --> com.nds.fusion.playerimpl.PlayerEventCAAudioImpl
946685486395: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.handlePlayerEventCA: 
946685486399: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.contentCheck: contentCheck has condition: 48 handle: 50331657
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo: CAContentCaInfo:
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Operation status:                       1 (OPERATION_STATUS_SUCCESS)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   CA service ID:                          16
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Purchase information available:         false
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement type:                       1 (ENTITLEMENT_TYPE_SUBSCRIPTION)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot type:                  1 (SLOT_TYPE_SUBSCRIPTION)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot number:                0
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Promo ID:                               65535
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   SI sync token:                          -1
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Allowed taping modes:                   1 (ANALOG_TAPING_ALLOWED)
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of viewing problems:             0
946685486414: PooledExecutor#0: [  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of exceeded limits:              0
946685486753: PooledExecutor#0: [  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: 0 CONTENT PROBLEMS
946685486754: PooledExecutor#0: [  EPG_ME:INFO]: MediaEngine.extractMWContentProblem: topMWProblem=-1



# /Picasso/src/java/picasso/mediaengine/MediaEngine.java
public synchronized void contentProblemUpdate(int context)
{
	//this gets the problem as a ME Problem type
	contentProblem = getProblem(currentData.getMWContentProblem(),
								currentData.getScrambledStatus(),
								context);
}

# \DARWIN_PLATFORM\DARWIN_PLAYER_JAVA\api\PlayerEventCA.java
    public interface CAScrambledStatus
    {
        /** Free to air */
        public static final int FREE_TO_AIR         = 0x76;
            
        /** Access granted */  
        public static final int ACCESS_GRANTED  = 0x01;

        /** Access granted for free preview */ 
        public static final int ACCESS_GRANTED_FREE_PREVIEW     = 0x77;

        /** Access possible by PPV purchase */ 
        public static final int ACCESS_POSSIBLE_BY_PPV  = 0x02;

        /** Access possible if rating control is bypassed */   
        public static final int ACCESS_POSSIBLE_MATURITY_RATING     = 0x04;

        /** Access denied due to user not entitled */  
        public static final int ACCESS_DENIED_NOT_ENTITLED  = 0x71;

        /** Access denied based on geographic blackout */  
        public static final int ACCESS_DENIED_GEOGRAPHIC    = 0x75;

        /** Access denied  due to other reason */  
        public static final int ACCESS_DENIED_OTHER     = 0x7F; (127)
    }

int getProblem(int mwContentProblem, int scrambledStatus, int context)
{
	use IMediaEngineListener.ME_CP_XXX as a return
	# /Picasso/src/java/picasso/common/mediaengine/IMediaEngineListener.java
	static final int		ME_CP_NO_PROBLEM					= 0;
	static final int		ME_CP_CARD_REMOVED					= 1;
	static final int		ME_CP_CARD_INITIALISING				= 2;
	static final int		ME_CP_CARD_PROBLEM					= 3;
	static final int		ME_CP_CARD_ALREADY_CHAINED			= 4;
	static final int		ME_CP_CARD_NOT_AUTHORISED			= 5;
	static final int		ME_CP_SPECIAL_REASON				= 6;
	static final int		ME_CP_PURCHASE_WINDOW_CLOSED		= 7;
	static final int		ME_CP_TIME_BLACKOUT					= 8;
	static final int		ME_CP_LIMIT_EXCEEDED				= 9;
	static final int		ME_CP_PPV_IFP_SLOTS_FULL			= 10;
	static final int		ME_CP_INVALID_CA_PACKET				= 11;
	static final int		ME_CP_PPV_EXPIRED					= 12;
	static final int		ME_CP_SERVICE_NOT_AUTHORIZED		= 13;
	static final int		ME_CP_PPV_BAD_PRICING_TABLE_INDEX	= 14;
	static final int		ME_CP_BLACKOUT						= 15;
	static final int		ME_CP_HD_SERVICE_NOT_AUTHORIZED		= 16;
	static final int		ME_CP_CARD_NOT_PAIRED				= 17;
	static final int		ME_CP_CA_RECORDING_HOLE				= 18;
	static final int		ME_CP_PIN_REQUIRED_PLAYER			= 19;	//PIN_TYPE_PLAYER
	static final int		ME_CP_PIN_REQUIRED					= 20;	//JB i don't think this is required anymore?
	static final int		ME_CP_PIN_REQUIRED_PLAYER_RECORDING	= 21;	//PIN_TYPE_PLAYER
	static final int		ME_CP_PIN_REQUIRED_LOCKED_SERVICE	= 22;	//PIN_TYPE_PLAYER
	static final int		ME_CP_CHAINING_IN_PROGRESS			= 23;
	static final int		ME_CP_CHAINING_COMPLETED			= 24;
	static final int		ME_CP_CHAINING_FAILED				= 25;
	static final int		ME_CP_ACCESS_DENIED_BY_PLAYER		= 26;
	static final int		ME_CP_NO_PDL_ENTITLEMENT			= 27;
	static final int		ME_CP_NUM_PROBLEMS					= 28;	// last problem + 1
}


# INFO for one service
#
# /Picasso/src/java/picasso/mediaengine/ca/ContentInfo.java for contentCheck()
#
[  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: 2 CONTENT PROBLEMS
[  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: CONTENT_PROBLEM_CARD_NOT_PAIRED
[  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: SET AS TOP PROB
[  EPG_CA:INFO]: ContentInfo.getHighestContentProblem: CONTENT_PROBLEM_SERVICE_NOT_AUTHORIZED
[  EPG_ME:ERROR]: MediaEngine.notifyMediaEngineListeners: NotifyMessage:5
[  EPG_CA:INFO]: ContentInfo.contentCheck: contentCheck has condition: 13 handle: 50331651
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo: CAContentCaInfo:
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Operation status:                       0 (OPERATION_STATUS_FAILURE)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   CA service ID:                          0
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Purchase information available:         false
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement type:                       0 (ENTITLEMENT_TYPE_UNKNOWN)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot type:                  0 (SLOT_TYPE_UNKNOWN)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Entitlement slot number:                255
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Promo ID:                               65535
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   SI sync token:                          -1
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Allowed taping modes:                   3 (ANALOG_TAPING_ALLOWED, DIGITAL_TAPING_ALLOWED)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of viewing problems:             2
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:     Viewing problem [0]:
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:       Problem ID:                         3 (CONTENT_PROBLEM_CARD_NOT_PAIRED)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:       Problem code:                       20
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:     Viewing problem [1]:
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:       Problem ID:                         25 (CONTENT_PROBLEM_SERVICE_NOT_AUTHORIZED)
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:       Problem code:                       37
[  EPG_CA:INFO]: VGCDebug.dumpCAContentCaInfo:   Number of exceeded limits:              0


<ca-log>
note: seems not to be the latest since cannot see value 6.

CMS_MEDIA_SERVICES/Media_Streamer/proj_specific/fusion2/build/xtv_temp/inc/n3t009.h

/* Purchase Actions Constants Definition */
#define PREPARE_CA_DATA                   0
#define GET_NUMBER_OF_PURCHASE_OPTIONS    1
#define GET_PURCHASE_OPTION_DATA          2
#define PURCHASE_VIEWING_ONLY             3
#define PURCHASE_VIEWING_AND_TAPING       4
#define GET_PURCHASE_PACKET_DATA          5

!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CARD ID: 535426415
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CARD TYPE: 1
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > SUBSCRIBER ID: 26403151
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CAS ID: 2403
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > BOUQUET ID: 4101
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > SUB-BOUQUET ID: 1
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > COUNTRY CODE: 4670034
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CURRENCY CODE: 1
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > ZIP CODE: TW18
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CARD AUTHORIZED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CARD PAIRED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > PVR SUB: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > BSKYB IPPV ALLOWED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > BSKYB PPV CREDIT: 598 / 3501
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > HOUSEHOLD ID: 0033EFD7
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > BSKYB VIP: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > PDL ENTITLEMENT: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > COMMERCIAL: false
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > BB CALLBACK PREFERRED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > PAIRING CALLBACK ENABLED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > LOCAL TV ENABLED: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > ANALYTICS ENABLED: false
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > DOWNLOAD NEXT CAPABLE: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CATCHUP SERIES LINK CAPABLE: true
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > EPG INFO BITS: 0a700000
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > EPG INFO BITS MASK: 0a7a0000
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > PVOD CONTENT GROUP: 130050
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > SHOWCASE BOOKMARK: SH_UK_HDPREMIUM_SPORTS_MOVIES
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > System Details:
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > MODEL NUMBER: R015.084.48.00U (4nvjtz4)
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > VERSION NUMBER: 4f3101
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > SERIAL NUMBER: 330807110
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > RECEIVER ID: C2BC7708200000000
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > CA SYSTEM ID: [2078:01:22 04:51:03]2881974402
!MIL    -EPG_CA                    < p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:CA F:stateActive L:191 > VCA PAIRING INFO: 535426415      4F3101  [2010:06:25 18:51:50]0330807110 7       C2BC7708200000000


<ca-ippv>
when ippv goes okay

// ca ppv happens first but can happen after epg
!MIL    -EPG_CA       		< P:APP t:0x2bfeb520 T:no name M:PPVInfo F:<init> L:181 > T:CEE-J EventQueue Reader 0:Created session on vg@5a6a82e
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_CreatePurchaseObject Enter
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS. DS_NotificationHandler # PO[0] 0, notfication_status = 1, ippv_msg_flag = 0x0
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_CreatePurchaseObject EXIT handle = 0x56
!MIL    -EPG_CA       		< P:APP t:0x2dfa4520 T:no name M:PPVInfo F:setupPPVOptionsCallback L:462 > T:PooledExecutor#2:SYSTEMTEST DEBUG Retrieving ca options
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV_SetPurchaseRequest ENTER, handle 0x56
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction, purchase_action 1
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_SetPurchaseRequest EXIT 8. OK.
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction, EXIT stat = 0
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV_SetPurchaseRequest ENTER, handle 0x56
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction, purchase_action 2
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_SetPurchaseRequest EXIT 8. OK.
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction options_in_pack 11, start_option_index 0, options_to_read 3
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction options_in_pack 11, start_option_index 3, options_to_read 3
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction options_in_pack 11, start_option_index 6, options_to_read 3
!MIL    -VGV          		< P:CA t:0x0095cb90 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV Ippv_ExecutePurchaseAction options_in_pack 11, start_option_index 9, options_to_read 2
!MIL    -EPG_CA       		< P:APP t:0x010c18a0 T:no name M:PPVInfo F:objectNotify L:1433 > T:threadtracker:SYSTEMTEST DEBUG CA objectNotify
!MIL    -EPG_CA       		< P:APP t:0x2dfbd520 T:no name M:PPVInfo F:dispose L:208 > T:PooledExecutor#3:Deleting session on caPpvAction vg@5a6a82e
!MIL    -EPG_TVG      		< P:APP t:0x2bfeb520 T:no name M:StartAgainEntsTask$2$3 F:apply L:171 > T:CEE-J EventQueue Reader 0:2 valid subscription(s).
!MIL    -JAE          		< P:APP t:0x2bfeb520 T:no name M:modules/jvm-glue/src/c/src/ceej_bsp.c F:ooBSP_printf L:1382 > [CEE-J EventQueue Reader 0] Scheduling YoungGenGC - youngGenSize=288768, fGCEphemeralBytesAllocd = 288960,  fHeapSize = 20971520
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_DestroyPurchaseObject Enter handle = 0x56
!MIL    -VGV          		< P:CA t:0x0093db30 T:no name M:AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_ F:IPPV L:162 > NDS.PPV IPPV_DestroyPurchaseObject EXIT handle = 0x56
!MIL    -EPG_TVG      		< P:APP t:0x2bfeb520 T:no name M:StartAgainTask$2$1$1 F:success L:176 > T:CEE-J EventQueue Reader 0:Got [2] assets back
!MIL    -EPG_TVG      		< P:APP t:0x2bfeb520 T:no name M:StartAgainTask$2$1$1 F:success L:180 > T:CEE-J EventQueue Reader 0: Got asset = Fish Town channel = Sky Atlantic HD m/f = false hd = true ppv = false
!MIL    -EPG_TVG      		< P:APP t:0x2bfeb520 T:no name M:StartAgainTask$2$1$1 F:success L:180 > T:CEE-J EventQueue Reader 0: Got asset = Fish Town channel = Sky Atlantic m/f = false hd = false ppv = false

// then epg
!MIL    -EPG_NET      		< P:APP M:HttpNotifier F:send L:31 > d3=508273075&cd4=off&cd5=off&de=UTF-8&t=event&cd=%2Fanytime&ec=AssetAction&el=Title%3DBreaking+Bad+Season+2%3BState%3DNOT_BOOKED%3Btemplatename%3DViewBuyAndKeepBoxSet&ea=SELECT
!ERROR  -EPG_DEV1     		< P:APP M:NotificationConverter F:setLastScreenSeen L:11 > T:CEE-J EventQueue Reader 0:setting last screen seen to /buy_and_keep_prepurchase
// int BUY_AND_KEEP_`PREPURCHASE`  = 41;
!MIL    -EPG_SCR      		< P:APP M:Screens F:doOpenScreen L:1103 > T:CEE-J EventQueue Reader 0:SCREEN EST PREPURCHASE layer=4, id=41 opened
// int BUY_AND_KEEP_`PURCHASE`     = 43;
!MIL    -EPG_SCR      		< P:APP M:Screens F:doOpenScreen L:1103 > T:CEE-J EventQueue Reader 0:SCREEN EST PURCHASE layer=4, id=43 opened
!MIL    -EPG_MISC     		< P:APP M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "PinEvent","action": "VERIFY_PIN;success","title": "","label": "","currentscreen": "/buy_and_keep_purchase"}
!MIL    -EPG_NET      		< P:APP M:HttpNotifier F:send L:31 > d3=508273075&cd4=off&cd5=off&de=UTF-8&t=event&cd=%2Fbuy_and_keep_purchase&ec=PinEvent&el=&ea=VERIFY_PIN%3Bsuccess
!MIL    -EPG_NET      		< P:APP M:Purchaser F:logResponse L:132 > T:CEE-J EventQueue Reader 0:Response: {"purchase":[{"offerId":"5026","purchaseId":"c14a7a73-5d46-4b60-bf64-6919427d5a98","rentalPeriod":175200}]}
!MIL    -EPG_DLG      		< P:APP M:DialogManager F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog 1475

// then ctm downloads starts


<ca-api>
# com.nds.fusion.vgc.base.CASubscriberConfig
# \vobs\DARWIN_PLATFORM\DARWIN_VGC_JAVA\api\base\CASubscriberConfig.java
package com.nds.fusion.vgc.base;

public interface CASubscriberConfig extends CAObject
{
}


# CAContentCaInfo.java
{
	package com.nds.fusion.vgc.base;
	
	public interface CAContentCaInfo extends CAObject
	{
	    /* Content viewing problems */
    public static final byte CONTENT_PROBLEM_UNKNOWN = 0;
    public static final byte CONTENT_PROBLEM_CARD_PROBLEM = 1;
    public static final byte CONTENT_PROBLEM_CARD_NOT_AUTHORIZED = 2;
    public static final byte CONTENT_PROBLEM_CARD_NOT_PAIRED = 3;
    public static final byte CONTENT_PROBLEM_CARD_ALREADY_CHAINED = 4;
    public static final byte CONTENT_PROBLEM_INVALID_CA_PACKET = 5;
    public static final byte CONTENT_PROBLEM_BLACKOUT = 6;
    public static final byte CONTENT_PROBLEM_TIME_BLACKOUT = 7;
    public static final byte CONTENT_PROBLEM_CONTENT_EXPIRED = 8;
    public static final byte CONTENT_PROBLEM_LIMIT_EXCEEDED = 9;
    public static final byte CONTENT_PROBLEM_PURCHASE_WINDOW_CLOSED = 20;
    public static final byte CONTENT_PROBLEM_PPV_BLOCKED = 22;
    public static final byte CONTENT_PROBLEM_CONSUMMATION_WARNING = 23;
    public static final byte CONTENT_PROBLEM_PENDING_REPORTBACK = 24;
    public static final byte CONTENT_PROBLEM_SERVICE_NOT_AUTHORIZED = 25;
    public static final byte CONTENT_PROBLEM_XTV_PAUSE_AND_RECORDING_NOT_ALLOWED = 50;
    public static final byte CONTENT_PROBLEM_PPV_EXPIRED = 62;
    public static final byte CONTENT_PROBLEM_PPV_BAD_PRICING_TABLE_INDEX = 65;
    public static final byte CONTENT_PROBLEM_SPECIAL_REASON = 70;
    public static final byte CONTENT_PROBLEM_PPV_IFP_SLOTS_FULL	= 71;
    
    public SystemTime getBlackoutEndTime(int cpHandle, int conditionId) throws CAException;
    
    ...
	}
}


# IMPL

# \vobs\DARWIN_PLATFORM\DARWIN_VGC_JAVA\impl\base\CASubscriberConfigImpl.java
package com.nds.fusion.vgcimpl.base;

public class CASubscriberConfigImpl extends CAObjectImpl implements CASubscriberConfig
{
}

# SRC_SUN

# \vobs\DARWIN_PLATFORM\DARWIN_VGC_JAVA\src_sun\sunCAObjectImpl.c
Java_com_nds_fusion_vgcimpl_generic_CAObjectImpl_nativeCall
{
	VGCA_Call(&ndsEnv);
}

# SRC: IF TO VGV

# \vobs\DARWIN_PLATFORM\DARWIN_VGC_JAVA\src\CAObjectImpl.c
void VGCA_Call(NDSJNI_ENV * env)
{
	# VGV Adaptor intercafe
	#
	VGCA_VGC_CALL(function idx)
	{
		case idx:
		
		# VGV Client(VGC) library interface
		#
		VGC_API_XXX();
	}
}

NDS: ^0946686468.121513 !ERROR -VGC_JAVA     < T:no name M:CADebug.c F:VGCA_VGC_CALL L:00041 > The call to concrete VGC method has failed with status 5
NDS: ^0946686468.122413 !ERROR -VGC_JAVA     < T:no name M:CADebug.c F:VGCA_Call L:00041 > The call to methodId 4117 has failed with status 5.
#CONTENTCAINFO_ISPURCHASEINFOAVAILABLE = 0x1015,
#define VGCA_VGC_API_STATUS_OBJECT_NOT_FOUND          5  


={============================================================================
|kt_dev_si_0001| comp-vgv

## comp-VGV, Security Services Process

# Galperin, Moshe; Rabinovich, Julia
#

# debug build
# copy debug libs to release_dbg
\vobs\VGV\VGV_DARWIN\src\AMS_BCM_MIPS4K_LNUX_DARWIN_01\BigEndian\debug\

\vobs\VGV\VGV_DARWIN\src\AMS_BCM_MIPS4K_LNUX_DARWIN_01\BigEndian\release_dbg\

# and change diag.cfg
TRACE_LEVEL_VER="AFEWMIPR!"
TRACE_LEVEL_VGC="AFEWMIPR!"
TRACE_LEVEL_VGV="AFEWMIPR!"

NDS: ^0946685191.285129 !INFO  -VGV          < p:00000079 t:2abddb90 T:no name M:p_posix.c F:CDI_SC L:01036 > CMD 000000009020
NDS: ^0946685192.278475 !INFO  -VGV          < p:00000079 t:2abddb90 T:no name M:p_posix.c F:CDI_SC L:01036 > CMD D15C000004
NDS: ^0946685192.286905 !INFO  -VGV          < p:00000079 t:2abddb90 T:no name M:p_posix.c F:CDI_SC L:01036 > SCREADER_TRANSFER returned OK [0x0]


!INFO  -VGC          < F:VGC_INFRA L:01036 > VIEWING_CARD_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x3 Len : 15 Data:  0307963A017017AC01060101FE0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card_id:                       0x0307963A
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	subscriber_id:                 0x017017AC
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	pairing:                       PAIRED
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card check digit:              0x06
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	authorization:                 AUTHORIZED
!INFO  -VGC          < F:VGC_INFRA L:01036 > SYSTEM_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x4 Len : 8 Data:  09630B01000000FF
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	cas_id:                        0x0963
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	si_filtering:                  0x0B01
!INFO  -VGC          < F:VGC_INFRA L:01036 > VERIFIER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x5 Len : 2 Data:  0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	ca_api_version:                0x0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > SUBSCRIBER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x6 Len : 14 Data:  0047425200015457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	region_code:                   0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	country_code:                  474252
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	currency:                      0x0001
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	zipcode:                       5457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > RECEIVER_ID_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x35 Len : 16 Data:  42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	receiver_id                    42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > CA_STB_LABEL_DESCRIPTOR_TAG
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x53 Len : 16 Data:  1020225001234567810B288154732780
!INFO  -VGC          < F:VGC_INFRA L:01036 >  ca_stb_label digits:  20225001234567810B28
!INFO  -VGC          < F:VGC_INFRA L:01036 >  chip_id digits:  547327803601C0680002ABCEC1CB0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00500000000000000000000000400000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 0010FFFFFFF70131ABF00051F7140000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000018800000000000000010000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000000000000000000000000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00
!INFO  -VGC          < F:VGC_INFRA L:01036 > EXTENDED_CONFIG_INFO_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x36 Len : 1 Data:  C0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	is_xtv_subscriber:             YES
!INFO  -VGC          < F:VGC_INFRA L:01036 > VIEWING_CARD_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x3 Len : 15 Data:  0307963A017017AC01060101FE0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card_id:                       0x0307963A
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	subscriber_id:                 0x017017AC
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	pairing:                       PAIRED
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card check digit:              0x06
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	authorization:                 AUTHORIZED
!INFO  -VGC          < F:VGC_INFRA L:01036 > SYSTEM_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x4 Len : 8 Data:  09630B01000000FF
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	cas_id:                        0x0963
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	si_filtering:                  0x0B01
!INFO  -VGC          < F:VGC_INFRA L:01036 > VERIFIER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x5 Len : 2 Data:  0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	ca_api_version:                0x0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > SUBSCRIBER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x6 Len : 14 Data:  0047425200015457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	region_code:                   0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	country_code:                  474252
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	currency:                      0x0001
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	zipcode:                       5457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > RECEIVER_ID_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x35 Len : 16 Data:  42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	receiver_id                    42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > CA_STB_LABEL_DESCRIPTOR_TAG
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x53 Len : 16 Data:  1020225001234567810B288154732780
!INFO  -VGC          < F:VGC_INFRA L:01036 >  ca_stb_label digits:  20225001234567810B28
!INFO  -VGC          < F:VGC_INFRA L:01036 >  chip_id digits:  547327803601C0680002ABCEC1CB0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00500000000000000000000000400000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 0010FFFFFFF70131ABF00051F7140000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000018800000000000000010000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000000000000000000000000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00
!INFO  -VGC          < F:VGC_INFRA L:01036 > EXTENDED_CONFIG_INFO_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x36 Len : 1 Data:  C0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	is_xtv_subscriber:             YES
!INFO  -VGC          < F:VGC_INFRA L:01036 > VIEWING_CARD_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x3 Len : 15 Data:  0307963A017017AC01060101FE0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card_id:                       0x0307963A
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	subscriber_id:                 0x017017AC
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	pairing:                       PAIRED
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	card check digit:              0x06
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	authorization:                 AUTHORIZED
!INFO  -VGC          < F:VGC_INFRA L:01036 > SYSTEM_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x4 Len : 8 Data:  09630B01000000FF
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	cas_id:                        0x0963
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	si_filtering:                  0x0B01
!INFO  -VGC          < F:VGC_INFRA L:01036 > VERIFIER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x5 Len : 2 Data:  0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	ca_api_version:                0x0301
!INFO  -VGC          < F:VGC_INFRA L:01036 > SUBSCRIBER_CONFIG_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x6 Len : 14 Data:  0047425200015457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	region_code:                   0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	country_code:                  474252
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	currency:                      0x0001
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	zipcode:                       5457372020202020
!INFO  -VGC          < F:VGC_INFRA L:01036 > RECEIVER_ID_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x35 Len : 16 Data:  42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	receiver_id                    42733510D59251AB2BC0EC3F00000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > CA_STB_LABEL_DESCRIPTOR_TAG
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x53 Len : 16 Data:  1020225001234567810B288154732780
!INFO  -VGC          < F:VGC_INFRA L:01036 >  ca_stb_label digits:  20225001234567810B28
!INFO  -VGC          < F:VGC_INFRA L:01036 >  chip_id digits:  547327803601C0680002ABCEC1CB0000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00500000000000000000000000400000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 0010FFFFFFF70131ABF00051F7140000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000018800000000000000010000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00000000000000000000000000000000
!INFO  -VGC          < F:VGC_INFRA L:01036 > 00
!INFO  -VGC          < F:VGC_INFRA L:01036 > EXTENDED_CONFIG_INFO_DESCRIPTOR
!INFO  -VGC          < F:VGC_INFRA L:01036 > Tag: 0x36 Len : 1 Data:  C0
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	is_xtv_subscriber:             YES


!INFO  -VGC          < F:VGC_INFRA L:01036 > 	ca_service_id:                 0x00006035
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	cost:                          0x000000C8
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	entitlement type:              XTV_RENT
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	payment_method:                PURCHASE_VIA_SMS_SLOT
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	account slot:                  0x0065
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	expiration date                27-03-2012 23:59:58
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	purchase date                  21-03-2012 14:22:56
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	cancellation date              00-01-0000 00:00:00
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	event viewed:                  NO
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	event cancelled:               NO
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	event reported:                NO
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	analog taping allowed:         NO
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	digital taping allowed:        NO
!INFO  -VGC          < F:VGC_INFRA L:01036 > 	max extension date             00-01-0000 00:00:00


(/BookingManager/src/java/picasso/bookingmgr/controller/PurchaseViewController.java)
946712387696: CEE-J EventQueue Reader 0: [EPG_BOOK:INFO]: PurchaseViewController.purchase: CMS: 1
946712387698: CEE-J EventQueue Reader 0: [EPG_BOOK:INFO]: PurchaseViewController.purchase: OPPV: true

		this.isOppv = !componentRetriever.getCA().isCmsIppvSubscriber(cms); //if not! subscribed then we are OPPV

		LOGGER.logInfo("CMS: " + cms);
		LOGGER.logInfo("OPPV: " + this.isOppv);
		
# Logger.create("EPG_CA"); EPG_ME

(/MediaEngine/src/java/picasso/mediaengine/ca/CA.java)
isCmsIppvSubscriber()
	CASubscriberConfig meh
	result = (1 == meh.getRegionBit(0, 159 + (id - 1)));//now thats magic!
return result

#-----------------------------------------------------------
# flash0/fs/NDS/config/siege_deg.cfg file 
#-----------------------------------------------------------

# see EPGProperties.java
#
#	/** If set, turns on verbose VGC debug **/
#	String	VGC_DEBUG_ENABLE						= "epg.enableverbosevgcdebug";
#
-Depg.enableverbosevgcdebug=true


# VGC debug
(/MediaEngine/src/java/picasso/mediaengine/ca/VGCDebug.java)


# SC 01
#
[  EPG_CA:INFO]: VGCDebug.dumpAll: CA:
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASysCaConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Version:                              1.6 (build 0)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     STB ID:                               12345678 (0x00bc614e)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAViewingCard:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Status:                               4 (CARD_STATUS_READY)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Type:                                 1 (CARD_TYPE_VIEWING_CARD)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card ID:                              42705542
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Check digit:                          1
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Exception code:                       0 (EXCEPTION_IDLE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASubscriberInfo:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAS ID:                               2403 (0x0963)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Subscriber ID:                        22633364
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Country code:                         4670034 ("GBR")
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Currency ID:                          1 (CURRENCY_GBP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Region:                               0
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Zip code:                             TW7     
[  EPG_CA:INFO]: VGCDebug.dumpAll:     SI info:                              2817 (0x00000b01)
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Bouquet ID:                         4101 (0x1005)
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Sub-bouquet ID:                     1 (0x0001)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card authorized:                      true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card paired:                          true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     PVR subscriber:                       true
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [0]:                        1 (RATING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [1]:                        2 (SPENDING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     1 (LIMIT_TYPE_RANGE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value range:                    PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [2]:                        3 (CUMULATIVE_SPENDING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     1 (LIMIT_TYPE_RANGE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value range:                    PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [3]:                        4 (CUMULATIVE_BALANCE_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     3 (LIMIT_TYPE_VALUE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value number:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [4]:                        5 (WATERSHED_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [5]:                        6 (WATERSHED_AUTO_PLAYBACK_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [6]:                        7 (WATERSHED_MANUAL_PLAYBACK_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAParentalSettings:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Temp unlock:                          0 (TEMPORARY_UNLOCK_OFF)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASysParentalConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Master PIN set:                       true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     System lock mode:                     1 (SYSTEM_LOCK_MODE_LOCK_ON)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     PIN retry count:                      3
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of users:                      1
[  EPG_CA:INFO]: VGCDebug.dumpAll:     User [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Local restrictions mode:            1 (LOCAL_RESTRICTIONS_ON)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAReportBack:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Status:                               UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_FAIL)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Allowed:                              true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Connection available:                 false
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Max xfer data size:                   256
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CABackgroundChaining:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Chaining status:                      255 (CHAINING_STATUS_INACTIVE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAEntitlementInfo:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Consummation warning supported:       false
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of account slots:              32
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAAccountSlot [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Slot ID:                            101
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Balance:                            1
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Limit:                              0
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Bonus points balance:               0
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Currency ID:                        1 (CURRENCY_GBP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of subscription slots:         250
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      3
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [1]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      11
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [2]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      16
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [3]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      29
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [4]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      12513
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [5]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      12514
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [6]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      12515
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [7]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      12516
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [8]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      12517
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [9]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46898
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [10]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46902
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [11]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46949
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [12]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46950
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [13]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46962
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [14]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      46963
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [15]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      47174
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [16]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      47200
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [17]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      47314
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionSlot [18]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID:                      47464
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of subscription bitmap slots:  16
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 0
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               3, 11, 16, 29
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [5]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 12288
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               12513, 12514, 12515, 12516, 12517
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [13]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 46848
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               46898, 46902, 46949, 46950, 46962, 46963
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [14]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 47104
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               47174, 47200, 47314
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [15]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 47360
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               47464
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    21/08/2011 23:59:59
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of IPPV slots:                 50
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of OPPV slots:                 250
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of IFP slots:                  0
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASubscriberConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of region blocks:              4
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [0]:                   010b2a0a0037f000000000000201000000000000000000000000000001524247
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [1]:                   0000000000000000000000000000000000000000000000000000000000000000
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [2]:                   0602000000000000000000000000000000000000000000000000000000000000
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [3]:                   0000000000000000000000000000000000000000000000000000000000000000

# SC 02
#
[  EPG_CA:INFO]: VGCDebug.dumpAll: CA:
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASysCaConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Version:                              1.6 (build 0)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     STB ID:                               12345678 (0x00bc614e)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAViewingCard:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Status:                               4 (CARD_STATUS_READY)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Type:                                 1 (CARD_TYPE_VIEWING_CARD)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card ID:                              52594028
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Check digit:                          4
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Exception code:                       0 (EXCEPTION_IDLE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASubscriberInfo:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAS ID:                               2403 (0x0963)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Subscriber ID:                        25670535
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Country code:                         4670034 ("GBR")
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Currency ID:                          1 (CURRENCY_GBP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Region:                               0
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Zip code:                             UK4  2ES
[  EPG_CA:INFO]: VGCDebug.dumpAll:     SI info:                              2817 (0x00000b01)
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Bouquet ID:                         4101 (0x1005)
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Sub-bouquet ID:                     1 (0x0001)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card authorized:                      true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Card paired:                          false
[  EPG_CA:INFO]: VGCDebug.dumpAll:     PVR subscriber:                       false
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [0]:                        1 (RATING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [1]:                        2 (SPENDING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     1 (LIMIT_TYPE_RANGE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value range:                    PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [2]:                        3 (CUMULATIVE_SPENDING_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     1 (LIMIT_TYPE_RANGE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value range:                    PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [3]:                        4 (CUMULATIVE_BALANCE_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     3 (LIMIT_TYPE_VALUE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value number:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [4]:                        5 (WATERSHED_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [5]:                        6 (WATERSHED_AUTO_PLAYBACK_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAUserLimit [6]:                        7 (WATERSHED_MANUAL_PLAYBACK_LIMIT_ID)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value type:                     2 (LIMIT_TYPE_BITMAP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Limit value bitmap:                   PIN needed
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAParentalSettings:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Temp unlock:                          0 (TEMPORARY_UNLOCK_OFF)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASysParentalConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Master PIN set:                       true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     System lock mode:                     1 (SYSTEM_LOCK_MODE_LOCK_ON)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     PIN retry count:                      3
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of users:                      1
[  EPG_CA:INFO]: VGCDebug.dumpAll:     User [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Local restrictions mode:            1 (LOCAL_RESTRICTIONS_ON)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAReportBack:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Status:                               UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_FAIL)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Allowed:                              true
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Connection available:                 false
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Max xfer data size:                   256
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CABackgroundChaining:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Chaining status:                      255 (CHAINING_STATUS_INACTIVE)
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CAEntitlementInfo:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Consummation warning supported:       false
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of account slots:              32
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAAccountSlot [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Slot ID:                            101
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Balance:                            1
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Limit:                              3501
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Bonus points balance:               0
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Currency ID:                        1 (CURRENCY_GBP)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of subscription slots:         250
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of subscription bitmap slots:  16
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [0]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 0
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               3, 11, 16, 29
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    16/04/2011 23:59:59 (EXPIRED)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [5]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 12288
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               12513, 12514, 12515, 12516, 12517
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    16/04/2011 23:59:59 (EXPIRED)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [13]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 46848
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               46898, 46902, 46949, 46950, 46962, 46963
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    16/04/2011 23:59:59 (EXPIRED)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CASubscriptionBitmapSlot [14]:
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Base CA service ID:                 47104
[  EPG_CA:INFO]: VGCDebug.dumpAll:       CA service ID bitmap:               47200, 47314
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Expiration date:                    16/04/2011 23:59:59 (EXPIRED)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of IPPV slots:                 50
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [0]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [1]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [2]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [3]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [4]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [5]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [6]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [7]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [8]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [9]:                       UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [10]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [11]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [12]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [13]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [14]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [15]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [16]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [17]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [18]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [19]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [20]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [21]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [22]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [23]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [24]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [25]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [26]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [27]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [28]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [29]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [30]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [31]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [32]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [33]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [34]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [35]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [36]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [37]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [38]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [39]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [40]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [41]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [42]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [43]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [44]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [45]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [46]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [47]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [48]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     CAIppvSlot [49]:                      UNKNOWN (com.nds.fusion.vgc.generic.CAException: VGCA_VGC_API_STATUS_CARD_ERROR)
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of OPPV slots:                 250
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of IFP slots:                  0
[  EPG_CA:INFO]: VGCDebug.dumpAll:   CASubscriberConfig:
[  EPG_CA:INFO]: VGCDebug.dumpAll:     Number of region blocks:              4
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [0]:                   010b0a0a0037f000000000008201000000000000000000000000000001524247
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [1]:                   0000000000000000000000000000000000000000000000000000000000000000
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [2]:                   0002000000000000000000000000000000000000000000000000000000000000
[  EPG_CA:INFO]: VGCDebug.dumpAll:       Region block [3]:                   0000000000000000000000000000000000000000000000000000000000000000


={============================================================================
|kt_dev_si_0001| comp-camm

## comp-CAMM (CA Module Mgt)

CAMM shall provide a path for communication between VGC and the CA kernel and shall relay all the messages that VGC and the CA kernel exchange.

# terms
#
VGV : CA Kernel or CA Module(CA System)
VGC : CA Module Client
MCI	: Middleware - CAS Interface

# conns
#
MCM_SysinitPrepare
	CAMM_DEVICEMAN_RegisterListenerMso(MCM_DEV_MAN_ListenerMSO) # only one place


={============================================================================
|kt_dev_si_0001| comp-xtvfs

############################################################
## comp-XTVFS
############################################################
XTV FS Group <XTVFSGroup@nds.com>

# see below as there are some tools and docs
#
http://hoover.uk.nds.com/fusionmadesimple/index.php/DiskIssuesTips
\\ukbackup.uk.nds.com\STB Development\XTVFS

# The stat = 0x8123 means partition table error. It seemed to be a failure in mount operation when trying to read the partition table.
# 
# XTVFS have a data structure called "Additional Info" reside at sector 5 and use sector 6 as a backup.
# In version Z6, sector 5 is copied into sector 6 in case the two have different content and in version 20, 
# a difference between the two copies fails the mount. 
#
# old one
# (baseline) XTVFS_ALL_OS17.13.8Z6_XTVFS_MAIN_2_Int
# (from log) @(#)XTVFS FORMAT 17.13.8Z6 PRODUCT Aug 31 2011 11:41:42
#
# new one
# (baseline) XTVFS_ALL_OS20.0.8_XTVFS_MAIN_2_Int@/vobs/FUSIONOS_PROJECTS

# so if old xtvfs(Z release) had a way to fix a sector06 by copying it from sector05, then why are we seeing 
# this problem when shifting to R2(new xtvfs) as it should be fixed before when ran R1??

# Exactly my question too. If you consider that sector 6 is corrupted by a copy of sector 0, I can only assume 
# that some component in R2 still write to sector 6. This is why I asked if the content of sector 5 and 6 be chcked before running R2.
# (expected to be the same as old xtvfs fixes if it's different) 

# You're suspecting that some component, PDM or Storage Helper here, may back up sector06 with sector#0(partition table)? 
# Yes.
# (Currently PDM uses #32 for backing up #00 and before it was #06 and storage helper did.)

# why I didn't hit the same problem when tried to move from clean R1 to R2 on a differnt box? 
# Well, on normal legacy box the partition starts at sector 63 not at sector 1!

# To be correct, legacy means disk formatted by Orchid software. 
# Fusion software formats the partition to start at sector 64. Most important, not at sector 1.


# Well, if the partition starts at 63 (or 64) then wrting to sector 6 will not corrupt file system. 
# When the partition start at 63, the additional sector will be at sector 65 and 66 as there location is relative to teh start of partition

# So it's not just about #06. If partion starts 01 and 06 is broken, then xtvfs would think that whole partition 
# is broken and cannot mount a partition. that's the problem we're seeing. am i correct?

# yes. To be more accurate, XTVFS do check but, deccide that sector 5 will be copied to sector6. 
# It is always a debate whether to try and recover or to fail a mount. 
# In this case we would not find the issue is XTVFS would not fails the mount. 
# However, if such issue will happen in the field, probably the best is to try and recover. Tough question. 
#
# However, it turned out that version R1 check and fixed 16 bytes (size of the structure), while version R2 checked 512 bytes (whole sector). 
# So for R1 it was fixed, but for R2 it was still corrupted. Please note that we changed this during the 4k change to compatible 
# with other XTVFS met-data. And most important, this is extra anyway, such corruption should never happen!

# ORG problem box: sec 5 : sec 6 = diff
# ENG box        : sec 5 : sec 6 = same
#                  =smae   =diff

# In eng fix, it make a copy of whole 5 to 6.
#
# you can also do the following:
# dd if=/dev/sda of=5.bin skip=5 count=1
# dd if=/dev/sda of=6.bin skip=6 count=1
# diff 5.bin 6.bin
# 
# # to stb's hdd
# dd if=./5-problem.bin of=/dev/sda seek=5 count=1
# dd if=./6-problem.bin of=/dev/sda seek=6 count=1

#
# problem case
#
Disk /dev/sda: 500.1 GB, 500107862016 bytes
97 heads, 1 sectors/track, 10069826 cylinders, total 976773168 sectors
Units = sectors of 1 * 512 = 512 bytes

   Device Boot      Start         End      Blocks  Id System
/dev/sda1               1   976773121   488386560+  1 FAT12

#
# R1 (clean box)
#####
XTVFS_ALL_OS17.13.8Z6_XTVFS_MAIN_2_Int
@(#)XTVFS FORMAT 17.13.8Z6 PRODUCT Aug 31 2011 11:41:42
 
-sh-3.2# fdisk -lu

Disk /dev/sda: 500.1 GB, 500107862016 bytes
255 heads, 63 sectors/track, 60801 cylinders, total 976773168 sectors
Units = sectors of 1 * 512 = 512 bytes

   Device Boot      Start         End      Blocks  Id System
/dev/sda1              64   976751999   488375968   1 FAT12

#diff r1.5.bin r1.6.bin 
(not same)


#
# R2
#####
-sh-3.2# fdisk -lu

Disk /dev/sda: 500.1 GB, 500107862016 bytes
255 heads, 63 sectors/track, 60801 cylinders, total 976773168 sectors
Units = sectors of 1 * 512 = 512 bytes

   Device Boot      Start         End      Blocks  Id System
/dev/sda1              63   976768064   488384001   1 FAT12

#diff r2.5.bin r2.6.bin 
(same)

#
# For a problem case as below,
#   1) partition starts #01
#   2) #00 is valid but has some garbage
#   3) #06 has the copy of #00(partition table) 
#
# After all, if partition starts 63/64 then shouldn't be the problem whether #06 is corrupted or not as it's out of the fs. The main problem is
# that partition starts #01 in this case that failed to mount. 
#
# From looking at #05 and #06 for R1 and R2 case, there are two things:
#   1) For R1, #05 and #06 is different. not sure that's because xtvfs don't supports copying #05 or some overwrites this.
#   2)
#
 xtvfs_read_super:XTVFS_Init stat = 0x8123
 xtvfs_fill_super:  xtvfs_read_super failed 
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionMount L:01163 > Failure in Storage Helper library.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionMount L:01163 > If no debug has been produced, recompile Storage Helper library in debug mode.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionMount L:01164 > ...Storage Helper library failed:  mount partition /dev/sda1 at mount point /mnt/nds/dev_5/part_0
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionMount L:01165 > error: 22: Undefined error
!ERROR -PDM          < ppdm_srv_fs_thread.c F:PDM_FS_DevMountAllPartitions L:01014 > failed mounting
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01238 > Failure in Storage Helper library.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01238 > If no debug has been produced, recompile Storage Helper library in debug mode.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01239 > Storage Helper library has reported:  failure to unmount partition /dev/sda1 (/mnt/nds/dev_5/part_0)
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01240 > error: 22: Undefined error
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01248 > Failure in Storage Helper library.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01248 > If no debug has been produced, recompile Storage Helper library in debug mode.
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01249 > Storage Helper library has reported:  failure to force unmount of partition /dev/sda1 (/mnt/nds/dev_5/part_0)
!ERROR -STORAGE_HELPER <M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01250 > error: 22: Undefined error
!ERROR -PDM          < ppdm_srv_fs_thread.c F:PDM_FS_ThreadDeviceStateAction L:03436 > failed mounting device


# debug libs. Thing is that tar files in the input_del are not right ones so should pull debug files from output_del as below. damm.
# so replace the below and replace a lib with debug one.
# (this is input_del where the build picks up the tars)
# vobs/FUSIONOS_INPUT_DEL_2/DEL_AMS_BCM_MIPS4K_LNUX_DARWIN_01/Tarball/nds-drv-ams-drx890-debug.tar.bz2
#
/home/NDS-UK/parkkt/cc/parkkt_BSKYB_GM_001/vobs/FUSIONOS_OUTPUT_DEL_2/KERN_AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian
drwxr-xr-x 5 parkkt ccusers 4096 Mar 28  2011 debug
drwxr-xr-x 5 parkkt ccusers 4096 Mar 28  2011 preprod
drwxr-xr-x 5 parkkt ccusers 4096 Mar 28  2011 prod

/home/NDS-UK/parkkt/cc/parkkt_BSKYB_GM_001/vobs/FUSIONOS_OUTPUT_DEL_2/KERN_AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/debug/debug/lib/xtvfs.ko


# This message means the garbage collection failure. It should not lead to any problems except that disc could be full while XTV thinks 
# that there is a free space.
# This could lead to a recording failure. I donÂ’t see connection between the garbage collection failure and no responding of STB.  
!ERROR  -MSM                 < T:VRM_SRV M:xtvfspc.c F:XTVFS_FreeRange L:2795 > XTVFS: 42-To-POSIX: " "XTVFS_FreeRange: ioctl 0x80047802 failed for handle = 267: errno = 14 (Bad address), " "XTVFS status = 1 !!!!!\n 
!ERROR  -MSM                 <  T:VRM_SRV M:msm_pfm.c F:PFM_GarbageCollect L:237 > XTVFS_FreeRange failed, s_str_file_gc_handle = 267,  xtvfsstatus = 1 
!WARN   -MSM_MDI             < T:VRM_SRV M:meta_sup.c F:MetaSupGc L:1571 > Milestone : con=0x26, GC startPkt=0_00000000, endPkt=0_0101f99d 
!ERROR  -MSM_MFS             < T:VRM_SRV M:mfs_gc.c F:MFSGC_ReportToPFM L:492 > PFM_GarbageCollect failed


#
/dev/sda1 on /mnt/nds/dev_5/part_0 type xtvfs (rw,nosuid)
-sh-3.2# ls -al /mnt/nds/dev_5/part_0
drwxrwxrwx    2 NDS_U2   NDS_MW          0 Jan  1 00:23 FSN_DATA
-rwxrwxrwx    1 NDS_U2   NDS_MW         17 Jan  1 00:01 PDM.UID
-rwxrwxrwx    1 NDS_U2   NDS_MW      32768 Jan  1 00:01 ROOT_DIR.CP0
drwxrwxrwx    1 NDS_U2   NDS_MW          0 Jan  1 00:29 S1


if [ -e /etc/load-nds-drivers.sh ]; then
insmod /lib/modules/2.6.18.8/mhxnvramfs.ko
insmod /lib/modules/2.6.18.8/xtvfs.ko

-sh-3.2# lsmod
xtvfs 2209792 0 - Live 0xc04c5000
mhxnvramfs 38800 1 - Live 0xc033a000
callisto_periph 241120 2 - Live 0xc03e6000
callisto_tuner 322640 0 - Live 0xc0394000
callisto 5871232 2 callisto_periph,callisto_tuner, Live 0xc0762000


={============================================================================
|kt_dev_si_0001| comp-nvram

-sh-3.2# mount
/dev/nds/nvram0 on /mnt/nds/dev_2/part_0 type MHNVRAMFS (rw,nosuid)

-sh-3.2# pwd
/mnt/nds/dev_2/part_0
-sh-3.2# ls -al
-rwxrwxrwx    1 root     root          176 Jan  1  1970 99
-rwxrwxrwx    1 root     root            8 Jan  1  1970 dk
-rwxrwxrwx    1 root     root          696 Jan  1  1970 dt
-rwxrwxrwx    1 root     root         2999 Jan  1  1970 du
-rwxrwxrwx    1 root     root            0 Jan  1  1970 f0
-rwxrwxrwx    1 root     root           27 Jan  1  1970 fv
-rwxrwxrwx    1 root     root            0 Jan  1 00:00 lc
-rwxrwxrwx    1 root     root            0 Jan  1 00:00 le
-rwxrwxrwx    1 root     root         1257 Jan  1  1970 mp
-rwxrwxrwx    1 root     root         1018 Jan  1  1970 nv
-rwxrwxrwx    1 root     root            0 Jan  1  1970 sl

-sh-3.2# umount /dev/nds/nvram0
-sh-3.2# umount /dev/nds/nvram1

mount -t nfs 172.18.253.143:/home/NDS-UK/parkkt/fob/890/PClarkes /tmp/xx
cp /tmp/xx/paulclarke.nvram* .


# it's only required when dump out nvram out of a box
#


dd if=./paulclarke.nvram0.bin of=/dev/nds/nvram0
# -sh-3.2# dd if=./paulclarke.nvram0.bin of=/dev/nds/nvram0
# 46+0 records in
# 46+0 records out

dd if=./paulclarke.nvram1.bin of=/dev/nds/nvram1
# -sh-3.2# dd if=./paulclarke.nvram1.bin of=/dev/nds/nvram1
# 16+0 records in
# 16+0 records out


={============================================================================
|kt_dev_si_0001| comp-helper

http://shareatnds.nds.com/global/Fusion/Fusion-OS/FOSHelpers/default.aspx

http://ndpedia.nds.com/index.php/Storage_Helper

Component Lead: Sridhar Gaddam(sridharg@nds.com)
For any queries drop a mail to HELPERS_Support@nds.com 

# STORAGE_HELPER
# vobs\FUSIONOS\STORAGE_HELPER\src\
NDS: ^0946686085.188970 !ERROR -STORAGE_HELPER < p:00000077 t:01146180 T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01238 > Failure in Storage Helper library.
NDS: ^0946686085.189150 !ERROR -STORAGE_HELPER < p:00000077 t:01146180 T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01238 > If no debug has been produced, recompile Storage Helper library in debug mode.
NDS: ^0946686085.189279 !ERROR -STORAGE_HELPER < p:00000077 t:01146180 T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01239 > Storage Helper library has reported:  failure to unmount partition /dev/sda1 (/mnt/nds/dev_5/part_0)
NDS: ^0946686085.189416 !ERROR -STORAGE_HELPER < p:00000077 t:01146180 T:PDM_FS M:pdm_srv_fs_utility.c F:PDM_FS_PartitionUnmount L:01240 > error: 16: Undefined error


={============================================================================
|kt_dev_si_0001| comp-app

<technical-fault>
Text from Planner UI: Technical Fault - 8(19)

static final String commonTechnicalFaultPrefix = "Technical fault - ";

private static String tfErrorFor(int tfCode, int reason)
{
  return commonTechnicalFaultPrefix + tfCode + " (" + reason + ")";
}

private static String tf8ErrorFor(int reason)
{
  return tfErrorFor(8, reason);
}

case SystemCommonFailureType.RECORDED_CONTENT_MISSING:
  failureReason = tf8ErrorFor(reason);

// jpa/modules/jpa-api/src/java/com/nds/fusion/planner/PlannerBookingFailureType.java

int RECORDED_CONTENT_MISSING = 19; /* Robustness check identified recorded content missing from disk */
int INSUFFICIENT_DISK_SPACE = 11; /* Not enough disk space to record event */


<screen-id>
NDS: ^[2016:10:03 09:55:44]0947123825.760899 !MIL    -EPG_SCR      		< p:0x00000238 P:APP t:0x2bfeb520 T:no name M:Screens F:`doOpenScreen` L:1103 > 
  T:CEE-J EventQueue Reader 0:SCREEN PURCHASE MULTI_FORMAT layer=4, `id=15` opened

// THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/common/screenmanager/IScreenType.java
public interface IScreenType
{
	int NONE                      = -1;
	int FULLSCREEN                = 0;
	int BANNER                    = 1;
	int GUIDE                     = 2;
	int HOMEPAGE                  = 3;
	int PLANNER                   = 4;
	int PLAYBACK                  = 5;
	int SERIES_LINK_SHOWINGS      = 6;
	int PLANNERPURCHASEFROMEPG    = 7;
	int PREFERENCES               = 8;
	int MANREC_ONLY               = 9;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =10;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =11;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =12;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =13;
	int DIALOG                    = 14;
	int PURCHASE_MULTIFORMAT      = 15;
	int SEARCH                    = 16;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =17;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =18;
	int BOXOFFICE                 = 19;
	int INTERACTIVE_BACKGROUND    = 20;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =21;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =22;
	int INTERACTIVE_APPLICATIONS  = 23;
	int BOOKMARK_SCREEN           = 24;
	int PROMO                     = 25;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =26;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =27;
	int OPTICAL_DELAY_SCREEN      = 28;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =29;
	int BANNER_CHILD_LISTINGS     = 30;
	int GUIDE_CHILD_LISTINGS      = 31;
	int ANYTIME                   = 32;
	int COPY                      = 33;
	int NO_TLM_MINITV             = 34;
	int WHATS_NEW                 = 35;
	int SPORTS                    = 36;
	int AIRINGS                   = 37;
	int MORE_LIKE_THIS            = 38;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~ =39;
	int KIDS                      = 40;
	int BUY_AND_KEEP_`PREPURCHASE`  = 41;
	int BUY_AND_KEEP_POSTPURCHASE = 42;
	int BUY_AND_KEEP_`PURCHASE`     = 43;
	int MLT_SHOWINGS              = 44;
	int WL_SHOWINGS               = 45;
	int DOWNLOAD_ALL              = 46;
	int BUY_AND_KEEP_OFFLINE      = 47;
	int SERVICES                  = 48;
	int HELP                      = 49;


	// This is used by SynopsisDataFactory - it creates an array of max screens
	// So update this if more screens are added
	int MAX_SCREENS = 50;
}


<screen-change>
!MIL    -EPG_MISC     		< M:`MilestoneNotifier` F:send L:21 > 
  T:CEE-J EventQueue Reader 0:{"category": "ScreenChange","changed to": "/guide"}


<dialog-live-pause>
int LIVE_PAUSE_NOT_AVAILABLE_ID                                          = 1030;

!MIL   -EPG_DLG      < M:DialogManager F:showDialog L:01400 > T:CEE-J EventQueue Reader 0:Showing dialog 1030
!ERROR -EPG_DEV1     < M:NotificationConverter F:setLastScreenSeen L:00011 > T:CEE-J EventQueue Reader 0:setting last screen seen to /tv/live/503/live_pause_not_available_id
!MIL   -EPG_MISC     < M:`MilestoneNotifier` F:send L:00021 > T:CEE-J EventQueue Reader 0:Screen changed to:/tv/live/503/live_pause_not_available_id


int LIVE_PAUSE_NOT_AVAILABLE_INSUFFICIENT_DISK_SPACE_ID                  = 1302;

!MIL    -EPG_DLG      		< p:0x000001eb P:APP t:0x2bfeb520 T:no name M:DialogManager F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog 1302
!ERROR  -EPG_DEV1     		< p:0x000001eb P:APP t:0x2bfeb520 T:no name M:NotificationConverter F:setLastScreenSeen L:11 > T:CEE-J EventQueue Reader 0:setting last screen seen to /tv/live/410/live_pause_not_available_insufficient_disk_space_id


<dialog-id>
// Dialog IDs are listed in IDialogID.java. The other important file is
// DialogConfig.java. This maps the dialog ids to the text that's displayed.

./picasso/dialogmgr/dialogs/config/DialogConfig.java
THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/common/dialogmgr/IDialogID.java


int AUTO_STANDBY_ID                                       = 1162;
	int START_AGAIN_MINI_BANNER                                          = 1213;
   int DISK_FAIL_SYSTEM_FAULT_ID                             = 1299;
   int ECO_STANDBY_EXIT                                      = 1312;
   int NO_PROGRAMMES_OF_THIS_TYPE_ID                         = 1555;
   int	LIVE_PAUSE_NOT_AVAILABLE_INSUFFICIENT_DISK_SPACE_ID   = 1302;
   int	TECHNICAL_FAULT_ON_SERVICE_ID                         = 1249;
   int	REMINDER_ALERT_WITHOUT_RECORD_ID                      = 1234;
   int	SHARED_PLANNER_INGEST_ERROR_SH20_SPN11                = 1324;
   int HD_BOX_INITIALISING_NON_MODAL_ID                      = 1236;
   int SEARCHING_FOR_LISTINGS_ID                             = 1112;
   int NO_OTHER_CHANNELS_ID                                  = 1115;

	int `BUY_AND_KEEP_PURCHASE_CONFIRMATION_NON_MODAL`                     = 1475;


<not-initializing>
	int NOT_ENOUGH_GUIDE_CACHE_FOR_BOOKING                               = 1393;

   THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/dialogmgr/dialogs/config/DialogConfig.java

	public static final String `BOX_INITIALISING_RETURN_LATER` = "Your box is still initialising, please return in a short time to use this feature";

		register(dialog(`IDialogID.NOT_ENOUGH_GUIDE_CACHE_FOR_BOOKING`).type(DialogType.FYI)
				.with(textContent().instruction(BACKUP_TO_CANCEL)
						.textStrings(`BOX_INITIALISING_RETURN_LATER`))
				.with(behaviour().screenLayer(IScreenLayer.MENU_DIALOG)
						.modal(true)
						.actions(new KeyAndAction(IKeyCode.BACKUP,
								IActionCodes.DIALOG_DISPEL))));

!MIL    -EPG_NET      		< P:APP M:HttpNotifier F:send L:31 > d3=508288677&cd4=off&cd5=off&de=UTF-8&t=event&cd=%2Fsearch&ec=WebItemEvent&el=BOOK_REMINDER%3Btitle%3DPeppa+Pig+S4+ep18%3Bmid%3D305175&ea=select
!WARN   -SQ13         		< P:MW  M:sim_dbc_sched_query.c F:SIM_DBC_QUERY_GetProgrammeInstanceByXsiLocator L:648 > SIM_DBC_UTIL_GetProgInstObjectFromQuery()=NOT FOUND by XSI locator: ""INSTKEY=1178"" ""SVCK2=0x10F4"" ""CNID=0x0020 
!ERROR  -SQ08         		< P:MW  M:sim_dbc_merged_query.c F:SIM_DBC_MERGED_QUERY_GetProgrammeInstanceByXsiLocator L:2412 > SIM_dbc_merged_query_ProcessAndMergeRetrievedPI() FAILED 
!WARN   -SQ35         		< P:MW  M:sim_sc_si.c F:SIM_sc_si_LocateProgrammeInstanceObject L:1236 > Failed to get program instance object from DB. status = ""0x00010002 
!ERROR  -SQ35         		< P:MW  M:sim_sc_si.c F:SIM_SC_SI_RetrieveLocatedObject L:4502 > Failed to retrieve located object from cache." "STATUS=0x00010002 
!WARN   -G_Sess       		< P:APP M:guide_api_programmeinstance.c F:GuideProgrammeInstanceRetrievalHandler L:2972 > SIM completion FAILED 
!WARN   -G_Sess       		< P:APP M:guide_api_common.c F:MessageThread L:1013 > GuideProgrammeInstanceRetrievalHandler() FAILED 
!ERROR  -EPG_MISC     		< P:APP M:SystemListenerLatch F:doNotify L:87 > T:threadtracker:MW notified failure
!MIL    -EPG_BOOK     		< P:APP M:BookingManager F:createScheduledWebBookingAgent L:751 > T:CEE-J EventQueue Reader 0:Creating limited booking agent without gpi
!MIL    -EPG_MISC     		< P:APP M:ScheduledWebItemActions F:getTemplate L:113 > T:CEE-J EventQueue Reader 0:### SearchActionTemplate<WebItem, ScheduledWebBookingControl> getTemplate() - established > aGF@5985bc3
!MIL    -EPG_UI       		< P:APP M:ScreenDirectingKeyListener F:dispatchKeyToViewOf L:57 > T:CEE-J EventQueue Reader 0:KEYPRESS 1:SELECT x1 @946927538990-946927541913 handled by Screen SEARCH layer=4, id=16 View 393298
!MIL    -EPG_KEY      		< P:APP M:KeyProcessor F:keyReleased L:316 > T:CEE-J EventQueue Reader 0:Keycode is 1:RELEASED x1 @946927541913-946927542231 for 1:SELECT x1 @946927541913-946927542231
!MIL    -EPG_INIT     		< P:APP M:PowerOperatingModes F:possiblyDelayPowerOperatingModeKeys L:158 > T:CEE-J EventQueue Reader 0:Executing delayed action
!MIL    -EPG_INIT     		< P:APP M:PowerOperatingModes$Action$1 F:execute L:107 > T:CEE-J EventQueue Reader 0:executing empty action)
!MIL    -EPG_UI       		< P:APP M:ScreenDirectingKeyListener F:dispatchKeyToViewOf L:57 > T:CEE-J EventQueue Reader 0:KEYPRESS 1:RELEASED x1 @946927541913-946927542231 handled by Screen FULLSCREEN layer=0, id=0 View 458756
!MIL    -EPG_BOOK     		< P:APP M:WebScheduledBookingAgent F:doAddBooking L:35 > T:PooledExecutor#1:Booking rejected
!MIL    -EPG_MISC     		< P:APP M:ScheduledWebItemActions F:getTemplate L:113 > T:CEE-J EventQueue Reader 0:### SearchActionTemplate<WebItem, ScheduledWebBookingControl> getTemplate() - established > aGF@5985bc3
!MIL    -EPG_KEY      		< P:APP M:Activity F:finish L:63 > T:CEE-J EventQueue Reader 0:finish activity (aGu@5968718)
!MIL    -EPG_KEY      		< P:APP M:QueueingInputEventFilterAgent F:removeFilter L:81 > T:CEE-J EventQueue Reader 0:Clearing filter for activity (aGu@5968718).
!MIL    -EPG_KEY      		< P:APP M:KeyEventValve F:open L:186 > T:CEE-J EventQueue Reader 0:KeyEventValve has opened for (aGu@5968718), all activities have been completed []
!MIL    -EPG_BOOK     		< P:APP M:BookingAgent F:dispose L:474 > T:CEE-J EventQueue Reader 0:dispose - in
!MIL    -EPG_BOOK     		< P:APP M:BookingAgent F:dispose L:483 > T:CEE-J EventQueue Reader 0:dispose - out
!MIL    -EPG_KEY      		< P:APP M:ActivityFinishedListener$1 F:activityFinished L:14 > T:CEE-J EventQueue Reader 0:ActivityFinishedListener.activityFinished - NO CLIENT
!MIL    -EPG_DLG      		< P:APP M:DialogManager F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog `1393`
!MIL    -EPG_DLG      		< P:APP M:DialogVisibilityDecorator$OnAwtBehaviour$1 F:run L:183 > T:CEE-J EventQueue Reader 0:Dialog visibility decorator behavior invokation. Behavior: OH@59d3598, dialog visibility: true, view: [RC@59cd362 viewId:196618 controller:OF@59ecb30 concreteView:aYp@5a8c656[id=-1,x=902,y=81,w=316,h=178] scrId:16 vwId:196618]
!ERROR  -EPG_DEV1     		< P:APP M:NotificationConverter F:setLastScreenSeen L:11 > T:CEE-J EventQueue Reader 0:setting last screen seen to /search/not_enough_guide_cache_for_booking


<not-initializing-others>

NDS: ^0946927542.313872 !MIL    -EPG_DLG      		< p:0x0000021c P:APP t:0x2bfeb520 T:no name M:DialogManager F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog 1393
NDS: ^0946927542.313872 !MIL    -EPG_DLG      		< p:0x0000021c P:APP t:0x2bfeb520 T:no name M:DialogManager F:showDialog L:1400 > T:CEE-J EventQueue Reader 0:Showing dialog 1377

	int BOX_INITIALISING                                                 = 1377;

		register(dialog(IDialogID.BOX_INITIALISING)
				.type(DialogType.FYI)
				.with(textContent().instruction(NONE)
						.textStrings(BOX_INITIALISING_RETURN_LATER))
				.with(behaviour().screenLayer(IScreenLayer.MENU_DIALOG)
						.modal(false)
						.actions(BACKUP_IGNORE)));

	int HD_BOX_EXITING_STANDBY_ID                                        = 1391;

		register(dialog(IDialogID.HD_BOX_EXITING_STANDBY_ID).type(DialogType.FYI)
				.with(textContent().instruction(NONE)
						.textStrings(BOX_INITIALISING_RETURN_LATER))
				.with(behaviour().primaryPriority(IPrimaryPriority.SYSTEM)
						.secondaryPriority(ISecondaryPriority.SYSTEM)
						.actions(BACKUP_IGNORE)
						.flags(DISPLAY_IN_PIG | PERSISTENT)
						.screenLayer(IScreenLayer.TV_DIALOG)
						.modal(false)));

	int LIVE_PAUSE_NOT_AVAILABLE_NOT_IN_PVR_MODE                         = 1311;

		register(dialog(IDialogID.LIVE_PAUSE_NOT_AVAILABLE_NOT_IN_PVR_MODE).with(textContent().instruction(BACKUP_TO_CANCEL)
				.textStrings(BOX_INITIALISING_RETURN_LATER))
				.with(behaviour().modal(true)

						.actions(BACKUP_DISPEL)
						.screenLayer(IScreenLayer.MENU_DIALOG)));

<recording-not-available>

	int DISK_FAIL_SYSTEM_FAULT_ID                                        = 1299;
	int DISK_FAIL_SYSTEM_FAULT_MODAL_ID                                  = 1300;

		register(dialog(IDialogID.DISK_FAIL_SYSTEM_FAULT_ID).type(DialogType.FYI)
				.with(textContent().title(DialogTitle.SYSTEM_FAULT)
						.instruction(NONE)
						.textStrings("There is an issue with your Sky+HD box, so recording and playback are unavailable.\nFor help resolving this issue, please go to sky.com/record"))
				.with(behaviour().primaryPriority(IPrimaryPriority.CA_EXCEPTION)
						.secondaryPriority(ISecondaryPriority.CA_EXCEPTION_VIEWING_CARD)
						.screenLayer(IScreenLayer.MENU_DIALOG)
						.flags(SHOW_DISK_FAULT_REFERENCE)
						.modal(false)
						.actions(BACKUP_IGNORE)));

		register(dialog(IDialogID.DISK_FAIL_SYSTEM_FAULT_MODAL_ID).type(DialogType.FYI)
				.with(textContent().title(DialogTitle.SYSTEM_FAULT)
						.instruction(BACKUP_TO_CANCEL)
						.textStrings("There is an issue with your Sky+HD box, so recording and playback are unavailable.\nFor help resolving this issue, please go to sky.com/record"))
				.with(behaviour().primaryPriority(IPrimaryPriority.CA_EXCEPTION)
						.secondaryPriority(ISecondaryPriority.CA_EXCEPTION_VIEWING_CARD)
						.screenLayer(IScreenLayer.MENU_DIALOG)
						.flags(SHOW_DISK_FAULT_REFERENCE)
						.modal(true)
						.actions(BACKUP_BACKUP)));


register(dialog(IDialogID.ECO_STANDBY_EXIT).type(IDialogType.FYI)
										   .with(textContent().title(DialogTitle.ECO_STANDBY_MODE)
															  .instruction(DialogInstruction.ECO_STANDBY_EXIT)
															  .textStrings(new TextContentKeyAndString[] { new TextContentKeyAndString(IMESSAGE_LINE_1,
																																	   "Your box was automatically turned off to help save energy.\nThat's why it's taken a little longer than usual to turn back on."), }))
										   .with(behaviour().modal(true)


(vobs/THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/common/dialogmgr/IDialogID.java)
int SHARED_PLANNER_NETWORK_ERROR_SH7                      = 1316;

(vobs/THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/dialogmgr/dialogs/config/DialogConfig.java)
private void registerSharedPlannerDialogs()
{
	register(dialog(IDialogID.SHARED_PLANNER_NETWORK_ERROR_SH7).type(IDialogType.SHARED_PLANNER_FYI)
															   .with(textContent().title(DialogTitle.FYI)
																				  .instruction(DialogInstruction.SELECT_FOR_INFO_BACKUP_TO_CANCEL)
																				  .reference("SPN09")
																				  .textStrings("We cannot play this recording.\nPlease check your connections and all your equipment is switched on.\nFind out more at sky.com/spn09")
																				  .altString("\nPlease check your connections and all your equipment is switched on.\nFind out more at sky.com/spn09"))
															   .with(behaviour().modal(true)


#
#
CARD_REMOVED_ID                                       = 1003;
"Insert your Viewing Card"

# 1303. DELETE_UNCHARGED_PPV_CONFIRM_ID
# "You will not be charged for this programme"
!MIL   -EPG_SCR      < M:Screens F:doOpenScreen L:01102 > T:CEE-J EventQueue Reader 0:SCREEN DIALOG layer=5, id=-1303 opened


#
NDS: ^[2012:12:20 19:12:54]0947290612.020435 !MIL    -EPG_FS                    < p:0x00000000 P:APP t:0x2bc6c520 T:no name M:SatelliteSignalController F:showDialogNoSatelliteSignalOrTechnicalFault L:213 > T:CEE-J EventQueue Reader 
0:DISPLAYING NSS DIALOG WITH CODE 14	

206 vobs/THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/tvviewingmgr/fullscreen/SatelliteSignalController.java                                
logger.logMilestone("DISPLAYING NSS DIALOG WITH CODE " + dialogCode);
#


<rmf-conflict-dialog>

	int CURRENT_VIEWING_CONFLICT_ID                                          = 1004;

!MIL    -EPG_DLG      < M:DialogManager F:showDialog L:1400 > 
  T:CEE-J EventQueue Reader 0:Showing dialog 1004

<app-affirm>
!ERROR  -EPG_BOOK     		< P:APP M:BookingManager F:purchase L:956 > T:CEE-J EventQueue Reader 0:`Affirm` should not be null: Pbp = null listener = FU@5a4fc4c
!  /!\  -EPG_AFRM     		< p:0x00000238 P:APP t:0x2bfeb520 T:no name M:BookingManager F:purchase L:958 > T:CEE-J EventQueue Reader 0:AFFIRM!!!  
!  /!\  -EPG_AFRM     		< p:0x00000238 P:APP t:0x2bfeb520 T:no name M:BookingManager F:purchase L:958 > java.lang.Throwable


<app-grid-guide-update>
To understand the MW interaction for TV Guide schedule, see GuideSchedule.java
and GuideScheduleListener.java

note: do not see these logs when enters guide screen. seems it does this
sometime and do use cache?

First page of All Channels tab in TV guide is `cached`: loaded when you close
the TV Guide screen and updated when the schedule changes / time passes.  So
you will not see any schedule retrieval when you first open the TV Guide grid.

From GuideSchedule.java:

    /** Indicates all rows in the window of a schedule object */
    int ALL_ROWS = 0xFFFFFFFF;                                // -1

    /** Indicates schedule service data is available */
    int SERVICE_DATA_AVAILABLE = 0xFFFFFFFE;    // -2


Page down to next page of channels:

!MIL   -EPG_UI       M:ScreenDirectingKeyListener F:dispatchKeyToViewOf L:00057 > T:CEE-J EventQueue Reader 0:KEYPRESS 1:CHANNEL_DOWN x1 @946686455797-946686458411 handled by Screen GUIDE layer=4, id=2 View 393222 

// Service data available
!MIL   -EPG_TVG      T:GUIDE_CALLBACK M:ScheduleListener F:onScheduleUpdate L:00105 > T:threadtracker:SI-9834 :: 
  onScheduleUpdate - status 62914560 readyRowIndex `-2` 

// One row at a time arrives at EPG
MIL   -EPG_TVG       T:GUIDE_CALLBACK M:ScheduleListener F:onScheduleUpdate L:00105 > T:threadtracker:SI-9834 :: 
  onScheduleUpdate - status 62914561 readyRowIndex 0 
  onScheduleUpdate - status 62914561 readyRowIndex 1 
  ...
  onScheduleUpdate - status 62914561 readyRowIndex 7
  onScheduleUpdate - status 62914561 readyRowIndex `-1`


// All rows retrieved
!MIL   -EPG_TVG      T:GUIDE_CALLBACK M:ScheduleListener F:onScheduleUpdate L:00105 > T:threadtracker:SI-9834 :: onScheduleUpdate - status 62914560 readyRowIndex -1

!MIL   -EPG_TVG      M:ProgrammesRetriever F:retrieveProgrammes L:00067 > T:PooledExecutor#1:SI-9834 :: retrieveProgrammes

// 2 programmes on first row / channel
!MIL   -EPG_TVG      M:ProgrammesRetriever F:addProgrammesFromSchedule L:00287 > T:PooledExecutor#1:SI-9834 :: addProgrammesFromSchedule - programmesCount 2
!MIL   -EPG_TVG      M:ProgrammesRetriever F:createProgrammesList L:00307 > T:PooledExecutor#1:SI-9834 :: createProgrammesList 

// Details of each programme
!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:307 > T:PooledExecutor#3:SI-9834 :: createProgrammesList
!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:00326 > T:PooledExecutor#1:Guide Programme 0 Title: Tipping Point Start Time 1475748000 Duration 3600
!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:00326 > T:PooledExecutor#1:Guide Programme 0 Title: Tipping Point Start Time 1475751600 Duration 3600 

!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:307 > T:PooledExecutor#3:SI-9834 :: createProgrammesList
!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:326 > T:PooledExecutor#3:Guide Programme 7 Title: House Start Time [2016:09:30 17:00:00]1475254800 Duration 3600
!MIL    -EPG_TVG     M:ProgrammesRetriever F:createProgrammesList L:326 > T:PooledExecutor#3:Guide Programme 7 Title: Without A Trace Start Time [2016:09:30 18:00:00]1475258400 Duration 3600

!MIL    -EPG_TVG     M:GuideUIData F:logUpdateType L:241 > T:CEE-J EventQueue Reader 0:PICASSODev-16173: updateType=0x214
!MIL    -EPG_TVG     M:GuideGridController F:gridUpdateFinished L:1092 > T:CEE-J EventQueue Reader 0:gridUpdateFinished

!MIL    -EPG_TVG     M:GuideGridController F:setGridUpdateInProgress L:1086 > T:CEE-J EventQueue Reader 0:gridUpdateInProgress
!MIL    -EPG_KEY     M:Activity F:start L:45 > T:CEE-J EventQueue Reader 0:start activity (NamedActivity(GUIDE_GRID_UPDATE)@59b54c5)
!MIL    -EPG_KEY     M:KeyEventValve F:activate L:145 > T:CEE-J EventQueue Reader 0:Added NamedActivity(GUIDE_GRID_UPDATE)@59b54c5 to live activities
!MIL    -EPG_TVG     M:GuideGridController F:onServicesListUpdated L:1223 > T:CEE-J EventQueue Reader 0:onServicesListUpdated with 98 services


<no-listing>
NDS: ^0946685333.172412 !MIL   -EPG_TVVM     < p:000000e1 t:2e326520 T:no name M:BouquetChangeMonitor F:changeStarted L:00016 > T:PooledExecutor#4:Starting bouquet change 
NDS: ^0946685338.812387 !MIL   -EPG_TVVM     < p:000000e1 t:2e326520 T:no name M:BouquetChangeMonitor F:changeComplete L:00021 > T:PooledExecutor#4:Bouquet change complete 

You will probably see many more "Bouquet change complete" than "Starting
bouquet change" so suggest you look for either of these occurring close to
when the no listing available is displayed.

Bouquet changes happen a lot.

By the way, if the message in the TV Guide grid is "..no listings available"
then you will probably see `one of` the following errors in the log (don't know
if/how these relate to bouquet change):

LOGGER.logMilestone("SI-9834 :: addProgrammesFromSchedule - programmesCount 0"
LOGGER.logError("Attribute not yet retrieved from guide! ", e);
LOGGER.logError("Middleware has told us that schedule data is NOT available for row "
LOGGER.logError("GuideRuntimeException caught " + ex);

So if you see a lot of any of these messages it may help identify the cause.

Dave.

// THIRD_PARTY_LIBRARIES/BSKYB_JTH/build/applications/Picasso/picasso/Picasso/src/java/picasso/tvguidemgr/model/ProgrammesRetriever.java

  public static final  String NO_PROGRAMME_DATA  = "..no listings available";

  programmeDataArrayList.add(model.createFillProgramme(NO_PROGRAMME_DATA, relativeRowIndex));

!ERROR  -EPG_TVG      		< p:0x000001d7 P:APP t:0x2dfd6520 T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
!ERROR  -EPG_TVG      		< p:0x000001d7 P:APP t:0x2dfd6520 T:no name M:ProgrammesRetriever F:updateRow L:211 > T:PooledExecutor#4:Middleware has told us that schedule data is NOT available for row 29

// indicate not to update schedule
!MIL    -EPG_TVG                     < p:0x000001d7 P:APP t:0x014de520 T:GUIDE_CALLBACK M:ScheduleListener F:notifySuccess L:71 > T:threadtracker:Ignoring schedule update notifications whilst in standy or shutdown


<case-log>
198941: !MIL    -EPG_TVG                            < T:GUIDE_CALLBACK M:ScheduleListener F:onScheduleUpdate L:105 > T:threadtracker:SI-9834 :: onScheduleUpdate - status 62914564 readyRowIndex -1
198943: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
198967: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
198984: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
199001: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
199018: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateAllRows L:177 > T:PooledExecutor#4:Attribute not yet retrieved from guide! 
199035: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateRow L:211 > T:PooledExecutor#4:Middleware has told us that schedule data is NOT available for row 29
199036: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateRow L:211 > T:PooledExecutor#4:Middleware has told us that schedule data is NOT available for row 30
199037: !ERROR  -EPG_TVG                        < T:no name M:ProgrammesRetriever F:updateRow L:211 > T:PooledExecutor#4:Middleware has told us that schedule data is NOT available for row 31
199040: !MIL    -EPG_TVG                            < T:GUIDE_CALLBACK M:ScheduleListener F:onScheduleUpdate L:105 > T:threadtracker:SI-9834 :: onScheduleUpdate - status 62914560 readyRowIndex -2
199042: !MIL    -EPG_TVG                            < T:no name M:GuideGridController F:gridUpdateFinished L:1092 > T:CEE-J EventQueue Reader 0:gridUpdateFinished
199121: !MIL    -EPG_TVVM                         < T:no name M:BouquetChangeMonitor F:changeComplete L:21 > T:PooledExecutor#0:Bouquet change complete


={============================================================================
|kt_dev_si_0001| comp-http comp-ctm

<curl-version>
CMS_SYSTEM_INFRASTRUCTURE/HTTP/src/lib/curl/curl_v7_26_0/src/cookie.c
CMS_SYSTEM_INFRASTRUCTURE/HTTP/src/lib/curl/curl_v7_15_2/src/cookie.c
CMS_SYSTEM_INFRASTRUCTURE/HTTP/src/lib/curl/curl_v7_21_3/src/cookie.c

Use curl_v7_26_0

/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/components/misc_libraries/http/src/lib/curl/curl_v7_26_0$ nm libhttp_curl.a | grep NDS_HTTP_strdup
279:         U NDS_HTTP_strdup
2169:         U NDS_HTTP_strdup
2170:00000000 T NDS_HTTP_strdup_DEBUG

/build/picasso/AMS_BCM_MIPS4K_LNUX_DARWIN_01/BigEndian/release_dbg/components/misc_libraries/http/src/lib/upset$ nm libhttp_upset.a | grep NDS_HTTP_strdup
12:00000000 T NDS_HTTP_strdup


<HTTP_POOL>  

http.cfg
52:HTTP_POOL_FLAGS=0
53:HTTP_POOL_NAME="APP_HTTP_POOL"
54:HTTP_POOL_SIZE=224288
68:HTTP_POOL_FLAGS=0
69:HTTP_POOL_NAME="CA_HTTP_POOL"
70:HTTP_POOL_SIZE=38912
81:HTTP_POOL_FLAGS=0
82:HTTP_POOL_NAME="MW_HTTP_POOL"
83:HTTP_POOL_SIZE=388036


#define prvHTTP_MEMMAN_Malloc(size) \
    MEMMAN_API_AllocStaticP(httpMemmanHandle, (uint32_t)size)

#define SYSCONFIG_HTTP_POOL_PREFIX                  "HTTP_POOL"

// Looks likes that it add MW/APP to the pool name.

MW_MW_HTTP_POOL


        /* Initialize main pool */
        if (SYSTEMUTIL_THR_CreateMemoryPool(&httpMemmanHandle,
                                            SYSCONFIG_HTTP_FILENAME, 
                                            SYSCONFIG_HTTP_POOL_PREFIX, 
                                            true)
                                            != SYSTEMUTIL_STATUS_OK)

// function mappings
// CMS_SYSTEM_INFRASTRUCTURE/HTTP/src/http/src/http_api.c

        if ((ret_curl = curl_global_init_mem(
                LINT_ERRORS_ONLY /* Exclude CURL_GLOBAL_ALL (comes from curl.h, open source) from lint checking */
                CURL_GLOBAL_ALL,
                LINT_RESTORE
#ifdef HTTP_MEMMAN_USE_MACRO
                HTTP_MEMMAN_Malloc,
                HTTP_MEMMAN_Free,
                HTTP_MEMMAN_Realloc,
#else /* HTTP_MEMMAN_USE_MACRO */
                prvHTTP_MEMMAN_Malloc,
                prvHTTP_MEMMAN_Free,
                prvHTTP_MEMMAN_Realloc,
#endif /* HTTP_MEMMAN_USE_MACRO */
                NDS_HTTP_strdup,
                prvHTTP_MEMMAN_Calloc)) != CURLE_OK)


<comp-ctm>

note:
1. LOG should be analysed per process since each process uses HTTP.

2. NO expired cookies since data->cookies, data->share->cookies are the same.
Hence NO Curl_cookie_cleanup_expired_cookies to OOM

T:CTM_SVR_DL_CONTENT M:libcurl_http.c F:Curl_http_patch_expired_cookies L:344 > 
KIT: free cookie: data->share(0x1da2928), data->cookies(0x1da2458), data->share->cookies(0x1da2458)
`libcurl_http.c is NDS code but not libcurl`

3. NO Curl_flush_cookies() to OOM


SBM uses CTM to download PDL

CMS_MEDIA_SERVICES/CTM/src/server/ctm_svr_file_transfer_manager.c

note: From libcurl

https://curl.haxx.se/libcurl/c/curl_easy_perform.html
https://curl.haxx.se/libcurl/c/curl_easy_cleanup.html

You can do any amount of calls to curl_easy_perform while using the same
easy_handle. If you intend to transfer more than one file, you are even
encouraged to do so. libcurl will then attempt to re-use the same connection
for the following transfers, thus making the operations faster, less CPU
  intense and using less network resources. Just note that you will have to
    use curl_easy_setopt between the invokes to set options for the following
    curl_easy_perform. 

static CTM_SVR_FTM_P_DL_Context_t g_dl_ctx[FTM_NB_CTX];

typedef struct _CTM_SVR_FTM_P_DL_Context_t
{
  CTM_Download_Request_t request;
}


dl_ctx = &g_dl_ctx[i];

if (SYSTEMUTIL_THR_Create(&dl_ctx->download_thread,
                    (i==FTM_ID_CONTENT) ? "CTM_SVR_DL_CONTENT" : "CTM_SVR_DL_TRAILER",
                    CTM_SVR_FTM_Download_Thread,
                    (void*)dl_ctx, g_ctm_svr_systemutil_ctx) == SYSTEMUTIL_STATUS_OK)

// allocte a handle, calloc
handle = (HTTP_API_Handle_t *) curl_easy_init();

CTM_SVR_FTM_Download_Thread()
{
  CTM_SVR_FTM_P_DL_Context_t * dl_ctx = (CTM_SVR_FTM_P_DL_Context_t*)p;

  // loop per request
  while(keep)
  {
    // do download per a requst message
    CTM_SVR_FTM_WaitForRequest(dl_ctx, &thread_request_received);

    // `get global request` which is null at first  
    // do not alloc for requst itself but do alloc for sub structrue
    const CTM_Download_Request_t* request = &dl_ctx->request;

    /* Set the HTTP options depending on the request */

    CTM_FTM_SetHTTPOptions( dl_ctx );
    // static SYSTEM_STATUS CTM_FTM_SetHTTPOptions( CTM_SVR_FTM_P_DL_Context_t* dl_ctx )
    // {
    //   else if ( dl_ctx->request.http_request_type == REQUEST_TYPE_JSON_POST )
    //   {
    //     struct HTTP_API_Slist *l_http_list = dl_ctx->request.http_hdr_list;
    // 
    //     CTM_SVR_DBG_INFO(("- Configure HTTP for JSON POST requests"));
    // 
    //     // add a node to the list. what if list is not null when is
    //     supposed to be null?
    //     l_http_list = HTTP_API_SlistAppend(l_http_list, "Content-Type: application/json");
    //
    //     // `update global request` which is the fix made and update `request` as well.
    //     dl_ctx->request.http_hdr_list = l_http_list;
    //   }
    // }

    perform_info.handle = dl_ctx->handle;

    // ctm_svr_file_transfer_manager.c:2339
    // perform_info is local structure
    //
    // ctm_svr_standard_communication.c:74
    // still no allocation
    // CTM_SVR_HTTP_PerformStandard(CTM_SVR_PerformInfo_t* download_info)
    http_perform_post_action = CTM_SVR_HTTP_PerformStandard(&perform_info);
    {
      ret = HTTP_API_Perform(download_info->handle);
      // SYSTEM_STATUS HTTP_API_Perform(HTTP_API_Handle_t * handle)
      {
        status = ConvErrorCodeLib2HTTP( (uint8_t)curl_easy_perform((CURL *)handle) );

        else
        {
            /* If perform failed, we don't do any post processing but try to
             * give the caller relevant information about the error */

            DBG_PRINT_E(("Perform failure. status : %#x", status));
            status = HTTP_SAC_SYNC_ProcessSACPerformError( status );
        }
      }

      return http_perform_post_action;
    }

    /* We are finished with this request */
    // do per request
    CTM_SVR_FTM_CleanUpRequest( const request );
    // `use request`
    // if ( request->http_hdr_list != NULL )
    // {
    //     CTM_SVR_DBG_ERROR(("** KIT: SI-10728: IRH: HIJACK **"));
    //     (void)HTTP_API_SlistFreeAll(request->http_hdr_list);
    //
    //     // note: this is missed. should be implemented?
    //     // request->http_hdr_list = NULL;
    // }
  }
}


// note: when cookies are freed? Here. Keep a session live until gets closed.

int32_t CTM_SVR_FTM_Term( void )
{
  // #define FTM_NB_CTX                  3
  
  for (i=0; i< FTM_NB_CTX; i++)
  {
    HTTP_API_SessionDestroy(`dl_ctx->handle`);
    {
      curl_easy_cleanup((CURL *) handle);
      { 
        Curl_close(data);
          Curl_flush_cookies(data, 1);
      }
    }
  }
}


SYSTEM_STATUS CTM_SVR_FTM_Init(CTM_SVR_FTM_Callback_t *callback)
{
  // only one session
  dl_ctx->handle = HTTP_API_SessionCreate();

  HTTP_API_Handle_t *HTTP_API_SessionCreate(void)
  {
    handle = (HTTP_API_Handle_t *) curl_easy_init();
  }
}

/*
 * Initiate a download request using the passed parameters (see header file)
 */
int32_t CTM_SVR_FTM_RequestDownload(int32_t ftm_id, const CTM_Download_Request_t* request)
{
}

!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2235 > Downloading... 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2236 > Use bitrate of 40000 

!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1577 > - Set option : SET HTTP VERSION 1.1 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1586 > - Set option : DONT IGNORE_CONTENT_LENGTH 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1595 > - Set option : NORMAL GET 0 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1604 > - Set option : BUFFERSIZE 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1613 > - Set option :HTTP_API_OPT_FAILONERROR 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1638 > - Set mode HTTP_API_SECURITY_MODE_DIGEST_SRP_SCHEME 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetDefaultHTTPOptions L:1673 > - Set default header 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:1810 > No range 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:1829 > - Set option : URL <http://cdn.sky.com/60440/1174/bsky_4od-MAIN000000[2016:09:05 18:20:58]0000368413-20160820[2042:03:25 21:40:45]1753350000.nff_001477174_02403.oecm> 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:1861 > - Reset default headers 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:1976 > - Set option HTTP_API_OPT_COOKIEFILE: 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:1986 > - Set option HTTP_API_OPT_FOLLOWLOCATION: 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2012 > - Set option HTTP_API_OPT_IPRESOLVE [1] 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2046 > No referrer 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2049 > - Set option HTTP_API_OPT_TCP_KEEPALIVE : 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2058 > - Set option HTTP_API_OPT_LOW_SPEED_LIMIT : 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2067 > - Set option HTTP_API_OPT_LOW_SPEED_TIME : 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_FTM_SetHTTPOptions L:2076 > - Set option HTTP_API_OPT_MAXREDIRS 123 : 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2296 > - HTTP_API_Perform ! 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2353 > HTTP_API_Perform : Request 
!ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:http_api.c F:HTTP_API_Perform L:1789 > KIT: Calling curl_easy_perform() 

!ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:http_api.c F:HTTP_API_Perform L:1791 > KIT: from curl_easy_perform(): status = 0xd400000 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2399 > - HTTP_API_Perform : Successful 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2485 > Total written to disk [00000000 00001ec2] 
!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2488 > Close file (fd=388) 

!INFO   -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_Download_Thread L:2509 > Download finished ok: 'http://cdn.sky.com/60440/1174/bsky_4od-MAIN000000[2016:09:05 18:20:58]0000368413-20160820[2042:03:25 21:40:45]1753350000.nff_001477174_02403.oecm' 
!ERROR  -CTM_SVR < P:MW T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_CleanUpRequest L:2096 > ** KIT: SI-10728: IRH: HIJACK { ** 


<status>

#define HTTP_COMP_ID          ((uint32_t)(53)) /*!< @brief HTTP */
#define HTTP_API_ID       (0)

#define SEVERITY_NONE    ((uint32_t)(0x0))
#define SEVERITY_WARNING ((uint32_t)(0x1))
#define SEVERITY_SEVERE  ((uint32_t)(0x2))
#define SEVERITY_FATAL   ((uint32_t)(0x3))

(((COMP_COMP_ID & 0x3FF) << 22) | ((SEVERITY & 0x3) << 16) | ((COMP_IF_ID & 0xF) << 12) | (STATUS & 0xFFF) )

hex(((53 & 0x3FF) << 22) | ((3 & 0x3) << 16) | ((0 & 0xF) << 12) | (0 & 0xFFF) )
'0xd430000'

#define HTTP_API_E_OK                      (_HTTP_INFO(0))    /*!< @brief Success */
`0xd400000`

#define HTTP_API_E_COULDNT_CONNECT         (_HTTP_FATAL(7))   /*!< @brief Couldn't connect to server */
Perform failure. status : `0xd430007` 

#define HTTP_API_E_WRITE_ERROR             (_HTTP_FATAL(10))  /*!< @brief Failed writing received data */

arrayErrorCodeLibToHTTP[CURLE_WRITE_ERROR] = HTTP_API_E_WRITE_ERROR;
'0xd43000a'

/*! @brief  HTTP fatal error definition */
#define _HTTP_FATAL(e)  \
        SYSTEM_MAKE_COMPONENT_STATUS(\
                                HTTP_COMP_ID,\
                                HTTP_API_ID,\
                                SEVERITY_FATAL,\
                                (e))

!ERROR  -HTTP         		< T:CTM_SVR_DL_CONTENT M:http_api.c 
  F:HTTP_API_Perform L:1811 > Perform failure. status : 0xd43000a 


<diag>

CTM_SVR_DBG_ERROR(("** KIT: SI-10728: IRH: HIJACK } **"));

!ERROR  -CTM_SVR                   < T:CTM_SVR_DL_CONTENT M:ctm_svr_file_transfer_manager.c F:CTM_SVR_FTM_CleanUpRequest L:2099 > *
* KIT: SI-10728: IRH: HIJACK { **

CMS_SYSTEM_INFRASTRUCTURE/HTTP/src/lib/curl/curl_v7_26_0/makefile

COMPONENT_NAME:=http_curl
include $(NDS_ROOT)/projects/$(NDS_PROJECT)/build_options.mk


CMS_SYSTEM_INFRASTRUCTURE/HTTP/inc/config/http_master_config.xml
11:    <key name="TRACE_LEVEL_LIBCURL" type="STRING" value="AFEWM">

<note>
Curl_cookie_init is called continously but not once for each process. But
cookie list remains valid between this calls.

T:CTM_SVR_DL_CONTENT M:cookie.c F:Curl_cookie_init L:977 > KIT: cookie file() 


<process-and-thread>
$ grep TRACE_LEVEL_LIBCURL LOGlastrun_realtime
!INFO   -HTTP < P:`CA` t:0x00991810 T:no name M:http_api.c F:`HTTP_API_Init` L:452 > To activate libcurl traces : please use the diag segment TRACE_LEVEL_LIBCURL = \"FEWI!APR<>\" in the file diag.cfg
!INFO   -HTTP < P:MW t:0x01d5e520 T:AMS_FTM_HTTP_REQUEST_HANDLER M:http_api.c F:HTTP_API_Init L:452 > To activate libcurl traces : please use the diag segment TRACE_LEVEL_LIBCURL = \"FEWI!APR<>\" in the file diag.cfg
!INFO   -HTTP < P:APP t:0x01108520 T:GUIDE_MAIN M:http_api.c F:HTTP_API_Init L:452 > To activate libcurl traces : please use the diag segment TRACE_LEVEL_LIBCURL = \"FEWI!APR<>\" in the file diag.cfg

!INFO   -HTTP < P:MW t:0x0228a520 T:WLM_MONITOR M:http_api.c F:HTTP_API_Perform L:1788 > Calling curl_easy_perform()
!INFO   -HTTP < P:APP t:0x0139c520 T:ATG_FTM_HTTP_DWL M:http_api.c F:HTTP_API_Perform L:1788 > Calling curl_easy_perform ()
!INFO   -HTTP < P:MW t:0x01e16520 T:CTM_SVR_DL_CONTENT M:http_api.c F:HTTP_API_Perform L:1788 > Calling curl_easy_perform()


<pdl-download>
note:
See *booking-job-id* ctm, dlm, pcat, and EPG

> Transition : CTM job 0xca278008 (`Type = 2`) from 1 (STARTED) to 5 (STOPPED) 
>
typedef enum PCAT_CAT_CONTENT_TYPE_
{
    PCAT_CAT_CONTENT_TYPE_UNDEF = 0,         /**< @brief  No available data */
    PCAT_CAT_CONTENT_TYPE_SMOOTH_STREAMING,  /**< @brief  smooth streaming */
    PCAT_CAT_CONTENT_TYPE_DPL,            2 /**< @brief  download playlist */
    PCAT_CAT_CONTENT_TYPE_SIDELOAD,         /**< @brief  sideloading */
    PCAT_CAT_CONTENT_TYPE_LAST              /**< @brief  dummy - last enum value */
}PCAT_CAT_CONTENT_TYPE;


// *booking-job-id* in PCAT

note:
When there are network glitch, ctm job failed and resumed again then start
time will be the one last successful commit state.


>>> hex(688316759) '0x2906e157'
Seen|PDL |2016:09:26 06:12:24|2016:09:26 06:12:59|Anna Scher: In Confidence               |s66709|    0|  1|Sky Arts            |     0| 0.25|        |UNDF  |    |688316759

!MIL    -EPG_TVVM     		< P:APP T:no name M:ServiceInfo F:doProgrammeChanged L:1341 > T:PooledExecutor#1:PICASSODEV-19255 ServiceInfo.doProgrammeChanged Programme Matches current event in Banner: Anna Scher: In Confidence
!MIL    -EPG_MISC     		< P:APP T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "StartAgain","action": "Download","title": "Anna Scher: In Confidence","label": "Title:Anna Scher: In Confidence;State:NOT_BOOKED;Type:Ents","currentscreen": "/tv/live/121/start_again_mini_banner"}

!MIL    -PCATS   P:MW T:SBM_UB_MAIN M:pcat_view_clnt.c F:PCAT_VIEW_CommitJob L:3077 > client id = 0x5, `bookingJobID = 0x2906e157`

// `STARTED`
!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job `0xca278008` (Type = 2) from 3 (CREATED) to 4 (COMMITED) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[`0xCA278008`] ; ctm_status=[UNKNOWN_CTM_STATUS](0x63000040) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_READY_TO_DOWNLOAD](0x63000001) 

!MIL    -EPG_NET                    < p:0x0000021c P:APP t:0x2e03a520 T:no name M:HttpNotifier F:send L:31 > 
  d3=508288677&cd4=off&cd5=off&de=UTF-8&t=event&cd=%2Fanytime&ec=AssetAction&el=Title%3DThe+Martian%3BState%3DNOT_BOOKED%3Btemplatename%3DMultiFormat&ea=SELECT

!MIL    -EPG_MISC                   < p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category":
"StartAgain", `"action": "Download"`,"title": "Anna Scher: In Confidence","label": "Title:Anna Scher: In Confidence;State:NOT_BOOKED;Type:Ents","currentscreen": "/tv/live/121/start_again_mini_banner"}


!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:`onDownloadQueueUpdate` L:251 > T:DownloadQueueMonitor#0:
  Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:null->"Anna Scher: In Confidence" 
  `firstStatus:UNKNOWN->SCHEDULED` firstFailureReason:100->0 firstIsDpl:false->true

!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_READY_TO_DOWNLOAD](0x63000001) 
!WARN   -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Override_Active_Job L:2255 > Replacing active job: [tag=R2D-A ; id=0x00000173 ; job_id=0xCA278008] 
!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 4 (COMMITED) to 1 (STARTED) 
!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_1_DPL_DOWNLOAD_RESPONSE 

!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence" 
  `firstStatus:SCHEDULED->PREPARING_DOWNLOAD` firstFailureReason:0->100 firstIsDpl:true

!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_2_DPL_DOWNLOAD_TOC 
!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_3_DPL_OECM_IMPORT 
!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_4_DPL_CATALOG_DL 
!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_5_DPL_INDEX_DL 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_JOB_STARTED](0x63000004) 

!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence" 
  `firstStatus:PREPARING_DOWNLOAD->DOWNLOADING_BUT_NOT_AVAILABLE` firstFailureReason:100 firstIsDpl:true

!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_6_DPL_INDEX_`IMPORT`_START_DL 

// creates vrm import sesssion and job
!WARN   -CTM_SVR      		< P:MW t:0x01dbb520 T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_Import_StartImport L:7792 > Index import started 
!MIL    -VRM_SERVER   		< P:MW T:VRM_SRV M:fsm.c F:FSMRun L:921 > 
  VRM-FSM: VRM_IMP_OBJECT_0x50004: VRM_IMP_OBJECT_INT_STATE_NULL -> (VRM_IMP_OBJECT_STATE_INPUT_CREATED) -> VRM_IMP_OBJECT_INT_STATE_CREATED 

!MIL    -EPG_MISC     		< P:APP T:no name M:MilestoneNotifier F:send L:21 > T:PooledExecutor#4:{"category": "PDLDOWNLOAD","action": "","title": "PDLDOWNLOAD took 21357ms","label": "isDPL:true,Title:Anna Scher: In Confidence,sizeKB:10985","currentscreen": "/tv/live/121"}
!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence" 
  `firstStatus:DOWNLOADING_BUT_NOT_AVAILABLE->DOWNLOADING_AND_AVAILABLE` firstFailureReason:100 firstIsDpl:true

!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 1 (STARTED) to 5 (STOPPED) 
!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 5 (STOPPED) to 4 (COMMITED) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_JOB_STOPPED](0x63000080) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[UNKNOWN_CTM_STATUS](0x63000040) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_READY_TO_DOWNLOAD](0x63000001) 

!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence"->"Fish Town" 
  `firstStatus:DOWNLOADING_AND_AVAILABLE->SCHEDULED` firstFailureReason:100->0 firstIsDpl:true->false

!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 4 (COMMITED) to 1 (STARTED) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_JOB_STARTED](0x63000004) 

!MIL    -EPG_NET      		< P:APP T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence" 
  `firstStatus:PART_SCHEDULED->DOWNLOADING_AND_AVAILABLE` firstFailureReason:100 firstIsDpl:true

!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_2_DPL_DOWNLOAD_TOC 
!MIL    -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_HandleFTMReturnedSuccess L:474 > FTM Callback (Success) status called for job 0xca278008 step CTM_JOB_STEP_4_DPL_CATALOG_DL 
!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 1 (STARTED) to 5 (STOPPED) 
!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 5 (STOPPED) to 4 (COMMITED) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_JOB_STOPPED](0x63000080) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[UNKNOWN_CTM_STATUS](0x63000040) 

// note: this explans why there is no `COMPLETED` in this case
!MIL    -EPG_MISC     		< P:APP T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "ColourButtonAction","action": "YELLOW_DELETE","title": "Colour Button to: YELLOW_DELETE","label": "","currentscreen": "Entering grid: //Planner/All"}
!MIL    -EPG_KEY      		< P:APP T:no name M:KeyEventValve F:open L:167 > T:CEE-J EventQueue Reader 0:Legacy activity has opened the KeyEventValve.
!MIL    -EPG_LIST     		< P:APP T:no name M:CommonBookedItem F:lockState L:952 > T:CEE-J EventQueue Reader 0:The state of this item is now locked to DELETING
!MIL    -EPG_KEY      		< P:APP T:no name M:Activity F:start L:45 > T:CEE-J EventQueue Reader 0:start activity (NamedActivity(DELETE_BOOKING)@5a7154d)
!MIL    -EPG_KEY      		< P:APP T:no name M:KeyEventValve F:activate L:145 > T:CEE-J EventQueue Reader 0:Added NamedActivity(DELETE_BOOKING)@5a7154d to live activities
!MIL    -EPG_BOOK     		< P:APP T:no name M:BookingAgent F:doRemoveBookedProgramme L:1517 > T:PooledExecutor#3:Removing booking with middleware removeBookedProgramme

!MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence"->"Fish Town" 
  `firstStatus:DOWNLOADING_AND_AVAILABLE->PREPARING_DOWNLOAD` firstFailureReason:100 firstIsDpl:true->false

!WARN   -CTM_SVR      		< P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xca278008 (Type = 2) from 4 (COMMITED) to 5 (STOPPED) 
!MIL    -DLM_SVR      		< P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xCA278008] ; ctm_status=[CTM_STATUS_JOB_STOPPED](0x63000080) 

// note: actual downlod
// !ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:cookie.c F:Curl_cookie_add L:257 > KIT: co = calloc(56) 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:libcurl_portage.c F:NDS_HTTP_strdup_DEBUG L:33 > (F: src/cookie.c, L: 444) Strdup: sky-pdl-client-credentials-a 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:libcurl_portage.c F:NDS_HTTP_strdup_DEBUG L:33 > (F: src/cookie.c, L: 445) Strdup: ip=91.234.201.1~expires=[2016:08:16 14:38:26]1471358306~access=/60448/bsky_skydisney/MOVIE/bsky_skydisney-MAIN000000[2016:08:31 03:38:46]0001258819-20150926[2018:12:28 15:13:20]1546010000.nff*~md5=84f19af32707950c1db4e742cdc1eb89 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:libcurl_portage.c F:NDS_HTTP_strdup_DEBUG L:33 > (F: src/cookie.c, L: 210) Strdup: 1800 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:libcurl_portage.c F:NDS_HTTP_strdup_DEBUG L:33 > (F: src/cookie.c, L: 210) Strdup: /60448/bsky_skydisney/MOVIE/bsky_skydisney-MAIN000000[2016:08:31 03:38:46]0001258819-20150926[2018:12:28 15:13:20]1546010000.nff 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:libcurl_portage.c F:NDS_HTTP_strdup_DEBUG L:33 > (F: src/cookie.c, L: 210) Strdup: cdn.sky.com 
// !ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:cookie.c F:Curl_cookie_add L:755 > KIT: Added cookie sky-pdl-client-credentials-a=\"ip=91.234.201.1~expires=[2016:08:16 14:38:26]1471358306~access=/60448/bsky_skydisney/MOVIE/bsky_skydisney-MAIN000000[2016:08:31 03:38:46]0001258819-20150926[2018:12:28 15:13:20]1546010000.nff*~md5=84f19af32707950c1db4e742cdc1eb89\" for domain cdn.sky.com, path /60448/bsky_skydisney/MOVIE/bsky_skydisney-MAIN000000[2016:08:31 03:38:46]0001258819-20150926[2018:12:28 15:13:20]1546010000.nff, " "expire %" "lld" "\n 
// !ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:cookie.c F:Curl_cookie_add L:760 > KIT: replace_old is null. make it last? 
// !INFO   -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:http_api.c F:debugFunction L:224 > HTTP 0 HEADER IN: Set-Cookie: sky-pdl-client-credentials-a=ip=91.234.201.1~expires=[2016:08:16 14:38:26]1471358306~access=/60448/bsky_skydisney/MOVIE/bsky_skydisney-MAIN000000[2016:08:31 03:38:46]0001258819-20150926[2018:12:28 15:13:20]1546010000.nff*~md5=84f19af32707950c1db4e742cdc1eb89;Max-Age=1800;Path=/60448/bsky_skydisney/MOVIE/b 
// !ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:http.c F:Curl_http_readwrite_headers L:3791 > KIT: from Curl_client_write(): result = 0 
// !ERROR  -LIBCURL < P:MW T:CTM_SVR_DL_CONTENT M:http.c F:Curl_http_readwrite_headers L:3711 > KIT: call Curl_cookie_add() 

// `COMPLETED`
!WARN   -CTM_SVR < P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xbcc78005 (Type = 0) from 1 (STARTED) to 0 (COMPLETED)


<epg-download-status>
public interface DlmQueueStatusListener {

    /**
     * Defines possible outcomes for action performed on the download queue.
     */
    interface QueueStatus
    {
        /** queue is active */
        int ACTIVE = 41;

        /** queue has been paused by the user */
        int USER_PAUSED = 42;

        /** queue has been paused by the system */
        int SYSTEM_PAUSED = 43;

        /** queue has been paused by the system, but the user can resume */
        int RETRY_PAUSED = 44;
    }

// DPL
firstIsDpl = firstPbp.isDynamicPlaylist();


<failed-case>
292988:NDS: ^[2016:09:26 06:12:02]0946792061.367077 !MIL    -EPG_TVVM     		< p:0x000001f6 P:APP t:0x2dfd6520 T:no name M:ServiceInfo F:doProgrammeChanged L:1341 > T:PooledExecutor#4:PICASSODEV-19255 ServiceInfo.doProgrammeChanged Programme Matches current event in Banner: Fish Town
293075:== NDS: ^[2016:09:26 06:12:06]0946792065.816540 !MIL    -EPG_TVG      		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:StartAgainTask$2$1$1 F:success L:180 > T:CEE-J EventQueue Reader 0: Got asset = Fish Town channel = Sky Atlantic HD m/f = false hd = true ppv = false
293076:== NDS: ^[2016:09:26 06:12:06]0946792065.816900 !MIL    -EPG_TVG      		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:StartAgainTask$2$1$1 F:success L:180 > T:CEE-J EventQueue Reader 0: Got asset = Fish Town channel = Sky Atlantic m/f = false hd = false ppv = false
293395:NDS: ^[2016:09:26 06:12:13]0946792072.290819 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "StartAgain","action": "Download","title": "Fish Town","label": "Title:Fish Town;State:NOT_BOOKED;Type:Ents","currentscreen": "/tv/live/108/start_again_mini_banner"}
// 293512:NDS: ^[2016:09:26 06:12:16]0946792075.516242 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence"->"Fish Town" firstStatus:DOWNLOADING_AND_AVAILABLE->SCHEDULED firstFailureReason:100->0 firstIsDpl:true->false

293542:NDS: ^[2016:09:26 06:12:18]0946792077.137348 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town" 
  firstStatus:SCHEDULED->PREPARING_DOWNLOAD firstFailureReason:0->100 firstIsDpl:false

293571:NDS: ^[2016:09:26 06:12:19]0946792078.391443 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town" 
  firstStatus:PREPARING_DOWNLOAD->FAILED firstFailureReason:100->53 firstIsDpl:false

293609:NDS: ^[2016:09:26 06:12:19]!WARN   -CTM_SVR P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xff078009 (Type = 0) from 7 (`NETWORK_ERROR`) to 5 (STOPPED) 
293613:NDS: ^[2016:09:26 06:12:19]!WARN   -CTM_SVR P:MW T:CTM_SVR_HANDLEREQUESTS M:ctm_svr_job_manager.c F:CTM_SVR_Change_State L:7022 > Transition : CTM job 0xff078009 (Type = 0) from 5 (STOPPED) to 2 (FAILED) 
293615:NDS: ^[2016:09:26 06:12:19]!MIL    -DLM_SVR P:MW T:DLM_HANDLEEVENTS M:dlm_mqp_server.c F:DLM_SVR_Dispatch_ctm_Status L:3803 > ctm_job=[0xFF078009] ; ctm_status=[`CTM_STATUS_JOB_FAILED`](0x63000010) 

293637:NDS: ^[2016:09:26 06:12:20]0946792079.238028 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town"->"Anna Scher: In Confidence" 
  `firstStatus:FAILED`->PART_SCHEDULED firstFailureReason:`53`->100 firstIsDpl:false->true

// 294455:NDS: ^[2016:09:26 06:13:01]0946792120.586161 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Anna Scher: In Confidence"->"Fish Town" firstStatus:DOWNLOADING_AND_AVAILABLE->PREPARING_DOWNLOAD firstFailureReason:100 firstIsDpl:true->false

294502:NDS: ^[2016:09:26 06:13:03]0946792122.819058 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town" 
  firstStatus:PREPARING_DOWNLOAD->DOWNLOADING_BUT_NOT_AVAILABLE firstFailureReason:100 firstIsDpl:false

294762:NDS: ^[2016:09:26 06:13:17]0946792136.781028 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2dfa4520 T:no name M:MilestoneNotifier F:send L:21 > T:PooledExecutor#2:{"category": "PDLDOWNLOAD","action": "","title": "PDLDOWNLOAD took 14187ms","label": "isDPL:false,Title:Fish Town,sizeKB:10080","currentscreen": "/homepage"}

294785:NDS: ^[2016:09:26 06:13:18]0946792137.282014 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town" 
  firstStatus:DOWNLOADING_BUT_NOT_AVAILABLE->DOWNLOADING_AND_AVAILABLE firstFailureReason:100 firstIsDpl:false

294988:NDS: ^[2016:09:26 06:13:19]0946792138.562213 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "ScreenChange","changed to": "/playback/pdl/Fish Town/banner"}
295281:NDS: ^[2016:09:26 06:13:20]0946792139.577925 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "PlayingStatus","action": "PDL_DOWNLOAD","title": "PlayingStatus changed to: PDL_DOWNLOAD","label": "","currentscreen": "/playback/pdl/Fish Town/banner"}
295503:NDS: ^[2016:09:26 06:13:21]0946792140.793129 !MIL    -EPG_ME       		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:DownloadNext F:isDownloadNextAllowedFor L:219 > T:CEE-J EventQueue Reader 0:DOWNLOADNEXT: item = Fish Town candidate for DN = true
295515:NDS: ^[2016:09:26 06:13:21]0946792140.848415 !MIL    -EPG_PLAY     		< p:0x000001f6 P:APP t:0x2dfd6520 T:no name M:AutoPlayMilestoneControl F:sessionStarted L:94 > T:PooledExecutor#4:AutoPlay - current playing Fish Town
295603:NDS: ^[2016:09:26 06:13:22]0946792141.344453 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "PlayingStatus","action": "PDL_DOWNLOAD","title": "PlayingStatus changed to: PDL_DOWNLOAD","label": "","currentscreen": "/playback/pdl/Fish Town/banner"}
295719:NDS: ^[2016:09:26 06:13:27]0946792146.897419 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "KeyPressRemote","action": "TVGUIDE","title": "Key Press TVGUIDE","label": "","currentscreen": "/playback/pdl/Fish Town"}
296198:NDS: ^[2016:09:26 06:14:02]0946792181.642732 !MIL    -EPG_MISC     		< p:0x000001f6 P:APP t:0x2bfeb520 T:no name M:MilestoneNotifier F:send L:21 > T:CEE-J EventQueue Reader 0:{"category": "AssetAction","action": "RECORD","title": "CancellableViewablePdlItem","label": "Title=Fish Town;State=DOWNLOADING_AND_AVAILABLE;templatename=CancellableViewablePdlItem","currentscreen": "Entering grid: //Planner/\
296238:NDS: ^[2016:09:26 06:14:03]0946792182.726834 !MIL    -EPG_NET      		< p:0x000001f6 P:APP t:0x2e134520 T:no name M:DownloadQueueMonitor$9 F:onDownloadQueueUpdate L:251 > T:DownloadQueueMonitor#0:Download queue changed: queueStatus:41 queueFailureType:100 firstPbp:"Fish Town"->null firstStatus:DOWNLOADING_AND_AVAILABLE->UNKNOWN firstFailureReason:100 firstIsDpl:false
299025:NDS: ^[2016:09:26 06:16:21]0946792320.996516 !MIL    -EPG_TVVM     		< p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:ServiceInfo F:doProgrammeChanged L:1284 > T:PooledExecutor#3:PICASSODEV-19255 doProgrammeChanged gpi Fish Town start time: 26/09/2016 06:00:00
299026:NDS: ^[2016:09:26 06:16:22]0946792321.000185 !MIL    -EPG_TVVM     		< p:0x000001f6 P:APP t:0x2dfbd520 T:no name M:ServiceInfo F:doProgrammeChanged L:1341 > T:PooledExecutor#3:PICASSODEV-19255 ServiceInfo.doProgrammeChanged Programme Matches current event in Banner: Fish Town


==============================================================================
Copyright: see |ktkb|                              vim:tw=100:ts=3:ft=help:norl:
